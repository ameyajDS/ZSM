// Generated on : 01 Jan 20 - 19:42:15
///This code is auto generated by CDF.
///Please don't alter the contents of this file

using System.Collections.Generic;
using System;
using System.Data;
using System.Data.SqlClient;
using DCC.UMB.CDF.DB;
using System.Text;
using System.Linq;
namespace DCC.DBFacade
{
	public partial class ZSM_MUMDbFacade
	{
		private List<string> dbTasks = new List<string>();
		public IDbManager ObjDBManager = null;
		public DCCSqlDataReader ExecuteSelectQuery(SQLSelectQuery sqlSelectQuery){return ObjDBManager.ExecuteReaderSQL(sqlSelectQuery.GetSQLSelectQuery());}
		public DataSet ExecuteSelectQueryDataSet(SQLSelectQuery sqlSelectQuery){return ObjDBManager.ExecuteSQL(sqlSelectQuery.GetSQLSelectQuery());}
		public void BeginTrans() { ObjDBManager.BeginTrans(); }
		public void CommitTrans() { ObjDBManager.CommitTrans(); }
		public void RollbackTrans() { ObjDBManager.RollbackTrans(); }
		public void AddDbTask(string task){this.dbTasks.Add(task);}
		public void AddDbTasks(List<string> tasks) { this.dbTasks.AddRange(tasks); }
		public void ClearDbTasks(){this.dbTasks.Clear();}
		ParameterDirection IN = ParameterDirection.Input;
		ParameterDirection OUT = ParameterDirection.Output;
		ParameterDirection INOUT = ParameterDirection.InputOutput;
		SqlDbType BIGINT = SqlDbType.BigInt, BINARY = SqlDbType.Binary, BIT = SqlDbType.Bit,CHAR = SqlDbType.Char,DATE = SqlDbType.Date,
		DATETIME = SqlDbType.DateTime,DATETIME2 = SqlDbType.DateTime2,DATETIMEOFFSET = SqlDbType.DateTimeOffset,DECIMAL = SqlDbType.Decimal,
		FLOAT = SqlDbType.Float,IMAGE = SqlDbType.Image,INT = SqlDbType.Int,MONEY = SqlDbType.Money,NCHAR = SqlDbType.NChar,NTEXT = SqlDbType.NText,
		NVARCHAR = SqlDbType.NVarChar,REAL = SqlDbType.Real,SMALLDATETIME = SqlDbType.SmallDateTime,SMALLINT = SqlDbType.SmallInt,SMALLMONEY = SqlDbType.SmallMoney,
		STRUCTURED = SqlDbType.Structured,TEXT = SqlDbType.Text,TIME = SqlDbType.Time,TIMESTAMP = SqlDbType.Timestamp,TINYINT = SqlDbType.TinyInt,
		UDT = SqlDbType.Udt,UNIQUEIDENTIFIER = SqlDbType.UniqueIdentifier,VARBINARY = SqlDbType.VarBinary,VARCHAR = SqlDbType.VarChar,
		VARIANT = SqlDbType.Variant,XML = SqlDbType.Xml;
		private void csp(string parameterName, object paramValue, SqlDbType parameterType, ParameterDirection direction, List<SqlParameter> p) { p.Add(ObjDBManager.CreateSqlParameter(parameterName, paramValue, parameterType, direction)); }
		private string gps(string procName, List<SqlParameter> parms) { return ObjDBManager.GetPrintableSQLString(procName, parms); }
		private DataSet esp(string procName, List<SqlParameter> parms) { return ObjDBManager.ExecuteStoredProc(procName, parms); }
		public ZSM_MUMDbFacade(string applicationID) { this.ObjDBManager = DCC.UMB.CDF.Utils.UtilityManager.CreateDBManagerInstance(applicationID); }
		public DataSet ExecuteDbTasks()
		{
			try
			{
				StringBuilder sb = new StringBuilder();
				if (this.dbTasks.Count == 0) { this.AddDbTask("select 'No tasks were defined'"); }
				foreach(string task in this.dbTasks)
				{
					if (string.IsNullOrEmpty(task)) continue;
					sb.Append(task + ";");
					sb.AppendLine();
					sb.AppendLine();
				}
				return ObjDBManager.ExecuteSQL(sb.ToString(), 100);
			}
			finally
			{
				this.dbTasks.Clear();
			}
		}
		
		

		
		
		
		
		
		
		
		

		
		
		
		
private List<SqlParameter> AcceptAllSewaTeams_Params(Int32? sewa_id, 
		                                                        Byte[] txn_ts)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("sewa_id", sewa_id, INT, IN, p);
			csp("txn_ts", txn_ts, TIMESTAMP, IN, p);
			return p;
		}
		
public DataSet AcceptAllSewaTeams(Int32? sewa_id, 
		                                        Byte[] txn_ts)
		{
			List<SqlParameter> prms = AcceptAllSewaTeams_Params(sewa_id, txn_ts);
			DataSet dset = esp("AcceptAllSewaTeams", prms);

			return dset;
		}
		
public string AcceptAllSewaTeamsAsTask(Int32? sewa_id, 
		                                            Byte[] txn_ts)
		{
			List<SqlParameter> prms = AcceptAllSewaTeams_Params(sewa_id, txn_ts);
			return gps("AcceptAllSewaTeams", prms);

		}
		
		
		
private List<SqlParameter> AcceptSewaTeam_Params(Int32? sewa_team_id, 
		                                                    Byte[] txn_ts)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("sewa_team_id", sewa_team_id, INT, IN, p);
			csp("txn_ts", txn_ts, TIMESTAMP, IN, p);
			return p;
		}
		
public DataSet AcceptSewaTeam(Int32? sewa_team_id, 
		                                    Byte[] txn_ts)
		{
			List<SqlParameter> prms = AcceptSewaTeam_Params(sewa_team_id, txn_ts);
			DataSet dset = esp("AcceptSewaTeam", prms);

			return dset;
		}
		
public string AcceptSewaTeamAsTask(Int32? sewa_team_id, 
		                                        Byte[] txn_ts)
		{
			List<SqlParameter> prms = AcceptSewaTeam_Params(sewa_team_id, txn_ts);
			return gps("AcceptSewaTeam", prms);

		}
		
		
		
private List<SqlParameter> AddAppUser_Params(String p_user_id, 
		                                                String p_user_nm, 
		                                                String p_password, 
		                                                ref String responseMessage)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_user_id", p_user_id, VARCHAR, IN, p);
			csp("p_user_nm", p_user_nm, VARCHAR, IN, p);
			csp("p_password", p_password, VARCHAR, IN, p);
			csp("responseMessage", responseMessage, NVARCHAR, INOUT, p);
			return p;
		}
		
public DataSet AddAppUser(String p_user_id, 
		                                String p_user_nm, 
		                                String p_password, 
		                                ref String responseMessage)
		{
			List<SqlParameter> prms = AddAppUser_Params(p_user_id, p_user_nm, p_password, ref responseMessage);
			DataSet dset = esp("AddAppUser", prms);
			responseMessage = (System.String)prms.FirstOrDefault(p => p.ParameterName == "responseMessage").Value;

			return dset;
		}
		
public string AddAppUserAsTask(String p_user_id, 
		                                    String p_user_nm, 
		                                    String p_password, 
		                                    ref String responseMessage)
		{
			List<SqlParameter> prms = AddAppUser_Params(p_user_id, p_user_nm, p_password, ref responseMessage);
			return gps("AddAppUser", prms);

		}
		
		
		
private List<SqlParameter> AddAppUserPreviledges_Params(String p_user_id, 
		                                                            Int32? p_sewa_id, 
		                                                            Int32? p_sewa_team_id, 
		                                                            Int16? p_in_out_applicable, 
		                                                            ref String responseMessage)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_user_id", p_user_id, VARCHAR, IN, p);
			csp("p_sewa_id", p_sewa_id, INT, IN, p);
			csp("p_sewa_team_id", p_sewa_team_id, INT, IN, p);
			csp("p_in_out_applicable", p_in_out_applicable, SMALLINT, IN, p);
			csp("responseMessage", responseMessage, NVARCHAR, INOUT, p);
			return p;
		}
		
public DataSet AddAppUserPreviledges(String p_user_id, 
		                                        Int32? p_sewa_id, 
		                                        Int32? p_sewa_team_id, 
		                                        Int16? p_in_out_applicable, 
		                                        ref String responseMessage)
		{
			List<SqlParameter> prms = AddAppUserPreviledges_Params(p_user_id, p_sewa_id, p_sewa_team_id, p_in_out_applicable, ref responseMessage);
			DataSet dset = esp("AddAppUserPreviledges", prms);
			responseMessage = (System.String)prms.FirstOrDefault(p => p.ParameterName == "responseMessage").Value;

			return dset;
		}
		
public string AddAppUserPreviledgesAsTask(String p_user_id, 
		                                                Int32? p_sewa_id, 
		                                                Int32? p_sewa_team_id, 
		                                                Int16? p_in_out_applicable, 
		                                                ref String responseMessage)
		{
			List<SqlParameter> prms = AddAppUserPreviledges_Params(p_user_id, p_sewa_id, p_sewa_team_id, p_in_out_applicable, ref responseMessage);
			return gps("AddAppUserPreviledges", prms);

		}
		
		
		
		
		
		
		
		
		
private List<SqlParameter> AddToSewadarList_Params(Int16? p_scanning_job_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_scanning_job_id", p_scanning_job_id, SMALLINT, IN, p);
			return p;
		}
		
public DataSet AddToSewadarList(Int16? p_scanning_job_id)
		{
			List<SqlParameter> prms = AddToSewadarList_Params(p_scanning_job_id);
			DataSet dset = esp("AddToSewadarList", prms);

			return dset;
		}
		
public string AddToSewadarListAsTask(Int16? p_scanning_job_id)
		{
			List<SqlParameter> prms = AddToSewadarList_Params(p_scanning_job_id);
			return gps("AddToSewadarList", prms);

		}
		
		
		
		
		
		
		
		
		
		
		
private List<SqlParameter> ArchiveSewa_Params(Int32? p_sewa_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_sewa_id", p_sewa_id, INT, IN, p);
			return p;
		}
		
public DataSet ArchiveSewa(Int32? p_sewa_id)
		{
			List<SqlParameter> prms = ArchiveSewa_Params(p_sewa_id);
			DataSet dset = esp("ArchiveSewa", prms);

			return dset;
		}
		
public string ArchiveSewaAsTask(Int32? p_sewa_id)
		{
			List<SqlParameter> prms = ArchiveSewa_Params(p_sewa_id);
			return gps("ArchiveSewa", prms);

		}
		
		
		
private List<SqlParameter> AssignAttributeUsingSewadarList_Params(Int32? p_sewadar_list_id, 
		                                                                        Int16? p_attribute_id, 
		                                                                        String p_boolean_value, 
		                                                                        DateTime? p_date_value, 
		                                                                        Int32? p_int_value, 
		                                                                        Decimal? p_number_value, 
		                                                                        String p_list_value, 
		                                                                        String p_string_value, 
		                                                                        String p_remarks, 
		                                                                        DateTime? p_effective_from, 
		                                                                        DateTime? p_effective_till)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_sewadar_list_id", p_sewadar_list_id, INT, IN, p);
			csp("p_attribute_id", p_attribute_id, SMALLINT, IN, p);
			csp("p_boolean_value", p_boolean_value, VARCHAR, IN, p);
			csp("p_date_value", p_date_value, SMALLDATETIME, IN, p);
			csp("p_int_value", p_int_value, INT, IN, p);
			csp("p_number_value", p_number_value, DECIMAL, IN, p);
			csp("p_list_value", p_list_value, VARCHAR, IN, p);
			csp("p_string_value", p_string_value, VARCHAR, IN, p);
			csp("p_remarks", p_remarks, VARCHAR, IN, p);
			csp("p_effective_from", p_effective_from, DATETIME, IN, p);
			csp("p_effective_till", p_effective_till, DATETIME, IN, p);
			return p;
		}
		
public DataSet AssignAttributeUsingSewadarList(Int32? p_sewadar_list_id, 
		                                                    Int16? p_attribute_id, 
		                                                    String p_boolean_value, 
		                                                    DateTime? p_date_value, 
		                                                    Int32? p_int_value, 
		                                                    Decimal? p_number_value, 
		                                                    String p_list_value, 
		                                                    String p_string_value, 
		                                                    String p_remarks, 
		                                                    DateTime? p_effective_from, 
		                                                    DateTime? p_effective_till)
		{
			List<SqlParameter> prms = AssignAttributeUsingSewadarList_Params(p_sewadar_list_id, p_attribute_id, p_boolean_value, p_date_value, p_int_value, p_number_value, p_list_value, p_string_value, p_remarks, p_effective_from, p_effective_till);
			DataSet dset = esp("AssignAttributeUsingSewadarList", prms);

			return dset;
		}
		
public string AssignAttributeUsingSewadarListAsTask(Int32? p_sewadar_list_id, 
		                                                        Int16? p_attribute_id, 
		                                                        String p_boolean_value, 
		                                                        DateTime? p_date_value, 
		                                                        Int32? p_int_value, 
		                                                        Decimal? p_number_value, 
		                                                        String p_list_value, 
		                                                        String p_string_value, 
		                                                        String p_remarks, 
		                                                        DateTime? p_effective_from, 
		                                                        DateTime? p_effective_till)
		{
			List<SqlParameter> prms = AssignAttributeUsingSewadarList_Params(p_sewadar_list_id, p_attribute_id, p_boolean_value, p_date_value, p_int_value, p_number_value, p_list_value, p_string_value, p_remarks, p_effective_from, p_effective_till);
			return gps("AssignAttributeUsingSewadarList", prms);

		}
		
		
		
		
		
		
		
private List<SqlParameter> AuditBadgeReport_Params(Int32? p_session_id, 
		                                                        String p_report_nm)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_session_id", p_session_id, INT, IN, p);
			csp("p_report_nm", p_report_nm, VARCHAR, IN, p);
			return p;
		}
		
public DataSet AuditBadgeReport(Int32? p_session_id, 
		                                    String p_report_nm)
		{
			List<SqlParameter> prms = AuditBadgeReport_Params(p_session_id, p_report_nm);
			DataSet dset = esp("AuditBadgeReport", prms);

			return dset;
		}
		
public string AuditBadgeReportAsTask(Int32? p_session_id, 
		                                        String p_report_nm)
		{
			List<SqlParameter> prms = AuditBadgeReport_Params(p_session_id, p_report_nm);
			return gps("AuditBadgeReport", prms);

		}
		
		
		
private List<SqlParameter> AuthenticateAppUser_Params(String p_user_id, 
		                                                            String p_password)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_user_id", p_user_id, VARCHAR, IN, p);
			csp("p_password", p_password, VARCHAR, IN, p);
			return p;
		}
		
public DataSet AuthenticateAppUser(String p_user_id, 
		                                        String p_password)
		{
			List<SqlParameter> prms = AuthenticateAppUser_Params(p_user_id, p_password);
			DataSet dset = esp("AuthenticateAppUser", prms);

			return dset;
		}
		
public string AuthenticateAppUserAsTask(String p_user_id, 
		                                            String p_password)
		{
			List<SqlParameter> prms = AuthenticateAppUser_Params(p_user_id, p_password);
			return gps("AuthenticateAppUser", prms);

		}
		
		
		
		
		
		
		
		
		
private List<SqlParameter> BulkSewadarsRegister_Params(String satsang_centre_nm, 
		                                                            Int32? satsang_centre_id, 
		                                                            Int32? sewa_samiti_approver_id, 
		                                                            DateTime? photo_dt)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("satsang_centre_nm", satsang_centre_nm, VARCHAR, IN, p);
			csp("satsang_centre_id", satsang_centre_id, INT, IN, p);
			csp("sewa_samiti_approver_id", sewa_samiti_approver_id, INT, IN, p);
			csp("photo_dt", photo_dt, SMALLDATETIME, IN, p);
			return p;
		}
		
public DataSet BulkSewadarsRegister(String satsang_centre_nm, 
		                                        Int32? satsang_centre_id, 
		                                        Int32? sewa_samiti_approver_id, 
		                                        DateTime? photo_dt)
		{
			List<SqlParameter> prms = BulkSewadarsRegister_Params(satsang_centre_nm, satsang_centre_id, sewa_samiti_approver_id, photo_dt);
			DataSet dset = esp("BulkSewadarsRegister", prms);

			return dset;
		}
		
public string BulkSewadarsRegisterAsTask(String satsang_centre_nm, 
		                                            Int32? satsang_centre_id, 
		                                            Int32? sewa_samiti_approver_id, 
		                                            DateTime? photo_dt)
		{
			List<SqlParameter> prms = BulkSewadarsRegister_Params(satsang_centre_nm, satsang_centre_id, sewa_samiti_approver_id, photo_dt);
			return gps("BulkSewadarsRegister", prms);

		}
		
		
		
private List<SqlParameter> CancelOpenOrTraineeSewadar_Params(Int32? satsang_centre_id, 
		                                                                String sewadar_grno, 
		                                                                Byte[] txn_ts)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("satsang_centre_id", satsang_centre_id, INT, IN, p);
			csp("sewadar_grno", sewadar_grno, CHAR, IN, p);
			csp("txn_ts", txn_ts, TIMESTAMP, IN, p);
			return p;
		}
		
public DataSet CancelOpenOrTraineeSewadar(Int32? satsang_centre_id, 
		                                                String sewadar_grno, 
		                                                Byte[] txn_ts)
		{
			List<SqlParameter> prms = CancelOpenOrTraineeSewadar_Params(satsang_centre_id, sewadar_grno, txn_ts);
			DataSet dset = esp("CancelOpenOrTraineeSewadar", prms);

			return dset;
		}
		
public string CancelOpenOrTraineeSewadarAsTask(Int32? satsang_centre_id, 
		                                                    String sewadar_grno, 
		                                                    Byte[] txn_ts)
		{
			List<SqlParameter> prms = CancelOpenOrTraineeSewadar_Params(satsang_centre_id, sewadar_grno, txn_ts);
			return gps("CancelOpenOrTraineeSewadar", prms);

		}
		
		
		
		
		
		
		
private List<SqlParameter> ClearUserSessions_Params(Int32? p_user_no)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_user_no", p_user_no, INT, IN, p);
			return p;
		}
		
public DataSet ClearUserSessions(Int32? p_user_no)
		{
			List<SqlParameter> prms = ClearUserSessions_Params(p_user_no);
			DataSet dset = esp("ClearUserSessions", prms);

			return dset;
		}
		
public string ClearUserSessionsAsTask(Int32? p_user_no)
		{
			List<SqlParameter> prms = ClearUserSessions_Params(p_user_no);
			return gps("ClearUserSessions", prms);

		}
		
		
		
private List<SqlParameter> CloseScanningJob_Params(Int16? p_scanning_job_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_scanning_job_id", p_scanning_job_id, SMALLINT, IN, p);
			return p;
		}
		
public DataSet CloseScanningJob(Int16? p_scanning_job_id)
		{
			List<SqlParameter> prms = CloseScanningJob_Params(p_scanning_job_id);
			DataSet dset = esp("CloseScanningJob", prms);

			return dset;
		}
		
public string CloseScanningJobAsTask(Int16? p_scanning_job_id)
		{
			List<SqlParameter> prms = CloseScanningJob_Params(p_scanning_job_id);
			return gps("CloseScanningJob", prms);

		}
		
		
		
private List<SqlParameter> CloseScanningJobDate_Params(Int16? p_scanning_job_id, 
		                                                            DateTime? p_controlling_dt)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_scanning_job_id", p_scanning_job_id, SMALLINT, IN, p);
			csp("p_controlling_dt", p_controlling_dt, SMALLDATETIME, IN, p);
			return p;
		}
		
public DataSet CloseScanningJobDate(Int16? p_scanning_job_id, 
		                                        DateTime? p_controlling_dt)
		{
			List<SqlParameter> prms = CloseScanningJobDate_Params(p_scanning_job_id, p_controlling_dt);
			DataSet dset = esp("CloseScanningJobDate", prms);

			return dset;
		}
		
public string CloseScanningJobDateAsTask(Int16? p_scanning_job_id, 
		                                            DateTime? p_controlling_dt)
		{
			List<SqlParameter> prms = CloseScanningJobDate_Params(p_scanning_job_id, p_controlling_dt);
			return gps("CloseScanningJobDate", prms);

		}
		
		
		
		
		
private List<SqlParameter> ComputeCredits_Params(Int16? p_credit_specification_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_credit_specification_id", p_credit_specification_id, SMALLINT, IN, p);
			return p;
		}
		
public DataSet ComputeCredits(Int16? p_credit_specification_id)
		{
			List<SqlParameter> prms = ComputeCredits_Params(p_credit_specification_id);
			DataSet dset = esp("ComputeCredits", prms);

			return dset;
		}
		
public string ComputeCreditsAsTask(Int16? p_credit_specification_id)
		{
			List<SqlParameter> prms = ComputeCredits_Params(p_credit_specification_id);
			return gps("ComputeCredits", prms);

		}
		
		
		
private List<SqlParameter> ComputeCreditsNew_Params(Int16? p_credit_specification_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_credit_specification_id", p_credit_specification_id, SMALLINT, IN, p);
			return p;
		}
		
public DataSet ComputeCreditsNew(Int16? p_credit_specification_id)
		{
			List<SqlParameter> prms = ComputeCreditsNew_Params(p_credit_specification_id);
			DataSet dset = esp("ComputeCreditsNew", prms);

			return dset;
		}
		
public string ComputeCreditsNewAsTask(Int16? p_credit_specification_id)
		{
			List<SqlParameter> prms = ComputeCreditsNew_Params(p_credit_specification_id);
			return gps("ComputeCreditsNew", prms);

		}
		
		
		
private List<SqlParameter> CopyCreditSpecificationsAndItsSewas_Params(Int16? credit_specification_id, 
		                                                                            String new_credit_specification_nm)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("credit_specification_id", credit_specification_id, SMALLINT, IN, p);
			csp("new_credit_specification_nm", new_credit_specification_nm, VARCHAR, IN, p);
			return p;
		}
		
public DataSet CopyCreditSpecificationsAndItsSewas(Int16? credit_specification_id, 
		                                                        String new_credit_specification_nm)
		{
			List<SqlParameter> prms = CopyCreditSpecificationsAndItsSewas_Params(credit_specification_id, new_credit_specification_nm);
			DataSet dset = esp("CopyCreditSpecificationsAndItsSewas", prms);

			return dset;
		}
		
public string CopyCreditSpecificationsAndItsSewasAsTask(Int16? credit_specification_id, 
		                                                            String new_credit_specification_nm)
		{
			List<SqlParameter> prms = CopyCreditSpecificationsAndItsSewas_Params(credit_specification_id, new_credit_specification_nm);
			return gps("CopyCreditSpecificationsAndItsSewas", prms);

		}
		
		
		
private List<SqlParameter> CreateSewadarList_Params(Int32? p_session_id, 
		                                                        Int32? p_satsang_centre_id, 
		                                                        String p_sewadar_list_nm, 
		                                                        String p_report_nm, 
		                                                        ref Int32 p_sewadar_list_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_session_id", p_session_id, INT, IN, p);
			csp("p_satsang_centre_id", p_satsang_centre_id, INT, IN, p);
			csp("p_sewadar_list_nm", p_sewadar_list_nm, VARCHAR, IN, p);
			csp("p_report_nm", p_report_nm, VARCHAR, IN, p);
			csp("p_sewadar_list_id", p_sewadar_list_id, INT, INOUT, p);
			return p;
		}
		
public DataSet CreateSewadarList(Int32? p_session_id, 
		                                    Int32? p_satsang_centre_id, 
		                                    String p_sewadar_list_nm, 
		                                    String p_report_nm, 
		                                    ref Int32 p_sewadar_list_id)
		{
			List<SqlParameter> prms = CreateSewadarList_Params(p_session_id, p_satsang_centre_id, p_sewadar_list_nm, p_report_nm, ref p_sewadar_list_id);
			DataSet dset = esp("CreateSewadarList", prms);
			p_sewadar_list_id = (System.Int32)prms.FirstOrDefault(p => p.ParameterName == "p_sewadar_list_id").Value;

			return dset;
		}
		
public string CreateSewadarListAsTask(Int32? p_session_id, 
		                                            Int32? p_satsang_centre_id, 
		                                            String p_sewadar_list_nm, 
		                                            String p_report_nm, 
		                                            ref Int32 p_sewadar_list_id)
		{
			List<SqlParameter> prms = CreateSewadarList_Params(p_session_id, p_satsang_centre_id, p_sewadar_list_nm, p_report_nm, ref p_sewadar_list_id);
			return gps("CreateSewadarList", prms);

		}
		
		
		
private List<SqlParameter> CreateUser_Params(String user_id, 
		                                                String user_nm, 
		                                                String password, 
		                                                String email_id, 
		                                                String application_id, 
		                                                String user_role_id, 
		                                                Int32? sewadar_id, 
		                                                String is_open_sewadar, 
		                                                DateTime? deactivation_dt, 
		                                                ref Int32 user_no)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("user_id", user_id, VARCHAR, IN, p);
			csp("user_nm", user_nm, VARCHAR, IN, p);
			csp("password", password, VARCHAR, IN, p);
			csp("email_id", email_id, VARCHAR, IN, p);
			csp("application_id", application_id, CHAR, IN, p);
			csp("user_role_id", user_role_id, VARCHAR, IN, p);
			csp("sewadar_id", sewadar_id, INT, IN, p);
			csp("is_open_sewadar", is_open_sewadar, VARCHAR, IN, p);
			csp("deactivation_dt", deactivation_dt, DATETIME, IN, p);
			csp("user_no", user_no, INT, INOUT, p);
			return p;
		}
		
public DataSet CreateUser(String user_id, 
		                                String user_nm, 
		                                String password, 
		                                String email_id, 
		                                String application_id, 
		                                String user_role_id, 
		                                Int32? sewadar_id, 
		                                String is_open_sewadar, 
		                                DateTime? deactivation_dt, 
		                                ref Int32 user_no)
		{
			List<SqlParameter> prms = CreateUser_Params(user_id, user_nm, password, email_id, application_id, user_role_id, sewadar_id, is_open_sewadar, deactivation_dt, ref user_no);
			DataSet dset = esp("CreateUser", prms);
			user_no = (System.Int32)prms.FirstOrDefault(p => p.ParameterName == "user_no").Value;

			return dset;
		}
		
public string CreateUserAsTask(String user_id, 
		                                    String user_nm, 
		                                    String password, 
		                                    String email_id, 
		                                    String application_id, 
		                                    String user_role_id, 
		                                    Int32? sewadar_id, 
		                                    String is_open_sewadar, 
		                                    DateTime? deactivation_dt, 
		                                    ref Int32 user_no)
		{
			List<SqlParameter> prms = CreateUser_Params(user_id, user_nm, password, email_id, application_id, user_role_id, sewadar_id, is_open_sewadar, deactivation_dt, ref user_no);
			return gps("CreateUser", prms);

		}
		
		
		
		
		
		
		
		
		
private List<SqlParameter> DeactivateOpenAndTraineesForSewa_Params(Int32? p_sewa_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_sewa_id", p_sewa_id, INT, IN, p);
			return p;
		}
		
public DataSet DeactivateOpenAndTraineesForSewa(Int32? p_sewa_id)
		{
			List<SqlParameter> prms = DeactivateOpenAndTraineesForSewa_Params(p_sewa_id);
			DataSet dset = esp("DeactivateOpenAndTraineesForSewa", prms);

			return dset;
		}
		
public string DeactivateOpenAndTraineesForSewaAsTask(Int32? p_sewa_id)
		{
			List<SqlParameter> prms = DeactivateOpenAndTraineesForSewa_Params(p_sewa_id);
			return gps("DeactivateOpenAndTraineesForSewa", prms);

		}
		
		
		
private List<SqlParameter> Delete100DayOldGenericReportsData_Params()
		{
			List<SqlParameter> p = new List<SqlParameter>();
			return p;
		}
		
public DataSet Delete100DayOldGenericReportsData()
		{
			List<SqlParameter> prms = Delete100DayOldGenericReportsData_Params();
			DataSet dset = esp("Delete100DayOldGenericReportsData", prms);
			return dset;
		}
		
public string Delete100DayOldGenericReportsDataAsTask()
		{
			List<SqlParameter> prms = Delete100DayOldGenericReportsData_Params();
			return gps("Delete100DayOldGenericReportsData", prms);
		}
		
		
		
private List<SqlParameter> DeleteAllSewaTeamWiseSewadar_Params(Int32? sewa_team_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("sewa_team_id", sewa_team_id, INT, IN, p);
			return p;
		}
		
public DataSet DeleteAllSewaTeamWiseSewadar(Int32? sewa_team_id)
		{
			List<SqlParameter> prms = DeleteAllSewaTeamWiseSewadar_Params(sewa_team_id);
			DataSet dset = esp("DeleteAllSewaTeamWiseSewadar", prms);

			return dset;
		}
		
public string DeleteAllSewaTeamWiseSewadarAsTask(Int32? sewa_team_id)
		{
			List<SqlParameter> prms = DeleteAllSewaTeamWiseSewadar_Params(sewa_team_id);
			return gps("DeleteAllSewaTeamWiseSewadar", prms);

		}
		
		
		
private List<SqlParameter> DeleteAllSpeakersApprovalsRenewals_Params(Int32? speaker_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("speaker_id", speaker_id, INT, IN, p);
			return p;
		}
		
public DataSet DeleteAllSpeakersApprovalsRenewals(Int32? speaker_id)
		{
			List<SqlParameter> prms = DeleteAllSpeakersApprovalsRenewals_Params(speaker_id);
			DataSet dset = esp("DeleteAllSpeakersApprovalsRenewals", prms);

			return dset;
		}
		
public string DeleteAllSpeakersApprovalsRenewalsAsTask(Int32? speaker_id)
		{
			List<SqlParameter> prms = DeleteAllSpeakersApprovalsRenewals_Params(speaker_id);
			return gps("DeleteAllSpeakersApprovalsRenewals", prms);

		}
		
		
		
private List<SqlParameter> DeleteAllSpeakersTrainings_Params(Int32? speaker_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("speaker_id", speaker_id, INT, IN, p);
			return p;
		}
		
public DataSet DeleteAllSpeakersTrainings(Int32? speaker_id)
		{
			List<SqlParameter> prms = DeleteAllSpeakersTrainings_Params(speaker_id);
			DataSet dset = esp("DeleteAllSpeakersTrainings", prms);

			return dset;
		}
		
public string DeleteAllSpeakersTrainingsAsTask(Int32? speaker_id)
		{
			List<SqlParameter> prms = DeleteAllSpeakersTrainings_Params(speaker_id);
			return gps("DeleteAllSpeakersTrainings", prms);

		}
		
		
		
private List<SqlParameter> DeleteAllTeamWiseDailyAttendance_Params(Int32? sewa_team_id, 
		                                                                        Int32? serial_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("sewa_team_id", sewa_team_id, INT, IN, p);
			csp("serial_id", serial_id, INT, IN, p);
			return p;
		}
		
public DataSet DeleteAllTeamWiseDailyAttendance(Int32? sewa_team_id, 
		                                                    Int32? serial_id)
		{
			List<SqlParameter> prms = DeleteAllTeamWiseDailyAttendance_Params(sewa_team_id, serial_id);
			DataSet dset = esp("DeleteAllTeamWiseDailyAttendance", prms);

			return dset;
		}
		
public string DeleteAllTeamWiseDailyAttendanceAsTask(Int32? sewa_team_id, 
		                                                        Int32? serial_id)
		{
			List<SqlParameter> prms = DeleteAllTeamWiseDailyAttendance_Params(sewa_team_id, serial_id);
			return gps("DeleteAllTeamWiseDailyAttendance", prms);

		}
		
		
		
private List<SqlParameter> DeleteArbitraryDailyPresence_Params(Int32? old_sewa_id, 
		                                                                    Int32? old_satsang_centre_id, 
		                                                                    String old_sewadar_grno, 
		                                                                    DateTime? old_presence_dt)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("old_sewa_id", old_sewa_id, INT, IN, p);
			csp("old_satsang_centre_id", old_satsang_centre_id, INT, IN, p);
			csp("old_sewadar_grno", old_sewadar_grno, CHAR, IN, p);
			csp("old_presence_dt", old_presence_dt, SMALLDATETIME, IN, p);
			return p;
		}
		
public DataSet DeleteArbitraryDailyPresence(Int32? old_sewa_id, 
		                                                Int32? old_satsang_centre_id, 
		                                                String old_sewadar_grno, 
		                                                DateTime? old_presence_dt)
		{
			List<SqlParameter> prms = DeleteArbitraryDailyPresence_Params(old_sewa_id, old_satsang_centre_id, old_sewadar_grno, old_presence_dt);
			DataSet dset = esp("DeleteArbitraryDailyPresence", prms);

			return dset;
		}
		
public string DeleteArbitraryDailyPresenceAsTask(Int32? old_sewa_id, 
		                                                    Int32? old_satsang_centre_id, 
		                                                    String old_sewadar_grno, 
		                                                    DateTime? old_presence_dt)
		{
			List<SqlParameter> prms = DeleteArbitraryDailyPresence_Params(old_sewa_id, old_satsang_centre_id, old_sewadar_grno, old_presence_dt);
			return gps("DeleteArbitraryDailyPresence", prms);

		}
		
		
		
private List<SqlParameter> DeleteArbitraryShiftPresence_Params(Int32? old_sewa_id, 
		                                                                    Int32? old_satsang_centre_id, 
		                                                                    String old_sewadar_grno, 
		                                                                    DateTime? old_presence_dt, 
		                                                                    String old_sewa_shift)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("old_sewa_id", old_sewa_id, INT, IN, p);
			csp("old_satsang_centre_id", old_satsang_centre_id, INT, IN, p);
			csp("old_sewadar_grno", old_sewadar_grno, CHAR, IN, p);
			csp("old_presence_dt", old_presence_dt, SMALLDATETIME, IN, p);
			csp("old_sewa_shift", old_sewa_shift, VARCHAR, IN, p);
			return p;
		}
		
public DataSet DeleteArbitraryShiftPresence(Int32? old_sewa_id, 
		                                                Int32? old_satsang_centre_id, 
		                                                String old_sewadar_grno, 
		                                                DateTime? old_presence_dt, 
		                                                String old_sewa_shift)
		{
			List<SqlParameter> prms = DeleteArbitraryShiftPresence_Params(old_sewa_id, old_satsang_centre_id, old_sewadar_grno, old_presence_dt, old_sewa_shift);
			DataSet dset = esp("DeleteArbitraryShiftPresence", prms);

			return dset;
		}
		
public string DeleteArbitraryShiftPresenceAsTask(Int32? old_sewa_id, 
		                                                    Int32? old_satsang_centre_id, 
		                                                    String old_sewadar_grno, 
		                                                    DateTime? old_presence_dt, 
		                                                    String old_sewa_shift)
		{
			List<SqlParameter> prms = DeleteArbitraryShiftPresence_Params(old_sewa_id, old_satsang_centre_id, old_sewadar_grno, old_presence_dt, old_sewa_shift);
			return gps("DeleteArbitraryShiftPresence", prms);

		}
		
		
		
private List<SqlParameter> DeleteArbitrarySummarisedExemption_Params(Int32? old_sewa_id, 
		                                                                        Int32? old_satsang_centre_id, 
		                                                                        String old_sewadar_grno)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("old_sewa_id", old_sewa_id, INT, IN, p);
			csp("old_satsang_centre_id", old_satsang_centre_id, INT, IN, p);
			csp("old_sewadar_grno", old_sewadar_grno, CHAR, IN, p);
			return p;
		}
		
public DataSet DeleteArbitrarySummarisedExemption(Int32? old_sewa_id, 
		                                                        Int32? old_satsang_centre_id, 
		                                                        String old_sewadar_grno)
		{
			List<SqlParameter> prms = DeleteArbitrarySummarisedExemption_Params(old_sewa_id, old_satsang_centre_id, old_sewadar_grno);
			DataSet dset = esp("DeleteArbitrarySummarisedExemption", prms);

			return dset;
		}
		
public string DeleteArbitrarySummarisedExemptionAsTask(Int32? old_sewa_id, 
		                                                            Int32? old_satsang_centre_id, 
		                                                            String old_sewadar_grno)
		{
			List<SqlParameter> prms = DeleteArbitrarySummarisedExemption_Params(old_sewa_id, old_satsang_centre_id, old_sewadar_grno);
			return gps("DeleteArbitrarySummarisedExemption", prms);

		}
		
		
		
private List<SqlParameter> DeleteBadgeTemplate_Params(String badge_template_id, 
		                                                            Byte[] txn_ts)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("badge_template_id", badge_template_id, VARCHAR, IN, p);
			csp("txn_ts", txn_ts, TIMESTAMP, IN, p);
			return p;
		}
		
public DataSet DeleteBadgeTemplate(String badge_template_id, 
		                                        Byte[] txn_ts)
		{
			List<SqlParameter> prms = DeleteBadgeTemplate_Params(badge_template_id, txn_ts);
			DataSet dset = esp("DeleteBadgeTemplate", prms);

			return dset;
		}
		
public string DeleteBadgeTemplateAsTask(String badge_template_id, 
		                                            Byte[] txn_ts)
		{
			List<SqlParameter> prms = DeleteBadgeTemplate_Params(badge_template_id, txn_ts);
			return gps("DeleteBadgeTemplate", prms);

		}
		
		
		
private List<SqlParameter> DeleteColour_Params(Int16? old_colour_id, 
		                                                    Byte[] txn_ts)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("old_colour_id", old_colour_id, SMALLINT, IN, p);
			csp("txn_ts", txn_ts, TIMESTAMP, IN, p);
			return p;
		}
		
public DataSet DeleteColour(Int16? old_colour_id, 
		                                Byte[] txn_ts)
		{
			List<SqlParameter> prms = DeleteColour_Params(old_colour_id, txn_ts);
			DataSet dset = esp("DeleteColour", prms);

			return dset;
		}
		
public string DeleteColourAsTask(Int16? old_colour_id, 
		                                    Byte[] txn_ts)
		{
			List<SqlParameter> prms = DeleteColour_Params(old_colour_id, txn_ts);
			return gps("DeleteColour", prms);

		}
		
		
		
private List<SqlParameter> DeleteCreditSpecification_Params(Int16? credit_specification_id, 
		                                                                Byte[] txn_ts)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("credit_specification_id", credit_specification_id, SMALLINT, IN, p);
			csp("txn_ts", txn_ts, TIMESTAMP, IN, p);
			return p;
		}
		
public DataSet DeleteCreditSpecification(Int16? credit_specification_id, 
		                                            Byte[] txn_ts)
		{
			List<SqlParameter> prms = DeleteCreditSpecification_Params(credit_specification_id, txn_ts);
			DataSet dset = esp("DeleteCreditSpecification", prms);

			return dset;
		}
		
public string DeleteCreditSpecificationAsTask(Int16? credit_specification_id, 
		                                                    Byte[] txn_ts)
		{
			List<SqlParameter> prms = DeleteCreditSpecification_Params(credit_specification_id, txn_ts);
			return gps("DeleteCreditSpecification", prms);

		}
		
		
		
private List<SqlParameter> DeleteCreditSpecificationsSewa_Params(Int16? credit_specification_id, 
		                                                                    Int32? old_sewa_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("credit_specification_id", credit_specification_id, SMALLINT, IN, p);
			csp("old_sewa_id", old_sewa_id, INT, IN, p);
			return p;
		}
		
public DataSet DeleteCreditSpecificationsSewa(Int16? credit_specification_id, 
		                                                    Int32? old_sewa_id)
		{
			List<SqlParameter> prms = DeleteCreditSpecificationsSewa_Params(credit_specification_id, old_sewa_id);
			DataSet dset = esp("DeleteCreditSpecificationsSewa", prms);

			return dset;
		}
		
public string DeleteCreditSpecificationsSewaAsTask(Int16? credit_specification_id, 
		                                                        Int32? old_sewa_id)
		{
			List<SqlParameter> prms = DeleteCreditSpecificationsSewa_Params(credit_specification_id, old_sewa_id);
			return gps("DeleteCreditSpecificationsSewa", prms);

		}
		
		
		
private List<SqlParameter> DeleteDepartment_Params(Int16? department_id, 
		                                                        Byte[] txn_ts)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("department_id", department_id, SMALLINT, IN, p);
			csp("txn_ts", txn_ts, TIMESTAMP, IN, p);
			return p;
		}
		
public DataSet DeleteDepartment(Int16? department_id, 
		                                    Byte[] txn_ts)
		{
			List<SqlParameter> prms = DeleteDepartment_Params(department_id, txn_ts);
			DataSet dset = esp("DeleteDepartment", prms);

			return dset;
		}
		
public string DeleteDepartmentAsTask(Int16? department_id, 
		                                        Byte[] txn_ts)
		{
			List<SqlParameter> prms = DeleteDepartment_Params(department_id, txn_ts);
			return gps("DeleteDepartment", prms);

		}
		
		
		
private List<SqlParameter> DeleteDepartmentsSatsangCentre_Params(Int16? department_id, 
		                                                                    Int32? old_satsang_centre_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("department_id", department_id, SMALLINT, IN, p);
			csp("old_satsang_centre_id", old_satsang_centre_id, INT, IN, p);
			return p;
		}
		
public DataSet DeleteDepartmentsSatsangCentre(Int16? department_id, 
		                                                    Int32? old_satsang_centre_id)
		{
			List<SqlParameter> prms = DeleteDepartmentsSatsangCentre_Params(department_id, old_satsang_centre_id);
			DataSet dset = esp("DeleteDepartmentsSatsangCentre", prms);

			return dset;
		}
		
public string DeleteDepartmentsSatsangCentreAsTask(Int16? department_id, 
		                                                        Int32? old_satsang_centre_id)
		{
			List<SqlParameter> prms = DeleteDepartmentsSatsangCentre_Params(department_id, old_satsang_centre_id);
			return gps("DeleteDepartmentsSatsangCentre", prms);

		}
		
		
		
private List<SqlParameter> DeleteGenericAttribute_Params(Int16? attribute_id, 
		                                                            String attribute_nm, 
		                                                            String attribute_group, 
		                                                            Int16? attribute_sq, 
		                                                            String attribute_type, 
		                                                            Byte? attribute_length, 
		                                                            Byte? attribute_scale, 
		                                                            String is_temporal, 
		                                                            String is_mandatory, 
		                                                            String is_status_applicable, 
		                                                            String remarks, 
		                                                            Byte[] txn_ts)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("attribute_id", attribute_id, SMALLINT, IN, p);
			csp("attribute_nm", attribute_nm, VARCHAR, IN, p);
			csp("attribute_group", attribute_group, VARCHAR, IN, p);
			csp("attribute_sq", attribute_sq, SMALLINT, IN, p);
			csp("attribute_type", attribute_type, VARCHAR, IN, p);
			csp("attribute_length", attribute_length, TINYINT, IN, p);
			csp("attribute_scale", attribute_scale, TINYINT, IN, p);
			csp("is_temporal", is_temporal, VARCHAR, IN, p);
			csp("is_mandatory", is_mandatory, VARCHAR, IN, p);
			csp("is_status_applicable", is_status_applicable, VARCHAR, IN, p);
			csp("remarks", remarks, VARCHAR, IN, p);
			csp("txn_ts", txn_ts, TIMESTAMP, IN, p);
			return p;
		}
		
public DataSet DeleteGenericAttribute(Int16? attribute_id, 
		                                            String attribute_nm, 
		                                            String attribute_group, 
		                                            Int16? attribute_sq, 
		                                            String attribute_type, 
		                                            Byte? attribute_length, 
		                                            Byte? attribute_scale, 
		                                            String is_temporal, 
		                                            String is_mandatory, 
		                                            String is_status_applicable, 
		                                            String remarks, 
		                                            Byte[] txn_ts)
		{
			List<SqlParameter> prms = DeleteGenericAttribute_Params(attribute_id, attribute_nm, attribute_group, attribute_sq, attribute_type, attribute_length, attribute_scale, is_temporal, is_mandatory, is_status_applicable, remarks, txn_ts);
			DataSet dset = esp("DeleteGenericAttribute", prms);

			return dset;
		}
		
public string DeleteGenericAttributeAsTask(Int16? attribute_id, 
		                                                String attribute_nm, 
		                                                String attribute_group, 
		                                                Int16? attribute_sq, 
		                                                String attribute_type, 
		                                                Byte? attribute_length, 
		                                                Byte? attribute_scale, 
		                                                String is_temporal, 
		                                                String is_mandatory, 
		                                                String is_status_applicable, 
		                                                String remarks, 
		                                                Byte[] txn_ts)
		{
			List<SqlParameter> prms = DeleteGenericAttribute_Params(attribute_id, attribute_nm, attribute_group, attribute_sq, attribute_type, attribute_length, attribute_scale, is_temporal, is_mandatory, is_status_applicable, remarks, txn_ts);
			return gps("DeleteGenericAttribute", prms);

		}
		
		
		
private List<SqlParameter> DeleteGenericAttributesListValue_Params(Int16? attribute_id, 
		                                                                        String old_attribute_value)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("attribute_id", attribute_id, SMALLINT, IN, p);
			csp("old_attribute_value", old_attribute_value, VARCHAR, IN, p);
			return p;
		}
		
public DataSet DeleteGenericAttributesListValue(Int16? attribute_id, 
		                                                    String old_attribute_value)
		{
			List<SqlParameter> prms = DeleteGenericAttributesListValue_Params(attribute_id, old_attribute_value);
			DataSet dset = esp("DeleteGenericAttributesListValue", prms);

			return dset;
		}
		
public string DeleteGenericAttributesListValueAsTask(Int16? attribute_id, 
		                                                        String old_attribute_value)
		{
			List<SqlParameter> prms = DeleteGenericAttributesListValue_Params(attribute_id, old_attribute_value);
			return gps("DeleteGenericAttributesListValue", prms);

		}
		
		
		
private List<SqlParameter> DeleteGenericAttributesSatsangCentre_Params(Int16? attribute_id, 
		                                                                            Int32? satsang_centre_id, 
		                                                                            Int32? old_satsang_centre_id, 
		                                                                            DateTime? effective_from, 
		                                                                            DateTime? effective_till)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("attribute_id", attribute_id, SMALLINT, IN, p);
			csp("satsang_centre_id", satsang_centre_id, INT, IN, p);
			csp("old_satsang_centre_id", old_satsang_centre_id, INT, IN, p);
			csp("effective_from", effective_from, DATETIME, IN, p);
			csp("effective_till", effective_till, DATETIME, IN, p);
			return p;
		}
		
public DataSet DeleteGenericAttributesSatsangCentre(Int16? attribute_id, 
		                                                        Int32? satsang_centre_id, 
		                                                        Int32? old_satsang_centre_id, 
		                                                        DateTime? effective_from, 
		                                                        DateTime? effective_till)
		{
			List<SqlParameter> prms = DeleteGenericAttributesSatsangCentre_Params(attribute_id, satsang_centre_id, old_satsang_centre_id, effective_from, effective_till);
			DataSet dset = esp("DeleteGenericAttributesSatsangCentre", prms);

			return dset;
		}
		
public string DeleteGenericAttributesSatsangCentreAsTask(Int16? attribute_id, 
		                                                            Int32? satsang_centre_id, 
		                                                            Int32? old_satsang_centre_id, 
		                                                            DateTime? effective_from, 
		                                                            DateTime? effective_till)
		{
			List<SqlParameter> prms = DeleteGenericAttributesSatsangCentre_Params(attribute_id, satsang_centre_id, old_satsang_centre_id, effective_from, effective_till);
			return gps("DeleteGenericAttributesSatsangCentre", prms);

		}
		
		
		
private List<SqlParameter> DeleteGenericAttributesStatus_Params(Int16? attribute_id, 
		                                                                    String old_sewadar_status_cd)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("attribute_id", attribute_id, SMALLINT, IN, p);
			csp("old_sewadar_status_cd", old_sewadar_status_cd, VARCHAR, IN, p);
			return p;
		}
		
public DataSet DeleteGenericAttributesStatus(Int16? attribute_id, 
		                                                String old_sewadar_status_cd)
		{
			List<SqlParameter> prms = DeleteGenericAttributesStatus_Params(attribute_id, old_sewadar_status_cd);
			DataSet dset = esp("DeleteGenericAttributesStatus", prms);

			return dset;
		}
		
public string DeleteGenericAttributesStatusAsTask(Int16? attribute_id, 
		                                                        String old_sewadar_status_cd)
		{
			List<SqlParameter> prms = DeleteGenericAttributesStatus_Params(attribute_id, old_sewadar_status_cd);
			return gps("DeleteGenericAttributesStatus", prms);

		}
		
		
		
private List<SqlParameter> DeleteGenericReportData_Params(Int32? p_session_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_session_id", p_session_id, INT, IN, p);
			return p;
		}
		
public DataSet DeleteGenericReportData(Int32? p_session_id)
		{
			List<SqlParameter> prms = DeleteGenericReportData_Params(p_session_id);
			DataSet dset = esp("DeleteGenericReportData", prms);

			return dset;
		}
		
public string DeleteGenericReportDataAsTask(Int32? p_session_id)
		{
			List<SqlParameter> prms = DeleteGenericReportData_Params(p_session_id);
			return gps("DeleteGenericReportData", prms);

		}
		
		
		
private List<SqlParameter> DeleteGenericSewadarList_Params(Int32? sewadar_list_id, 
		                                                                Int32? satsang_centre_id, 
		                                                                Byte[] txn_ts)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("sewadar_list_id", sewadar_list_id, INT, IN, p);
			csp("satsang_centre_id", satsang_centre_id, INT, IN, p);
			csp("txn_ts", txn_ts, TIMESTAMP, IN, p);
			return p;
		}
		
public DataSet DeleteGenericSewadarList(Int32? sewadar_list_id, 
		                                            Int32? satsang_centre_id, 
		                                            Byte[] txn_ts)
		{
			List<SqlParameter> prms = DeleteGenericSewadarList_Params(sewadar_list_id, satsang_centre_id, txn_ts);
			DataSet dset = esp("DeleteGenericSewadarList", prms);

			return dset;
		}
		
public string DeleteGenericSewadarListAsTask(Int32? sewadar_list_id, 
		                                                Int32? satsang_centre_id, 
		                                                Byte[] txn_ts)
		{
			List<SqlParameter> prms = DeleteGenericSewadarList_Params(sewadar_list_id, satsang_centre_id, txn_ts);
			return gps("DeleteGenericSewadarList", prms);

		}
		
		
		
private List<SqlParameter> DeleteGenericSewadarListsSewadar_Params(Int32? sewadar_list_id, 
		                                                                        Int32? old_satsang_centre_id, 
		                                                                        String old_sewadar_grno)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("sewadar_list_id", sewadar_list_id, INT, IN, p);
			csp("old_satsang_centre_id", old_satsang_centre_id, INT, IN, p);
			csp("old_sewadar_grno", old_sewadar_grno, CHAR, IN, p);
			return p;
		}
		
public DataSet DeleteGenericSewadarListsSewadar(Int32? sewadar_list_id, 
		                                                    Int32? old_satsang_centre_id, 
		                                                    String old_sewadar_grno)
		{
			List<SqlParameter> prms = DeleteGenericSewadarListsSewadar_Params(sewadar_list_id, old_satsang_centre_id, old_sewadar_grno);
			DataSet dset = esp("DeleteGenericSewadarListsSewadar", prms);

			return dset;
		}
		
public string DeleteGenericSewadarListsSewadarAsTask(Int32? sewadar_list_id, 
		                                                        Int32? old_satsang_centre_id, 
		                                                        String old_sewadar_grno)
		{
			List<SqlParameter> prms = DeleteGenericSewadarListsSewadar_Params(sewadar_list_id, old_satsang_centre_id, old_sewadar_grno);
			return gps("DeleteGenericSewadarListsSewadar", prms);

		}
		
		
		
private List<SqlParameter> DeleteMedicalDisabilitie_Params(Int16? medical_disability_id, 
		                                                                Byte[] txn_ts)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("medical_disability_id", medical_disability_id, SMALLINT, IN, p);
			csp("txn_ts", txn_ts, TIMESTAMP, IN, p);
			return p;
		}
		
public DataSet DeleteMedicalDisabilitie(Int16? medical_disability_id, 
		                                            Byte[] txn_ts)
		{
			List<SqlParameter> prms = DeleteMedicalDisabilitie_Params(medical_disability_id, txn_ts);
			DataSet dset = esp("DeleteMedicalDisabilitie", prms);

			return dset;
		}
		
public string DeleteMedicalDisabilitieAsTask(Int16? medical_disability_id, 
		                                                Byte[] txn_ts)
		{
			List<SqlParameter> prms = DeleteMedicalDisabilitie_Params(medical_disability_id, txn_ts);
			return gps("DeleteMedicalDisabilitie", prms);

		}
		
		
		
private List<SqlParameter> DeletePostOfficesOrCitie_Params(Int32? post_office_or_city_id, 
		                                                                Byte[] txn_ts)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("post_office_or_city_id", post_office_or_city_id, INT, IN, p);
			csp("txn_ts", txn_ts, TIMESTAMP, IN, p);
			return p;
		}
		
public DataSet DeletePostOfficesOrCitie(Int32? post_office_or_city_id, 
		                                            Byte[] txn_ts)
		{
			List<SqlParameter> prms = DeletePostOfficesOrCitie_Params(post_office_or_city_id, txn_ts);
			DataSet dset = esp("DeletePostOfficesOrCitie", prms);

			return dset;
		}
		
public string DeletePostOfficesOrCitieAsTask(Int32? post_office_or_city_id, 
		                                                Byte[] txn_ts)
		{
			List<SqlParameter> prms = DeletePostOfficesOrCitie_Params(post_office_or_city_id, txn_ts);
			return gps("DeletePostOfficesOrCitie", prms);

		}
		
		
		
private List<SqlParameter> DeleteSatsangCentreFunctionarie_Params(Int16? centre_functionary_id, 
		                                                                        Int32? satsang_centre_id, 
		                                                                        String centre_functionary, 
		                                                                        String functionary_nm, 
		                                                                        String is_current, 
		                                                                        String telephones, 
		                                                                        String email_addresses, 
		                                                                        DateTime? effective_from, 
		                                                                        DateTime? effective_till)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("centre_functionary_id", centre_functionary_id, SMALLINT, IN, p);
			csp("satsang_centre_id", satsang_centre_id, INT, IN, p);
			csp("centre_functionary", centre_functionary, VARCHAR, IN, p);
			csp("functionary_nm", functionary_nm, VARCHAR, IN, p);
			csp("is_current", is_current, VARCHAR, IN, p);
			csp("telephones", telephones, VARCHAR, IN, p);
			csp("email_addresses", email_addresses, VARCHAR, IN, p);
			csp("effective_from", effective_from, DATETIME, IN, p);
			csp("effective_till", effective_till, DATETIME, IN, p);
			return p;
		}
		
public DataSet DeleteSatsangCentreFunctionarie(Int16? centre_functionary_id, 
		                                                    Int32? satsang_centre_id, 
		                                                    String centre_functionary, 
		                                                    String functionary_nm, 
		                                                    String is_current, 
		                                                    String telephones, 
		                                                    String email_addresses, 
		                                                    DateTime? effective_from, 
		                                                    DateTime? effective_till)
		{
			List<SqlParameter> prms = DeleteSatsangCentreFunctionarie_Params(centre_functionary_id, satsang_centre_id, centre_functionary, functionary_nm, is_current, telephones, email_addresses, effective_from, effective_till);
			DataSet dset = esp("DeleteSatsangCentreFunctionarie", prms);

			return dset;
		}
		
public string DeleteSatsangCentreFunctionarieAsTask(Int16? centre_functionary_id, 
		                                                        Int32? satsang_centre_id, 
		                                                        String centre_functionary, 
		                                                        String functionary_nm, 
		                                                        String is_current, 
		                                                        String telephones, 
		                                                        String email_addresses, 
		                                                        DateTime? effective_from, 
		                                                        DateTime? effective_till)
		{
			List<SqlParameter> prms = DeleteSatsangCentreFunctionarie_Params(centre_functionary_id, satsang_centre_id, centre_functionary, functionary_nm, is_current, telephones, email_addresses, effective_from, effective_till);
			return gps("DeleteSatsangCentreFunctionarie", prms);

		}
		
		
		
private List<SqlParameter> DeleteSatsangCentresDetail_Params(Int32? satsang_centre_id, 
		                                                                String is_main_centre, 
		                                                                String centre_nm, 
		                                                                String centre_alphabet, 
		                                                                String centre_cd, 
		                                                                Int32? reports_to_centre_id, 
		                                                                String remarks, 
		                                                                Byte[] secretary_signature)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("satsang_centre_id", satsang_centre_id, INT, IN, p);
			csp("is_main_centre", is_main_centre, VARCHAR, IN, p);
			csp("centre_nm", centre_nm, VARCHAR, IN, p);
			csp("centre_alphabet", centre_alphabet, VARCHAR, IN, p);
			csp("centre_cd", centre_cd, CHAR, IN, p);
			csp("reports_to_centre_id", reports_to_centre_id, INT, IN, p);
			csp("remarks", remarks, VARCHAR, IN, p);
			csp("secretary_signature", secretary_signature, IMAGE, IN, p);
			return p;
		}
		
public DataSet DeleteSatsangCentresDetail(Int32? satsang_centre_id, 
		                                                String is_main_centre, 
		                                                String centre_nm, 
		                                                String centre_alphabet, 
		                                                String centre_cd, 
		                                                Int32? reports_to_centre_id, 
		                                                String remarks, 
		                                                Byte[] secretary_signature)
		{
			List<SqlParameter> prms = DeleteSatsangCentresDetail_Params(satsang_centre_id, is_main_centre, centre_nm, centre_alphabet, centre_cd, reports_to_centre_id, remarks, secretary_signature);
			DataSet dset = esp("DeleteSatsangCentresDetail", prms);

			return dset;
		}
		
public string DeleteSatsangCentresDetailAsTask(Int32? satsang_centre_id, 
		                                                    String is_main_centre, 
		                                                    String centre_nm, 
		                                                    String centre_alphabet, 
		                                                    String centre_cd, 
		                                                    Int32? reports_to_centre_id, 
		                                                    String remarks, 
		                                                    Byte[] secretary_signature)
		{
			List<SqlParameter> prms = DeleteSatsangCentresDetail_Params(satsang_centre_id, is_main_centre, centre_nm, centre_alphabet, centre_cd, reports_to_centre_id, remarks, secretary_signature);
			return gps("DeleteSatsangCentresDetail", prms);

		}
		
		
		
private List<SqlParameter> DeleteScannedBadge_Params(Int16? p_scanning_sub_job_id, 
		                                                        DateTime? p_controlling_dt, 
		                                                        Int32? p_satsang_centre_id, 
		                                                        String p_sewadar_grno, 
		                                                        ref String p_delete_success)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_scanning_sub_job_id", p_scanning_sub_job_id, SMALLINT, IN, p);
			csp("p_controlling_dt", p_controlling_dt, SMALLDATETIME, IN, p);
			csp("p_satsang_centre_id", p_satsang_centre_id, INT, IN, p);
			csp("p_sewadar_grno", p_sewadar_grno, CHAR, IN, p);
			csp("p_delete_success", p_delete_success, VARCHAR, INOUT, p);
			return p;
		}
		
public DataSet DeleteScannedBadge(Int16? p_scanning_sub_job_id, 
		                                        DateTime? p_controlling_dt, 
		                                        Int32? p_satsang_centre_id, 
		                                        String p_sewadar_grno, 
		                                        ref String p_delete_success)
		{
			List<SqlParameter> prms = DeleteScannedBadge_Params(p_scanning_sub_job_id, p_controlling_dt, p_satsang_centre_id, p_sewadar_grno, ref p_delete_success);
			DataSet dset = esp("DeleteScannedBadge", prms);
			p_delete_success = (System.String)prms.FirstOrDefault(p => p.ParameterName == "p_delete_success").Value;

			return dset;
		}
		
public string DeleteScannedBadgeAsTask(Int16? p_scanning_sub_job_id, 
		                                            DateTime? p_controlling_dt, 
		                                            Int32? p_satsang_centre_id, 
		                                            String p_sewadar_grno, 
		                                            ref String p_delete_success)
		{
			List<SqlParameter> prms = DeleteScannedBadge_Params(p_scanning_sub_job_id, p_controlling_dt, p_satsang_centre_id, p_sewadar_grno, ref p_delete_success);
			return gps("DeleteScannedBadge", prms);

		}
		
		
		
private List<SqlParameter> DeleteScanningJob_Params(Int16? scanning_job_id, 
		                                                        Byte[] txn_ts)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("scanning_job_id", scanning_job_id, SMALLINT, IN, p);
			csp("txn_ts", txn_ts, TIMESTAMP, IN, p);
			return p;
		}
		
public DataSet DeleteScanningJob(Int16? scanning_job_id, 
		                                    Byte[] txn_ts)
		{
			List<SqlParameter> prms = DeleteScanningJob_Params(scanning_job_id, txn_ts);
			DataSet dset = esp("DeleteScanningJob", prms);

			return dset;
		}
		
public string DeleteScanningJobAsTask(Int16? scanning_job_id, 
		                                            Byte[] txn_ts)
		{
			List<SqlParameter> prms = DeleteScanningJob_Params(scanning_job_id, txn_ts);
			return gps("DeleteScanningJob", prms);

		}
		
		
		
private List<SqlParameter> DeleteScanningJobsControllingDate_Params(Int16? scanning_job_id, 
		                                                                        DateTime? controlling_dt, 
		                                                                        Byte[] txn_ts)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("scanning_job_id", scanning_job_id, SMALLINT, IN, p);
			csp("controlling_dt", controlling_dt, DATETIME, IN, p);
			csp("txn_ts", txn_ts, TIMESTAMP, IN, p);
			return p;
		}
		
public DataSet DeleteScanningJobsControllingDate(Int16? scanning_job_id, 
		                                                    DateTime? controlling_dt, 
		                                                    Byte[] txn_ts)
		{
			List<SqlParameter> prms = DeleteScanningJobsControllingDate_Params(scanning_job_id, controlling_dt, txn_ts);
			DataSet dset = esp("DeleteScanningJobsControllingDate", prms);

			return dset;
		}
		
public string DeleteScanningJobsControllingDateAsTask(Int16? scanning_job_id, 
		                                                            DateTime? controlling_dt, 
		                                                            Byte[] txn_ts)
		{
			List<SqlParameter> prms = DeleteScanningJobsControllingDate_Params(scanning_job_id, controlling_dt, txn_ts);
			return gps("DeleteScanningJobsControllingDate", prms);

		}
		
		
		
private List<SqlParameter> DeleteScanningJobsPeriod_Params(Int16? scanning_job_id, 
		                                                                DateTime? old_effective_from, 
		                                                                DateTime? old_effective_till)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("scanning_job_id", scanning_job_id, SMALLINT, IN, p);
			csp("old_effective_from", old_effective_from, DATETIME, IN, p);
			csp("old_effective_till", old_effective_till, DATETIME, IN, p);
			return p;
		}
		
public DataSet DeleteScanningJobsPeriod(Int16? scanning_job_id, 
		                                            DateTime? old_effective_from, 
		                                            DateTime? old_effective_till)
		{
			List<SqlParameter> prms = DeleteScanningJobsPeriod_Params(scanning_job_id, old_effective_from, old_effective_till);
			DataSet dset = esp("DeleteScanningJobsPeriod", prms);

			return dset;
		}
		
public string DeleteScanningJobsPeriodAsTask(Int16? scanning_job_id, 
		                                                DateTime? old_effective_from, 
		                                                DateTime? old_effective_till)
		{
			List<SqlParameter> prms = DeleteScanningJobsPeriod_Params(scanning_job_id, old_effective_from, old_effective_till);
			return gps("DeleteScanningJobsPeriod", prms);

		}
		
		
		
private List<SqlParameter> DeleteScanningSubJob_Params(Int16? scanning_sub_job_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("scanning_sub_job_id", scanning_sub_job_id, SMALLINT, IN, p);
			return p;
		}
		
public DataSet DeleteScanningSubJob(Int16? scanning_sub_job_id)
		{
			List<SqlParameter> prms = DeleteScanningSubJob_Params(scanning_sub_job_id);
			DataSet dset = esp("DeleteScanningSubJob", prms);

			return dset;
		}
		
public string DeleteScanningSubJobAsTask(Int16? scanning_sub_job_id)
		{
			List<SqlParameter> prms = DeleteScanningSubJob_Params(scanning_sub_job_id);
			return gps("DeleteScanningSubJob", prms);

		}
		
		
		
private List<SqlParameter> DeleteScanningSubJobsValidation_Params(Int16? recorded_sub_job_id, 
		                                                                        Int16? recording_sub_job_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("recorded_sub_job_id", recorded_sub_job_id, SMALLINT, IN, p);
			csp("recording_sub_job_id", recording_sub_job_id, SMALLINT, IN, p);
			return p;
		}
		
public DataSet DeleteScanningSubJobsValidation(Int16? recorded_sub_job_id, 
		                                                    Int16? recording_sub_job_id)
		{
			List<SqlParameter> prms = DeleteScanningSubJobsValidation_Params(recorded_sub_job_id, recording_sub_job_id);
			DataSet dset = esp("DeleteScanningSubJobsValidation", prms);

			return dset;
		}
		
public string DeleteScanningSubJobsValidationAsTask(Int16? recorded_sub_job_id, 
		                                                        Int16? recording_sub_job_id)
		{
			List<SqlParameter> prms = DeleteScanningSubJobsValidation_Params(recorded_sub_job_id, recording_sub_job_id);
			return gps("DeleteScanningSubJobsValidation", prms);

		}
		
		
		
private List<SqlParameter> DeleteScanningSubJobsValidCombination_Params(Int16? scanning_job_id, 
		                                                                            String old_valid_combination_sub_job_ids)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("scanning_job_id", scanning_job_id, SMALLINT, IN, p);
			csp("old_valid_combination_sub_job_ids", old_valid_combination_sub_job_ids, VARCHAR, IN, p);
			return p;
		}
		
public DataSet DeleteScanningSubJobsValidCombination(Int16? scanning_job_id, 
		                                                        String old_valid_combination_sub_job_ids)
		{
			List<SqlParameter> prms = DeleteScanningSubJobsValidCombination_Params(scanning_job_id, old_valid_combination_sub_job_ids);
			DataSet dset = esp("DeleteScanningSubJobsValidCombination", prms);

			return dset;
		}
		
public string DeleteScanningSubJobsValidCombinationAsTask(Int16? scanning_job_id, 
		                                                                String old_valid_combination_sub_job_ids)
		{
			List<SqlParameter> prms = DeleteScanningSubJobsValidCombination_Params(scanning_job_id, old_valid_combination_sub_job_ids);
			return gps("DeleteScanningSubJobsValidCombination", prms);

		}
		
		
		
private List<SqlParameter> DeleteSewa_Params(Int32? sewa_id, 
		                                                Int32? satsang_centre_id, 
		                                                Byte[] txn_ts)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("sewa_id", sewa_id, INT, IN, p);
			csp("satsang_centre_id", satsang_centre_id, INT, IN, p);
			csp("txn_ts", txn_ts, TIMESTAMP, IN, p);
			return p;
		}
		
public DataSet DeleteSewa(Int32? sewa_id, 
		                                Int32? satsang_centre_id, 
		                                Byte[] txn_ts)
		{
			List<SqlParameter> prms = DeleteSewa_Params(sewa_id, satsang_centre_id, txn_ts);
			DataSet dset = esp("DeleteSewa", prms);

			return dset;
		}
		
public string DeleteSewaAsTask(Int32? sewa_id, 
		                                    Int32? satsang_centre_id, 
		                                    Byte[] txn_ts)
		{
			List<SqlParameter> prms = DeleteSewa_Params(sewa_id, satsang_centre_id, txn_ts);
			return gps("DeleteSewa", prms);

		}
		
		
		
private List<SqlParameter> DeleteSewadar_Params(Int32? sewadar_id, 
		                                                    Byte[] txn_ts)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("sewadar_id", sewadar_id, INT, IN, p);
			csp("txn_ts", txn_ts, TIMESTAMP, IN, p);
			return p;
		}
		
public DataSet DeleteSewadar(Int32? sewadar_id, 
		                                Byte[] txn_ts)
		{
			List<SqlParameter> prms = DeleteSewadar_Params(sewadar_id, txn_ts);
			DataSet dset = esp("DeleteSewadar", prms);

			return dset;
		}
		
public string DeleteSewadarAsTask(Int32? sewadar_id, 
		                                        Byte[] txn_ts)
		{
			List<SqlParameter> prms = DeleteSewadar_Params(sewadar_id, txn_ts);
			return gps("DeleteSewadar", prms);

		}
		
		
		
private List<SqlParameter> DeleteSewadarApplication_Params(Int32? application_id, 
		                                                                Byte[] txn_ts)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("application_id", application_id, INT, IN, p);
			csp("txn_ts", txn_ts, TIMESTAMP, IN, p);
			return p;
		}
		
public DataSet DeleteSewadarApplication(Int32? application_id, 
		                                            Byte[] txn_ts)
		{
			List<SqlParameter> prms = DeleteSewadarApplication_Params(application_id, txn_ts);
			DataSet dset = esp("DeleteSewadarApplication", prms);

			return dset;
		}
		
public string DeleteSewadarApplicationAsTask(Int32? application_id, 
		                                                Byte[] txn_ts)
		{
			List<SqlParameter> prms = DeleteSewadarApplication_Params(application_id, txn_ts);
			return gps("DeleteSewadarApplication", prms);

		}
		
		
		
private List<SqlParameter> DeleteSewadarApplicationOtherDisabilitie_Params(Int32? sewadar_application_id, 
		                                                                                Int16? old_medical_disability_id, 
		                                                                                Int16? medical_disability_sq)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("sewadar_application_id", sewadar_application_id, INT, IN, p);
			csp("old_medical_disability_id", old_medical_disability_id, SMALLINT, IN, p);
			csp("medical_disability_sq", medical_disability_sq, SMALLINT, IN, p);
			return p;
		}
		
public DataSet DeleteSewadarApplicationOtherDisabilitie(Int32? sewadar_application_id, 
		                                                            Int16? old_medical_disability_id, 
		                                                            Int16? medical_disability_sq)
		{
			List<SqlParameter> prms = DeleteSewadarApplicationOtherDisabilitie_Params(sewadar_application_id, old_medical_disability_id, medical_disability_sq);
			DataSet dset = esp("DeleteSewadarApplicationOtherDisabilitie", prms);

			return dset;
		}
		
public string DeleteSewadarApplicationOtherDisabilitieAsTask(Int32? sewadar_application_id, 
		                                                                Int16? old_medical_disability_id, 
		                                                                Int16? medical_disability_sq)
		{
			List<SqlParameter> prms = DeleteSewadarApplicationOtherDisabilitie_Params(sewadar_application_id, old_medical_disability_id, medical_disability_sq);
			return gps("DeleteSewadarApplicationOtherDisabilitie", prms);

		}
		
		
		
private List<SqlParameter> DeleteSewadarApplicationQualification_Params(Int32? sewadar_application_id, 
		                                                                            Int16? qualification_sq, 
		                                                                            Int16? qualification_id, 
		                                                                            Int16? qlfctn_subject_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("sewadar_application_id", sewadar_application_id, INT, IN, p);
			csp("qualification_sq", qualification_sq, SMALLINT, IN, p);
			csp("qualification_id", qualification_id, SMALLINT, IN, p);
			csp("qlfctn_subject_id", qlfctn_subject_id, SMALLINT, IN, p);
			return p;
		}
		
public DataSet DeleteSewadarApplicationQualification(Int32? sewadar_application_id, 
		                                                        Int16? qualification_sq, 
		                                                        Int16? qualification_id, 
		                                                        Int16? qlfctn_subject_id)
		{
			List<SqlParameter> prms = DeleteSewadarApplicationQualification_Params(sewadar_application_id, qualification_sq, qualification_id, qlfctn_subject_id);
			DataSet dset = esp("DeleteSewadarApplicationQualification", prms);

			return dset;
		}
		
public string DeleteSewadarApplicationQualificationAsTask(Int32? sewadar_application_id, 
		                                                                Int16? qualification_sq, 
		                                                                Int16? qualification_id, 
		                                                                Int16? qlfctn_subject_id)
		{
			List<SqlParameter> prms = DeleteSewadarApplicationQualification_Params(sewadar_application_id, qualification_sq, qualification_id, qlfctn_subject_id);
			return gps("DeleteSewadarApplicationQualification", prms);

		}
		
		
		
private List<SqlParameter> DeleteSewadarApplicationSkill_Params(Int32? sewadar_application_id, 
		                                                                    Int16? old_skill_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("sewadar_application_id", sewadar_application_id, INT, IN, p);
			csp("old_skill_id", old_skill_id, SMALLINT, IN, p);
			return p;
		}
		
public DataSet DeleteSewadarApplicationSkill(Int32? sewadar_application_id, 
		                                                Int16? old_skill_id)
		{
			List<SqlParameter> prms = DeleteSewadarApplicationSkill_Params(sewadar_application_id, old_skill_id);
			DataSet dset = esp("DeleteSewadarApplicationSkill", prms);

			return dset;
		}
		
public string DeleteSewadarApplicationSkillAsTask(Int32? sewadar_application_id, 
		                                                        Int16? old_skill_id)
		{
			List<SqlParameter> prms = DeleteSewadarApplicationSkill_Params(sewadar_application_id, old_skill_id);
			return gps("DeleteSewadarApplicationSkill", prms);

		}
		
		
		
private List<SqlParameter> DeleteSewadarAttributes_Params(String sewadar_grno, 
		                                                                Int32? satsang_centre_id, 
		                                                                String attribute_group)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("sewadar_grno", sewadar_grno, CHAR, IN, p);
			csp("satsang_centre_id", satsang_centre_id, INT, IN, p);
			csp("attribute_group", attribute_group, VARCHAR, IN, p);
			return p;
		}
		
public DataSet DeleteSewadarAttributes(String sewadar_grno, 
		                                            Int32? satsang_centre_id, 
		                                            String attribute_group)
		{
			List<SqlParameter> prms = DeleteSewadarAttributes_Params(sewadar_grno, satsang_centre_id, attribute_group);
			DataSet dset = esp("DeleteSewadarAttributes", prms);

			return dset;
		}
		
public string DeleteSewadarAttributesAsTask(String sewadar_grno, 
		                                                Int32? satsang_centre_id, 
		                                                String attribute_group)
		{
			List<SqlParameter> prms = DeleteSewadarAttributes_Params(sewadar_grno, satsang_centre_id, attribute_group);
			return gps("DeleteSewadarAttributes", prms);

		}
		
		
		
private List<SqlParameter> DeleteSewadarsAddresse_Params(Int32? sewadar_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("sewadar_id", sewadar_id, INT, IN, p);
			return p;
		}
		
public DataSet DeleteSewadarsAddresse(Int32? sewadar_id)
		{
			List<SqlParameter> prms = DeleteSewadarsAddresse_Params(sewadar_id);
			DataSet dset = esp("DeleteSewadarsAddresse", prms);

			return dset;
		}
		
public string DeleteSewadarsAddresseAsTask(Int32? sewadar_id)
		{
			List<SqlParameter> prms = DeleteSewadarsAddresse_Params(sewadar_id);
			return gps("DeleteSewadarsAddresse", prms);

		}
		
		
		
private List<SqlParameter> DeleteSewadarsDetail_Params(Int32? sewadar_id, 
		                                                            Byte[] txn_ts)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("sewadar_id", sewadar_id, INT, IN, p);
			csp("txn_ts", txn_ts, TIMESTAMP, IN, p);
			return p;
		}
		
public DataSet DeleteSewadarsDetail(Int32? sewadar_id, 
		                                        Byte[] txn_ts)
		{
			List<SqlParameter> prms = DeleteSewadarsDetail_Params(sewadar_id, txn_ts);
			DataSet dset = esp("DeleteSewadarsDetail", prms);

			return dset;
		}
		
public string DeleteSewadarsDetailAsTask(Int32? sewadar_id, 
		                                            Byte[] txn_ts)
		{
			List<SqlParameter> prms = DeleteSewadarsDetail_Params(sewadar_id, txn_ts);
			return gps("DeleteSewadarsDetail", prms);

		}
		
		
		
private List<SqlParameter> DeleteSewadarsOtherDisabilities_Params(Int32? sewadar_id, 
		                                                                        Int16? old_medical_disability_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("sewadar_id", sewadar_id, INT, IN, p);
			csp("old_medical_disability_id", old_medical_disability_id, SMALLINT, IN, p);
			return p;
		}
		
public DataSet DeleteSewadarsOtherDisabilities(Int32? sewadar_id, 
		                                                    Int16? old_medical_disability_id)
		{
			List<SqlParameter> prms = DeleteSewadarsOtherDisabilities_Params(sewadar_id, old_medical_disability_id);
			DataSet dset = esp("DeleteSewadarsOtherDisabilities", prms);

			return dset;
		}
		
public string DeleteSewadarsOtherDisabilitiesAsTask(Int32? sewadar_id, 
		                                                        Int16? old_medical_disability_id)
		{
			List<SqlParameter> prms = DeleteSewadarsOtherDisabilities_Params(sewadar_id, old_medical_disability_id);
			return gps("DeleteSewadarsOtherDisabilities", prms);

		}
		
		
		
private List<SqlParameter> DeleteSewadarsParticular_Params(Int32? satsang_centre_id, 
		                                                                String sewadar_grno, 
		                                                                Byte[] txn_ts)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("satsang_centre_id", satsang_centre_id, INT, IN, p);
			csp("sewadar_grno", sewadar_grno, CHAR, IN, p);
			csp("txn_ts", txn_ts, TIMESTAMP, IN, p);
			return p;
		}
		
public DataSet DeleteSewadarsParticular(Int32? satsang_centre_id, 
		                                            String sewadar_grno, 
		                                            Byte[] txn_ts)
		{
			List<SqlParameter> prms = DeleteSewadarsParticular_Params(satsang_centre_id, sewadar_grno, txn_ts);
			DataSet dset = esp("DeleteSewadarsParticular", prms);

			return dset;
		}
		
public string DeleteSewadarsParticularAsTask(Int32? satsang_centre_id, 
		                                                String sewadar_grno, 
		                                                Byte[] txn_ts)
		{
			List<SqlParameter> prms = DeleteSewadarsParticular_Params(satsang_centre_id, sewadar_grno, txn_ts);
			return gps("DeleteSewadarsParticular", prms);

		}
		
		
		
private List<SqlParameter> DeleteSewadarsQualification_Params(Int32? sewadar_id, 
		                                                                    Int16? old_qualification_id, 
		                                                                    Int16? old_qualification_sq)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("sewadar_id", sewadar_id, INT, IN, p);
			csp("old_qualification_id", old_qualification_id, SMALLINT, IN, p);
			csp("old_qualification_sq", old_qualification_sq, SMALLINT, IN, p);
			return p;
		}
		
public DataSet DeleteSewadarsQualification(Int32? sewadar_id, 
		                                                Int16? old_qualification_id, 
		                                                Int16? old_qualification_sq)
		{
			List<SqlParameter> prms = DeleteSewadarsQualification_Params(sewadar_id, old_qualification_id, old_qualification_sq);
			DataSet dset = esp("DeleteSewadarsQualification", prms);

			return dset;
		}
		
public string DeleteSewadarsQualificationAsTask(Int32? sewadar_id, 
		                                                    Int16? old_qualification_id, 
		                                                    Int16? old_qualification_sq)
		{
			List<SqlParameter> prms = DeleteSewadarsQualification_Params(sewadar_id, old_qualification_id, old_qualification_sq);
			return gps("DeleteSewadarsQualification", prms);

		}
		
		
		
private List<SqlParameter> DeleteSewadarsRegistration_Params(Int32? satsang_centre_id, 
		                                                                String sewadar_grno, 
		                                                                Byte[] txn_ts)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("satsang_centre_id", satsang_centre_id, INT, IN, p);
			csp("sewadar_grno", sewadar_grno, CHAR, IN, p);
			csp("txn_ts", txn_ts, TIMESTAMP, IN, p);
			return p;
		}
		
public DataSet DeleteSewadarsRegistration(Int32? satsang_centre_id, 
		                                                String sewadar_grno, 
		                                                Byte[] txn_ts)
		{
			List<SqlParameter> prms = DeleteSewadarsRegistration_Params(satsang_centre_id, sewadar_grno, txn_ts);
			DataSet dset = esp("DeleteSewadarsRegistration", prms);

			return dset;
		}
		
public string DeleteSewadarsRegistrationAsTask(Int32? satsang_centre_id, 
		                                                    String sewadar_grno, 
		                                                    Byte[] txn_ts)
		{
			List<SqlParameter> prms = DeleteSewadarsRegistration_Params(satsang_centre_id, sewadar_grno, txn_ts);
			return gps("DeleteSewadarsRegistration", prms);

		}
		
		
		
private List<SqlParameter> DeleteSewadarsRemark_Params(Int32? sewadar_id, 
		                                                            String old_remarks_type, 
		                                                            Int16? old_remarks_sq)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("sewadar_id", sewadar_id, INT, IN, p);
			csp("old_remarks_type", old_remarks_type, VARCHAR, IN, p);
			csp("old_remarks_sq", old_remarks_sq, SMALLINT, IN, p);
			return p;
		}
		
public DataSet DeleteSewadarsRemark(Int32? sewadar_id, 
		                                        String old_remarks_type, 
		                                        Int16? old_remarks_sq)
		{
			List<SqlParameter> prms = DeleteSewadarsRemark_Params(sewadar_id, old_remarks_type, old_remarks_sq);
			DataSet dset = esp("DeleteSewadarsRemark", prms);

			return dset;
		}
		
public string DeleteSewadarsRemarkAsTask(Int32? sewadar_id, 
		                                            String old_remarks_type, 
		                                            Int16? old_remarks_sq)
		{
			List<SqlParameter> prms = DeleteSewadarsRemark_Params(sewadar_id, old_remarks_type, old_remarks_sq);
			return gps("DeleteSewadarsRemark", prms);

		}
		
		
		
private List<SqlParameter> DeleteSewadarsRemarksReference_Params(Int32? satsang_centre_id, 
		                                                                    DataTable sewadarIds)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("satsang_centre_id", satsang_centre_id, INT, IN, p);
			csp("sewadarIds", sewadarIds, STRUCTURED, IN, p);
			return p;
		}
		
public DataSet DeleteSewadarsRemarksReference(Int32? satsang_centre_id, 
		                                                    DataTable sewadarIds)
		{
			List<SqlParameter> prms = DeleteSewadarsRemarksReference_Params(satsang_centre_id, sewadarIds);
			DataSet dset = esp("DeleteSewadarsRemarksReference", prms);

			return dset;
		}
		
public string DeleteSewadarsRemarksReferenceAsTask(Int32? satsang_centre_id, 
		                                                        DataTable sewadarIds)
		{
			List<SqlParameter> prms = DeleteSewadarsRemarksReference_Params(satsang_centre_id, sewadarIds);
			return gps("DeleteSewadarsRemarksReference", prms);

		}
		
		
		
private List<SqlParameter> DeleteSewadarsSkill_Params(Int32? sewadar_id, 
		                                                            Int16? old_skill_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("sewadar_id", sewadar_id, INT, IN, p);
			csp("old_skill_id", old_skill_id, SMALLINT, IN, p);
			return p;
		}
		
public DataSet DeleteSewadarsSkill(Int32? sewadar_id, 
		                                        Int16? old_skill_id)
		{
			List<SqlParameter> prms = DeleteSewadarsSkill_Params(sewadar_id, old_skill_id);
			DataSet dset = esp("DeleteSewadarsSkill", prms);

			return dset;
		}
		
public string DeleteSewadarsSkillAsTask(Int32? sewadar_id, 
		                                            Int16? old_skill_id)
		{
			List<SqlParameter> prms = DeleteSewadarsSkill_Params(sewadar_id, old_skill_id);
			return gps("DeleteSewadarsSkill", prms);

		}
		
		
		
private List<SqlParameter> DeleteSewadarsTransfer_Params(Int32? satsang_centre_id, 
		                                                            String sewadar_grno, 
		                                                            DateTime? effective_dt, 
		                                                            Int16? old_department_id, 
		                                                            Int16? old_sub_department_id, 
		                                                            Int16? department_id, 
		                                                            Int16? sub_department_id, 
		                                                            String remarks, 
		                                                            Byte[] txn_ts)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("satsang_centre_id", satsang_centre_id, INT, IN, p);
			csp("sewadar_grno", sewadar_grno, CHAR, IN, p);
			csp("effective_dt", effective_dt, SMALLDATETIME, IN, p);
			csp("old_department_id", old_department_id, SMALLINT, IN, p);
			csp("old_sub_department_id", old_sub_department_id, SMALLINT, IN, p);
			csp("department_id", department_id, SMALLINT, IN, p);
			csp("sub_department_id", sub_department_id, SMALLINT, IN, p);
			csp("remarks", remarks, VARCHAR, IN, p);
			csp("txn_ts", txn_ts, TIMESTAMP, IN, p);
			return p;
		}
		
public DataSet DeleteSewadarsTransfer(Int32? satsang_centre_id, 
		                                            String sewadar_grno, 
		                                            DateTime? effective_dt, 
		                                            Int16? old_department_id, 
		                                            Int16? old_sub_department_id, 
		                                            Int16? department_id, 
		                                            Int16? sub_department_id, 
		                                            String remarks, 
		                                            Byte[] txn_ts)
		{
			List<SqlParameter> prms = DeleteSewadarsTransfer_Params(satsang_centre_id, sewadar_grno, effective_dt, old_department_id, old_sub_department_id, department_id, sub_department_id, remarks, txn_ts);
			DataSet dset = esp("DeleteSewadarsTransfer", prms);

			return dset;
		}
		
public string DeleteSewadarsTransferAsTask(Int32? satsang_centre_id, 
		                                                String sewadar_grno, 
		                                                DateTime? effective_dt, 
		                                                Int16? old_department_id, 
		                                                Int16? old_sub_department_id, 
		                                                Int16? department_id, 
		                                                Int16? sub_department_id, 
		                                                String remarks, 
		                                                Byte[] txn_ts)
		{
			List<SqlParameter> prms = DeleteSewadarsTransfer_Params(satsang_centre_id, sewadar_grno, effective_dt, old_department_id, old_sub_department_id, department_id, sub_department_id, remarks, txn_ts);
			return gps("DeleteSewadarsTransfer", prms);

		}
		
		
		
private List<SqlParameter> DeleteSewadarWiseSewaSummarie_Params(Int32? old_sewa_id, 
		                                                                    Int32? old_satsang_centre_id, 
		                                                                    String old_sewadar_grno)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("old_sewa_id", old_sewa_id, INT, IN, p);
			csp("old_satsang_centre_id", old_satsang_centre_id, INT, IN, p);
			csp("old_sewadar_grno", old_sewadar_grno, CHAR, IN, p);
			return p;
		}
		
public DataSet DeleteSewadarWiseSewaSummarie(Int32? old_sewa_id, 
		                                                Int32? old_satsang_centre_id, 
		                                                String old_sewadar_grno)
		{
			List<SqlParameter> prms = DeleteSewadarWiseSewaSummarie_Params(old_sewa_id, old_satsang_centre_id, old_sewadar_grno);
			DataSet dset = esp("DeleteSewadarWiseSewaSummarie", prms);

			return dset;
		}
		
public string DeleteSewadarWiseSewaSummarieAsTask(Int32? old_sewa_id, 
		                                                        Int32? old_satsang_centre_id, 
		                                                        String old_sewadar_grno)
		{
			List<SqlParameter> prms = DeleteSewadarWiseSewaSummarie_Params(old_sewa_id, old_satsang_centre_id, old_sewadar_grno);
			return gps("DeleteSewadarWiseSewaSummarie", prms);

		}
		
		
		
private List<SqlParameter> DeleteSewaExemption_Params(Int16? sewa_exemption_id, 
		                                                            Byte[] txn_ts)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("sewa_exemption_id", sewa_exemption_id, SMALLINT, IN, p);
			csp("txn_ts", txn_ts, TIMESTAMP, IN, p);
			return p;
		}
		
public DataSet DeleteSewaExemption(Int16? sewa_exemption_id, 
		                                        Byte[] txn_ts)
		{
			List<SqlParameter> prms = DeleteSewaExemption_Params(sewa_exemption_id, txn_ts);
			DataSet dset = esp("DeleteSewaExemption", prms);

			return dset;
		}
		
public string DeleteSewaExemptionAsTask(Int16? sewa_exemption_id, 
		                                            Byte[] txn_ts)
		{
			List<SqlParameter> prms = DeleteSewaExemption_Params(sewa_exemption_id, txn_ts);
			return gps("DeleteSewaExemption", prms);

		}
		
		
		
private List<SqlParameter> DeleteSewaExemptionsApplicableSewa_Params(Int16? sewa_exemption_id, 
		                                                                        Int32? old_sewa_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("sewa_exemption_id", sewa_exemption_id, SMALLINT, IN, p);
			csp("old_sewa_id", old_sewa_id, INT, IN, p);
			return p;
		}
		
public DataSet DeleteSewaExemptionsApplicableSewa(Int16? sewa_exemption_id, 
		                                                        Int32? old_sewa_id)
		{
			List<SqlParameter> prms = DeleteSewaExemptionsApplicableSewa_Params(sewa_exemption_id, old_sewa_id);
			DataSet dset = esp("DeleteSewaExemptionsApplicableSewa", prms);

			return dset;
		}
		
public string DeleteSewaExemptionsApplicableSewaAsTask(Int16? sewa_exemption_id, 
		                                                            Int32? old_sewa_id)
		{
			List<SqlParameter> prms = DeleteSewaExemptionsApplicableSewa_Params(sewa_exemption_id, old_sewa_id);
			return gps("DeleteSewaExemptionsApplicableSewa", prms);

		}
		
		
		
private List<SqlParameter> DeleteSewasPeriod_Params(Int32? sewa_id, 
		                                                        DateTime? old_start_dt, 
		                                                        DateTime? old_finish_dt)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("sewa_id", sewa_id, INT, IN, p);
			csp("old_start_dt", old_start_dt, SMALLDATETIME, IN, p);
			csp("old_finish_dt", old_finish_dt, SMALLDATETIME, IN, p);
			return p;
		}
		
public DataSet DeleteSewasPeriod(Int32? sewa_id, 
		                                    DateTime? old_start_dt, 
		                                    DateTime? old_finish_dt)
		{
			List<SqlParameter> prms = DeleteSewasPeriod_Params(sewa_id, old_start_dt, old_finish_dt);
			DataSet dset = esp("DeleteSewasPeriod", prms);

			return dset;
		}
		
public string DeleteSewasPeriodAsTask(Int32? sewa_id, 
		                                            DateTime? old_start_dt, 
		                                            DateTime? old_finish_dt)
		{
			List<SqlParameter> prms = DeleteSewasPeriod_Params(sewa_id, old_start_dt, old_finish_dt);
			return gps("DeleteSewasPeriod", prms);

		}
		
		
		
private List<SqlParameter> DeleteSewasSatsangCentre_Params(Int32? sewa_id, 
		                                                                Int32? satsang_centre_id, 
		                                                                Int32? old_satsang_centre_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("sewa_id", sewa_id, INT, IN, p);
			csp("satsang_centre_id", satsang_centre_id, INT, IN, p);
			csp("old_satsang_centre_id", old_satsang_centre_id, INT, IN, p);
			return p;
		}
		
public DataSet DeleteSewasSatsangCentre(Int32? sewa_id, 
		                                            Int32? satsang_centre_id, 
		                                            Int32? old_satsang_centre_id)
		{
			List<SqlParameter> prms = DeleteSewasSatsangCentre_Params(sewa_id, satsang_centre_id, old_satsang_centre_id);
			DataSet dset = esp("DeleteSewasSatsangCentre", prms);

			return dset;
		}
		
public string DeleteSewasSatsangCentreAsTask(Int32? sewa_id, 
		                                                Int32? satsang_centre_id, 
		                                                Int32? old_satsang_centre_id)
		{
			List<SqlParameter> prms = DeleteSewasSatsangCentre_Params(sewa_id, satsang_centre_id, old_satsang_centre_id);
			return gps("DeleteSewasSatsangCentre", prms);

		}
		
		
		
private List<SqlParameter> DeleteSewasSewaShift_Params(Int32? sewa_id, 
		                                                            String old_sewa_shift)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("sewa_id", sewa_id, INT, IN, p);
			csp("old_sewa_shift", old_sewa_shift, VARCHAR, IN, p);
			return p;
		}
		
public DataSet DeleteSewasSewaShift(Int32? sewa_id, 
		                                        String old_sewa_shift)
		{
			List<SqlParameter> prms = DeleteSewasSewaShift_Params(sewa_id, old_sewa_shift);
			DataSet dset = esp("DeleteSewasSewaShift", prms);

			return dset;
		}
		
public string DeleteSewasSewaShiftAsTask(Int32? sewa_id, 
		                                            String old_sewa_shift)
		{
			List<SqlParameter> prms = DeleteSewasSewaShift_Params(sewa_id, old_sewa_shift);
			return gps("DeleteSewasSewaShift", prms);

		}
		
		
		
private List<SqlParameter> DeleteSewasSewaShiftCombinations_Params(Int32? sewa_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("sewa_id", sewa_id, INT, IN, p);
			return p;
		}
		
public DataSet DeleteSewasSewaShiftCombinations(Int32? sewa_id)
		{
			List<SqlParameter> prms = DeleteSewasSewaShiftCombinations_Params(sewa_id);
			DataSet dset = esp("DeleteSewasSewaShiftCombinations", prms);

			return dset;
		}
		
public string DeleteSewasSewaShiftCombinationsAsTask(Int32? sewa_id)
		{
			List<SqlParameter> prms = DeleteSewasSewaShiftCombinations_Params(sewa_id);
			return gps("DeleteSewasSewaShiftCombinations", prms);

		}
		
		
		
private List<SqlParameter> DeleteSewaTeam_Params(Int32? sewa_team_id, 
		                                                    Byte[] txn_ts)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("sewa_team_id", sewa_team_id, INT, IN, p);
			csp("txn_ts", txn_ts, TIMESTAMP, IN, p);
			return p;
		}
		
public DataSet DeleteSewaTeam(Int32? sewa_team_id, 
		                                    Byte[] txn_ts)
		{
			List<SqlParameter> prms = DeleteSewaTeam_Params(sewa_team_id, txn_ts);
			DataSet dset = esp("DeleteSewaTeam", prms);

			return dset;
		}
		
public string DeleteSewaTeamAsTask(Int32? sewa_team_id, 
		                                        Byte[] txn_ts)
		{
			List<SqlParameter> prms = DeleteSewaTeam_Params(sewa_team_id, txn_ts);
			return gps("DeleteSewaTeam", prms);

		}
		
		
		
private List<SqlParameter> DeleteSewaTeamsTxnT_Params(Int32? sewa_team_id, 
		                                                            DateTime? attendance_dt, 
		                                                            Byte[] txn_ts)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("sewa_team_id", sewa_team_id, INT, IN, p);
			csp("attendance_dt", attendance_dt, SMALLDATETIME, IN, p);
			csp("txn_ts", txn_ts, TIMESTAMP, IN, p);
			return p;
		}
		
public DataSet DeleteSewaTeamsTxnT(Int32? sewa_team_id, 
		                                        DateTime? attendance_dt, 
		                                        Byte[] txn_ts)
		{
			List<SqlParameter> prms = DeleteSewaTeamsTxnT_Params(sewa_team_id, attendance_dt, txn_ts);
			DataSet dset = esp("DeleteSewaTeamsTxnT", prms);

			return dset;
		}
		
public string DeleteSewaTeamsTxnTAsTask(Int32? sewa_team_id, 
		                                            DateTime? attendance_dt, 
		                                            Byte[] txn_ts)
		{
			List<SqlParameter> prms = DeleteSewaTeamsTxnT_Params(sewa_team_id, attendance_dt, txn_ts);
			return gps("DeleteSewaTeamsTxnT", prms);

		}
		
		
		
private List<SqlParameter> DeleteSewaTeamWiseSewadar_Params(Int32? sewa_team_id, 
		                                                                Int32? old_serial_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("sewa_team_id", sewa_team_id, INT, IN, p);
			csp("old_serial_id", old_serial_id, INT, IN, p);
			return p;
		}
		
public DataSet DeleteSewaTeamWiseSewadar(Int32? sewa_team_id, 
		                                            Int32? old_serial_id)
		{
			List<SqlParameter> prms = DeleteSewaTeamWiseSewadar_Params(sewa_team_id, old_serial_id);
			DataSet dset = esp("DeleteSewaTeamWiseSewadar", prms);

			return dset;
		}
		
public string DeleteSewaTeamWiseSewadarAsTask(Int32? sewa_team_id, 
		                                                    Int32? old_serial_id)
		{
			List<SqlParameter> prms = DeleteSewaTeamWiseSewadar_Params(sewa_team_id, old_serial_id);
			return gps("DeleteSewaTeamWiseSewadar", prms);

		}
		
		
		
private List<SqlParameter> DeleteSpeakers_Params(Int32? speaker_id, 
		                                                    Int32? satsang_centre_id, 
		                                                    Byte[] txn_ts)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("speaker_id", speaker_id, INT, IN, p);
			csp("satsang_centre_id", satsang_centre_id, INT, IN, p);
			csp("txn_ts", txn_ts, TIMESTAMP, IN, p);
			return p;
		}
		
public DataSet DeleteSpeakers(Int32? speaker_id, 
		                                    Int32? satsang_centre_id, 
		                                    Byte[] txn_ts)
		{
			List<SqlParameter> prms = DeleteSpeakers_Params(speaker_id, satsang_centre_id, txn_ts);
			DataSet dset = esp("DeleteSpeakers", prms);

			return dset;
		}
		
public string DeleteSpeakersAsTask(Int32? speaker_id, 
		                                        Int32? satsang_centre_id, 
		                                        Byte[] txn_ts)
		{
			List<SqlParameter> prms = DeleteSpeakers_Params(speaker_id, satsang_centre_id, txn_ts);
			return gps("DeleteSpeakers", prms);

		}
		
		
		
private List<SqlParameter> DeleteSpeakersApprovalsRenewals_Params(Int32? speaker_id, 
		                                                                        String request_for_speaker_type, 
		                                                                        Boolean? is_approval, 
		                                                                        DateTime? approval_dt, 
		                                                                        DateTime? request_dt, 
		                                                                        String reference_no, 
		                                                                        DateTime? reference_dt, 
		                                                                        String audition_remarks, 
		                                                                        String review_remarks, 
		                                                                        Int32? review_sewadar_id, 
		                                                                        String review_non_sewadar_nm, 
		                                                                        String remarks, 
		                                                                        Byte[] txn_ts)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("speaker_id", speaker_id, INT, IN, p);
			csp("request_for_speaker_type", request_for_speaker_type, VARCHAR, IN, p);
			csp("is_approval", is_approval, BIT, IN, p);
			csp("approval_dt", approval_dt, DATE, IN, p);
			csp("request_dt", request_dt, DATE, IN, p);
			csp("reference_no", reference_no, VARCHAR, IN, p);
			csp("reference_dt", reference_dt, DATE, IN, p);
			csp("audition_remarks", audition_remarks, VARCHAR, IN, p);
			csp("review_remarks", review_remarks, VARCHAR, IN, p);
			csp("review_sewadar_id", review_sewadar_id, INT, IN, p);
			csp("review_non_sewadar_nm", review_non_sewadar_nm, VARCHAR, IN, p);
			csp("remarks", remarks, VARCHAR, IN, p);
			csp("txn_ts", txn_ts, TIMESTAMP, IN, p);
			return p;
		}
		
public DataSet DeleteSpeakersApprovalsRenewals(Int32? speaker_id, 
		                                                    String request_for_speaker_type, 
		                                                    Boolean? is_approval, 
		                                                    DateTime? approval_dt, 
		                                                    DateTime? request_dt, 
		                                                    String reference_no, 
		                                                    DateTime? reference_dt, 
		                                                    String audition_remarks, 
		                                                    String review_remarks, 
		                                                    Int32? review_sewadar_id, 
		                                                    String review_non_sewadar_nm, 
		                                                    String remarks, 
		                                                    Byte[] txn_ts)
		{
			List<SqlParameter> prms = DeleteSpeakersApprovalsRenewals_Params(speaker_id, request_for_speaker_type, is_approval, approval_dt, request_dt, reference_no, reference_dt, audition_remarks, review_remarks, review_sewadar_id, review_non_sewadar_nm, remarks, txn_ts);
			DataSet dset = esp("DeleteSpeakersApprovalsRenewals", prms);

			return dset;
		}
		
public string DeleteSpeakersApprovalsRenewalsAsTask(Int32? speaker_id, 
		                                                        String request_for_speaker_type, 
		                                                        Boolean? is_approval, 
		                                                        DateTime? approval_dt, 
		                                                        DateTime? request_dt, 
		                                                        String reference_no, 
		                                                        DateTime? reference_dt, 
		                                                        String audition_remarks, 
		                                                        String review_remarks, 
		                                                        Int32? review_sewadar_id, 
		                                                        String review_non_sewadar_nm, 
		                                                        String remarks, 
		                                                        Byte[] txn_ts)
		{
			List<SqlParameter> prms = DeleteSpeakersApprovalsRenewals_Params(speaker_id, request_for_speaker_type, is_approval, approval_dt, request_dt, reference_no, reference_dt, audition_remarks, review_remarks, review_sewadar_id, review_non_sewadar_nm, remarks, txn_ts);
			return gps("DeleteSpeakersApprovalsRenewals", prms);

		}
		
		
		
private List<SqlParameter> DeleteSpeakersTrainings_Params(Int32? speaker_id, 
		                                                                String training_for_speaker_type, 
		                                                                DateTime? training_dt, 
		                                                                Boolean? is_attended, 
		                                                                DateTime? request_dt, 
		                                                                String reference_no, 
		                                                                DateTime? reference_dt, 
		                                                                String remarks, 
		                                                                Byte[] txn_ts)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("speaker_id", speaker_id, INT, IN, p);
			csp("training_for_speaker_type", training_for_speaker_type, VARCHAR, IN, p);
			csp("training_dt", training_dt, DATE, IN, p);
			csp("is_attended", is_attended, BIT, IN, p);
			csp("request_dt", request_dt, DATE, IN, p);
			csp("reference_no", reference_no, VARCHAR, IN, p);
			csp("reference_dt", reference_dt, DATE, IN, p);
			csp("remarks", remarks, VARCHAR, IN, p);
			csp("txn_ts", txn_ts, TIMESTAMP, IN, p);
			return p;
		}
		
public DataSet DeleteSpeakersTrainings(Int32? speaker_id, 
		                                            String training_for_speaker_type, 
		                                            DateTime? training_dt, 
		                                            Boolean? is_attended, 
		                                            DateTime? request_dt, 
		                                            String reference_no, 
		                                            DateTime? reference_dt, 
		                                            String remarks, 
		                                            Byte[] txn_ts)
		{
			List<SqlParameter> prms = DeleteSpeakersTrainings_Params(speaker_id, training_for_speaker_type, training_dt, is_attended, request_dt, reference_no, reference_dt, remarks, txn_ts);
			DataSet dset = esp("DeleteSpeakersTrainings", prms);

			return dset;
		}
		
public string DeleteSpeakersTrainingsAsTask(Int32? speaker_id, 
		                                                String training_for_speaker_type, 
		                                                DateTime? training_dt, 
		                                                Boolean? is_attended, 
		                                                DateTime? request_dt, 
		                                                String reference_no, 
		                                                DateTime? reference_dt, 
		                                                String remarks, 
		                                                Byte[] txn_ts)
		{
			List<SqlParameter> prms = DeleteSpeakersTrainings_Params(speaker_id, training_for_speaker_type, training_dt, is_attended, request_dt, reference_no, reference_dt, remarks, txn_ts);
			return gps("DeleteSpeakersTrainings", prms);

		}
		
		
		
private List<SqlParameter> DeleteSubDepartment_Params(Int16? sub_department_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("sub_department_id", sub_department_id, SMALLINT, IN, p);
			return p;
		}
		
public DataSet DeleteSubDepartment(Int16? sub_department_id)
		{
			List<SqlParameter> prms = DeleteSubDepartment_Params(sub_department_id);
			DataSet dset = esp("DeleteSubDepartment", prms);

			return dset;
		}
		
public string DeleteSubDepartmentAsTask(Int16? sub_department_id)
		{
			List<SqlParameter> prms = DeleteSubDepartment_Params(sub_department_id);
			return gps("DeleteSubDepartment", prms);

		}
		
		
		
private List<SqlParameter> DeleteSubDepartmentsSatsangCentre_Params(Int16? sub_department_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("sub_department_id", sub_department_id, SMALLINT, IN, p);
			return p;
		}
		
public DataSet DeleteSubDepartmentsSatsangCentre(Int16? sub_department_id)
		{
			List<SqlParameter> prms = DeleteSubDepartmentsSatsangCentre_Params(sub_department_id);
			DataSet dset = esp("DeleteSubDepartmentsSatsangCentre", prms);

			return dset;
		}
		
public string DeleteSubDepartmentsSatsangCentreAsTask(Int16? sub_department_id)
		{
			List<SqlParameter> prms = DeleteSubDepartmentsSatsangCentre_Params(sub_department_id);
			return gps("DeleteSubDepartmentsSatsangCentre", prms);

		}
		
		
		
private List<SqlParameter> DeleteSystemInformationCodes_Params(String system_info_cd)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("system_info_cd", system_info_cd, VARCHAR, IN, p);
			return p;
		}
		
public DataSet DeleteSystemInformationCodes(String system_info_cd)
		{
			List<SqlParameter> prms = DeleteSystemInformationCodes_Params(system_info_cd);
			DataSet dset = esp("DeleteSystemInformationCodes", prms);

			return dset;
		}
		
public string DeleteSystemInformationCodesAsTask(String system_info_cd)
		{
			List<SqlParameter> prms = DeleteSystemInformationCodes_Params(system_info_cd);
			return gps("DeleteSystemInformationCodes", prms);

		}
		
		
		
private List<SqlParameter> DeleteSystemInformationValues_Params(String system_info_cd, 
		                                                                    String system_info_value)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("system_info_cd", system_info_cd, VARCHAR, IN, p);
			csp("system_info_value", system_info_value, VARCHAR, IN, p);
			return p;
		}
		
public DataSet DeleteSystemInformationValues(String system_info_cd, 
		                                                String system_info_value)
		{
			List<SqlParameter> prms = DeleteSystemInformationValues_Params(system_info_cd, system_info_value);
			DataSet dset = esp("DeleteSystemInformationValues", prms);

			return dset;
		}
		
public string DeleteSystemInformationValuesAsTask(String system_info_cd, 
		                                                        String system_info_value)
		{
			List<SqlParameter> prms = DeleteSystemInformationValues_Params(system_info_cd, system_info_value);
			return gps("DeleteSystemInformationValues", prms);

		}
		
		
		
private List<SqlParameter> DeleteTeamWiseDailyAttendance_Params(Int32? sewa_team_id, 
		                                                                    Int32? old_serial_id, 
		                                                                    DateTime? old_attendance_dt)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("sewa_team_id", sewa_team_id, INT, IN, p);
			csp("old_serial_id", old_serial_id, INT, IN, p);
			csp("old_attendance_dt", old_attendance_dt, SMALLDATETIME, IN, p);
			return p;
		}
		
public DataSet DeleteTeamWiseDailyAttendance(Int32? sewa_team_id, 
		                                                Int32? old_serial_id, 
		                                                DateTime? old_attendance_dt)
		{
			List<SqlParameter> prms = DeleteTeamWiseDailyAttendance_Params(sewa_team_id, old_serial_id, old_attendance_dt);
			DataSet dset = esp("DeleteTeamWiseDailyAttendance", prms);

			return dset;
		}
		
public string DeleteTeamWiseDailyAttendanceAsTask(Int32? sewa_team_id, 
		                                                        Int32? old_serial_id, 
		                                                        DateTime? old_attendance_dt)
		{
			List<SqlParameter> prms = DeleteTeamWiseDailyAttendance_Params(sewa_team_id, old_serial_id, old_attendance_dt);
			return gps("DeleteTeamWiseDailyAttendance", prms);

		}
		
		
		
private List<SqlParameter> DeleteUsersApplication_Params(String user_id, 
		                                                            String old_application_id, 
		                                                            String old_user_role_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("user_id", user_id, VARCHAR, IN, p);
			csp("old_application_id", old_application_id, CHAR, IN, p);
			csp("old_user_role_id", old_user_role_id, VARCHAR, IN, p);
			return p;
		}
		
public DataSet DeleteUsersApplication(String user_id, 
		                                            String old_application_id, 
		                                            String old_user_role_id)
		{
			List<SqlParameter> prms = DeleteUsersApplication_Params(user_id, old_application_id, old_user_role_id);
			DataSet dset = esp("DeleteUsersApplication", prms);

			return dset;
		}
		
public string DeleteUsersApplicationAsTask(String user_id, 
		                                                String old_application_id, 
		                                                String old_user_role_id)
		{
			List<SqlParameter> prms = DeleteUsersApplication_Params(user_id, old_application_id, old_user_role_id);
			return gps("DeleteUsersApplication", prms);

		}
		
		
		
private List<SqlParameter> DeleteWeeklySewaLocation_Params(Int32? weekly_sewa_location_id, 
		                                                                Byte[] txn_ts)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("weekly_sewa_location_id", weekly_sewa_location_id, INT, IN, p);
			csp("txn_ts", txn_ts, TIMESTAMP, IN, p);
			return p;
		}
		
public DataSet DeleteWeeklySewaLocation(Int32? weekly_sewa_location_id, 
		                                            Byte[] txn_ts)
		{
			List<SqlParameter> prms = DeleteWeeklySewaLocation_Params(weekly_sewa_location_id, txn_ts);
			DataSet dset = esp("DeleteWeeklySewaLocation", prms);

			return dset;
		}
		
public string DeleteWeeklySewaLocationAsTask(Int32? weekly_sewa_location_id, 
		                                                Byte[] txn_ts)
		{
			List<SqlParameter> prms = DeleteWeeklySewaLocation_Params(weekly_sewa_location_id, txn_ts);
			return gps("DeleteWeeklySewaLocation", prms);

		}
		
		
		
private List<SqlParameter> DelSewadarstxnts_Params(Int32? satsang_centre_id, 
		                                                        String sewadar_grno, 
		                                                        Int32? sewa_id, 
		                                                        String screen_id, 
		                                                        Byte[] txn_ts)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("satsang_centre_id", satsang_centre_id, INT, IN, p);
			csp("sewadar_grno", sewadar_grno, CHAR, IN, p);
			csp("sewa_id", sewa_id, INT, IN, p);
			csp("screen_id", screen_id, CHAR, IN, p);
			csp("txn_ts", txn_ts, TIMESTAMP, IN, p);
			return p;
		}
		
public DataSet DelSewadarstxnts(Int32? satsang_centre_id, 
		                                    String sewadar_grno, 
		                                    Int32? sewa_id, 
		                                    String screen_id, 
		                                    Byte[] txn_ts)
		{
			List<SqlParameter> prms = DelSewadarstxnts_Params(satsang_centre_id, sewadar_grno, sewa_id, screen_id, txn_ts);
			DataSet dset = esp("DelSewadarstxnts", prms);

			return dset;
		}
		
public string DelSewadarstxntsAsTask(Int32? satsang_centre_id, 
		                                        String sewadar_grno, 
		                                        Int32? sewa_id, 
		                                        String screen_id, 
		                                        Byte[] txn_ts)
		{
			List<SqlParameter> prms = DelSewadarstxnts_Params(satsang_centre_id, sewadar_grno, sewa_id, screen_id, txn_ts);
			return gps("DelSewadarstxnts", prms);

		}
		
		
		
		
		
		
		
private List<SqlParameter> DoesSewadarsParticularsExists_Params(Int32? satsang_centre_id, 
		                                                                    String sewadar_grno, 
		                                                                    ref String bExists)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("satsang_centre_id", satsang_centre_id, INT, IN, p);
			csp("sewadar_grno", sewadar_grno, CHAR, IN, p);
			csp("bExists", bExists, VARCHAR, INOUT, p);
			return p;
		}
		
public DataSet DoesSewadarsParticularsExists(Int32? satsang_centre_id, 
		                                                String sewadar_grno, 
		                                                ref String bExists)
		{
			List<SqlParameter> prms = DoesSewadarsParticularsExists_Params(satsang_centre_id, sewadar_grno, ref bExists);
			DataSet dset = esp("DoesSewadarsParticularsExists", prms);
			bExists = (System.String)prms.FirstOrDefault(p => p.ParameterName == "bExists").Value;

			return dset;
		}
		
public string DoesSewadarsParticularsExistsAsTask(Int32? satsang_centre_id, 
		                                                        String sewadar_grno, 
		                                                        ref String bExists)
		{
			List<SqlParameter> prms = DoesSewadarsParticularsExists_Params(satsang_centre_id, sewadar_grno, ref bExists);
			return gps("DoesSewadarsParticularsExists", prms);

		}
		
		
		
private List<SqlParameter> DropUser_Params(String user_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("user_id", user_id, VARCHAR, IN, p);
			return p;
		}
		
public DataSet DropUser(String user_id)
		{
			List<SqlParameter> prms = DropUser_Params(user_id);
			DataSet dset = esp("DropUser", prms);

			return dset;
		}
		
public string DropUserAsTask(String user_id)
		{
			List<SqlParameter> prms = DropUser_Params(user_id);
			return gps("DropUser", prms);

		}
		
		
		
private List<SqlParameter> ExportSewadarListsToZone_Params(String p_satsang_centre_nm, 
		                                                                String p_satsang_centre_alphabet)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_satsang_centre_nm", p_satsang_centre_nm, VARCHAR, IN, p);
			csp("p_satsang_centre_alphabet", p_satsang_centre_alphabet, CHAR, IN, p);
			return p;
		}
		
public DataSet ExportSewadarListsToZone(String p_satsang_centre_nm, 
		                                            String p_satsang_centre_alphabet)
		{
			List<SqlParameter> prms = ExportSewadarListsToZone_Params(p_satsang_centre_nm, p_satsang_centre_alphabet);
			DataSet dset = esp("ExportSewadarListsToZone", prms);

			return dset;
		}
		
public string ExportSewadarListsToZoneAsTask(String p_satsang_centre_nm, 
		                                                String p_satsang_centre_alphabet)
		{
			List<SqlParameter> prms = ExportSewadarListsToZone_Params(p_satsang_centre_nm, p_satsang_centre_alphabet);
			return gps("ExportSewadarListsToZone", prms);

		}
		
		
		
private List<SqlParameter> FillBulkSewadarList_Params(Int32? sewadar_list_id, 
		                                                            Int32? satsang_centre_id, 
		                                                            DataTable gr_no_list)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("sewadar_list_id", sewadar_list_id, INT, IN, p);
			csp("satsang_centre_id", satsang_centre_id, INT, IN, p);
			csp("gr_no_list", gr_no_list, STRUCTURED, IN, p);
			return p;
		}
		
public DataSet FillBulkSewadarList(Int32? sewadar_list_id, 
		                                        Int32? satsang_centre_id, 
		                                        DataTable gr_no_list)
		{
			List<SqlParameter> prms = FillBulkSewadarList_Params(sewadar_list_id, satsang_centre_id, gr_no_list);
			DataSet dset = esp("FillBulkSewadarList", prms);

			return dset;
		}
		
public string FillBulkSewadarListAsTask(Int32? sewadar_list_id, 
		                                            Int32? satsang_centre_id, 
		                                            DataTable gr_no_list)
		{
			List<SqlParameter> prms = FillBulkSewadarList_Params(sewadar_list_id, satsang_centre_id, gr_no_list);
			return gps("FillBulkSewadarList", prms);

		}
		
		
		
private List<SqlParameter> FillBulkTmpSewadarList_Params(String loc)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("loc", loc, VARCHAR, IN, p);
			return p;
		}
		
public DataSet FillBulkTmpSewadarList(String loc)
		{
			List<SqlParameter> prms = FillBulkTmpSewadarList_Params(loc);
			DataSet dset = esp("FillBulkTmpSewadarList", prms);

			return dset;
		}
		
public string FillBulkTmpSewadarListAsTask(String loc)
		{
			List<SqlParameter> prms = FillBulkTmpSewadarList_Params(loc);
			return gps("FillBulkTmpSewadarList", prms);

		}
		
		
		
private List<SqlParameter> FillMgrTmpSewadars_Params(String loc)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("loc", loc, VARCHAR, IN, p);
			return p;
		}
		
public DataSet FillMgrTmpSewadars(String loc)
		{
			List<SqlParameter> prms = FillMgrTmpSewadars_Params(loc);
			DataSet dset = esp("FillMgrTmpSewadars", prms);

			return dset;
		}
		
public string FillMgrTmpSewadarsAsTask(String loc)
		{
			List<SqlParameter> prms = FillMgrTmpSewadars_Params(loc);
			return gps("FillMgrTmpSewadars", prms);

		}
		
		
		
private List<SqlParameter> FnGetCountryId_Params(Int32? state_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("state_id", state_id, INT, IN, p);
			return p;
		}
		
public System.Int32? FnGetCountryId(Int32? state_id)
		{
			List<SqlParameter> prms = FnGetCountryId_Params(state_id);
			string commaSeparatedParameters = ObjDBManager.GetCommaSeparatedParameters(prms);
			Object obj = ObjDBManager.ExecuteScalar("SELECT dbo.FnGetCountryId(" + commaSeparatedParameters + ")");

			return (obj == null || obj == DBNull.Value) ? null : (System.Int32?)obj;
		}
		
		
		
private List<SqlParameter> FnGetCountryName_Params(Int32? state_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("state_id", state_id, INT, IN, p);
			return p;
		}
		
public System.String FnGetCountryName(Int32? state_id)
		{
			List<SqlParameter> prms = FnGetCountryName_Params(state_id);
			string commaSeparatedParameters = ObjDBManager.GetCommaSeparatedParameters(prms);
			Object obj = ObjDBManager.ExecuteScalar("SELECT dbo.FnGetCountryName(" + commaSeparatedParameters + ")");

			return obj == null || obj == DBNull.Value ? null : (System.String)obj;
		}
		
		
		
private List<SqlParameter> FnGetMaxSerialId_Params(Int32? sewa_team_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("sewa_team_id", sewa_team_id, INT, IN, p);
			return p;
		}
		
public System.Int32? FnGetMaxSerialId(Int32? sewa_team_id)
		{
			List<SqlParameter> prms = FnGetMaxSerialId_Params(sewa_team_id);
			string commaSeparatedParameters = ObjDBManager.GetCommaSeparatedParameters(prms);
			Object obj = ObjDBManager.ExecuteScalar("SELECT dbo.FnGetMaxSerialId(" + commaSeparatedParameters + ")");

			return (obj == null || obj == DBNull.Value) ? null : (System.Int32?)obj;
		}
		
		
		
private List<SqlParameter> FnGetSatsangCentreCode_Params(Int32? satsang_centre_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("satsang_centre_id", satsang_centre_id, INT, IN, p);
			return p;
		}
		
public System.String FnGetSatsangCentreCode(Int32? satsang_centre_id)
		{
			List<SqlParameter> prms = FnGetSatsangCentreCode_Params(satsang_centre_id);
			string commaSeparatedParameters = ObjDBManager.GetCommaSeparatedParameters(prms);
			Object obj = ObjDBManager.ExecuteScalar("SELECT dbo.FnGetSatsangCentreCode(" + commaSeparatedParameters + ")");

			return obj == null || obj == DBNull.Value ? null : (System.String)obj;
		}
		
		
		
private List<SqlParameter> FnGetSatsangCentreName_Params(Int32? satsang_centre_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("satsang_centre_id", satsang_centre_id, INT, IN, p);
			return p;
		}
		
public System.String FnGetSatsangCentreName(Int32? satsang_centre_id)
		{
			List<SqlParameter> prms = FnGetSatsangCentreName_Params(satsang_centre_id);
			string commaSeparatedParameters = ObjDBManager.GetCommaSeparatedParameters(prms);
			Object obj = ObjDBManager.ExecuteScalar("SELECT dbo.FnGetSatsangCentreName(" + commaSeparatedParameters + ")");

			return obj == null || obj == DBNull.Value ? null : (System.String)obj;
		}
		
		
		
private List<SqlParameter> FnGetStateId_Params(Int32? district_or_city_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("district_or_city_id", district_or_city_id, INT, IN, p);
			return p;
		}
		
public System.Int32? FnGetStateId(Int32? district_or_city_id)
		{
			List<SqlParameter> prms = FnGetStateId_Params(district_or_city_id);
			string commaSeparatedParameters = ObjDBManager.GetCommaSeparatedParameters(prms);
			Object obj = ObjDBManager.ExecuteScalar("SELECT dbo.FnGetStateId(" + commaSeparatedParameters + ")");

			return (obj == null || obj == DBNull.Value) ? null : (System.Int32?)obj;
		}
		
		
		
private List<SqlParameter> FnGetStateName_Params(Int32? district_or_city_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("district_or_city_id", district_or_city_id, INT, IN, p);
			return p;
		}
		
public System.String FnGetStateName(Int32? district_or_city_id)
		{
			List<SqlParameter> prms = FnGetStateName_Params(district_or_city_id);
			string commaSeparatedParameters = ObjDBManager.GetCommaSeparatedParameters(prms);
			Object obj = ObjDBManager.ExecuteScalar("SELECT dbo.FnGetStateName(" + commaSeparatedParameters + ")");

			return obj == null || obj == DBNull.Value ? null : (System.String)obj;
		}
		
		
		
private List<SqlParameter> FnGetSubJobName_Params(Int16? scanning_sub_job_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("scanning_sub_job_id", scanning_sub_job_id, SMALLINT, IN, p);
			return p;
		}
		
public System.String FnGetSubJobName(Int16? scanning_sub_job_id)
		{
			List<SqlParameter> prms = FnGetSubJobName_Params(scanning_sub_job_id);
			string commaSeparatedParameters = ObjDBManager.GetCommaSeparatedParameters(prms);
			Object obj = ObjDBManager.ExecuteScalar("SELECT dbo.FnGetSubJobName(" + commaSeparatedParameters + ")");

			return obj == null || obj == DBNull.Value ? null : (System.String)obj;
		}
		
		
		
private List<SqlParameter> FnSewadarTeamWiseDailyAttCount_Params(Int32? satsang_centre_id, 
		                                                                    String sewadar_grno, 
		                                                                    Int32? sewa_id, 
		                                                                    String attendance)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("satsang_centre_id", satsang_centre_id, INT, IN, p);
			csp("sewadar_grno", sewadar_grno, CHAR, IN, p);
			csp("sewa_id", sewa_id, INT, IN, p);
			csp("attendance", attendance, CHAR, IN, p);
			return p;
		}
		
public System.Int32? FnSewadarTeamWiseDailyAttCount(Int32? satsang_centre_id, 
		                                                        String sewadar_grno, 
		                                                        Int32? sewa_id, 
		                                                        String attendance)
		{
			List<SqlParameter> prms = FnSewadarTeamWiseDailyAttCount_Params(satsang_centre_id, sewadar_grno, sewa_id, attendance);
			string commaSeparatedParameters = ObjDBManager.GetCommaSeparatedParameters(prms);
			Object obj = ObjDBManager.ExecuteScalar("SELECT dbo.FnSewadarTeamWiseDailyAttCount(" + commaSeparatedParameters + ")");

			return (obj == null || obj == DBNull.Value) ? null : (System.Int32?)obj;
		}
		
		
		
private List<SqlParameter> FormatIntegerToString_Params(Int32? p_integer, 
		                                                            Byte? p_length)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_integer", p_integer, INT, IN, p);
			csp("p_length", p_length, TINYINT, IN, p);
			return p;
		}
		
public System.String FormatIntegerToString(Int32? p_integer, 
		                                                Byte? p_length)
		{
			List<SqlParameter> prms = FormatIntegerToString_Params(p_integer, p_length);
			string commaSeparatedParameters = ObjDBManager.GetCommaSeparatedParameters(prms);
			Object obj = ObjDBManager.ExecuteScalar("SELECT dbo.FormatIntegerToString(" + commaSeparatedParameters + ")");

			return obj == null || obj == DBNull.Value ? null : (System.String)obj;
		}
		
		
		
private List<SqlParameter> FormatNumber_Params(String p_number_str, 
		                                                    Int32? p_len)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_number_str", p_number_str, VARCHAR, IN, p);
			csp("p_len", p_len, INT, IN, p);
			return p;
		}
		
public System.String FormatNumber(String p_number_str, 
		                                        Int32? p_len)
		{
			List<SqlParameter> prms = FormatNumber_Params(p_number_str, p_len);
			string commaSeparatedParameters = ObjDBManager.GetCommaSeparatedParameters(prms);
			Object obj = ObjDBManager.ExecuteScalar("SELECT dbo.FormatNumber(" + commaSeparatedParameters + ")");

			return obj == null || obj == DBNull.Value ? null : (System.String)obj;
		}
		
		
		
private List<SqlParameter> FormatNumericToString_Params(Decimal? p_numeric, 
		                                                            Byte? p_length)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_numeric", p_numeric, DECIMAL, IN, p);
			csp("p_length", p_length, TINYINT, IN, p);
			return p;
		}
		
public System.String FormatNumericToString(Decimal? p_numeric, 
		                                                Byte? p_length)
		{
			List<SqlParameter> prms = FormatNumericToString_Params(p_numeric, p_length);
			string commaSeparatedParameters = ObjDBManager.GetCommaSeparatedParameters(prms);
			Object obj = ObjDBManager.ExecuteScalar("SELECT dbo.FormatNumericToString(" + commaSeparatedParameters + ")");

			return obj == null || obj == DBNull.Value ? null : (System.String)obj;
		}
		
		
		
private List<SqlParameter> GenerateAreaWiseSewadarList_Params(Int32? p_satsang_centre_id, 
		                                                                    String p_satsang_centre_nm, 
		                                                                    String p_department_ids, 
		                                                                    String p_sub_department_ids, 
		                                                                    String p_is_outstation, 
		                                                                    String p_gender, 
		                                                                    Int32? p_area_id, 
		                                                                    String p_area_nm, 
		                                                                    DateTime? p_date_from, 
		                                                                    DateTime? p_date_till, 
		                                                                    Int32? p_sewadar_list_id, 
		                                                                    String p_is_contact_no, 
		                                                                    String p_is_summary, 
		                                                                    ref Int32 p_session_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_satsang_centre_id", p_satsang_centre_id, INT, IN, p);
			csp("p_satsang_centre_nm", p_satsang_centre_nm, VARCHAR, IN, p);
			csp("p_department_ids", p_department_ids, VARCHAR, IN, p);
			csp("p_sub_department_ids", p_sub_department_ids, VARCHAR, IN, p);
			csp("p_is_outstation", p_is_outstation, VARCHAR, IN, p);
			csp("p_gender", p_gender, VARCHAR, IN, p);
			csp("p_area_id", p_area_id, INT, IN, p);
			csp("p_area_nm", p_area_nm, VARCHAR, IN, p);
			csp("p_date_from", p_date_from, DATETIME, IN, p);
			csp("p_date_till", p_date_till, DATETIME, IN, p);
			csp("p_sewadar_list_id", p_sewadar_list_id, INT, IN, p);
			csp("p_is_contact_no", p_is_contact_no, VARCHAR, IN, p);
			csp("p_is_summary", p_is_summary, VARCHAR, IN, p);
			csp("p_session_id", p_session_id, INT, INOUT, p);
			return p;
		}
		
public DataSet GenerateAreaWiseSewadarList(Int32? p_satsang_centre_id, 
		                                                String p_satsang_centre_nm, 
		                                                String p_department_ids, 
		                                                String p_sub_department_ids, 
		                                                String p_is_outstation, 
		                                                String p_gender, 
		                                                Int32? p_area_id, 
		                                                String p_area_nm, 
		                                                DateTime? p_date_from, 
		                                                DateTime? p_date_till, 
		                                                Int32? p_sewadar_list_id, 
		                                                String p_is_contact_no, 
		                                                String p_is_summary, 
		                                                ref Int32 p_session_id)
		{
			List<SqlParameter> prms = GenerateAreaWiseSewadarList_Params(p_satsang_centre_id, p_satsang_centre_nm, p_department_ids, p_sub_department_ids, p_is_outstation, p_gender, p_area_id, p_area_nm, p_date_from, p_date_till, p_sewadar_list_id, p_is_contact_no, p_is_summary, ref p_session_id);
			DataSet dset = esp("GenerateAreaWiseSewadarList", prms);
			p_session_id = (System.Int32)prms.FirstOrDefault(p => p.ParameterName == "p_session_id").Value;

			return dset;
		}
		
public string GenerateAreaWiseSewadarListAsTask(Int32? p_satsang_centre_id, 
		                                                    String p_satsang_centre_nm, 
		                                                    String p_department_ids, 
		                                                    String p_sub_department_ids, 
		                                                    String p_is_outstation, 
		                                                    String p_gender, 
		                                                    Int32? p_area_id, 
		                                                    String p_area_nm, 
		                                                    DateTime? p_date_from, 
		                                                    DateTime? p_date_till, 
		                                                    Int32? p_sewadar_list_id, 
		                                                    String p_is_contact_no, 
		                                                    String p_is_summary, 
		                                                    ref Int32 p_session_id)
		{
			List<SqlParameter> prms = GenerateAreaWiseSewadarList_Params(p_satsang_centre_id, p_satsang_centre_nm, p_department_ids, p_sub_department_ids, p_is_outstation, p_gender, p_area_id, p_area_nm, p_date_from, p_date_till, p_sewadar_list_id, p_is_contact_no, p_is_summary, ref p_session_id);
			return gps("GenerateAreaWiseSewadarList", prms);

		}
		
		
		
private List<SqlParameter> GenerateAttndncCompletedTillDate_Params(Int32? p_sewa_id, 
		                                                                        DateTime? p_to_sewa_dt, 
		                                                                        String p_is_summary, 
		                                                                        ref Int32 p_session_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_sewa_id", p_sewa_id, INT, IN, p);
			csp("p_to_sewa_dt", p_to_sewa_dt, DATETIME, IN, p);
			csp("p_is_summary", p_is_summary, VARCHAR, IN, p);
			csp("p_session_id", p_session_id, INT, INOUT, p);
			return p;
		}
		
public DataSet GenerateAttndncCompletedTillDate(Int32? p_sewa_id, 
		                                                    DateTime? p_to_sewa_dt, 
		                                                    String p_is_summary, 
		                                                    ref Int32 p_session_id)
		{
			List<SqlParameter> prms = GenerateAttndncCompletedTillDate_Params(p_sewa_id, p_to_sewa_dt, p_is_summary, ref p_session_id);
			DataSet dset = esp("GenerateAttndncCompletedTillDate", prms);
			p_session_id = (System.Int32)prms.FirstOrDefault(p => p.ParameterName == "p_session_id").Value;

			return dset;
		}
		
public string GenerateAttndncCompletedTillDateAsTask(Int32? p_sewa_id, 
		                                                        DateTime? p_to_sewa_dt, 
		                                                        String p_is_summary, 
		                                                        ref Int32 p_session_id)
		{
			List<SqlParameter> prms = GenerateAttndncCompletedTillDate_Params(p_sewa_id, p_to_sewa_dt, p_is_summary, ref p_session_id);
			return gps("GenerateAttndncCompletedTillDate", prms);

		}
		
		
		
private List<SqlParameter> GenerateAttndncSummryBtwnRange_Params(Int32? p_satsang_centre_id, 
		                                                                    String p_department_ids, 
		                                                                    String p_sub_department_ids, 
		                                                                    String p_is_outstation, 
		                                                                    String p_gender, 
		                                                                    Int32? p_sewa_id, 
		                                                                    DateTime? p_from_sewa_dt, 
		                                                                    DateTime? p_to_sewa_dt, 
		                                                                    Int32? p_area_id, 
		                                                                    String p_area_nm, 
		                                                                    String p_exclude_previous_day_outstation_sewadars, 
		                                                                    String p_is_summary, 
		                                                                    ref Int32 p_session_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_satsang_centre_id", p_satsang_centre_id, INT, IN, p);
			csp("p_department_ids", p_department_ids, VARCHAR, IN, p);
			csp("p_sub_department_ids", p_sub_department_ids, VARCHAR, IN, p);
			csp("p_is_outstation", p_is_outstation, VARCHAR, IN, p);
			csp("p_gender", p_gender, VARCHAR, IN, p);
			csp("p_sewa_id", p_sewa_id, INT, IN, p);
			csp("p_from_sewa_dt", p_from_sewa_dt, DATETIME, IN, p);
			csp("p_to_sewa_dt", p_to_sewa_dt, DATETIME, IN, p);
			csp("p_area_id", p_area_id, INT, IN, p);
			csp("p_area_nm", p_area_nm, VARCHAR, IN, p);
			csp("p_exclude_previous_day_outstation_sewadars", p_exclude_previous_day_outstation_sewadars, VARCHAR, IN, p);
			csp("p_is_summary", p_is_summary, VARCHAR, IN, p);
			csp("p_session_id", p_session_id, INT, INOUT, p);
			return p;
		}
		
public DataSet GenerateAttndncSummryBtwnRange(Int32? p_satsang_centre_id, 
		                                                    String p_department_ids, 
		                                                    String p_sub_department_ids, 
		                                                    String p_is_outstation, 
		                                                    String p_gender, 
		                                                    Int32? p_sewa_id, 
		                                                    DateTime? p_from_sewa_dt, 
		                                                    DateTime? p_to_sewa_dt, 
		                                                    Int32? p_area_id, 
		                                                    String p_area_nm, 
		                                                    String p_exclude_previous_day_outstation_sewadars, 
		                                                    String p_is_summary, 
		                                                    ref Int32 p_session_id)
		{
			List<SqlParameter> prms = GenerateAttndncSummryBtwnRange_Params(p_satsang_centre_id, p_department_ids, p_sub_department_ids, p_is_outstation, p_gender, p_sewa_id, p_from_sewa_dt, p_to_sewa_dt, p_area_id, p_area_nm, p_exclude_previous_day_outstation_sewadars, p_is_summary, ref p_session_id);
			DataSet dset = esp("GenerateAttndncSummryBtwnRange", prms);
			p_session_id = (System.Int32)prms.FirstOrDefault(p => p.ParameterName == "p_session_id").Value;

			return dset;
		}
		
public string GenerateAttndncSummryBtwnRangeAsTask(Int32? p_satsang_centre_id, 
		                                                        String p_department_ids, 
		                                                        String p_sub_department_ids, 
		                                                        String p_is_outstation, 
		                                                        String p_gender, 
		                                                        Int32? p_sewa_id, 
		                                                        DateTime? p_from_sewa_dt, 
		                                                        DateTime? p_to_sewa_dt, 
		                                                        Int32? p_area_id, 
		                                                        String p_area_nm, 
		                                                        String p_exclude_previous_day_outstation_sewadars, 
		                                                        String p_is_summary, 
		                                                        ref Int32 p_session_id)
		{
			List<SqlParameter> prms = GenerateAttndncSummryBtwnRange_Params(p_satsang_centre_id, p_department_ids, p_sub_department_ids, p_is_outstation, p_gender, p_sewa_id, p_from_sewa_dt, p_to_sewa_dt, p_area_id, p_area_nm, p_exclude_previous_day_outstation_sewadars, p_is_summary, ref p_session_id);
			return gps("GenerateAttndncSummryBtwnRange", prms);

		}
		
		
		
private List<SqlParameter> GenerateAttndncSummryBtwnRangeAreaWise_Params(Int32? p_satsang_centre_id, 
		                                                                            String p_department_ids, 
		                                                                            String p_sub_department_ids, 
		                                                                            String p_is_outstation, 
		                                                                            String p_gender, 
		                                                                            Int32? p_sewa_id, 
		                                                                            DateTime? p_from_sewa_dt, 
		                                                                            DateTime? p_to_sewa_dt, 
		                                                                            Int32? p_area_id, 
		                                                                            String p_area_nm, 
		                                                                            String p_exclude_previous_day_outstation_sewadars, 
		                                                                            String p_is_summary, 
		                                                                            ref Int32 p_session_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_satsang_centre_id", p_satsang_centre_id, INT, IN, p);
			csp("p_department_ids", p_department_ids, VARCHAR, IN, p);
			csp("p_sub_department_ids", p_sub_department_ids, VARCHAR, IN, p);
			csp("p_is_outstation", p_is_outstation, VARCHAR, IN, p);
			csp("p_gender", p_gender, VARCHAR, IN, p);
			csp("p_sewa_id", p_sewa_id, INT, IN, p);
			csp("p_from_sewa_dt", p_from_sewa_dt, DATETIME, IN, p);
			csp("p_to_sewa_dt", p_to_sewa_dt, DATETIME, IN, p);
			csp("p_area_id", p_area_id, INT, IN, p);
			csp("p_area_nm", p_area_nm, VARCHAR, IN, p);
			csp("p_exclude_previous_day_outstation_sewadars", p_exclude_previous_day_outstation_sewadars, VARCHAR, IN, p);
			csp("p_is_summary", p_is_summary, VARCHAR, IN, p);
			csp("p_session_id", p_session_id, INT, INOUT, p);
			return p;
		}
		
public DataSet GenerateAttndncSummryBtwnRangeAreaWise(Int32? p_satsang_centre_id, 
		                                                            String p_department_ids, 
		                                                            String p_sub_department_ids, 
		                                                            String p_is_outstation, 
		                                                            String p_gender, 
		                                                            Int32? p_sewa_id, 
		                                                            DateTime? p_from_sewa_dt, 
		                                                            DateTime? p_to_sewa_dt, 
		                                                            Int32? p_area_id, 
		                                                            String p_area_nm, 
		                                                            String p_exclude_previous_day_outstation_sewadars, 
		                                                            String p_is_summary, 
		                                                            ref Int32 p_session_id)
		{
			List<SqlParameter> prms = GenerateAttndncSummryBtwnRangeAreaWise_Params(p_satsang_centre_id, p_department_ids, p_sub_department_ids, p_is_outstation, p_gender, p_sewa_id, p_from_sewa_dt, p_to_sewa_dt, p_area_id, p_area_nm, p_exclude_previous_day_outstation_sewadars, p_is_summary, ref p_session_id);
			DataSet dset = esp("GenerateAttndncSummryBtwnRangeAreaWise", prms);
			p_session_id = (System.Int32)prms.FirstOrDefault(p => p.ParameterName == "p_session_id").Value;

			return dset;
		}
		
public string GenerateAttndncSummryBtwnRangeAreaWiseAsTask(Int32? p_satsang_centre_id, 
		                                                                String p_department_ids, 
		                                                                String p_sub_department_ids, 
		                                                                String p_is_outstation, 
		                                                                String p_gender, 
		                                                                Int32? p_sewa_id, 
		                                                                DateTime? p_from_sewa_dt, 
		                                                                DateTime? p_to_sewa_dt, 
		                                                                Int32? p_area_id, 
		                                                                String p_area_nm, 
		                                                                String p_exclude_previous_day_outstation_sewadars, 
		                                                                String p_is_summary, 
		                                                                ref Int32 p_session_id)
		{
			List<SqlParameter> prms = GenerateAttndncSummryBtwnRangeAreaWise_Params(p_satsang_centre_id, p_department_ids, p_sub_department_ids, p_is_outstation, p_gender, p_sewa_id, p_from_sewa_dt, p_to_sewa_dt, p_area_id, p_area_nm, p_exclude_previous_day_outstation_sewadars, p_is_summary, ref p_session_id);
			return gps("GenerateAttndncSummryBtwnRangeAreaWise", prms);

		}
		
		
		
private List<SqlParameter> GenerateBadgesNotPrintedList_Params(Int32? p_satsang_centre_id, 
		                                                                    String p_satsang_centre_nm, 
		                                                                    DateTime? p_start_dt, 
		                                                                    DateTime? p_finish_dt, 
		                                                                    String p_gender, 
		                                                                    Int32? p_start_time, 
		                                                                    Int32? p_finish_time, 
		                                                                    String p_badge_template_id, 
		                                                                    String p_badge_template_nm, 
		                                                                    DateTime? p_photo_taken_after, 
		                                                                    String p_is_outstation, 
		                                                                    ref Int32 p_session_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_satsang_centre_id", p_satsang_centre_id, INT, IN, p);
			csp("p_satsang_centre_nm", p_satsang_centre_nm, VARCHAR, IN, p);
			csp("p_start_dt", p_start_dt, SMALLDATETIME, IN, p);
			csp("p_finish_dt", p_finish_dt, SMALLDATETIME, IN, p);
			csp("p_gender", p_gender, VARCHAR, IN, p);
			csp("p_start_time", p_start_time, INT, IN, p);
			csp("p_finish_time", p_finish_time, INT, IN, p);
			csp("p_badge_template_id", p_badge_template_id, VARCHAR, IN, p);
			csp("p_badge_template_nm", p_badge_template_nm, VARCHAR, IN, p);
			csp("p_photo_taken_after", p_photo_taken_after, SMALLDATETIME, IN, p);
			csp("p_is_outstation", p_is_outstation, VARCHAR, IN, p);
			csp("p_session_id", p_session_id, INT, INOUT, p);
			return p;
		}
		
public DataSet GenerateBadgesNotPrintedList(Int32? p_satsang_centre_id, 
		                                                String p_satsang_centre_nm, 
		                                                DateTime? p_start_dt, 
		                                                DateTime? p_finish_dt, 
		                                                String p_gender, 
		                                                Int32? p_start_time, 
		                                                Int32? p_finish_time, 
		                                                String p_badge_template_id, 
		                                                String p_badge_template_nm, 
		                                                DateTime? p_photo_taken_after, 
		                                                String p_is_outstation, 
		                                                ref Int32 p_session_id)
		{
			List<SqlParameter> prms = GenerateBadgesNotPrintedList_Params(p_satsang_centre_id, p_satsang_centre_nm, p_start_dt, p_finish_dt, p_gender, p_start_time, p_finish_time, p_badge_template_id, p_badge_template_nm, p_photo_taken_after, p_is_outstation, ref p_session_id);
			DataSet dset = esp("GenerateBadgesNotPrintedList", prms);
			p_session_id = (System.Int32)prms.FirstOrDefault(p => p.ParameterName == "p_session_id").Value;

			return dset;
		}
		
public string GenerateBadgesNotPrintedListAsTask(Int32? p_satsang_centre_id, 
		                                                    String p_satsang_centre_nm, 
		                                                    DateTime? p_start_dt, 
		                                                    DateTime? p_finish_dt, 
		                                                    String p_gender, 
		                                                    Int32? p_start_time, 
		                                                    Int32? p_finish_time, 
		                                                    String p_badge_template_id, 
		                                                    String p_badge_template_nm, 
		                                                    DateTime? p_photo_taken_after, 
		                                                    String p_is_outstation, 
		                                                    ref Int32 p_session_id)
		{
			List<SqlParameter> prms = GenerateBadgesNotPrintedList_Params(p_satsang_centre_id, p_satsang_centre_nm, p_start_dt, p_finish_dt, p_gender, p_start_time, p_finish_time, p_badge_template_id, p_badge_template_nm, p_photo_taken_after, p_is_outstation, ref p_session_id);
			return gps("GenerateBadgesNotPrintedList", prms);

		}
		
		
		
private List<SqlParameter> GenerateBadgesNotReturnedSewadars_Params(Int32? p_satsang_centre_id, 
		                                                                        String p_satsang_centre_nm, 
		                                                                        String p_department_ids, 
		                                                                        String p_sub_department_ids, 
		                                                                        String p_is_outstation, 
		                                                                        String p_gender, 
		                                                                        Int32? p_sewadar_list_id, 
		                                                                        DateTime? p_photo_after_dt, 
		                                                                        ref Int32 p_session_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_satsang_centre_id", p_satsang_centre_id, INT, IN, p);
			csp("p_satsang_centre_nm", p_satsang_centre_nm, VARCHAR, IN, p);
			csp("p_department_ids", p_department_ids, VARCHAR, IN, p);
			csp("p_sub_department_ids", p_sub_department_ids, VARCHAR, IN, p);
			csp("p_is_outstation", p_is_outstation, VARCHAR, IN, p);
			csp("p_gender", p_gender, VARCHAR, IN, p);
			csp("p_sewadar_list_id", p_sewadar_list_id, INT, IN, p);
			csp("p_photo_after_dt", p_photo_after_dt, DATETIME, IN, p);
			csp("p_session_id", p_session_id, INT, INOUT, p);
			return p;
		}
		
public DataSet GenerateBadgesNotReturnedSewadars(Int32? p_satsang_centre_id, 
		                                                    String p_satsang_centre_nm, 
		                                                    String p_department_ids, 
		                                                    String p_sub_department_ids, 
		                                                    String p_is_outstation, 
		                                                    String p_gender, 
		                                                    Int32? p_sewadar_list_id, 
		                                                    DateTime? p_photo_after_dt, 
		                                                    ref Int32 p_session_id)
		{
			List<SqlParameter> prms = GenerateBadgesNotReturnedSewadars_Params(p_satsang_centre_id, p_satsang_centre_nm, p_department_ids, p_sub_department_ids, p_is_outstation, p_gender, p_sewadar_list_id, p_photo_after_dt, ref p_session_id);
			DataSet dset = esp("GenerateBadgesNotReturnedSewadars", prms);
			p_session_id = (System.Int32)prms.FirstOrDefault(p => p.ParameterName == "p_session_id").Value;

			return dset;
		}
		
public string GenerateBadgesNotReturnedSewadarsAsTask(Int32? p_satsang_centre_id, 
		                                                            String p_satsang_centre_nm, 
		                                                            String p_department_ids, 
		                                                            String p_sub_department_ids, 
		                                                            String p_is_outstation, 
		                                                            String p_gender, 
		                                                            Int32? p_sewadar_list_id, 
		                                                            DateTime? p_photo_after_dt, 
		                                                            ref Int32 p_session_id)
		{
			List<SqlParameter> prms = GenerateBadgesNotReturnedSewadars_Params(p_satsang_centre_id, p_satsang_centre_nm, p_department_ids, p_sub_department_ids, p_is_outstation, p_gender, p_sewadar_list_id, p_photo_after_dt, ref p_session_id);
			return gps("GenerateBadgesNotReturnedSewadars", prms);

		}
		
		
		
private List<SqlParameter> GenerateBadgesPrintedList_Params(Int32? p_satsang_centre_id, 
		                                                                String p_satsang_centre_nm, 
		                                                                DateTime? p_start_dt, 
		                                                                DateTime? p_finish_dt, 
		                                                                String p_gender, 
		                                                                Int32? p_start_time, 
		                                                                Int32? p_finish_time, 
		                                                                String p_badge_template_id, 
		                                                                String p_badge_template_nm, 
		                                                                Int32? p_sewadar_list_id, 
		                                                                ref Int32 p_session_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_satsang_centre_id", p_satsang_centre_id, INT, IN, p);
			csp("p_satsang_centre_nm", p_satsang_centre_nm, VARCHAR, IN, p);
			csp("p_start_dt", p_start_dt, SMALLDATETIME, IN, p);
			csp("p_finish_dt", p_finish_dt, SMALLDATETIME, IN, p);
			csp("p_gender", p_gender, VARCHAR, IN, p);
			csp("p_start_time", p_start_time, INT, IN, p);
			csp("p_finish_time", p_finish_time, INT, IN, p);
			csp("p_badge_template_id", p_badge_template_id, VARCHAR, IN, p);
			csp("p_badge_template_nm", p_badge_template_nm, VARCHAR, IN, p);
			csp("p_sewadar_list_id", p_sewadar_list_id, INT, IN, p);
			csp("p_session_id", p_session_id, INT, INOUT, p);
			return p;
		}
		
public DataSet GenerateBadgesPrintedList(Int32? p_satsang_centre_id, 
		                                            String p_satsang_centre_nm, 
		                                            DateTime? p_start_dt, 
		                                            DateTime? p_finish_dt, 
		                                            String p_gender, 
		                                            Int32? p_start_time, 
		                                            Int32? p_finish_time, 
		                                            String p_badge_template_id, 
		                                            String p_badge_template_nm, 
		                                            Int32? p_sewadar_list_id, 
		                                            ref Int32 p_session_id)
		{
			List<SqlParameter> prms = GenerateBadgesPrintedList_Params(p_satsang_centre_id, p_satsang_centre_nm, p_start_dt, p_finish_dt, p_gender, p_start_time, p_finish_time, p_badge_template_id, p_badge_template_nm, p_sewadar_list_id, ref p_session_id);
			DataSet dset = esp("GenerateBadgesPrintedList", prms);
			p_session_id = (System.Int32)prms.FirstOrDefault(p => p.ParameterName == "p_session_id").Value;

			return dset;
		}
		
public string GenerateBadgesPrintedListAsTask(Int32? p_satsang_centre_id, 
		                                                    String p_satsang_centre_nm, 
		                                                    DateTime? p_start_dt, 
		                                                    DateTime? p_finish_dt, 
		                                                    String p_gender, 
		                                                    Int32? p_start_time, 
		                                                    Int32? p_finish_time, 
		                                                    String p_badge_template_id, 
		                                                    String p_badge_template_nm, 
		                                                    Int32? p_sewadar_list_id, 
		                                                    ref Int32 p_session_id)
		{
			List<SqlParameter> prms = GenerateBadgesPrintedList_Params(p_satsang_centre_id, p_satsang_centre_nm, p_start_dt, p_finish_dt, p_gender, p_start_time, p_finish_time, p_badge_template_id, p_badge_template_nm, p_sewadar_list_id, ref p_session_id);
			return gps("GenerateBadgesPrintedList", prms);

		}
		
		
		
private List<SqlParameter> GenerateBulkRegistrationReport_Params(Int32? p_satsang_centre_id, 
		                                                                    String p_satsang_centre_nm, 
		                                                                    Int32? p_sewadar_list_id, 
		                                                                    ref Int32 p_session_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_satsang_centre_id", p_satsang_centre_id, INT, IN, p);
			csp("p_satsang_centre_nm", p_satsang_centre_nm, VARCHAR, IN, p);
			csp("p_sewadar_list_id", p_sewadar_list_id, INT, IN, p);
			csp("p_session_id", p_session_id, INT, INOUT, p);
			return p;
		}
		
public DataSet GenerateBulkRegistrationReport(Int32? p_satsang_centre_id, 
		                                                    String p_satsang_centre_nm, 
		                                                    Int32? p_sewadar_list_id, 
		                                                    ref Int32 p_session_id)
		{
			List<SqlParameter> prms = GenerateBulkRegistrationReport_Params(p_satsang_centre_id, p_satsang_centre_nm, p_sewadar_list_id, ref p_session_id);
			DataSet dset = esp("GenerateBulkRegistrationReport", prms);
			p_session_id = (System.Int32)prms.FirstOrDefault(p => p.ParameterName == "p_session_id").Value;

			return dset;
		}
		
public string GenerateBulkRegistrationReportAsTask(Int32? p_satsang_centre_id, 
		                                                        String p_satsang_centre_nm, 
		                                                        Int32? p_sewadar_list_id, 
		                                                        ref Int32 p_session_id)
		{
			List<SqlParameter> prms = GenerateBulkRegistrationReport_Params(p_satsang_centre_id, p_satsang_centre_nm, p_sewadar_list_id, ref p_session_id);
			return gps("GenerateBulkRegistrationReport", prms);

		}
		
		
		
private List<SqlParameter> GenerateCityWiseSewadarList_Params(Int32? p_satsang_centre_id, 
		                                                                    String p_satsang_centre_nm, 
		                                                                    String p_country_ids, 
		                                                                    String p_state_ids, 
		                                                                    String p_district_ids, 
		                                                                    String p_po_or_city_ids, 
		                                                                    String p_gender, 
		                                                                    Int32? p_sewadar_list_id, 
		                                                                    String p_is_summary, 
		                                                                    ref Int32 p_session_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_satsang_centre_id", p_satsang_centre_id, INT, IN, p);
			csp("p_satsang_centre_nm", p_satsang_centre_nm, VARCHAR, IN, p);
			csp("p_country_ids", p_country_ids, VARCHAR, IN, p);
			csp("p_state_ids", p_state_ids, VARCHAR, IN, p);
			csp("p_district_ids", p_district_ids, VARCHAR, IN, p);
			csp("p_po_or_city_ids", p_po_or_city_ids, VARCHAR, IN, p);
			csp("p_gender", p_gender, VARCHAR, IN, p);
			csp("p_sewadar_list_id", p_sewadar_list_id, INT, IN, p);
			csp("p_is_summary", p_is_summary, VARCHAR, IN, p);
			csp("p_session_id", p_session_id, INT, INOUT, p);
			return p;
		}
		
public DataSet GenerateCityWiseSewadarList(Int32? p_satsang_centre_id, 
		                                                String p_satsang_centre_nm, 
		                                                String p_country_ids, 
		                                                String p_state_ids, 
		                                                String p_district_ids, 
		                                                String p_po_or_city_ids, 
		                                                String p_gender, 
		                                                Int32? p_sewadar_list_id, 
		                                                String p_is_summary, 
		                                                ref Int32 p_session_id)
		{
			List<SqlParameter> prms = GenerateCityWiseSewadarList_Params(p_satsang_centre_id, p_satsang_centre_nm, p_country_ids, p_state_ids, p_district_ids, p_po_or_city_ids, p_gender, p_sewadar_list_id, p_is_summary, ref p_session_id);
			DataSet dset = esp("GenerateCityWiseSewadarList", prms);
			p_session_id = (System.Int32)prms.FirstOrDefault(p => p.ParameterName == "p_session_id").Value;

			return dset;
		}
		
public string GenerateCityWiseSewadarListAsTask(Int32? p_satsang_centre_id, 
		                                                    String p_satsang_centre_nm, 
		                                                    String p_country_ids, 
		                                                    String p_state_ids, 
		                                                    String p_district_ids, 
		                                                    String p_po_or_city_ids, 
		                                                    String p_gender, 
		                                                    Int32? p_sewadar_list_id, 
		                                                    String p_is_summary, 
		                                                    ref Int32 p_session_id)
		{
			List<SqlParameter> prms = GenerateCityWiseSewadarList_Params(p_satsang_centre_id, p_satsang_centre_nm, p_country_ids, p_state_ids, p_district_ids, p_po_or_city_ids, p_gender, p_sewadar_list_id, p_is_summary, ref p_session_id);
			return gps("GenerateCityWiseSewadarList", prms);

		}
		
		
		
private List<SqlParameter> GenerateCnstrctnAttndncSummary_Params(Int32? p_sewa_id, 
		                                                                    DateTime? p_start_dt, 
		                                                                    DateTime? p_finish_dt, 
		                                                                    ref Int32 p_session_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_sewa_id", p_sewa_id, INT, IN, p);
			csp("p_start_dt", p_start_dt, DATETIME, IN, p);
			csp("p_finish_dt", p_finish_dt, DATETIME, IN, p);
			csp("p_session_id", p_session_id, INT, INOUT, p);
			return p;
		}
		
public DataSet GenerateCnstrctnAttndncSummary(Int32? p_sewa_id, 
		                                                    DateTime? p_start_dt, 
		                                                    DateTime? p_finish_dt, 
		                                                    ref Int32 p_session_id)
		{
			List<SqlParameter> prms = GenerateCnstrctnAttndncSummary_Params(p_sewa_id, p_start_dt, p_finish_dt, ref p_session_id);
			DataSet dset = esp("GenerateCnstrctnAttndncSummary", prms);
			p_session_id = (System.Int32)prms.FirstOrDefault(p => p.ParameterName == "p_session_id").Value;

			return dset;
		}
		
public string GenerateCnstrctnAttndncSummaryAsTask(Int32? p_sewa_id, 
		                                                        DateTime? p_start_dt, 
		                                                        DateTime? p_finish_dt, 
		                                                        ref Int32 p_session_id)
		{
			List<SqlParameter> prms = GenerateCnstrctnAttndncSummary_Params(p_sewa_id, p_start_dt, p_finish_dt, ref p_session_id);
			return gps("GenerateCnstrctnAttndncSummary", prms);

		}
		
		
		
private List<SqlParameter> GenerateConstructionAttendance_Params(Int32? p_sewa_id, 
		                                                                    String p_sewa_shift, 
		                                                                    DateTime? p_sewa_dt, 
		                                                                    String p_is_summary, 
		                                                                    ref Int32 p_session_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_sewa_id", p_sewa_id, INT, IN, p);
			csp("p_sewa_shift", p_sewa_shift, VARCHAR, IN, p);
			csp("p_sewa_dt", p_sewa_dt, SMALLDATETIME, IN, p);
			csp("p_is_summary", p_is_summary, VARCHAR, IN, p);
			csp("p_session_id", p_session_id, INT, INOUT, p);
			return p;
		}
		
public DataSet GenerateConstructionAttendance(Int32? p_sewa_id, 
		                                                    String p_sewa_shift, 
		                                                    DateTime? p_sewa_dt, 
		                                                    String p_is_summary, 
		                                                    ref Int32 p_session_id)
		{
			List<SqlParameter> prms = GenerateConstructionAttendance_Params(p_sewa_id, p_sewa_shift, p_sewa_dt, p_is_summary, ref p_session_id);
			DataSet dset = esp("GenerateConstructionAttendance", prms);
			p_session_id = (System.Int32)prms.FirstOrDefault(p => p.ParameterName == "p_session_id").Value;

			return dset;
		}
		
public string GenerateConstructionAttendanceAsTask(Int32? p_sewa_id, 
		                                                        String p_sewa_shift, 
		                                                        DateTime? p_sewa_dt, 
		                                                        String p_is_summary, 
		                                                        ref Int32 p_session_id)
		{
			List<SqlParameter> prms = GenerateConstructionAttendance_Params(p_sewa_id, p_sewa_shift, p_sewa_dt, p_is_summary, ref p_session_id);
			return gps("GenerateConstructionAttendance", prms);

		}
		
		
		
private List<SqlParameter> GenerateCountryWiseSewadarList_Params(Int32? p_satsang_centre_id, 
		                                                                    String p_satsang_centre_nm, 
		                                                                    String p_country_ids, 
		                                                                    String p_gender, 
		                                                                    Int32? p_sewadar_list_id, 
		                                                                    String p_is_summary, 
		                                                                    ref Int32 p_session_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_satsang_centre_id", p_satsang_centre_id, INT, IN, p);
			csp("p_satsang_centre_nm", p_satsang_centre_nm, VARCHAR, IN, p);
			csp("p_country_ids", p_country_ids, VARCHAR, IN, p);
			csp("p_gender", p_gender, VARCHAR, IN, p);
			csp("p_sewadar_list_id", p_sewadar_list_id, INT, IN, p);
			csp("p_is_summary", p_is_summary, VARCHAR, IN, p);
			csp("p_session_id", p_session_id, INT, INOUT, p);
			return p;
		}
		
public DataSet GenerateCountryWiseSewadarList(Int32? p_satsang_centre_id, 
		                                                    String p_satsang_centre_nm, 
		                                                    String p_country_ids, 
		                                                    String p_gender, 
		                                                    Int32? p_sewadar_list_id, 
		                                                    String p_is_summary, 
		                                                    ref Int32 p_session_id)
		{
			List<SqlParameter> prms = GenerateCountryWiseSewadarList_Params(p_satsang_centre_id, p_satsang_centre_nm, p_country_ids, p_gender, p_sewadar_list_id, p_is_summary, ref p_session_id);
			DataSet dset = esp("GenerateCountryWiseSewadarList", prms);
			p_session_id = (System.Int32)prms.FirstOrDefault(p => p.ParameterName == "p_session_id").Value;

			return dset;
		}
		
public string GenerateCountryWiseSewadarListAsTask(Int32? p_satsang_centre_id, 
		                                                        String p_satsang_centre_nm, 
		                                                        String p_country_ids, 
		                                                        String p_gender, 
		                                                        Int32? p_sewadar_list_id, 
		                                                        String p_is_summary, 
		                                                        ref Int32 p_session_id)
		{
			List<SqlParameter> prms = GenerateCountryWiseSewadarList_Params(p_satsang_centre_id, p_satsang_centre_nm, p_country_ids, p_gender, p_sewadar_list_id, p_is_summary, ref p_session_id);
			return gps("GenerateCountryWiseSewadarList", prms);

		}
		
		
		
private List<SqlParameter> GenerateCreditSpecsSummary_Params(Int32? p_credit_specification_id, 
		                                                                String p_credit_specification_nm, 
		                                                                String p_gender, 
		                                                                String p_department_ids, 
		                                                                ref Int32 p_session_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_credit_specification_id", p_credit_specification_id, INT, IN, p);
			csp("p_credit_specification_nm", p_credit_specification_nm, VARCHAR, IN, p);
			csp("p_gender", p_gender, VARCHAR, IN, p);
			csp("p_department_ids", p_department_ids, VARCHAR, IN, p);
			csp("p_session_id", p_session_id, INT, INOUT, p);
			return p;
		}
		
public DataSet GenerateCreditSpecsSummary(Int32? p_credit_specification_id, 
		                                                String p_credit_specification_nm, 
		                                                String p_gender, 
		                                                String p_department_ids, 
		                                                ref Int32 p_session_id)
		{
			List<SqlParameter> prms = GenerateCreditSpecsSummary_Params(p_credit_specification_id, p_credit_specification_nm, p_gender, p_department_ids, ref p_session_id);
			DataSet dset = esp("GenerateCreditSpecsSummary", prms);
			p_session_id = (System.Int32)prms.FirstOrDefault(p => p.ParameterName == "p_session_id").Value;

			return dset;
		}
		
public string GenerateCreditSpecsSummaryAsTask(Int32? p_credit_specification_id, 
		                                                    String p_credit_specification_nm, 
		                                                    String p_gender, 
		                                                    String p_department_ids, 
		                                                    ref Int32 p_session_id)
		{
			List<SqlParameter> prms = GenerateCreditSpecsSummary_Params(p_credit_specification_id, p_credit_specification_nm, p_gender, p_department_ids, ref p_session_id);
			return gps("GenerateCreditSpecsSummary", prms);

		}
		
		
		
private List<SqlParameter> GenerateDailyAttendanceList_Params(Int32? p_satsang_centre_id, 
		                                                                    Int32? p_sewa_id, 
		                                                                    DateTime? p_start_dt, 
		                                                                    DateTime? p_finish_dt, 
		                                                                    String p_department_ids, 
		                                                                    String p_sub_department_ids, 
		                                                                    String p_is_outstation, 
		                                                                    String p_gender, 
		                                                                    String p_is_absentees_only, 
		                                                                    String p_is_summary, 
		                                                                    ref Int32 p_session_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_satsang_centre_id", p_satsang_centre_id, INT, IN, p);
			csp("p_sewa_id", p_sewa_id, INT, IN, p);
			csp("p_start_dt", p_start_dt, SMALLDATETIME, IN, p);
			csp("p_finish_dt", p_finish_dt, SMALLDATETIME, IN, p);
			csp("p_department_ids", p_department_ids, VARCHAR, IN, p);
			csp("p_sub_department_ids", p_sub_department_ids, VARCHAR, IN, p);
			csp("p_is_outstation", p_is_outstation, VARCHAR, IN, p);
			csp("p_gender", p_gender, VARCHAR, IN, p);
			csp("p_is_absentees_only", p_is_absentees_only, VARCHAR, IN, p);
			csp("p_is_summary", p_is_summary, VARCHAR, IN, p);
			csp("p_session_id", p_session_id, INT, INOUT, p);
			return p;
		}
		
public DataSet GenerateDailyAttendanceList(Int32? p_satsang_centre_id, 
		                                                Int32? p_sewa_id, 
		                                                DateTime? p_start_dt, 
		                                                DateTime? p_finish_dt, 
		                                                String p_department_ids, 
		                                                String p_sub_department_ids, 
		                                                String p_is_outstation, 
		                                                String p_gender, 
		                                                String p_is_absentees_only, 
		                                                String p_is_summary, 
		                                                ref Int32 p_session_id)
		{
			List<SqlParameter> prms = GenerateDailyAttendanceList_Params(p_satsang_centre_id, p_sewa_id, p_start_dt, p_finish_dt, p_department_ids, p_sub_department_ids, p_is_outstation, p_gender, p_is_absentees_only, p_is_summary, ref p_session_id);
			DataSet dset = esp("GenerateDailyAttendanceList", prms);
			p_session_id = (System.Int32)prms.FirstOrDefault(p => p.ParameterName == "p_session_id").Value;

			return dset;
		}
		
public string GenerateDailyAttendanceListAsTask(Int32? p_satsang_centre_id, 
		                                                    Int32? p_sewa_id, 
		                                                    DateTime? p_start_dt, 
		                                                    DateTime? p_finish_dt, 
		                                                    String p_department_ids, 
		                                                    String p_sub_department_ids, 
		                                                    String p_is_outstation, 
		                                                    String p_gender, 
		                                                    String p_is_absentees_only, 
		                                                    String p_is_summary, 
		                                                    ref Int32 p_session_id)
		{
			List<SqlParameter> prms = GenerateDailyAttendanceList_Params(p_satsang_centre_id, p_sewa_id, p_start_dt, p_finish_dt, p_department_ids, p_sub_department_ids, p_is_outstation, p_gender, p_is_absentees_only, p_is_summary, ref p_session_id);
			return gps("GenerateDailyAttendanceList", prms);

		}
		
		
		
private List<SqlParameter> GenerateDailyDeptWiseSummary_Params(Int32? p_sewa_id, 
		                                                                    DateTime? p_sewa_dt, 
		                                                                    String p_is_shift_wise, 
		                                                                    ref Int32 p_session_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_sewa_id", p_sewa_id, INT, IN, p);
			csp("p_sewa_dt", p_sewa_dt, DATETIME, IN, p);
			csp("p_is_shift_wise", p_is_shift_wise, VARCHAR, IN, p);
			csp("p_session_id", p_session_id, INT, INOUT, p);
			return p;
		}
		
public DataSet GenerateDailyDeptWiseSummary(Int32? p_sewa_id, 
		                                                DateTime? p_sewa_dt, 
		                                                String p_is_shift_wise, 
		                                                ref Int32 p_session_id)
		{
			List<SqlParameter> prms = GenerateDailyDeptWiseSummary_Params(p_sewa_id, p_sewa_dt, p_is_shift_wise, ref p_session_id);
			DataSet dset = esp("GenerateDailyDeptWiseSummary", prms);
			p_session_id = (System.Int32)prms.FirstOrDefault(p => p.ParameterName == "p_session_id").Value;

			return dset;
		}
		
public string GenerateDailyDeptWiseSummaryAsTask(Int32? p_sewa_id, 
		                                                    DateTime? p_sewa_dt, 
		                                                    String p_is_shift_wise, 
		                                                    ref Int32 p_session_id)
		{
			List<SqlParameter> prms = GenerateDailyDeptWiseSummary_Params(p_sewa_id, p_sewa_dt, p_is_shift_wise, ref p_session_id);
			return gps("GenerateDailyDeptWiseSummary", prms);

		}
		
		
		
private List<SqlParameter> GenerateDailySewaTurnOut_Params(Int32? p_sewa_id, 
		                                                                String p_statuses, 
		                                                                String p_is_outstation, 
		                                                                String p_gender, 
		                                                                ref Int32 p_session_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_sewa_id", p_sewa_id, INT, IN, p);
			csp("p_statuses", p_statuses, VARCHAR, IN, p);
			csp("p_is_outstation", p_is_outstation, VARCHAR, IN, p);
			csp("p_gender", p_gender, VARCHAR, IN, p);
			csp("p_session_id", p_session_id, INT, INOUT, p);
			return p;
		}
		
public DataSet GenerateDailySewaTurnOut(Int32? p_sewa_id, 
		                                            String p_statuses, 
		                                            String p_is_outstation, 
		                                            String p_gender, 
		                                            ref Int32 p_session_id)
		{
			List<SqlParameter> prms = GenerateDailySewaTurnOut_Params(p_sewa_id, p_statuses, p_is_outstation, p_gender, ref p_session_id);
			DataSet dset = esp("GenerateDailySewaTurnOut", prms);
			p_session_id = (System.Int32)prms.FirstOrDefault(p => p.ParameterName == "p_session_id").Value;

			return dset;
		}
		
public string GenerateDailySewaTurnOutAsTask(Int32? p_sewa_id, 
		                                                String p_statuses, 
		                                                String p_is_outstation, 
		                                                String p_gender, 
		                                                ref Int32 p_session_id)
		{
			List<SqlParameter> prms = GenerateDailySewaTurnOut_Params(p_sewa_id, p_statuses, p_is_outstation, p_gender, ref p_session_id);
			return gps("GenerateDailySewaTurnOut", prms);

		}
		
		
		
private List<SqlParameter> GenerateDataMigrationReport_Params(Int32? p_satsang_centre_id, 
		                                                                    String p_satsang_centre_nm, 
		                                                                    Int32? p_sewadar_list_id, 
		                                                                    ref Int32 p_session_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_satsang_centre_id", p_satsang_centre_id, INT, IN, p);
			csp("p_satsang_centre_nm", p_satsang_centre_nm, VARCHAR, IN, p);
			csp("p_sewadar_list_id", p_sewadar_list_id, INT, IN, p);
			csp("p_session_id", p_session_id, INT, INOUT, p);
			return p;
		}
		
public DataSet GenerateDataMigrationReport(Int32? p_satsang_centre_id, 
		                                                String p_satsang_centre_nm, 
		                                                Int32? p_sewadar_list_id, 
		                                                ref Int32 p_session_id)
		{
			List<SqlParameter> prms = GenerateDataMigrationReport_Params(p_satsang_centre_id, p_satsang_centre_nm, p_sewadar_list_id, ref p_session_id);
			DataSet dset = esp("GenerateDataMigrationReport", prms);
			p_session_id = (System.Int32)prms.FirstOrDefault(p => p.ParameterName == "p_session_id").Value;

			return dset;
		}
		
public string GenerateDataMigrationReportAsTask(Int32? p_satsang_centre_id, 
		                                                    String p_satsang_centre_nm, 
		                                                    Int32? p_sewadar_list_id, 
		                                                    ref Int32 p_session_id)
		{
			List<SqlParameter> prms = GenerateDataMigrationReport_Params(p_satsang_centre_id, p_satsang_centre_nm, p_sewadar_list_id, ref p_session_id);
			return gps("GenerateDataMigrationReport", prms);

		}
		
		
		
private List<SqlParameter> GenerateDepartmentsList_Params(Int32? p_satsang_centre_id, 
		                                                                String p_satsang_centre_nm, 
		                                                                String p_split_by_gender, 
		                                                                ref Int32 p_session_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_satsang_centre_id", p_satsang_centre_id, INT, IN, p);
			csp("p_satsang_centre_nm", p_satsang_centre_nm, VARCHAR, IN, p);
			csp("p_split_by_gender", p_split_by_gender, VARCHAR, IN, p);
			csp("p_session_id", p_session_id, INT, INOUT, p);
			return p;
		}
		
public DataSet GenerateDepartmentsList(Int32? p_satsang_centre_id, 
		                                            String p_satsang_centre_nm, 
		                                            String p_split_by_gender, 
		                                            ref Int32 p_session_id)
		{
			List<SqlParameter> prms = GenerateDepartmentsList_Params(p_satsang_centre_id, p_satsang_centre_nm, p_split_by_gender, ref p_session_id);
			DataSet dset = esp("GenerateDepartmentsList", prms);
			p_session_id = (System.Int32)prms.FirstOrDefault(p => p.ParameterName == "p_session_id").Value;

			return dset;
		}
		
public string GenerateDepartmentsListAsTask(Int32? p_satsang_centre_id, 
		                                                String p_satsang_centre_nm, 
		                                                String p_split_by_gender, 
		                                                ref Int32 p_session_id)
		{
			List<SqlParameter> prms = GenerateDepartmentsList_Params(p_satsang_centre_id, p_satsang_centre_nm, p_split_by_gender, ref p_session_id);
			return gps("GenerateDepartmentsList", prms);

		}
		
		
		
private List<SqlParameter> GenerateDstrctWiseSewadarList_Params(Int32? p_satsang_centre_id, 
		                                                                    String p_satsang_centre_nm, 
		                                                                    String p_country_ids, 
		                                                                    String p_state_ids, 
		                                                                    String p_district_ids, 
		                                                                    String p_gender, 
		                                                                    Int32? p_sewadar_list_id, 
		                                                                    String p_is_summary, 
		                                                                    ref Int32 p_session_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_satsang_centre_id", p_satsang_centre_id, INT, IN, p);
			csp("p_satsang_centre_nm", p_satsang_centre_nm, VARCHAR, IN, p);
			csp("p_country_ids", p_country_ids, VARCHAR, IN, p);
			csp("p_state_ids", p_state_ids, VARCHAR, IN, p);
			csp("p_district_ids", p_district_ids, VARCHAR, IN, p);
			csp("p_gender", p_gender, VARCHAR, IN, p);
			csp("p_sewadar_list_id", p_sewadar_list_id, INT, IN, p);
			csp("p_is_summary", p_is_summary, VARCHAR, IN, p);
			csp("p_session_id", p_session_id, INT, INOUT, p);
			return p;
		}
		
public DataSet GenerateDstrctWiseSewadarList(Int32? p_satsang_centre_id, 
		                                                String p_satsang_centre_nm, 
		                                                String p_country_ids, 
		                                                String p_state_ids, 
		                                                String p_district_ids, 
		                                                String p_gender, 
		                                                Int32? p_sewadar_list_id, 
		                                                String p_is_summary, 
		                                                ref Int32 p_session_id)
		{
			List<SqlParameter> prms = GenerateDstrctWiseSewadarList_Params(p_satsang_centre_id, p_satsang_centre_nm, p_country_ids, p_state_ids, p_district_ids, p_gender, p_sewadar_list_id, p_is_summary, ref p_session_id);
			DataSet dset = esp("GenerateDstrctWiseSewadarList", prms);
			p_session_id = (System.Int32)prms.FirstOrDefault(p => p.ParameterName == "p_session_id").Value;

			return dset;
		}
		
public string GenerateDstrctWiseSewadarListAsTask(Int32? p_satsang_centre_id, 
		                                                        String p_satsang_centre_nm, 
		                                                        String p_country_ids, 
		                                                        String p_state_ids, 
		                                                        String p_district_ids, 
		                                                        String p_gender, 
		                                                        Int32? p_sewadar_list_id, 
		                                                        String p_is_summary, 
		                                                        ref Int32 p_session_id)
		{
			List<SqlParameter> prms = GenerateDstrctWiseSewadarList_Params(p_satsang_centre_id, p_satsang_centre_nm, p_country_ids, p_state_ids, p_district_ids, p_gender, p_sewadar_list_id, p_is_summary, ref p_session_id);
			return gps("GenerateDstrctWiseSewadarList", prms);

		}
		
		
		
private List<SqlParameter> GenerateFirstHeadsList_Params(Int32? p_satsang_centre_id, 
		                                                            String p_satsang_centre_nm, 
		                                                            String p_gender, 
		                                                            ref Int32 p_session_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_satsang_centre_id", p_satsang_centre_id, INT, IN, p);
			csp("p_satsang_centre_nm", p_satsang_centre_nm, VARCHAR, IN, p);
			csp("p_gender", p_gender, VARCHAR, IN, p);
			csp("p_session_id", p_session_id, INT, INOUT, p);
			return p;
		}
		
public DataSet GenerateFirstHeadsList(Int32? p_satsang_centre_id, 
		                                            String p_satsang_centre_nm, 
		                                            String p_gender, 
		                                            ref Int32 p_session_id)
		{
			List<SqlParameter> prms = GenerateFirstHeadsList_Params(p_satsang_centre_id, p_satsang_centre_nm, p_gender, ref p_session_id);
			DataSet dset = esp("GenerateFirstHeadsList", prms);
			p_session_id = (System.Int32)prms.FirstOrDefault(p => p.ParameterName == "p_session_id").Value;

			return dset;
		}
		
public string GenerateFirstHeadsListAsTask(Int32? p_satsang_centre_id, 
		                                                String p_satsang_centre_nm, 
		                                                String p_gender, 
		                                                ref Int32 p_session_id)
		{
			List<SqlParameter> prms = GenerateFirstHeadsList_Params(p_satsang_centre_id, p_satsang_centre_nm, p_gender, ref p_session_id);
			return gps("GenerateFirstHeadsList", prms);

		}
		
		
		
private List<SqlParameter> GenerateHODs_Params(Int32? p_satsang_centre_id, 
		                                                    String p_satsang_centre_nm, 
		                                                    String p_gender, 
		                                                    ref Int32 p_session_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_satsang_centre_id", p_satsang_centre_id, INT, IN, p);
			csp("p_satsang_centre_nm", p_satsang_centre_nm, VARCHAR, IN, p);
			csp("p_gender", p_gender, VARCHAR, IN, p);
			csp("p_session_id", p_session_id, INT, INOUT, p);
			return p;
		}
		
public DataSet GenerateHODs(Int32? p_satsang_centre_id, 
		                                String p_satsang_centre_nm, 
		                                String p_gender, 
		                                ref Int32 p_session_id)
		{
			List<SqlParameter> prms = GenerateHODs_Params(p_satsang_centre_id, p_satsang_centre_nm, p_gender, ref p_session_id);
			DataSet dset = esp("GenerateHODs", prms);
			p_session_id = (System.Int32)prms.FirstOrDefault(p => p.ParameterName == "p_session_id").Value;

			return dset;
		}
		
public string GenerateHODsAsTask(Int32? p_satsang_centre_id, 
		                                    String p_satsang_centre_nm, 
		                                    String p_gender, 
		                                    ref Int32 p_session_id)
		{
			List<SqlParameter> prms = GenerateHODs_Params(p_satsang_centre_id, p_satsang_centre_nm, p_gender, ref p_session_id);
			return gps("GenerateHODs", prms);

		}
		
		
		
private List<SqlParameter> GenerateHODsList_Params(Int32? p_satsang_centre_id, 
		                                                        String p_satsang_centre_nm, 
		                                                        String p_gender, 
		                                                        String p_is_attendance, 
		                                                        ref Int32 p_session_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_satsang_centre_id", p_satsang_centre_id, INT, IN, p);
			csp("p_satsang_centre_nm", p_satsang_centre_nm, VARCHAR, IN, p);
			csp("p_gender", p_gender, VARCHAR, IN, p);
			csp("p_is_attendance", p_is_attendance, VARCHAR, IN, p);
			csp("p_session_id", p_session_id, INT, INOUT, p);
			return p;
		}
		
public DataSet GenerateHODsList(Int32? p_satsang_centre_id, 
		                                    String p_satsang_centre_nm, 
		                                    String p_gender, 
		                                    String p_is_attendance, 
		                                    ref Int32 p_session_id)
		{
			List<SqlParameter> prms = GenerateHODsList_Params(p_satsang_centre_id, p_satsang_centre_nm, p_gender, p_is_attendance, ref p_session_id);
			DataSet dset = esp("GenerateHODsList", prms);
			p_session_id = (System.Int32)prms.FirstOrDefault(p => p.ParameterName == "p_session_id").Value;

			return dset;
		}
		
public string GenerateHODsListAsTask(Int32? p_satsang_centre_id, 
		                                        String p_satsang_centre_nm, 
		                                        String p_gender, 
		                                        String p_is_attendance, 
		                                        ref Int32 p_session_id)
		{
			List<SqlParameter> prms = GenerateHODsList_Params(p_satsang_centre_id, p_satsang_centre_nm, p_gender, p_is_attendance, ref p_session_id);
			return gps("GenerateHODsList", prms);

		}
		
		
		
private List<SqlParameter> GenerateHODsListwithDORAge_Params(Int32? p_satsang_centre_id, 
		                                                                String p_satsang_centre_nm, 
		                                                                String p_gender, 
		                                                                ref Int32 p_session_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_satsang_centre_id", p_satsang_centre_id, INT, IN, p);
			csp("p_satsang_centre_nm", p_satsang_centre_nm, VARCHAR, IN, p);
			csp("p_gender", p_gender, VARCHAR, IN, p);
			csp("p_session_id", p_session_id, INT, INOUT, p);
			return p;
		}
		
public DataSet GenerateHODsListwithDORAge(Int32? p_satsang_centre_id, 
		                                                String p_satsang_centre_nm, 
		                                                String p_gender, 
		                                                ref Int32 p_session_id)
		{
			List<SqlParameter> prms = GenerateHODsListwithDORAge_Params(p_satsang_centre_id, p_satsang_centre_nm, p_gender, ref p_session_id);
			DataSet dset = esp("GenerateHODsListwithDORAge", prms);
			p_session_id = (System.Int32)prms.FirstOrDefault(p => p.ParameterName == "p_session_id").Value;

			return dset;
		}
		
public string GenerateHODsListwithDORAgeAsTask(Int32? p_satsang_centre_id, 
		                                                    String p_satsang_centre_nm, 
		                                                    String p_gender, 
		                                                    ref Int32 p_session_id)
		{
			List<SqlParameter> prms = GenerateHODsListwithDORAge_Params(p_satsang_centre_id, p_satsang_centre_nm, p_gender, ref p_session_id);
			return gps("GenerateHODsListwithDORAge", prms);

		}
		
		
		
private List<SqlParameter> GenerateInActiveDeptSewadars_Params(Int32? p_satsang_centre_id, 
		                                                                    String p_satsang_centre_nm, 
		                                                                    String p_statuses, 
		                                                                    String p_gender, 
		                                                                    String p_is_summary, 
		                                                                    ref Int32 p_session_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_satsang_centre_id", p_satsang_centre_id, INT, IN, p);
			csp("p_satsang_centre_nm", p_satsang_centre_nm, VARCHAR, IN, p);
			csp("p_statuses", p_statuses, VARCHAR, IN, p);
			csp("p_gender", p_gender, VARCHAR, IN, p);
			csp("p_is_summary", p_is_summary, VARCHAR, IN, p);
			csp("p_session_id", p_session_id, INT, INOUT, p);
			return p;
		}
		
public DataSet GenerateInActiveDeptSewadars(Int32? p_satsang_centre_id, 
		                                                String p_satsang_centre_nm, 
		                                                String p_statuses, 
		                                                String p_gender, 
		                                                String p_is_summary, 
		                                                ref Int32 p_session_id)
		{
			List<SqlParameter> prms = GenerateInActiveDeptSewadars_Params(p_satsang_centre_id, p_satsang_centre_nm, p_statuses, p_gender, p_is_summary, ref p_session_id);
			DataSet dset = esp("GenerateInActiveDeptSewadars", prms);
			p_session_id = (System.Int32)prms.FirstOrDefault(p => p.ParameterName == "p_session_id").Value;

			return dset;
		}
		
public string GenerateInActiveDeptSewadarsAsTask(Int32? p_satsang_centre_id, 
		                                                    String p_satsang_centre_nm, 
		                                                    String p_statuses, 
		                                                    String p_gender, 
		                                                    String p_is_summary, 
		                                                    ref Int32 p_session_id)
		{
			List<SqlParameter> prms = GenerateInActiveDeptSewadars_Params(p_satsang_centre_id, p_satsang_centre_nm, p_statuses, p_gender, p_is_summary, ref p_session_id);
			return gps("GenerateInActiveDeptSewadars", prms);

		}
		
		
		
private List<SqlParameter> GenerateInitiatedNISewadarList_Params(Int32? p_satsang_centre_id, 
		                                                                    String p_satsang_centre_nm, 
		                                                                    String p_department_ids, 
		                                                                    String p_sub_department_ids, 
		                                                                    ref Int32 p_session_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_satsang_centre_id", p_satsang_centre_id, INT, IN, p);
			csp("p_satsang_centre_nm", p_satsang_centre_nm, VARCHAR, IN, p);
			csp("p_department_ids", p_department_ids, VARCHAR, IN, p);
			csp("p_sub_department_ids", p_sub_department_ids, VARCHAR, IN, p);
			csp("p_session_id", p_session_id, INT, INOUT, p);
			return p;
		}
		
public DataSet GenerateInitiatedNISewadarList(Int32? p_satsang_centre_id, 
		                                                    String p_satsang_centre_nm, 
		                                                    String p_department_ids, 
		                                                    String p_sub_department_ids, 
		                                                    ref Int32 p_session_id)
		{
			List<SqlParameter> prms = GenerateInitiatedNISewadarList_Params(p_satsang_centre_id, p_satsang_centre_nm, p_department_ids, p_sub_department_ids, ref p_session_id);
			DataSet dset = esp("GenerateInitiatedNISewadarList", prms);
			p_session_id = (System.Int32)prms.FirstOrDefault(p => p.ParameterName == "p_session_id").Value;

			return dset;
		}
		
public string GenerateInitiatedNISewadarListAsTask(Int32? p_satsang_centre_id, 
		                                                        String p_satsang_centre_nm, 
		                                                        String p_department_ids, 
		                                                        String p_sub_department_ids, 
		                                                        ref Int32 p_session_id)
		{
			List<SqlParameter> prms = GenerateInitiatedNISewadarList_Params(p_satsang_centre_id, p_satsang_centre_nm, p_department_ids, p_sub_department_ids, ref p_session_id);
			return gps("GenerateInitiatedNISewadarList", prms);

		}
		
		
		
private List<SqlParameter> GenerateInvalidSewaShiftsSewadars_Params(Int32? p_satsang_centre_id, 
		                                                                        String p_satsang_centre_nm, 
		                                                                        Int32? p_sewa_id, 
		                                                                        ref Int32 p_session_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_satsang_centre_id", p_satsang_centre_id, INT, IN, p);
			csp("p_satsang_centre_nm", p_satsang_centre_nm, VARCHAR, IN, p);
			csp("p_sewa_id", p_sewa_id, INT, IN, p);
			csp("p_session_id", p_session_id, INT, INOUT, p);
			return p;
		}
		
public DataSet GenerateInvalidSewaShiftsSewadars(Int32? p_satsang_centre_id, 
		                                                    String p_satsang_centre_nm, 
		                                                    Int32? p_sewa_id, 
		                                                    ref Int32 p_session_id)
		{
			List<SqlParameter> prms = GenerateInvalidSewaShiftsSewadars_Params(p_satsang_centre_id, p_satsang_centre_nm, p_sewa_id, ref p_session_id);
			DataSet dset = esp("GenerateInvalidSewaShiftsSewadars", prms);
			p_session_id = (System.Int32)prms.FirstOrDefault(p => p.ParameterName == "p_session_id").Value;

			return dset;
		}
		
public string GenerateInvalidSewaShiftsSewadarsAsTask(Int32? p_satsang_centre_id, 
		                                                            String p_satsang_centre_nm, 
		                                                            Int32? p_sewa_id, 
		                                                            ref Int32 p_session_id)
		{
			List<SqlParameter> prms = GenerateInvalidSewaShiftsSewadars_Params(p_satsang_centre_id, p_satsang_centre_nm, p_sewa_id, ref p_session_id);
			return gps("GenerateInvalidSewaShiftsSewadars", prms);

		}
		
		
		
private List<SqlParameter> GenerateMissingAddressesList_Params(Int32? p_satsang_centre_id, 
		                                                                    String p_satsang_centre_nm, 
		                                                                    String p_statuses, 
		                                                                    String p_gender, 
		                                                                    String p_is_summary, 
		                                                                    ref Int32 p_session_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_satsang_centre_id", p_satsang_centre_id, INT, IN, p);
			csp("p_satsang_centre_nm", p_satsang_centre_nm, VARCHAR, IN, p);
			csp("p_statuses", p_statuses, VARCHAR, IN, p);
			csp("p_gender", p_gender, VARCHAR, IN, p);
			csp("p_is_summary", p_is_summary, VARCHAR, IN, p);
			csp("p_session_id", p_session_id, INT, INOUT, p);
			return p;
		}
		
public DataSet GenerateMissingAddressesList(Int32? p_satsang_centre_id, 
		                                                String p_satsang_centre_nm, 
		                                                String p_statuses, 
		                                                String p_gender, 
		                                                String p_is_summary, 
		                                                ref Int32 p_session_id)
		{
			List<SqlParameter> prms = GenerateMissingAddressesList_Params(p_satsang_centre_id, p_satsang_centre_nm, p_statuses, p_gender, p_is_summary, ref p_session_id);
			DataSet dset = esp("GenerateMissingAddressesList", prms);
			p_session_id = (System.Int32)prms.FirstOrDefault(p => p.ParameterName == "p_session_id").Value;

			return dset;
		}
		
public string GenerateMissingAddressesListAsTask(Int32? p_satsang_centre_id, 
		                                                    String p_satsang_centre_nm, 
		                                                    String p_statuses, 
		                                                    String p_gender, 
		                                                    String p_is_summary, 
		                                                    ref Int32 p_session_id)
		{
			List<SqlParameter> prms = GenerateMissingAddressesList_Params(p_satsang_centre_id, p_satsang_centre_nm, p_statuses, p_gender, p_is_summary, ref p_session_id);
			return gps("GenerateMissingAddressesList", prms);

		}
		
		
		
private List<SqlParameter> GenerateMobilePhoneList_Params(Int32? p_satsang_centre_id, 
		                                                                String p_satsang_centre_nm, 
		                                                                Int32? p_month, 
		                                                                Int32? p_year, 
		                                                                Int32? p_sewadar_list_id, 
		                                                                String p_department_ids, 
		                                                                String p_sub_department_ids, 
		                                                                String p_gender, 
		                                                                ref Int32 p_session_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_satsang_centre_id", p_satsang_centre_id, INT, IN, p);
			csp("p_satsang_centre_nm", p_satsang_centre_nm, VARCHAR, IN, p);
			csp("p_month", p_month, INT, IN, p);
			csp("p_year", p_year, INT, IN, p);
			csp("p_sewadar_list_id", p_sewadar_list_id, INT, IN, p);
			csp("p_department_ids", p_department_ids, VARCHAR, IN, p);
			csp("p_sub_department_ids", p_sub_department_ids, VARCHAR, IN, p);
			csp("p_gender", p_gender, VARCHAR, IN, p);
			csp("p_session_id", p_session_id, INT, INOUT, p);
			return p;
		}
		
public DataSet GenerateMobilePhoneList(Int32? p_satsang_centre_id, 
		                                            String p_satsang_centre_nm, 
		                                            Int32? p_month, 
		                                            Int32? p_year, 
		                                            Int32? p_sewadar_list_id, 
		                                            String p_department_ids, 
		                                            String p_sub_department_ids, 
		                                            String p_gender, 
		                                            ref Int32 p_session_id)
		{
			List<SqlParameter> prms = GenerateMobilePhoneList_Params(p_satsang_centre_id, p_satsang_centre_nm, p_month, p_year, p_sewadar_list_id, p_department_ids, p_sub_department_ids, p_gender, ref p_session_id);
			DataSet dset = esp("GenerateMobilePhoneList", prms);
			p_session_id = (System.Int32)prms.FirstOrDefault(p => p.ParameterName == "p_session_id").Value;

			return dset;
		}
		
public string GenerateMobilePhoneListAsTask(Int32? p_satsang_centre_id, 
		                                                String p_satsang_centre_nm, 
		                                                Int32? p_month, 
		                                                Int32? p_year, 
		                                                Int32? p_sewadar_list_id, 
		                                                String p_department_ids, 
		                                                String p_sub_department_ids, 
		                                                String p_gender, 
		                                                ref Int32 p_session_id)
		{
			List<SqlParameter> prms = GenerateMobilePhoneList_Params(p_satsang_centre_id, p_satsang_centre_nm, p_month, p_year, p_sewadar_list_id, p_department_ids, p_sub_department_ids, p_gender, ref p_session_id);
			return gps("GenerateMobilePhoneList", prms);

		}
		
		
		
private List<SqlParameter> GenerateNewSewadarsAlphabeticalList_Params(DateTime? p_start_dt, 
		                                                                            DateTime? p_finish_dt, 
		                                                                            Int32? p_satsang_centre_id, 
		                                                                            String p_satsang_centre_nm, 
		                                                                            String p_department_ids, 
		                                                                            String p_sub_department_ids, 
		                                                                            String p_is_outstation, 
		                                                                            String p_gender, 
		                                                                            String p_sewadar_type, 
		                                                                            Int32? p_sewadar_list_id, 
		                                                                            ref Int32 p_session_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_start_dt", p_start_dt, SMALLDATETIME, IN, p);
			csp("p_finish_dt", p_finish_dt, SMALLDATETIME, IN, p);
			csp("p_satsang_centre_id", p_satsang_centre_id, INT, IN, p);
			csp("p_satsang_centre_nm", p_satsang_centre_nm, VARCHAR, IN, p);
			csp("p_department_ids", p_department_ids, VARCHAR, IN, p);
			csp("p_sub_department_ids", p_sub_department_ids, VARCHAR, IN, p);
			csp("p_is_outstation", p_is_outstation, VARCHAR, IN, p);
			csp("p_gender", p_gender, VARCHAR, IN, p);
			csp("p_sewadar_type", p_sewadar_type, VARCHAR, IN, p);
			csp("p_sewadar_list_id", p_sewadar_list_id, INT, IN, p);
			csp("p_session_id", p_session_id, INT, INOUT, p);
			return p;
		}
		
public DataSet GenerateNewSewadarsAlphabeticalList(DateTime? p_start_dt, 
		                                                        DateTime? p_finish_dt, 
		                                                        Int32? p_satsang_centre_id, 
		                                                        String p_satsang_centre_nm, 
		                                                        String p_department_ids, 
		                                                        String p_sub_department_ids, 
		                                                        String p_is_outstation, 
		                                                        String p_gender, 
		                                                        String p_sewadar_type, 
		                                                        Int32? p_sewadar_list_id, 
		                                                        ref Int32 p_session_id)
		{
			List<SqlParameter> prms = GenerateNewSewadarsAlphabeticalList_Params(p_start_dt, p_finish_dt, p_satsang_centre_id, p_satsang_centre_nm, p_department_ids, p_sub_department_ids, p_is_outstation, p_gender, p_sewadar_type, p_sewadar_list_id, ref p_session_id);
			DataSet dset = esp("GenerateNewSewadarsAlphabeticalList", prms);
			p_session_id = (System.Int32)prms.FirstOrDefault(p => p.ParameterName == "p_session_id").Value;

			return dset;
		}
		
public string GenerateNewSewadarsAlphabeticalListAsTask(DateTime? p_start_dt, 
		                                                            DateTime? p_finish_dt, 
		                                                            Int32? p_satsang_centre_id, 
		                                                            String p_satsang_centre_nm, 
		                                                            String p_department_ids, 
		                                                            String p_sub_department_ids, 
		                                                            String p_is_outstation, 
		                                                            String p_gender, 
		                                                            String p_sewadar_type, 
		                                                            Int32? p_sewadar_list_id, 
		                                                            ref Int32 p_session_id)
		{
			List<SqlParameter> prms = GenerateNewSewadarsAlphabeticalList_Params(p_start_dt, p_finish_dt, p_satsang_centre_id, p_satsang_centre_nm, p_department_ids, p_sub_department_ids, p_is_outstation, p_gender, p_sewadar_type, p_sewadar_list_id, ref p_session_id);
			return gps("GenerateNewSewadarsAlphabeticalList", prms);

		}
		
		
		
private List<SqlParameter> GenerateNewSewadarsList_Params(DateTime? p_start_dt, 
		                                                                DateTime? p_finish_dt, 
		                                                                Int32? p_satsang_centre_id, 
		                                                                String p_satsang_centre_nm, 
		                                                                String p_department_ids, 
		                                                                String p_sub_department_ids, 
		                                                                String p_is_outstation, 
		                                                                String p_gender, 
		                                                                String p_sewadar_type, 
		                                                                Int32? p_sewadar_list_id, 
		                                                                String p_is_summary, 
		                                                                ref Int32 p_session_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_start_dt", p_start_dt, SMALLDATETIME, IN, p);
			csp("p_finish_dt", p_finish_dt, SMALLDATETIME, IN, p);
			csp("p_satsang_centre_id", p_satsang_centre_id, INT, IN, p);
			csp("p_satsang_centre_nm", p_satsang_centre_nm, VARCHAR, IN, p);
			csp("p_department_ids", p_department_ids, VARCHAR, IN, p);
			csp("p_sub_department_ids", p_sub_department_ids, VARCHAR, IN, p);
			csp("p_is_outstation", p_is_outstation, VARCHAR, IN, p);
			csp("p_gender", p_gender, VARCHAR, IN, p);
			csp("p_sewadar_type", p_sewadar_type, VARCHAR, IN, p);
			csp("p_sewadar_list_id", p_sewadar_list_id, INT, IN, p);
			csp("p_is_summary", p_is_summary, VARCHAR, IN, p);
			csp("p_session_id", p_session_id, INT, INOUT, p);
			return p;
		}
		
public DataSet GenerateNewSewadarsList(DateTime? p_start_dt, 
		                                            DateTime? p_finish_dt, 
		                                            Int32? p_satsang_centre_id, 
		                                            String p_satsang_centre_nm, 
		                                            String p_department_ids, 
		                                            String p_sub_department_ids, 
		                                            String p_is_outstation, 
		                                            String p_gender, 
		                                            String p_sewadar_type, 
		                                            Int32? p_sewadar_list_id, 
		                                            String p_is_summary, 
		                                            ref Int32 p_session_id)
		{
			List<SqlParameter> prms = GenerateNewSewadarsList_Params(p_start_dt, p_finish_dt, p_satsang_centre_id, p_satsang_centre_nm, p_department_ids, p_sub_department_ids, p_is_outstation, p_gender, p_sewadar_type, p_sewadar_list_id, p_is_summary, ref p_session_id);
			DataSet dset = esp("GenerateNewSewadarsList", prms);
			p_session_id = (System.Int32)prms.FirstOrDefault(p => p.ParameterName == "p_session_id").Value;

			return dset;
		}
		
public string GenerateNewSewadarsListAsTask(DateTime? p_start_dt, 
		                                                DateTime? p_finish_dt, 
		                                                Int32? p_satsang_centre_id, 
		                                                String p_satsang_centre_nm, 
		                                                String p_department_ids, 
		                                                String p_sub_department_ids, 
		                                                String p_is_outstation, 
		                                                String p_gender, 
		                                                String p_sewadar_type, 
		                                                Int32? p_sewadar_list_id, 
		                                                String p_is_summary, 
		                                                ref Int32 p_session_id)
		{
			List<SqlParameter> prms = GenerateNewSewadarsList_Params(p_start_dt, p_finish_dt, p_satsang_centre_id, p_satsang_centre_nm, p_department_ids, p_sub_department_ids, p_is_outstation, p_gender, p_sewadar_type, p_sewadar_list_id, p_is_summary, ref p_session_id);
			return gps("GenerateNewSewadarsList", prms);

		}
		
		
		
private List<SqlParameter> GenerateNonInitiateSewadarList_Params(Int32? p_satsang_centre_id, 
		                                                                    String p_satsang_centre_nm, 
		                                                                    String p_department_ids, 
		                                                                    String p_sub_department_ids, 
		                                                                    DateTime? p_males_born_bfr_dt, 
		                                                                    DateTime? p_females_born_bfr_dt, 
		                                                                    ref Int32 p_session_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_satsang_centre_id", p_satsang_centre_id, INT, IN, p);
			csp("p_satsang_centre_nm", p_satsang_centre_nm, VARCHAR, IN, p);
			csp("p_department_ids", p_department_ids, VARCHAR, IN, p);
			csp("p_sub_department_ids", p_sub_department_ids, VARCHAR, IN, p);
			csp("p_males_born_bfr_dt", p_males_born_bfr_dt, SMALLDATETIME, IN, p);
			csp("p_females_born_bfr_dt", p_females_born_bfr_dt, SMALLDATETIME, IN, p);
			csp("p_session_id", p_session_id, INT, INOUT, p);
			return p;
		}
		
public DataSet GenerateNonInitiateSewadarList(Int32? p_satsang_centre_id, 
		                                                    String p_satsang_centre_nm, 
		                                                    String p_department_ids, 
		                                                    String p_sub_department_ids, 
		                                                    DateTime? p_males_born_bfr_dt, 
		                                                    DateTime? p_females_born_bfr_dt, 
		                                                    ref Int32 p_session_id)
		{
			List<SqlParameter> prms = GenerateNonInitiateSewadarList_Params(p_satsang_centre_id, p_satsang_centre_nm, p_department_ids, p_sub_department_ids, p_males_born_bfr_dt, p_females_born_bfr_dt, ref p_session_id);
			DataSet dset = esp("GenerateNonInitiateSewadarList", prms);
			p_session_id = (System.Int32)prms.FirstOrDefault(p => p.ParameterName == "p_session_id").Value;

			return dset;
		}
		
public string GenerateNonInitiateSewadarListAsTask(Int32? p_satsang_centre_id, 
		                                                        String p_satsang_centre_nm, 
		                                                        String p_department_ids, 
		                                                        String p_sub_department_ids, 
		                                                        DateTime? p_males_born_bfr_dt, 
		                                                        DateTime? p_females_born_bfr_dt, 
		                                                        ref Int32 p_session_id)
		{
			List<SqlParameter> prms = GenerateNonInitiateSewadarList_Params(p_satsang_centre_id, p_satsang_centre_nm, p_department_ids, p_sub_department_ids, p_males_born_bfr_dt, p_females_born_bfr_dt, ref p_session_id);
			return gps("GenerateNonInitiateSewadarList", prms);

		}
		
		
		
private List<SqlParameter> GenerateOpenSewadarRegister_Params(Int32? p_satsang_centre_id, 
		                                                                    String p_satsang_centre_nm, 
		                                                                    String p_department_ids, 
		                                                                    String p_is_outstation, 
		                                                                    String p_gender, 
		                                                                    DateTime? p_appointments_after_dt, 
		                                                                    ref Int32 p_session_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_satsang_centre_id", p_satsang_centre_id, INT, IN, p);
			csp("p_satsang_centre_nm", p_satsang_centre_nm, VARCHAR, IN, p);
			csp("p_department_ids", p_department_ids, VARCHAR, IN, p);
			csp("p_is_outstation", p_is_outstation, VARCHAR, IN, p);
			csp("p_gender", p_gender, VARCHAR, IN, p);
			csp("p_appointments_after_dt", p_appointments_after_dt, DATETIME, IN, p);
			csp("p_session_id", p_session_id, INT, INOUT, p);
			return p;
		}
		
public DataSet GenerateOpenSewadarRegister(Int32? p_satsang_centre_id, 
		                                                String p_satsang_centre_nm, 
		                                                String p_department_ids, 
		                                                String p_is_outstation, 
		                                                String p_gender, 
		                                                DateTime? p_appointments_after_dt, 
		                                                ref Int32 p_session_id)
		{
			List<SqlParameter> prms = GenerateOpenSewadarRegister_Params(p_satsang_centre_id, p_satsang_centre_nm, p_department_ids, p_is_outstation, p_gender, p_appointments_after_dt, ref p_session_id);
			DataSet dset = esp("GenerateOpenSewadarRegister", prms);
			p_session_id = (System.Int32)prms.FirstOrDefault(p => p.ParameterName == "p_session_id").Value;

			return dset;
		}
		
public string GenerateOpenSewadarRegisterAsTask(Int32? p_satsang_centre_id, 
		                                                    String p_satsang_centre_nm, 
		                                                    String p_department_ids, 
		                                                    String p_is_outstation, 
		                                                    String p_gender, 
		                                                    DateTime? p_appointments_after_dt, 
		                                                    ref Int32 p_session_id)
		{
			List<SqlParameter> prms = GenerateOpenSewadarRegister_Params(p_satsang_centre_id, p_satsang_centre_nm, p_department_ids, p_is_outstation, p_gender, p_appointments_after_dt, ref p_session_id);
			return gps("GenerateOpenSewadarRegister", prms);

		}
		
		
		
private List<SqlParameter> GenerateOtherSewadarRegister_Params(Int32? p_satsang_centre_id, 
		                                                                    String p_satsang_centre_nm, 
		                                                                    String p_department_ids, 
		                                                                    String p_sub_department_ids, 
		                                                                    String p_is_outstation, 
		                                                                    String p_gender, 
		                                                                    Int32? p_sewadar_list_id, 
		                                                                    ref Int32 p_session_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_satsang_centre_id", p_satsang_centre_id, INT, IN, p);
			csp("p_satsang_centre_nm", p_satsang_centre_nm, VARCHAR, IN, p);
			csp("p_department_ids", p_department_ids, VARCHAR, IN, p);
			csp("p_sub_department_ids", p_sub_department_ids, VARCHAR, IN, p);
			csp("p_is_outstation", p_is_outstation, VARCHAR, IN, p);
			csp("p_gender", p_gender, VARCHAR, IN, p);
			csp("p_sewadar_list_id", p_sewadar_list_id, INT, IN, p);
			csp("p_session_id", p_session_id, INT, INOUT, p);
			return p;
		}
		
public DataSet GenerateOtherSewadarRegister(Int32? p_satsang_centre_id, 
		                                                String p_satsang_centre_nm, 
		                                                String p_department_ids, 
		                                                String p_sub_department_ids, 
		                                                String p_is_outstation, 
		                                                String p_gender, 
		                                                Int32? p_sewadar_list_id, 
		                                                ref Int32 p_session_id)
		{
			List<SqlParameter> prms = GenerateOtherSewadarRegister_Params(p_satsang_centre_id, p_satsang_centre_nm, p_department_ids, p_sub_department_ids, p_is_outstation, p_gender, p_sewadar_list_id, ref p_session_id);
			DataSet dset = esp("GenerateOtherSewadarRegister", prms);
			p_session_id = (System.Int32)prms.FirstOrDefault(p => p.ParameterName == "p_session_id").Value;

			return dset;
		}
		
public string GenerateOtherSewadarRegisterAsTask(Int32? p_satsang_centre_id, 
		                                                    String p_satsang_centre_nm, 
		                                                    String p_department_ids, 
		                                                    String p_sub_department_ids, 
		                                                    String p_is_outstation, 
		                                                    String p_gender, 
		                                                    Int32? p_sewadar_list_id, 
		                                                    ref Int32 p_session_id)
		{
			List<SqlParameter> prms = GenerateOtherSewadarRegister_Params(p_satsang_centre_id, p_satsang_centre_nm, p_department_ids, p_sub_department_ids, p_is_outstation, p_gender, p_sewadar_list_id, ref p_session_id);
			return gps("GenerateOtherSewadarRegister", prms);

		}
		
		
		
private List<SqlParameter> GeneratePendingSewadarsForDailyAttendance_Params(Int32? p_satsang_centre_id, 
		                                                                                String p_satsang_centre_nm, 
		                                                                                Int32? p_sewa_id, 
		                                                                                String p_department_ids, 
		                                                                                String p_is_summary, 
		                                                                                ref Int32 p_session_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_satsang_centre_id", p_satsang_centre_id, INT, IN, p);
			csp("p_satsang_centre_nm", p_satsang_centre_nm, VARCHAR, IN, p);
			csp("p_sewa_id", p_sewa_id, INT, IN, p);
			csp("p_department_ids", p_department_ids, VARCHAR, IN, p);
			csp("p_is_summary", p_is_summary, VARCHAR, IN, p);
			csp("p_session_id", p_session_id, INT, INOUT, p);
			return p;
		}
		
public DataSet GeneratePendingSewadarsForDailyAttendance(Int32? p_satsang_centre_id, 
		                                                            String p_satsang_centre_nm, 
		                                                            Int32? p_sewa_id, 
		                                                            String p_department_ids, 
		                                                            String p_is_summary, 
		                                                            ref Int32 p_session_id)
		{
			List<SqlParameter> prms = GeneratePendingSewadarsForDailyAttendance_Params(p_satsang_centre_id, p_satsang_centre_nm, p_sewa_id, p_department_ids, p_is_summary, ref p_session_id);
			DataSet dset = esp("GeneratePendingSewadarsForDailyAttendance", prms);
			p_session_id = (System.Int32)prms.FirstOrDefault(p => p.ParameterName == "p_session_id").Value;

			return dset;
		}
		
public string GeneratePendingSewadarsForDailyAttendanceAsTask(Int32? p_satsang_centre_id, 
		                                                                    String p_satsang_centre_nm, 
		                                                                    Int32? p_sewa_id, 
		                                                                    String p_department_ids, 
		                                                                    String p_is_summary, 
		                                                                    ref Int32 p_session_id)
		{
			List<SqlParameter> prms = GeneratePendingSewadarsForDailyAttendance_Params(p_satsang_centre_id, p_satsang_centre_nm, p_sewa_id, p_department_ids, p_is_summary, ref p_session_id);
			return gps("GeneratePendingSewadarsForDailyAttendance", prms);

		}
		
		
		
private List<SqlParameter> GeneratePhotosComparisonReport_Params(Int32? p_satsang_centre_id, 
		                                                                    String p_satsang_centre_nm, 
		                                                                    DateTime? p_start_dt, 
		                                                                    DateTime? p_finish_dt, 
		                                                                    String p_gender, 
		                                                                    Int32? p_start_time, 
		                                                                    Int32? p_finish_time, 
		                                                                    String p_badge_template_id, 
		                                                                    String p_badge_template_nm, 
		                                                                    Int32? p_sewadar_list_id, 
		                                                                    DateTime? p_photo_taken_dt, 
		                                                                    Int16? p_department_id, 
		                                                                    String p_statuses, 
		                                                                    ref Int32 p_session_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_satsang_centre_id", p_satsang_centre_id, INT, IN, p);
			csp("p_satsang_centre_nm", p_satsang_centre_nm, VARCHAR, IN, p);
			csp("p_start_dt", p_start_dt, DATETIME, IN, p);
			csp("p_finish_dt", p_finish_dt, DATETIME, IN, p);
			csp("p_gender", p_gender, VARCHAR, IN, p);
			csp("p_start_time", p_start_time, INT, IN, p);
			csp("p_finish_time", p_finish_time, INT, IN, p);
			csp("p_badge_template_id", p_badge_template_id, VARCHAR, IN, p);
			csp("p_badge_template_nm", p_badge_template_nm, VARCHAR, IN, p);
			csp("p_sewadar_list_id", p_sewadar_list_id, INT, IN, p);
			csp("p_photo_taken_dt", p_photo_taken_dt, DATE, IN, p);
			csp("p_department_id", p_department_id, SMALLINT, IN, p);
			csp("p_statuses", p_statuses, VARCHAR, IN, p);
			csp("p_session_id", p_session_id, INT, INOUT, p);
			return p;
		}
		
public DataSet GeneratePhotosComparisonReport(Int32? p_satsang_centre_id, 
		                                                    String p_satsang_centre_nm, 
		                                                    DateTime? p_start_dt, 
		                                                    DateTime? p_finish_dt, 
		                                                    String p_gender, 
		                                                    Int32? p_start_time, 
		                                                    Int32? p_finish_time, 
		                                                    String p_badge_template_id, 
		                                                    String p_badge_template_nm, 
		                                                    Int32? p_sewadar_list_id, 
		                                                    DateTime? p_photo_taken_dt, 
		                                                    Int16? p_department_id, 
		                                                    String p_statuses, 
		                                                    ref Int32 p_session_id)
		{
			List<SqlParameter> prms = GeneratePhotosComparisonReport_Params(p_satsang_centre_id, p_satsang_centre_nm, p_start_dt, p_finish_dt, p_gender, p_start_time, p_finish_time, p_badge_template_id, p_badge_template_nm, p_sewadar_list_id, p_photo_taken_dt, p_department_id, p_statuses, ref p_session_id);
			DataSet dset = esp("GeneratePhotosComparisonReport", prms);
			p_session_id = (System.Int32)prms.FirstOrDefault(p => p.ParameterName == "p_session_id").Value;

			return dset;
		}
		
public string GeneratePhotosComparisonReportAsTask(Int32? p_satsang_centre_id, 
		                                                        String p_satsang_centre_nm, 
		                                                        DateTime? p_start_dt, 
		                                                        DateTime? p_finish_dt, 
		                                                        String p_gender, 
		                                                        Int32? p_start_time, 
		                                                        Int32? p_finish_time, 
		                                                        String p_badge_template_id, 
		                                                        String p_badge_template_nm, 
		                                                        Int32? p_sewadar_list_id, 
		                                                        DateTime? p_photo_taken_dt, 
		                                                        Int16? p_department_id, 
		                                                        String p_statuses, 
		                                                        ref Int32 p_session_id)
		{
			List<SqlParameter> prms = GeneratePhotosComparisonReport_Params(p_satsang_centre_id, p_satsang_centre_nm, p_start_dt, p_finish_dt, p_gender, p_start_time, p_finish_time, p_badge_template_id, p_badge_template_nm, p_sewadar_list_id, p_photo_taken_dt, p_department_id, p_statuses, ref p_session_id);
			return gps("GeneratePhotosComparisonReport", prms);

		}
		
		
		
private List<SqlParameter> GeneratePhotosTakenList_Params(Int32? p_satsang_centre_id, 
		                                                                String p_satsang_centre_nm, 
		                                                                DateTime? p_start_dt, 
		                                                                DateTime? p_finish_dt, 
		                                                                String p_gender, 
		                                                                String p_is_summary, 
		                                                                ref Int32 p_session_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_satsang_centre_id", p_satsang_centre_id, INT, IN, p);
			csp("p_satsang_centre_nm", p_satsang_centre_nm, VARCHAR, IN, p);
			csp("p_start_dt", p_start_dt, SMALLDATETIME, IN, p);
			csp("p_finish_dt", p_finish_dt, SMALLDATETIME, IN, p);
			csp("p_gender", p_gender, VARCHAR, IN, p);
			csp("p_is_summary", p_is_summary, VARCHAR, IN, p);
			csp("p_session_id", p_session_id, INT, INOUT, p);
			return p;
		}
		
public DataSet GeneratePhotosTakenList(Int32? p_satsang_centre_id, 
		                                            String p_satsang_centre_nm, 
		                                            DateTime? p_start_dt, 
		                                            DateTime? p_finish_dt, 
		                                            String p_gender, 
		                                            String p_is_summary, 
		                                            ref Int32 p_session_id)
		{
			List<SqlParameter> prms = GeneratePhotosTakenList_Params(p_satsang_centre_id, p_satsang_centre_nm, p_start_dt, p_finish_dt, p_gender, p_is_summary, ref p_session_id);
			DataSet dset = esp("GeneratePhotosTakenList", prms);
			p_session_id = (System.Int32)prms.FirstOrDefault(p => p.ParameterName == "p_session_id").Value;

			return dset;
		}
		
public string GeneratePhotosTakenListAsTask(Int32? p_satsang_centre_id, 
		                                                String p_satsang_centre_nm, 
		                                                DateTime? p_start_dt, 
		                                                DateTime? p_finish_dt, 
		                                                String p_gender, 
		                                                String p_is_summary, 
		                                                ref Int32 p_session_id)
		{
			List<SqlParameter> prms = GeneratePhotosTakenList_Params(p_satsang_centre_id, p_satsang_centre_nm, p_start_dt, p_finish_dt, p_gender, p_is_summary, ref p_session_id);
			return gps("GeneratePhotosTakenList", prms);

		}
		
		
		
private List<SqlParameter> GenerateQlfctnCtgrySewadarList_Params(Int32? p_satsang_centre_id, 
		                                                                    String p_satsang_centre_nm, 
		                                                                    String p_qualification_type, 
		                                                                    String p_gender, 
		                                                                    Int32? p_sewadar_list_id, 
		                                                                    ref Int32 p_session_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_satsang_centre_id", p_satsang_centre_id, INT, IN, p);
			csp("p_satsang_centre_nm", p_satsang_centre_nm, VARCHAR, IN, p);
			csp("p_qualification_type", p_qualification_type, VARCHAR, IN, p);
			csp("p_gender", p_gender, VARCHAR, IN, p);
			csp("p_sewadar_list_id", p_sewadar_list_id, INT, IN, p);
			csp("p_session_id", p_session_id, INT, INOUT, p);
			return p;
		}
		
public DataSet GenerateQlfctnCtgrySewadarList(Int32? p_satsang_centre_id, 
		                                                    String p_satsang_centre_nm, 
		                                                    String p_qualification_type, 
		                                                    String p_gender, 
		                                                    Int32? p_sewadar_list_id, 
		                                                    ref Int32 p_session_id)
		{
			List<SqlParameter> prms = GenerateQlfctnCtgrySewadarList_Params(p_satsang_centre_id, p_satsang_centre_nm, p_qualification_type, p_gender, p_sewadar_list_id, ref p_session_id);
			DataSet dset = esp("GenerateQlfctnCtgrySewadarList", prms);
			p_session_id = (System.Int32)prms.FirstOrDefault(p => p.ParameterName == "p_session_id").Value;

			return dset;
		}
		
public string GenerateQlfctnCtgrySewadarListAsTask(Int32? p_satsang_centre_id, 
		                                                        String p_satsang_centre_nm, 
		                                                        String p_qualification_type, 
		                                                        String p_gender, 
		                                                        Int32? p_sewadar_list_id, 
		                                                        ref Int32 p_session_id)
		{
			List<SqlParameter> prms = GenerateQlfctnCtgrySewadarList_Params(p_satsang_centre_id, p_satsang_centre_nm, p_qualification_type, p_gender, p_sewadar_list_id, ref p_session_id);
			return gps("GenerateQlfctnCtgrySewadarList", prms);

		}
		
		
		
private List<SqlParameter> GenerateRspnsbltyChangeList_Params(Int32? p_satsang_centre_id, 
		                                                                    String p_satsang_centre_nm, 
		                                                                    DateTime? p_start_dt, 
		                                                                    DateTime? p_finish_dt, 
		                                                                    String p_gender, 
		                                                                    ref Int32 p_session_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_satsang_centre_id", p_satsang_centre_id, INT, IN, p);
			csp("p_satsang_centre_nm", p_satsang_centre_nm, VARCHAR, IN, p);
			csp("p_start_dt", p_start_dt, SMALLDATETIME, IN, p);
			csp("p_finish_dt", p_finish_dt, SMALLDATETIME, IN, p);
			csp("p_gender", p_gender, VARCHAR, IN, p);
			csp("p_session_id", p_session_id, INT, INOUT, p);
			return p;
		}
		
public DataSet GenerateRspnsbltyChangeList(Int32? p_satsang_centre_id, 
		                                                String p_satsang_centre_nm, 
		                                                DateTime? p_start_dt, 
		                                                DateTime? p_finish_dt, 
		                                                String p_gender, 
		                                                ref Int32 p_session_id)
		{
			List<SqlParameter> prms = GenerateRspnsbltyChangeList_Params(p_satsang_centre_id, p_satsang_centre_nm, p_start_dt, p_finish_dt, p_gender, ref p_session_id);
			DataSet dset = esp("GenerateRspnsbltyChangeList", prms);
			p_session_id = (System.Int32)prms.FirstOrDefault(p => p.ParameterName == "p_session_id").Value;

			return dset;
		}
		
public string GenerateRspnsbltyChangeListAsTask(Int32? p_satsang_centre_id, 
		                                                    String p_satsang_centre_nm, 
		                                                    DateTime? p_start_dt, 
		                                                    DateTime? p_finish_dt, 
		                                                    String p_gender, 
		                                                    ref Int32 p_session_id)
		{
			List<SqlParameter> prms = GenerateRspnsbltyChangeList_Params(p_satsang_centre_id, p_satsang_centre_nm, p_start_dt, p_finish_dt, p_gender, ref p_session_id);
			return gps("GenerateRspnsbltyChangeList", prms);

		}
		
		
		
private List<SqlParameter> GenerateScannedBadgesReport_Params(Int32? p_satsang_centre_id, 
		                                                                    String p_satsang_centre_nm, 
		                                                                    String p_department_ids, 
		                                                                    String p_sub_department_ids, 
		                                                                    String p_is_outstation, 
		                                                                    String p_gender, 
		                                                                    Int32? p_sewadar_list_id, 
		                                                                    DateTime? p_start_dt, 
		                                                                    DateTime? p_finish_dt, 
		                                                                    Int32? p_start_time, 
		                                                                    Int32? p_finish_time, 
		                                                                    ref Int32 p_session_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_satsang_centre_id", p_satsang_centre_id, INT, IN, p);
			csp("p_satsang_centre_nm", p_satsang_centre_nm, VARCHAR, IN, p);
			csp("p_department_ids", p_department_ids, VARCHAR, IN, p);
			csp("p_sub_department_ids", p_sub_department_ids, VARCHAR, IN, p);
			csp("p_is_outstation", p_is_outstation, VARCHAR, IN, p);
			csp("p_gender", p_gender, VARCHAR, IN, p);
			csp("p_sewadar_list_id", p_sewadar_list_id, INT, IN, p);
			csp("p_start_dt", p_start_dt, DATETIME, IN, p);
			csp("p_finish_dt", p_finish_dt, DATETIME, IN, p);
			csp("p_start_time", p_start_time, INT, IN, p);
			csp("p_finish_time", p_finish_time, INT, IN, p);
			csp("p_session_id", p_session_id, INT, INOUT, p);
			return p;
		}
		
public DataSet GenerateScannedBadgesReport(Int32? p_satsang_centre_id, 
		                                                String p_satsang_centre_nm, 
		                                                String p_department_ids, 
		                                                String p_sub_department_ids, 
		                                                String p_is_outstation, 
		                                                String p_gender, 
		                                                Int32? p_sewadar_list_id, 
		                                                DateTime? p_start_dt, 
		                                                DateTime? p_finish_dt, 
		                                                Int32? p_start_time, 
		                                                Int32? p_finish_time, 
		                                                ref Int32 p_session_id)
		{
			List<SqlParameter> prms = GenerateScannedBadgesReport_Params(p_satsang_centre_id, p_satsang_centre_nm, p_department_ids, p_sub_department_ids, p_is_outstation, p_gender, p_sewadar_list_id, p_start_dt, p_finish_dt, p_start_time, p_finish_time, ref p_session_id);
			DataSet dset = esp("GenerateScannedBadgesReport", prms);
			p_session_id = (System.Int32)prms.FirstOrDefault(p => p.ParameterName == "p_session_id").Value;

			return dset;
		}
		
public string GenerateScannedBadgesReportAsTask(Int32? p_satsang_centre_id, 
		                                                    String p_satsang_centre_nm, 
		                                                    String p_department_ids, 
		                                                    String p_sub_department_ids, 
		                                                    String p_is_outstation, 
		                                                    String p_gender, 
		                                                    Int32? p_sewadar_list_id, 
		                                                    DateTime? p_start_dt, 
		                                                    DateTime? p_finish_dt, 
		                                                    Int32? p_start_time, 
		                                                    Int32? p_finish_time, 
		                                                    ref Int32 p_session_id)
		{
			List<SqlParameter> prms = GenerateScannedBadgesReport_Params(p_satsang_centre_id, p_satsang_centre_nm, p_department_ids, p_sub_department_ids, p_is_outstation, p_gender, p_sewadar_list_id, p_start_dt, p_finish_dt, p_start_time, p_finish_time, ref p_session_id);
			return gps("GenerateScannedBadgesReport", prms);

		}
		
		
		
private List<SqlParameter> GenerateSewadarAttributeList_Params(Int32? p_satsang_centre_id, 
		                                                                    String p_satsang_centre_nm, 
		                                                                    String p_department_ids, 
		                                                                    String p_sub_department_ids, 
		                                                                    String p_is_outstation, 
		                                                                    String p_gender, 
		                                                                    Int16? p_attribute_id, 
		                                                                    String p_attribute_nm, 
		                                                                    DateTime? p_start_dt, 
		                                                                    DateTime? p_finish_dt, 
		                                                                    Int32? p_sewadar_list_id, 
		                                                                    String p_is_summary, 
		                                                                    ref Int32 p_session_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_satsang_centre_id", p_satsang_centre_id, INT, IN, p);
			csp("p_satsang_centre_nm", p_satsang_centre_nm, VARCHAR, IN, p);
			csp("p_department_ids", p_department_ids, VARCHAR, IN, p);
			csp("p_sub_department_ids", p_sub_department_ids, VARCHAR, IN, p);
			csp("p_is_outstation", p_is_outstation, VARCHAR, IN, p);
			csp("p_gender", p_gender, VARCHAR, IN, p);
			csp("p_attribute_id", p_attribute_id, SMALLINT, IN, p);
			csp("p_attribute_nm", p_attribute_nm, VARCHAR, IN, p);
			csp("p_start_dt", p_start_dt, DATETIME, IN, p);
			csp("p_finish_dt", p_finish_dt, DATETIME, IN, p);
			csp("p_sewadar_list_id", p_sewadar_list_id, INT, IN, p);
			csp("p_is_summary", p_is_summary, VARCHAR, IN, p);
			csp("p_session_id", p_session_id, INT, INOUT, p);
			return p;
		}
		
public DataSet GenerateSewadarAttributeList(Int32? p_satsang_centre_id, 
		                                                String p_satsang_centre_nm, 
		                                                String p_department_ids, 
		                                                String p_sub_department_ids, 
		                                                String p_is_outstation, 
		                                                String p_gender, 
		                                                Int16? p_attribute_id, 
		                                                String p_attribute_nm, 
		                                                DateTime? p_start_dt, 
		                                                DateTime? p_finish_dt, 
		                                                Int32? p_sewadar_list_id, 
		                                                String p_is_summary, 
		                                                ref Int32 p_session_id)
		{
			List<SqlParameter> prms = GenerateSewadarAttributeList_Params(p_satsang_centre_id, p_satsang_centre_nm, p_department_ids, p_sub_department_ids, p_is_outstation, p_gender, p_attribute_id, p_attribute_nm, p_start_dt, p_finish_dt, p_sewadar_list_id, p_is_summary, ref p_session_id);
			DataSet dset = esp("GenerateSewadarAttributeList", prms);
			p_session_id = (System.Int32)prms.FirstOrDefault(p => p.ParameterName == "p_session_id").Value;

			return dset;
		}
		
public string GenerateSewadarAttributeListAsTask(Int32? p_satsang_centre_id, 
		                                                    String p_satsang_centre_nm, 
		                                                    String p_department_ids, 
		                                                    String p_sub_department_ids, 
		                                                    String p_is_outstation, 
		                                                    String p_gender, 
		                                                    Int16? p_attribute_id, 
		                                                    String p_attribute_nm, 
		                                                    DateTime? p_start_dt, 
		                                                    DateTime? p_finish_dt, 
		                                                    Int32? p_sewadar_list_id, 
		                                                    String p_is_summary, 
		                                                    ref Int32 p_session_id)
		{
			List<SqlParameter> prms = GenerateSewadarAttributeList_Params(p_satsang_centre_id, p_satsang_centre_nm, p_department_ids, p_sub_department_ids, p_is_outstation, p_gender, p_attribute_id, p_attribute_nm, p_start_dt, p_finish_dt, p_sewadar_list_id, p_is_summary, ref p_session_id);
			return gps("GenerateSewadarAttributeList", prms);

		}
		
		
		
private List<SqlParameter> GenerateSewadarList_Params(Int32? p_satsang_centre_id, 
		                                                            String p_satsang_centre_nm, 
		                                                            String p_department_ids, 
		                                                            String p_sub_department_ids, 
		                                                            String p_statuses, 
		                                                            String p_gender, 
		                                                            Int32? p_apptmnts_from_year, 
		                                                            Int32? p_apptmnts_till_year, 
		                                                            Int32? p_sewadar_list_id, 
		                                                            String p_is_summary, 
		                                                            ref Int32 p_session_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_satsang_centre_id", p_satsang_centre_id, INT, IN, p);
			csp("p_satsang_centre_nm", p_satsang_centre_nm, VARCHAR, IN, p);
			csp("p_department_ids", p_department_ids, VARCHAR, IN, p);
			csp("p_sub_department_ids", p_sub_department_ids, VARCHAR, IN, p);
			csp("p_statuses", p_statuses, VARCHAR, IN, p);
			csp("p_gender", p_gender, VARCHAR, IN, p);
			csp("p_apptmnts_from_year", p_apptmnts_from_year, INT, IN, p);
			csp("p_apptmnts_till_year", p_apptmnts_till_year, INT, IN, p);
			csp("p_sewadar_list_id", p_sewadar_list_id, INT, IN, p);
			csp("p_is_summary", p_is_summary, VARCHAR, IN, p);
			csp("p_session_id", p_session_id, INT, INOUT, p);
			return p;
		}
		
public DataSet GenerateSewadarList(Int32? p_satsang_centre_id, 
		                                        String p_satsang_centre_nm, 
		                                        String p_department_ids, 
		                                        String p_sub_department_ids, 
		                                        String p_statuses, 
		                                        String p_gender, 
		                                        Int32? p_apptmnts_from_year, 
		                                        Int32? p_apptmnts_till_year, 
		                                        Int32? p_sewadar_list_id, 
		                                        String p_is_summary, 
		                                        ref Int32 p_session_id)
		{
			List<SqlParameter> prms = GenerateSewadarList_Params(p_satsang_centre_id, p_satsang_centre_nm, p_department_ids, p_sub_department_ids, p_statuses, p_gender, p_apptmnts_from_year, p_apptmnts_till_year, p_sewadar_list_id, p_is_summary, ref p_session_id);
			DataSet dset = esp("GenerateSewadarList", prms);
			p_session_id = (System.Int32)prms.FirstOrDefault(p => p.ParameterName == "p_session_id").Value;

			return dset;
		}
		
public string GenerateSewadarListAsTask(Int32? p_satsang_centre_id, 
		                                            String p_satsang_centre_nm, 
		                                            String p_department_ids, 
		                                            String p_sub_department_ids, 
		                                            String p_statuses, 
		                                            String p_gender, 
		                                            Int32? p_apptmnts_from_year, 
		                                            Int32? p_apptmnts_till_year, 
		                                            Int32? p_sewadar_list_id, 
		                                            String p_is_summary, 
		                                            ref Int32 p_session_id)
		{
			List<SqlParameter> prms = GenerateSewadarList_Params(p_satsang_centre_id, p_satsang_centre_nm, p_department_ids, p_sub_department_ids, p_statuses, p_gender, p_apptmnts_from_year, p_apptmnts_till_year, p_sewadar_list_id, p_is_summary, ref p_session_id);
			return gps("GenerateSewadarList", prms);

		}
		
		
		
private List<SqlParameter> GenerateSewadarListforAgeGroup_Params(Int32? p_satsang_centre_id, 
		                                                                    String p_satsang_centre_nm, 
		                                                                    String p_department_ids, 
		                                                                    DateTime? p_date_from, 
		                                                                    DateTime? p_date_till, 
		                                                                    String p_is_non_initiate, 
		                                                                    String p_gender, 
		                                                                    Int32? p_sewadar_list_id, 
		                                                                    String p_is_summary, 
		                                                                    ref Int32 p_session_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_satsang_centre_id", p_satsang_centre_id, INT, IN, p);
			csp("p_satsang_centre_nm", p_satsang_centre_nm, VARCHAR, IN, p);
			csp("p_department_ids", p_department_ids, VARCHAR, IN, p);
			csp("p_date_from", p_date_from, DATETIME, IN, p);
			csp("p_date_till", p_date_till, DATETIME, IN, p);
			csp("p_is_non_initiate", p_is_non_initiate, VARCHAR, IN, p);
			csp("p_gender", p_gender, VARCHAR, IN, p);
			csp("p_sewadar_list_id", p_sewadar_list_id, INT, IN, p);
			csp("p_is_summary", p_is_summary, VARCHAR, IN, p);
			csp("p_session_id", p_session_id, INT, INOUT, p);
			return p;
		}
		
public DataSet GenerateSewadarListforAgeGroup(Int32? p_satsang_centre_id, 
		                                                    String p_satsang_centre_nm, 
		                                                    String p_department_ids, 
		                                                    DateTime? p_date_from, 
		                                                    DateTime? p_date_till, 
		                                                    String p_is_non_initiate, 
		                                                    String p_gender, 
		                                                    Int32? p_sewadar_list_id, 
		                                                    String p_is_summary, 
		                                                    ref Int32 p_session_id)
		{
			List<SqlParameter> prms = GenerateSewadarListforAgeGroup_Params(p_satsang_centre_id, p_satsang_centre_nm, p_department_ids, p_date_from, p_date_till, p_is_non_initiate, p_gender, p_sewadar_list_id, p_is_summary, ref p_session_id);
			DataSet dset = esp("GenerateSewadarListforAgeGroup", prms);
			p_session_id = (System.Int32)prms.FirstOrDefault(p => p.ParameterName == "p_session_id").Value;

			return dset;
		}
		
public string GenerateSewadarListforAgeGroupAsTask(Int32? p_satsang_centre_id, 
		                                                        String p_satsang_centre_nm, 
		                                                        String p_department_ids, 
		                                                        DateTime? p_date_from, 
		                                                        DateTime? p_date_till, 
		                                                        String p_is_non_initiate, 
		                                                        String p_gender, 
		                                                        Int32? p_sewadar_list_id, 
		                                                        String p_is_summary, 
		                                                        ref Int32 p_session_id)
		{
			List<SqlParameter> prms = GenerateSewadarListforAgeGroup_Params(p_satsang_centre_id, p_satsang_centre_nm, p_department_ids, p_date_from, p_date_till, p_is_non_initiate, p_gender, p_sewadar_list_id, p_is_summary, ref p_session_id);
			return gps("GenerateSewadarListforAgeGroup", prms);

		}
		
		
		
private List<SqlParameter> GenerateSewadarListGRNoWise_Params(Int32? p_sewadar_list_id, 
		                                                                    ref Int32 p_session_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_sewadar_list_id", p_sewadar_list_id, INT, IN, p);
			csp("p_session_id", p_session_id, INT, INOUT, p);
			return p;
		}
		
public DataSet GenerateSewadarListGRNoWise(Int32? p_sewadar_list_id, 
		                                                ref Int32 p_session_id)
		{
			List<SqlParameter> prms = GenerateSewadarListGRNoWise_Params(p_sewadar_list_id, ref p_session_id);
			DataSet dset = esp("GenerateSewadarListGRNoWise", prms);
			p_session_id = (System.Int32)prms.FirstOrDefault(p => p.ParameterName == "p_session_id").Value;

			return dset;
		}
		
public string GenerateSewadarListGRNoWiseAsTask(Int32? p_sewadar_list_id, 
		                                                    ref Int32 p_session_id)
		{
			List<SqlParameter> prms = GenerateSewadarListGRNoWise_Params(p_sewadar_list_id, ref p_session_id);
			return gps("GenerateSewadarListGRNoWise", prms);

		}
		
		
		
private List<SqlParameter> GenerateSewadarListReport_Params(Int32? p_sewadar_list_id, 
		                                                                String p_is_dept_wise, 
		                                                                String p_department_ids, 
		                                                                String p_sub_department_ids, 
		                                                                String p_gender, 
		                                                                String p_is_summary, 
		                                                                ref Int32 p_session_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_sewadar_list_id", p_sewadar_list_id, INT, IN, p);
			csp("p_is_dept_wise", p_is_dept_wise, VARCHAR, IN, p);
			csp("p_department_ids", p_department_ids, VARCHAR, IN, p);
			csp("p_sub_department_ids", p_sub_department_ids, VARCHAR, IN, p);
			csp("p_gender", p_gender, VARCHAR, IN, p);
			csp("p_is_summary", p_is_summary, VARCHAR, IN, p);
			csp("p_session_id", p_session_id, INT, INOUT, p);
			return p;
		}
		
public DataSet GenerateSewadarListReport(Int32? p_sewadar_list_id, 
		                                            String p_is_dept_wise, 
		                                            String p_department_ids, 
		                                            String p_sub_department_ids, 
		                                            String p_gender, 
		                                            String p_is_summary, 
		                                            ref Int32 p_session_id)
		{
			List<SqlParameter> prms = GenerateSewadarListReport_Params(p_sewadar_list_id, p_is_dept_wise, p_department_ids, p_sub_department_ids, p_gender, p_is_summary, ref p_session_id);
			DataSet dset = esp("GenerateSewadarListReport", prms);
			p_session_id = (System.Int32)prms.FirstOrDefault(p => p.ParameterName == "p_session_id").Value;

			return dset;
		}
		
public string GenerateSewadarListReportAsTask(Int32? p_sewadar_list_id, 
		                                                    String p_is_dept_wise, 
		                                                    String p_department_ids, 
		                                                    String p_sub_department_ids, 
		                                                    String p_gender, 
		                                                    String p_is_summary, 
		                                                    ref Int32 p_session_id)
		{
			List<SqlParameter> prms = GenerateSewadarListReport_Params(p_sewadar_list_id, p_is_dept_wise, p_department_ids, p_sub_department_ids, p_gender, p_is_summary, ref p_session_id);
			return gps("GenerateSewadarListReport", prms);

		}
		
		
		
private List<SqlParameter> GenerateSewadarListWithoutAddress_Params(Int32? p_satsang_centre_id, 
		                                                                        String p_satsang_centre_nm, 
		                                                                        String p_is_outstation, 
		                                                                        String p_gender, 
		                                                                        ref Int32 p_session_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_satsang_centre_id", p_satsang_centre_id, INT, IN, p);
			csp("p_satsang_centre_nm", p_satsang_centre_nm, VARCHAR, IN, p);
			csp("p_is_outstation", p_is_outstation, VARCHAR, IN, p);
			csp("p_gender", p_gender, VARCHAR, IN, p);
			csp("p_session_id", p_session_id, INT, INOUT, p);
			return p;
		}
		
public DataSet GenerateSewadarListWithoutAddress(Int32? p_satsang_centre_id, 
		                                                    String p_satsang_centre_nm, 
		                                                    String p_is_outstation, 
		                                                    String p_gender, 
		                                                    ref Int32 p_session_id)
		{
			List<SqlParameter> prms = GenerateSewadarListWithoutAddress_Params(p_satsang_centre_id, p_satsang_centre_nm, p_is_outstation, p_gender, ref p_session_id);
			DataSet dset = esp("GenerateSewadarListWithoutAddress", prms);
			p_session_id = (System.Int32)prms.FirstOrDefault(p => p.ParameterName == "p_session_id").Value;

			return dset;
		}
		
public string GenerateSewadarListWithoutAddressAsTask(Int32? p_satsang_centre_id, 
		                                                            String p_satsang_centre_nm, 
		                                                            String p_is_outstation, 
		                                                            String p_gender, 
		                                                            ref Int32 p_session_id)
		{
			List<SqlParameter> prms = GenerateSewadarListWithoutAddress_Params(p_satsang_centre_id, p_satsang_centre_nm, p_is_outstation, p_gender, ref p_session_id);
			return gps("GenerateSewadarListWithoutAddress", prms);

		}
		
		
		
private List<SqlParameter> GenerateSewadarListWithoutPhoto_Params(Int32? p_satsang_centre_id, 
		                                                                        String p_satsang_centre_nm, 
		                                                                        String p_department_ids, 
		                                                                        String p_is_outstation, 
		                                                                        String p_gender, 
		                                                                        String p_district_ids, 
		                                                                        String p_is_show_district, 
		                                                                        ref Int32 p_session_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_satsang_centre_id", p_satsang_centre_id, INT, IN, p);
			csp("p_satsang_centre_nm", p_satsang_centre_nm, VARCHAR, IN, p);
			csp("p_department_ids", p_department_ids, VARCHAR, IN, p);
			csp("p_is_outstation", p_is_outstation, VARCHAR, IN, p);
			csp("p_gender", p_gender, VARCHAR, IN, p);
			csp("p_district_ids", p_district_ids, VARCHAR, IN, p);
			csp("p_is_show_district", p_is_show_district, VARCHAR, IN, p);
			csp("p_session_id", p_session_id, INT, INOUT, p);
			return p;
		}
		
public DataSet GenerateSewadarListWithoutPhoto(Int32? p_satsang_centre_id, 
		                                                    String p_satsang_centre_nm, 
		                                                    String p_department_ids, 
		                                                    String p_is_outstation, 
		                                                    String p_gender, 
		                                                    String p_district_ids, 
		                                                    String p_is_show_district, 
		                                                    ref Int32 p_session_id)
		{
			List<SqlParameter> prms = GenerateSewadarListWithoutPhoto_Params(p_satsang_centre_id, p_satsang_centre_nm, p_department_ids, p_is_outstation, p_gender, p_district_ids, p_is_show_district, ref p_session_id);
			DataSet dset = esp("GenerateSewadarListWithoutPhoto", prms);
			p_session_id = (System.Int32)prms.FirstOrDefault(p => p.ParameterName == "p_session_id").Value;

			return dset;
		}
		
public string GenerateSewadarListWithoutPhotoAsTask(Int32? p_satsang_centre_id, 
		                                                        String p_satsang_centre_nm, 
		                                                        String p_department_ids, 
		                                                        String p_is_outstation, 
		                                                        String p_gender, 
		                                                        String p_district_ids, 
		                                                        String p_is_show_district, 
		                                                        ref Int32 p_session_id)
		{
			List<SqlParameter> prms = GenerateSewadarListWithoutPhoto_Params(p_satsang_centre_id, p_satsang_centre_nm, p_department_ids, p_is_outstation, p_gender, p_district_ids, p_is_show_district, ref p_session_id);
			return gps("GenerateSewadarListWithoutPhoto", prms);

		}
		
		
		
private List<SqlParameter> GenerateSewadarListWithoutWeeklyCentres_Params(Int32? p_satsang_centre_id, 
		                                                                                String p_satsang_centre_nm, 
		                                                                                String p_department_ids, 
		                                                                                String p_sub_department_ids, 
		                                                                                String p_is_outstation, 
		                                                                                String p_gender, 
		                                                                                String p_district_ids, 
		                                                                                ref Int32 p_session_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_satsang_centre_id", p_satsang_centre_id, INT, IN, p);
			csp("p_satsang_centre_nm", p_satsang_centre_nm, VARCHAR, IN, p);
			csp("p_department_ids", p_department_ids, VARCHAR, IN, p);
			csp("p_sub_department_ids", p_sub_department_ids, VARCHAR, IN, p);
			csp("p_is_outstation", p_is_outstation, VARCHAR, IN, p);
			csp("p_gender", p_gender, VARCHAR, IN, p);
			csp("p_district_ids", p_district_ids, VARCHAR, IN, p);
			csp("p_session_id", p_session_id, INT, INOUT, p);
			return p;
		}
		
public DataSet GenerateSewadarListWithoutWeeklyCentres(Int32? p_satsang_centre_id, 
		                                                            String p_satsang_centre_nm, 
		                                                            String p_department_ids, 
		                                                            String p_sub_department_ids, 
		                                                            String p_is_outstation, 
		                                                            String p_gender, 
		                                                            String p_district_ids, 
		                                                            ref Int32 p_session_id)
		{
			List<SqlParameter> prms = GenerateSewadarListWithoutWeeklyCentres_Params(p_satsang_centre_id, p_satsang_centre_nm, p_department_ids, p_sub_department_ids, p_is_outstation, p_gender, p_district_ids, ref p_session_id);
			DataSet dset = esp("GenerateSewadarListWithoutWeeklyCentres", prms);
			p_session_id = (System.Int32)prms.FirstOrDefault(p => p.ParameterName == "p_session_id").Value;

			return dset;
		}
		
public string GenerateSewadarListWithoutWeeklyCentresAsTask(Int32? p_satsang_centre_id, 
		                                                                String p_satsang_centre_nm, 
		                                                                String p_department_ids, 
		                                                                String p_sub_department_ids, 
		                                                                String p_is_outstation, 
		                                                                String p_gender, 
		                                                                String p_district_ids, 
		                                                                ref Int32 p_session_id)
		{
			List<SqlParameter> prms = GenerateSewadarListWithoutWeeklyCentres_Params(p_satsang_centre_id, p_satsang_centre_nm, p_department_ids, p_sub_department_ids, p_is_outstation, p_gender, p_district_ids, ref p_session_id);
			return gps("GenerateSewadarListWithoutWeeklyCentres", prms);

		}
		
		
		
private List<SqlParameter> GenerateSewadarRegister_Params(Int32? p_satsang_centre_id, 
		                                                                String p_satsang_centre_nm, 
		                                                                String p_department_ids, 
		                                                                String p_sub_department_ids, 
		                                                                String p_is_outstation, 
		                                                                String p_gender, 
		                                                                String p_district_ids, 
		                                                                String p_is_show_district, 
		                                                                Int32? p_sewadar_list_id, 
		                                                                ref Int32 p_session_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_satsang_centre_id", p_satsang_centre_id, INT, IN, p);
			csp("p_satsang_centre_nm", p_satsang_centre_nm, VARCHAR, IN, p);
			csp("p_department_ids", p_department_ids, VARCHAR, IN, p);
			csp("p_sub_department_ids", p_sub_department_ids, VARCHAR, IN, p);
			csp("p_is_outstation", p_is_outstation, VARCHAR, IN, p);
			csp("p_gender", p_gender, VARCHAR, IN, p);
			csp("p_district_ids", p_district_ids, VARCHAR, IN, p);
			csp("p_is_show_district", p_is_show_district, VARCHAR, IN, p);
			csp("p_sewadar_list_id", p_sewadar_list_id, INT, IN, p);
			csp("p_session_id", p_session_id, INT, INOUT, p);
			return p;
		}
		
public DataSet GenerateSewadarRegister(Int32? p_satsang_centre_id, 
		                                            String p_satsang_centre_nm, 
		                                            String p_department_ids, 
		                                            String p_sub_department_ids, 
		                                            String p_is_outstation, 
		                                            String p_gender, 
		                                            String p_district_ids, 
		                                            String p_is_show_district, 
		                                            Int32? p_sewadar_list_id, 
		                                            ref Int32 p_session_id)
		{
			List<SqlParameter> prms = GenerateSewadarRegister_Params(p_satsang_centre_id, p_satsang_centre_nm, p_department_ids, p_sub_department_ids, p_is_outstation, p_gender, p_district_ids, p_is_show_district, p_sewadar_list_id, ref p_session_id);
			DataSet dset = esp("GenerateSewadarRegister", prms);
			p_session_id = (System.Int32)prms.FirstOrDefault(p => p.ParameterName == "p_session_id").Value;

			return dset;
		}
		
public string GenerateSewadarRegisterAsTask(Int32? p_satsang_centre_id, 
		                                                String p_satsang_centre_nm, 
		                                                String p_department_ids, 
		                                                String p_sub_department_ids, 
		                                                String p_is_outstation, 
		                                                String p_gender, 
		                                                String p_district_ids, 
		                                                String p_is_show_district, 
		                                                Int32? p_sewadar_list_id, 
		                                                ref Int32 p_session_id)
		{
			List<SqlParameter> prms = GenerateSewadarRegister_Params(p_satsang_centre_id, p_satsang_centre_nm, p_department_ids, p_sub_department_ids, p_is_outstation, p_gender, p_district_ids, p_is_show_district, p_sewadar_list_id, ref p_session_id);
			return gps("GenerateSewadarRegister", prms);

		}
		
		
		
private List<SqlParameter> GenerateSewadarRgsPhotoIndctr_Params(Int32? p_satsang_centre_id, 
		                                                                    String p_satsang_centre_nm, 
		                                                                    String p_department_ids, 
		                                                                    String p_sub_department_ids, 
		                                                                    String p_is_outstation, 
		                                                                    String p_gender, 
		                                                                    DateTime? p_photo_after_dt, 
		                                                                    Int32? p_sewadar_list_id, 
		                                                                    ref Int32 p_session_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_satsang_centre_id", p_satsang_centre_id, INT, IN, p);
			csp("p_satsang_centre_nm", p_satsang_centre_nm, VARCHAR, IN, p);
			csp("p_department_ids", p_department_ids, VARCHAR, IN, p);
			csp("p_sub_department_ids", p_sub_department_ids, VARCHAR, IN, p);
			csp("p_is_outstation", p_is_outstation, VARCHAR, IN, p);
			csp("p_gender", p_gender, VARCHAR, IN, p);
			csp("p_photo_after_dt", p_photo_after_dt, DATETIME, IN, p);
			csp("p_sewadar_list_id", p_sewadar_list_id, INT, IN, p);
			csp("p_session_id", p_session_id, INT, INOUT, p);
			return p;
		}
		
public DataSet GenerateSewadarRgsPhotoIndctr(Int32? p_satsang_centre_id, 
		                                                String p_satsang_centre_nm, 
		                                                String p_department_ids, 
		                                                String p_sub_department_ids, 
		                                                String p_is_outstation, 
		                                                String p_gender, 
		                                                DateTime? p_photo_after_dt, 
		                                                Int32? p_sewadar_list_id, 
		                                                ref Int32 p_session_id)
		{
			List<SqlParameter> prms = GenerateSewadarRgsPhotoIndctr_Params(p_satsang_centre_id, p_satsang_centre_nm, p_department_ids, p_sub_department_ids, p_is_outstation, p_gender, p_photo_after_dt, p_sewadar_list_id, ref p_session_id);
			DataSet dset = esp("GenerateSewadarRgsPhotoIndctr", prms);
			p_session_id = (System.Int32)prms.FirstOrDefault(p => p.ParameterName == "p_session_id").Value;

			return dset;
		}
		
public string GenerateSewadarRgsPhotoIndctrAsTask(Int32? p_satsang_centre_id, 
		                                                        String p_satsang_centre_nm, 
		                                                        String p_department_ids, 
		                                                        String p_sub_department_ids, 
		                                                        String p_is_outstation, 
		                                                        String p_gender, 
		                                                        DateTime? p_photo_after_dt, 
		                                                        Int32? p_sewadar_list_id, 
		                                                        ref Int32 p_session_id)
		{
			List<SqlParameter> prms = GenerateSewadarRgsPhotoIndctr_Params(p_satsang_centre_id, p_satsang_centre_nm, p_department_ids, p_sub_department_ids, p_is_outstation, p_gender, p_photo_after_dt, p_sewadar_list_id, ref p_session_id);
			return gps("GenerateSewadarRgsPhotoIndctr", prms);

		}
		
		
		
private List<SqlParameter> GenerateSewadarsAcquiredAge_Params(Int32? p_satsang_centre_id, 
		                                                                    String p_satsang_centre_nm, 
		                                                                    DateTime? p_males_born_bfr_dt, 
		                                                                    DateTime? p_females_born_bfr_dt, 
		                                                                    String p_gender, 
		                                                                    Int32? p_sewadar_list_id, 
		                                                                    String p_is_summary, 
		                                                                    ref Int32 p_session_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_satsang_centre_id", p_satsang_centre_id, INT, IN, p);
			csp("p_satsang_centre_nm", p_satsang_centre_nm, VARCHAR, IN, p);
			csp("p_males_born_bfr_dt", p_males_born_bfr_dt, SMALLDATETIME, IN, p);
			csp("p_females_born_bfr_dt", p_females_born_bfr_dt, SMALLDATETIME, IN, p);
			csp("p_gender", p_gender, VARCHAR, IN, p);
			csp("p_sewadar_list_id", p_sewadar_list_id, INT, IN, p);
			csp("p_is_summary", p_is_summary, VARCHAR, IN, p);
			csp("p_session_id", p_session_id, INT, INOUT, p);
			return p;
		}
		
public DataSet GenerateSewadarsAcquiredAge(Int32? p_satsang_centre_id, 
		                                                String p_satsang_centre_nm, 
		                                                DateTime? p_males_born_bfr_dt, 
		                                                DateTime? p_females_born_bfr_dt, 
		                                                String p_gender, 
		                                                Int32? p_sewadar_list_id, 
		                                                String p_is_summary, 
		                                                ref Int32 p_session_id)
		{
			List<SqlParameter> prms = GenerateSewadarsAcquiredAge_Params(p_satsang_centre_id, p_satsang_centre_nm, p_males_born_bfr_dt, p_females_born_bfr_dt, p_gender, p_sewadar_list_id, p_is_summary, ref p_session_id);
			DataSet dset = esp("GenerateSewadarsAcquiredAge", prms);
			p_session_id = (System.Int32)prms.FirstOrDefault(p => p.ParameterName == "p_session_id").Value;

			return dset;
		}
		
public string GenerateSewadarsAcquiredAgeAsTask(Int32? p_satsang_centre_id, 
		                                                    String p_satsang_centre_nm, 
		                                                    DateTime? p_males_born_bfr_dt, 
		                                                    DateTime? p_females_born_bfr_dt, 
		                                                    String p_gender, 
		                                                    Int32? p_sewadar_list_id, 
		                                                    String p_is_summary, 
		                                                    ref Int32 p_session_id)
		{
			List<SqlParameter> prms = GenerateSewadarsAcquiredAge_Params(p_satsang_centre_id, p_satsang_centre_nm, p_males_born_bfr_dt, p_females_born_bfr_dt, p_gender, p_sewadar_list_id, p_is_summary, ref p_session_id);
			return gps("GenerateSewadarsAcquiredAge", prms);

		}
		
		
		
private List<SqlParameter> GenerateSewadarsAddrTelList_Params(Int32? p_satsang_centre_id, 
		                                                                    String p_satsang_centre_nm, 
		                                                                    String p_department_ids, 
		                                                                    String p_sub_department_ids, 
		                                                                    String p_is_outstation, 
		                                                                    String p_gender, 
		                                                                    Int32? p_area_id, 
		                                                                    String p_area_nm, 
		                                                                    Int32? p_sewadar_list_id, 
		                                                                    ref Int32 p_session_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_satsang_centre_id", p_satsang_centre_id, INT, IN, p);
			csp("p_satsang_centre_nm", p_satsang_centre_nm, VARCHAR, IN, p);
			csp("p_department_ids", p_department_ids, VARCHAR, IN, p);
			csp("p_sub_department_ids", p_sub_department_ids, VARCHAR, IN, p);
			csp("p_is_outstation", p_is_outstation, VARCHAR, IN, p);
			csp("p_gender", p_gender, VARCHAR, IN, p);
			csp("p_area_id", p_area_id, INT, IN, p);
			csp("p_area_nm", p_area_nm, VARCHAR, IN, p);
			csp("p_sewadar_list_id", p_sewadar_list_id, INT, IN, p);
			csp("p_session_id", p_session_id, INT, INOUT, p);
			return p;
		}
		
public DataSet GenerateSewadarsAddrTelList(Int32? p_satsang_centre_id, 
		                                                String p_satsang_centre_nm, 
		                                                String p_department_ids, 
		                                                String p_sub_department_ids, 
		                                                String p_is_outstation, 
		                                                String p_gender, 
		                                                Int32? p_area_id, 
		                                                String p_area_nm, 
		                                                Int32? p_sewadar_list_id, 
		                                                ref Int32 p_session_id)
		{
			List<SqlParameter> prms = GenerateSewadarsAddrTelList_Params(p_satsang_centre_id, p_satsang_centre_nm, p_department_ids, p_sub_department_ids, p_is_outstation, p_gender, p_area_id, p_area_nm, p_sewadar_list_id, ref p_session_id);
			DataSet dset = esp("GenerateSewadarsAddrTelList", prms);
			p_session_id = (System.Int32)prms.FirstOrDefault(p => p.ParameterName == "p_session_id").Value;

			return dset;
		}
		
public string GenerateSewadarsAddrTelListAsTask(Int32? p_satsang_centre_id, 
		                                                    String p_satsang_centre_nm, 
		                                                    String p_department_ids, 
		                                                    String p_sub_department_ids, 
		                                                    String p_is_outstation, 
		                                                    String p_gender, 
		                                                    Int32? p_area_id, 
		                                                    String p_area_nm, 
		                                                    Int32? p_sewadar_list_id, 
		                                                    ref Int32 p_session_id)
		{
			List<SqlParameter> prms = GenerateSewadarsAddrTelList_Params(p_satsang_centre_id, p_satsang_centre_nm, p_department_ids, p_sub_department_ids, p_is_outstation, p_gender, p_area_id, p_area_nm, p_sewadar_list_id, ref p_session_id);
			return gps("GenerateSewadarsAddrTelList", prms);

		}
		
		
		
private List<SqlParameter> GenerateSewadarsEligiblesList_Params(Int16? p_credit_specification_id, 
		                                                                    String p_department_ids, 
		                                                                    String p_sub_department_ids, 
		                                                                    String p_gender, 
		                                                                    Int16? p_attribute_id, 
		                                                                    String p_attribute_nm, 
		                                                                    String p_is_summary, 
		                                                                    ref Int32 p_session_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_credit_specification_id", p_credit_specification_id, SMALLINT, IN, p);
			csp("p_department_ids", p_department_ids, VARCHAR, IN, p);
			csp("p_sub_department_ids", p_sub_department_ids, VARCHAR, IN, p);
			csp("p_gender", p_gender, VARCHAR, IN, p);
			csp("p_attribute_id", p_attribute_id, SMALLINT, IN, p);
			csp("p_attribute_nm", p_attribute_nm, VARCHAR, IN, p);
			csp("p_is_summary", p_is_summary, VARCHAR, IN, p);
			csp("p_session_id", p_session_id, INT, INOUT, p);
			return p;
		}
		
public DataSet GenerateSewadarsEligiblesList(Int16? p_credit_specification_id, 
		                                                String p_department_ids, 
		                                                String p_sub_department_ids, 
		                                                String p_gender, 
		                                                Int16? p_attribute_id, 
		                                                String p_attribute_nm, 
		                                                String p_is_summary, 
		                                                ref Int32 p_session_id)
		{
			List<SqlParameter> prms = GenerateSewadarsEligiblesList_Params(p_credit_specification_id, p_department_ids, p_sub_department_ids, p_gender, p_attribute_id, p_attribute_nm, p_is_summary, ref p_session_id);
			DataSet dset = esp("GenerateSewadarsEligiblesList", prms);
			p_session_id = (System.Int32)prms.FirstOrDefault(p => p.ParameterName == "p_session_id").Value;

			return dset;
		}
		
public string GenerateSewadarsEligiblesListAsTask(Int16? p_credit_specification_id, 
		                                                        String p_department_ids, 
		                                                        String p_sub_department_ids, 
		                                                        String p_gender, 
		                                                        Int16? p_attribute_id, 
		                                                        String p_attribute_nm, 
		                                                        String p_is_summary, 
		                                                        ref Int32 p_session_id)
		{
			List<SqlParameter> prms = GenerateSewadarsEligiblesList_Params(p_credit_specification_id, p_department_ids, p_sub_department_ids, p_gender, p_attribute_id, p_attribute_nm, p_is_summary, ref p_session_id);
			return gps("GenerateSewadarsEligiblesList", prms);

		}
		
		
		
private List<SqlParameter> GenerateSewadarsEligiblesListNew_Params(Int16? p_credit_specification_id, 
		                                                                        String p_department_ids, 
		                                                                        String p_sub_department_ids, 
		                                                                        String p_gender, 
		                                                                        Int16? p_attribute_id, 
		                                                                        String p_attribute_nm, 
		                                                                        String p_is_summary, 
		                                                                        ref Int32 p_session_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_credit_specification_id", p_credit_specification_id, SMALLINT, IN, p);
			csp("p_department_ids", p_department_ids, VARCHAR, IN, p);
			csp("p_sub_department_ids", p_sub_department_ids, VARCHAR, IN, p);
			csp("p_gender", p_gender, VARCHAR, IN, p);
			csp("p_attribute_id", p_attribute_id, SMALLINT, IN, p);
			csp("p_attribute_nm", p_attribute_nm, VARCHAR, IN, p);
			csp("p_is_summary", p_is_summary, VARCHAR, IN, p);
			csp("p_session_id", p_session_id, INT, INOUT, p);
			return p;
		}
		
public DataSet GenerateSewadarsEligiblesListNew(Int16? p_credit_specification_id, 
		                                                    String p_department_ids, 
		                                                    String p_sub_department_ids, 
		                                                    String p_gender, 
		                                                    Int16? p_attribute_id, 
		                                                    String p_attribute_nm, 
		                                                    String p_is_summary, 
		                                                    ref Int32 p_session_id)
		{
			List<SqlParameter> prms = GenerateSewadarsEligiblesListNew_Params(p_credit_specification_id, p_department_ids, p_sub_department_ids, p_gender, p_attribute_id, p_attribute_nm, p_is_summary, ref p_session_id);
			DataSet dset = esp("GenerateSewadarsEligiblesListNew", prms);
			p_session_id = (System.Int32)prms.FirstOrDefault(p => p.ParameterName == "p_session_id").Value;

			return dset;
		}
		
public string GenerateSewadarsEligiblesListNewAsTask(Int16? p_credit_specification_id, 
		                                                        String p_department_ids, 
		                                                        String p_sub_department_ids, 
		                                                        String p_gender, 
		                                                        Int16? p_attribute_id, 
		                                                        String p_attribute_nm, 
		                                                        String p_is_summary, 
		                                                        ref Int32 p_session_id)
		{
			List<SqlParameter> prms = GenerateSewadarsEligiblesListNew_Params(p_credit_specification_id, p_department_ids, p_sub_department_ids, p_gender, p_attribute_id, p_attribute_nm, p_is_summary, ref p_session_id);
			return gps("GenerateSewadarsEligiblesListNew", prms);

		}
		
		
		
private List<SqlParameter> GenerateSewadarsListWithMissingRemarks_Params(Int32? p_satsang_centre_id, 
		                                                                            String p_satsang_centre_nm, 
		                                                                            String p_remarks_type, 
		                                                                            ref Int32 p_session_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_satsang_centre_id", p_satsang_centre_id, INT, IN, p);
			csp("p_satsang_centre_nm", p_satsang_centre_nm, VARCHAR, IN, p);
			csp("p_remarks_type", p_remarks_type, VARCHAR, IN, p);
			csp("p_session_id", p_session_id, INT, INOUT, p);
			return p;
		}
		
public DataSet GenerateSewadarsListWithMissingRemarks(Int32? p_satsang_centre_id, 
		                                                            String p_satsang_centre_nm, 
		                                                            String p_remarks_type, 
		                                                            ref Int32 p_session_id)
		{
			List<SqlParameter> prms = GenerateSewadarsListWithMissingRemarks_Params(p_satsang_centre_id, p_satsang_centre_nm, p_remarks_type, ref p_session_id);
			DataSet dset = esp("GenerateSewadarsListWithMissingRemarks", prms);
			p_session_id = (System.Int32)prms.FirstOrDefault(p => p.ParameterName == "p_session_id").Value;

			return dset;
		}
		
public string GenerateSewadarsListWithMissingRemarksAsTask(Int32? p_satsang_centre_id, 
		                                                                String p_satsang_centre_nm, 
		                                                                String p_remarks_type, 
		                                                                ref Int32 p_session_id)
		{
			List<SqlParameter> prms = GenerateSewadarsListWithMissingRemarks_Params(p_satsang_centre_id, p_satsang_centre_nm, p_remarks_type, ref p_session_id);
			return gps("GenerateSewadarsListWithMissingRemarks", prms);

		}
		
		
		
private List<SqlParameter> GenerateSewadarsListWithRemarks_Params(Int32? p_satsang_centre_id, 
		                                                                        String p_satsang_centre_nm, 
		                                                                        String p_gender, 
		                                                                        String p_remarks_type, 
		                                                                        Int32? p_sewadar_list_id, 
		                                                                        ref Int32 p_session_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_satsang_centre_id", p_satsang_centre_id, INT, IN, p);
			csp("p_satsang_centre_nm", p_satsang_centre_nm, VARCHAR, IN, p);
			csp("p_gender", p_gender, VARCHAR, IN, p);
			csp("p_remarks_type", p_remarks_type, VARCHAR, IN, p);
			csp("p_sewadar_list_id", p_sewadar_list_id, INT, IN, p);
			csp("p_session_id", p_session_id, INT, INOUT, p);
			return p;
		}
		
public DataSet GenerateSewadarsListWithRemarks(Int32? p_satsang_centre_id, 
		                                                    String p_satsang_centre_nm, 
		                                                    String p_gender, 
		                                                    String p_remarks_type, 
		                                                    Int32? p_sewadar_list_id, 
		                                                    ref Int32 p_session_id)
		{
			List<SqlParameter> prms = GenerateSewadarsListWithRemarks_Params(p_satsang_centre_id, p_satsang_centre_nm, p_gender, p_remarks_type, p_sewadar_list_id, ref p_session_id);
			DataSet dset = esp("GenerateSewadarsListWithRemarks", prms);
			p_session_id = (System.Int32)prms.FirstOrDefault(p => p.ParameterName == "p_session_id").Value;

			return dset;
		}
		
public string GenerateSewadarsListWithRemarksAsTask(Int32? p_satsang_centre_id, 
		                                                        String p_satsang_centre_nm, 
		                                                        String p_gender, 
		                                                        String p_remarks_type, 
		                                                        Int32? p_sewadar_list_id, 
		                                                        ref Int32 p_session_id)
		{
			List<SqlParameter> prms = GenerateSewadarsListWithRemarks_Params(p_satsang_centre_id, p_satsang_centre_nm, p_gender, p_remarks_type, p_sewadar_list_id, ref p_session_id);
			return gps("GenerateSewadarsListWithRemarks", prms);

		}
		
		
		
private List<SqlParameter> GenerateSewadarsPhotoNotClickd_Params(Int32? p_satsang_centre_id, 
		                                                                    String p_satsang_centre_nm, 
		                                                                    String p_department_ids, 
		                                                                    String p_sub_department_ids, 
		                                                                    String p_is_outstation, 
		                                                                    String p_gender, 
		                                                                    DateTime? p_photo_after_dt, 
		                                                                    ref Int32 p_session_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_satsang_centre_id", p_satsang_centre_id, INT, IN, p);
			csp("p_satsang_centre_nm", p_satsang_centre_nm, VARCHAR, IN, p);
			csp("p_department_ids", p_department_ids, VARCHAR, IN, p);
			csp("p_sub_department_ids", p_sub_department_ids, VARCHAR, IN, p);
			csp("p_is_outstation", p_is_outstation, VARCHAR, IN, p);
			csp("p_gender", p_gender, VARCHAR, IN, p);
			csp("p_photo_after_dt", p_photo_after_dt, DATETIME, IN, p);
			csp("p_session_id", p_session_id, INT, INOUT, p);
			return p;
		}
		
public DataSet GenerateSewadarsPhotoNotClickd(Int32? p_satsang_centre_id, 
		                                                    String p_satsang_centre_nm, 
		                                                    String p_department_ids, 
		                                                    String p_sub_department_ids, 
		                                                    String p_is_outstation, 
		                                                    String p_gender, 
		                                                    DateTime? p_photo_after_dt, 
		                                                    ref Int32 p_session_id)
		{
			List<SqlParameter> prms = GenerateSewadarsPhotoNotClickd_Params(p_satsang_centre_id, p_satsang_centre_nm, p_department_ids, p_sub_department_ids, p_is_outstation, p_gender, p_photo_after_dt, ref p_session_id);
			DataSet dset = esp("GenerateSewadarsPhotoNotClickd", prms);
			p_session_id = (System.Int32)prms.FirstOrDefault(p => p.ParameterName == "p_session_id").Value;

			return dset;
		}
		
public string GenerateSewadarsPhotoNotClickdAsTask(Int32? p_satsang_centre_id, 
		                                                        String p_satsang_centre_nm, 
		                                                        String p_department_ids, 
		                                                        String p_sub_department_ids, 
		                                                        String p_is_outstation, 
		                                                        String p_gender, 
		                                                        DateTime? p_photo_after_dt, 
		                                                        ref Int32 p_session_id)
		{
			List<SqlParameter> prms = GenerateSewadarsPhotoNotClickd_Params(p_satsang_centre_id, p_satsang_centre_nm, p_department_ids, p_sub_department_ids, p_is_outstation, p_gender, p_photo_after_dt, ref p_session_id);
			return gps("GenerateSewadarsPhotoNotClickd", prms);

		}
		
		
		
private List<SqlParameter> GenerateSewadarsQualifications_Params(Int32? p_satsang_centre_id, 
		                                                                    String p_satsang_centre_nm, 
		                                                                    String p_department_ids, 
		                                                                    String p_is_outstation, 
		                                                                    String p_gender, 
		                                                                    Int32? p_sewadar_list_id, 
		                                                                    ref Int32 p_session_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_satsang_centre_id", p_satsang_centre_id, INT, IN, p);
			csp("p_satsang_centre_nm", p_satsang_centre_nm, VARCHAR, IN, p);
			csp("p_department_ids", p_department_ids, VARCHAR, IN, p);
			csp("p_is_outstation", p_is_outstation, VARCHAR, IN, p);
			csp("p_gender", p_gender, VARCHAR, IN, p);
			csp("p_sewadar_list_id", p_sewadar_list_id, INT, IN, p);
			csp("p_session_id", p_session_id, INT, INOUT, p);
			return p;
		}
		
public DataSet GenerateSewadarsQualifications(Int32? p_satsang_centre_id, 
		                                                    String p_satsang_centre_nm, 
		                                                    String p_department_ids, 
		                                                    String p_is_outstation, 
		                                                    String p_gender, 
		                                                    Int32? p_sewadar_list_id, 
		                                                    ref Int32 p_session_id)
		{
			List<SqlParameter> prms = GenerateSewadarsQualifications_Params(p_satsang_centre_id, p_satsang_centre_nm, p_department_ids, p_is_outstation, p_gender, p_sewadar_list_id, ref p_session_id);
			DataSet dset = esp("GenerateSewadarsQualifications", prms);
			p_session_id = (System.Int32)prms.FirstOrDefault(p => p.ParameterName == "p_session_id").Value;

			return dset;
		}
		
public string GenerateSewadarsQualificationsAsTask(Int32? p_satsang_centre_id, 
		                                                        String p_satsang_centre_nm, 
		                                                        String p_department_ids, 
		                                                        String p_is_outstation, 
		                                                        String p_gender, 
		                                                        Int32? p_sewadar_list_id, 
		                                                        ref Int32 p_session_id)
		{
			List<SqlParameter> prms = GenerateSewadarsQualifications_Params(p_satsang_centre_id, p_satsang_centre_nm, p_department_ids, p_is_outstation, p_gender, p_sewadar_list_id, ref p_session_id);
			return gps("GenerateSewadarsQualifications", prms);

		}
		
		
		
private List<SqlParameter> GenerateSewadarsReportingCards_Params(Int32? p_satsang_centre_id, 
		                                                                    String p_satsang_centre_nm, 
		                                                                    String p_department_ids, 
		                                                                    String p_sub_department_ids, 
		                                                                    String p_is_outstation, 
		                                                                    String p_gender, 
		                                                                    Int32? p_area_id, 
		                                                                    String p_area_nm, 
		                                                                    Int32? p_sewadar_list_id, 
		                                                                    Int32? p_sewa_id, 
		                                                                    String p_sewa_nm, 
		                                                                    ref Int32 p_session_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_satsang_centre_id", p_satsang_centre_id, INT, IN, p);
			csp("p_satsang_centre_nm", p_satsang_centre_nm, VARCHAR, IN, p);
			csp("p_department_ids", p_department_ids, VARCHAR, IN, p);
			csp("p_sub_department_ids", p_sub_department_ids, VARCHAR, IN, p);
			csp("p_is_outstation", p_is_outstation, VARCHAR, IN, p);
			csp("p_gender", p_gender, VARCHAR, IN, p);
			csp("p_area_id", p_area_id, INT, IN, p);
			csp("p_area_nm", p_area_nm, VARCHAR, IN, p);
			csp("p_sewadar_list_id", p_sewadar_list_id, INT, IN, p);
			csp("p_sewa_id", p_sewa_id, INT, IN, p);
			csp("p_sewa_nm", p_sewa_nm, VARCHAR, IN, p);
			csp("p_session_id", p_session_id, INT, INOUT, p);
			return p;
		}
		
public DataSet GenerateSewadarsReportingCards(Int32? p_satsang_centre_id, 
		                                                    String p_satsang_centre_nm, 
		                                                    String p_department_ids, 
		                                                    String p_sub_department_ids, 
		                                                    String p_is_outstation, 
		                                                    String p_gender, 
		                                                    Int32? p_area_id, 
		                                                    String p_area_nm, 
		                                                    Int32? p_sewadar_list_id, 
		                                                    Int32? p_sewa_id, 
		                                                    String p_sewa_nm, 
		                                                    ref Int32 p_session_id)
		{
			List<SqlParameter> prms = GenerateSewadarsReportingCards_Params(p_satsang_centre_id, p_satsang_centre_nm, p_department_ids, p_sub_department_ids, p_is_outstation, p_gender, p_area_id, p_area_nm, p_sewadar_list_id, p_sewa_id, p_sewa_nm, ref p_session_id);
			DataSet dset = esp("GenerateSewadarsReportingCards", prms);
			p_session_id = (System.Int32)prms.FirstOrDefault(p => p.ParameterName == "p_session_id").Value;

			return dset;
		}
		
public string GenerateSewadarsReportingCardsAsTask(Int32? p_satsang_centre_id, 
		                                                        String p_satsang_centre_nm, 
		                                                        String p_department_ids, 
		                                                        String p_sub_department_ids, 
		                                                        String p_is_outstation, 
		                                                        String p_gender, 
		                                                        Int32? p_area_id, 
		                                                        String p_area_nm, 
		                                                        Int32? p_sewadar_list_id, 
		                                                        Int32? p_sewa_id, 
		                                                        String p_sewa_nm, 
		                                                        ref Int32 p_session_id)
		{
			List<SqlParameter> prms = GenerateSewadarsReportingCards_Params(p_satsang_centre_id, p_satsang_centre_nm, p_department_ids, p_sub_department_ids, p_is_outstation, p_gender, p_area_id, p_area_nm, p_sewadar_list_id, p_sewa_id, p_sewa_nm, ref p_session_id);
			return gps("GenerateSewadarsReportingCards", prms);

		}
		
		
		
private List<SqlParameter> GenerateSewadarsToBeMadeInactive_Params(Int32? p_satsang_centre_id, 
		                                                                        String p_satsang_centre_nm, 
		                                                                        String p_department_ids, 
		                                                                        String p_sub_department_ids, 
		                                                                        String p_is_outstation, 
		                                                                        String p_gender, 
		                                                                        DateTime? p_sewas_after_dt, 
		                                                                        Int32? p_max_sewa_days, 
		                                                                        ref Int32 p_session_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_satsang_centre_id", p_satsang_centre_id, INT, IN, p);
			csp("p_satsang_centre_nm", p_satsang_centre_nm, VARCHAR, IN, p);
			csp("p_department_ids", p_department_ids, VARCHAR, IN, p);
			csp("p_sub_department_ids", p_sub_department_ids, VARCHAR, IN, p);
			csp("p_is_outstation", p_is_outstation, VARCHAR, IN, p);
			csp("p_gender", p_gender, VARCHAR, IN, p);
			csp("p_sewas_after_dt", p_sewas_after_dt, DATETIME, IN, p);
			csp("p_max_sewa_days", p_max_sewa_days, INT, IN, p);
			csp("p_session_id", p_session_id, INT, INOUT, p);
			return p;
		}
		
public DataSet GenerateSewadarsToBeMadeInactive(Int32? p_satsang_centre_id, 
		                                                    String p_satsang_centre_nm, 
		                                                    String p_department_ids, 
		                                                    String p_sub_department_ids, 
		                                                    String p_is_outstation, 
		                                                    String p_gender, 
		                                                    DateTime? p_sewas_after_dt, 
		                                                    Int32? p_max_sewa_days, 
		                                                    ref Int32 p_session_id)
		{
			List<SqlParameter> prms = GenerateSewadarsToBeMadeInactive_Params(p_satsang_centre_id, p_satsang_centre_nm, p_department_ids, p_sub_department_ids, p_is_outstation, p_gender, p_sewas_after_dt, p_max_sewa_days, ref p_session_id);
			DataSet dset = esp("GenerateSewadarsToBeMadeInactive", prms);
			p_session_id = (System.Int32)prms.FirstOrDefault(p => p.ParameterName == "p_session_id").Value;

			return dset;
		}
		
public string GenerateSewadarsToBeMadeInactiveAsTask(Int32? p_satsang_centre_id, 
		                                                        String p_satsang_centre_nm, 
		                                                        String p_department_ids, 
		                                                        String p_sub_department_ids, 
		                                                        String p_is_outstation, 
		                                                        String p_gender, 
		                                                        DateTime? p_sewas_after_dt, 
		                                                        Int32? p_max_sewa_days, 
		                                                        ref Int32 p_session_id)
		{
			List<SqlParameter> prms = GenerateSewadarsToBeMadeInactive_Params(p_satsang_centre_id, p_satsang_centre_nm, p_department_ids, p_sub_department_ids, p_is_outstation, p_gender, p_sewas_after_dt, p_max_sewa_days, ref p_session_id);
			return gps("GenerateSewadarsToBeMadeInactive", prms);

		}
		
		
		
private List<SqlParameter> GenerateSewadarsWithoutAttendance_Params(Int32? p_satsang_centre_id, 
		                                                                        String p_satsang_centre_nm, 
		                                                                        String p_department_ids, 
		                                                                        String p_sub_department_ids, 
		                                                                        String p_is_outstation, 
		                                                                        String p_gender, 
		                                                                        Int32? p_sewa_id, 
		                                                                        ref Int32 p_session_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_satsang_centre_id", p_satsang_centre_id, INT, IN, p);
			csp("p_satsang_centre_nm", p_satsang_centre_nm, VARCHAR, IN, p);
			csp("p_department_ids", p_department_ids, VARCHAR, IN, p);
			csp("p_sub_department_ids", p_sub_department_ids, VARCHAR, IN, p);
			csp("p_is_outstation", p_is_outstation, VARCHAR, IN, p);
			csp("p_gender", p_gender, VARCHAR, IN, p);
			csp("p_sewa_id", p_sewa_id, INT, IN, p);
			csp("p_session_id", p_session_id, INT, INOUT, p);
			return p;
		}
		
public DataSet GenerateSewadarsWithoutAttendance(Int32? p_satsang_centre_id, 
		                                                    String p_satsang_centre_nm, 
		                                                    String p_department_ids, 
		                                                    String p_sub_department_ids, 
		                                                    String p_is_outstation, 
		                                                    String p_gender, 
		                                                    Int32? p_sewa_id, 
		                                                    ref Int32 p_session_id)
		{
			List<SqlParameter> prms = GenerateSewadarsWithoutAttendance_Params(p_satsang_centre_id, p_satsang_centre_nm, p_department_ids, p_sub_department_ids, p_is_outstation, p_gender, p_sewa_id, ref p_session_id);
			DataSet dset = esp("GenerateSewadarsWithoutAttendance", prms);
			p_session_id = (System.Int32)prms.FirstOrDefault(p => p.ParameterName == "p_session_id").Value;

			return dset;
		}
		
public string GenerateSewadarsWithoutAttendanceAsTask(Int32? p_satsang_centre_id, 
		                                                            String p_satsang_centre_nm, 
		                                                            String p_department_ids, 
		                                                            String p_sub_department_ids, 
		                                                            String p_is_outstation, 
		                                                            String p_gender, 
		                                                            Int32? p_sewa_id, 
		                                                            ref Int32 p_session_id)
		{
			List<SqlParameter> prms = GenerateSewadarsWithoutAttendance_Params(p_satsang_centre_id, p_satsang_centre_nm, p_department_ids, p_sub_department_ids, p_is_outstation, p_gender, p_sewa_id, ref p_session_id);
			return gps("GenerateSewadarsWithoutAttendance", prms);

		}
		
		
		
private List<SqlParameter> GenerateSewaSummary_Params(Int32? p_sewa_id, 
		                                                            String p_sewa_nm, 
		                                                            String p_is_exemption, 
		                                                            ref Int32 p_session_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_sewa_id", p_sewa_id, INT, IN, p);
			csp("p_sewa_nm", p_sewa_nm, VARCHAR, IN, p);
			csp("p_is_exemption", p_is_exemption, VARCHAR, IN, p);
			csp("p_session_id", p_session_id, INT, INOUT, p);
			return p;
		}
		
public DataSet GenerateSewaSummary(Int32? p_sewa_id, 
		                                        String p_sewa_nm, 
		                                        String p_is_exemption, 
		                                        ref Int32 p_session_id)
		{
			List<SqlParameter> prms = GenerateSewaSummary_Params(p_sewa_id, p_sewa_nm, p_is_exemption, ref p_session_id);
			DataSet dset = esp("GenerateSewaSummary", prms);
			p_session_id = (System.Int32)prms.FirstOrDefault(p => p.ParameterName == "p_session_id").Value;

			return dset;
		}
		
public string GenerateSewaSummaryAsTask(Int32? p_sewa_id, 
		                                            String p_sewa_nm, 
		                                            String p_is_exemption, 
		                                            ref Int32 p_session_id)
		{
			List<SqlParameter> prms = GenerateSewaSummary_Params(p_sewa_id, p_sewa_nm, p_is_exemption, ref p_session_id);
			return gps("GenerateSewaSummary", prms);

		}
		
		
		
private List<SqlParameter> GenerateSewaSummarySewadarList_Params(Int32? p_sewa_id, 
		                                                                    Int16? p_min_cnt, 
		                                                                    Int16? p_max_cnt, 
		                                                                    String p_department_ids, 
		                                                                    String p_sub_department_ids, 
		                                                                    String p_is_outstation, 
		                                                                    String p_gender, 
		                                                                    String p_is_summary, 
		                                                                    ref Int32 p_session_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_sewa_id", p_sewa_id, INT, IN, p);
			csp("p_min_cnt", p_min_cnt, SMALLINT, IN, p);
			csp("p_max_cnt", p_max_cnt, SMALLINT, IN, p);
			csp("p_department_ids", p_department_ids, VARCHAR, IN, p);
			csp("p_sub_department_ids", p_sub_department_ids, VARCHAR, IN, p);
			csp("p_is_outstation", p_is_outstation, VARCHAR, IN, p);
			csp("p_gender", p_gender, VARCHAR, IN, p);
			csp("p_is_summary", p_is_summary, VARCHAR, IN, p);
			csp("p_session_id", p_session_id, INT, INOUT, p);
			return p;
		}
		
public DataSet GenerateSewaSummarySewadarList(Int32? p_sewa_id, 
		                                                    Int16? p_min_cnt, 
		                                                    Int16? p_max_cnt, 
		                                                    String p_department_ids, 
		                                                    String p_sub_department_ids, 
		                                                    String p_is_outstation, 
		                                                    String p_gender, 
		                                                    String p_is_summary, 
		                                                    ref Int32 p_session_id)
		{
			List<SqlParameter> prms = GenerateSewaSummarySewadarList_Params(p_sewa_id, p_min_cnt, p_max_cnt, p_department_ids, p_sub_department_ids, p_is_outstation, p_gender, p_is_summary, ref p_session_id);
			DataSet dset = esp("GenerateSewaSummarySewadarList", prms);
			p_session_id = (System.Int32)prms.FirstOrDefault(p => p.ParameterName == "p_session_id").Value;

			return dset;
		}
		
public string GenerateSewaSummarySewadarListAsTask(Int32? p_sewa_id, 
		                                                        Int16? p_min_cnt, 
		                                                        Int16? p_max_cnt, 
		                                                        String p_department_ids, 
		                                                        String p_sub_department_ids, 
		                                                        String p_is_outstation, 
		                                                        String p_gender, 
		                                                        String p_is_summary, 
		                                                        ref Int32 p_session_id)
		{
			List<SqlParameter> prms = GenerateSewaSummarySewadarList_Params(p_sewa_id, p_min_cnt, p_max_cnt, p_department_ids, p_sub_department_ids, p_is_outstation, p_gender, p_is_summary, ref p_session_id);
			return gps("GenerateSewaSummarySewadarList", prms);

		}
		
		
		
private List<SqlParameter> GenerateSewaTeamList_Params(Int32? p_satsang_centre_id, 
		                                                            String p_satsang_centre_nm, 
		                                                            Int32? p_sewa_id, 
		                                                            ref Int32 p_session_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_satsang_centre_id", p_satsang_centre_id, INT, IN, p);
			csp("p_satsang_centre_nm", p_satsang_centre_nm, VARCHAR, IN, p);
			csp("p_sewa_id", p_sewa_id, INT, IN, p);
			csp("p_session_id", p_session_id, INT, INOUT, p);
			return p;
		}
		
public DataSet GenerateSewaTeamList(Int32? p_satsang_centre_id, 
		                                        String p_satsang_centre_nm, 
		                                        Int32? p_sewa_id, 
		                                        ref Int32 p_session_id)
		{
			List<SqlParameter> prms = GenerateSewaTeamList_Params(p_satsang_centre_id, p_satsang_centre_nm, p_sewa_id, ref p_session_id);
			DataSet dset = esp("GenerateSewaTeamList", prms);
			p_session_id = (System.Int32)prms.FirstOrDefault(p => p.ParameterName == "p_session_id").Value;

			return dset;
		}
		
public string GenerateSewaTeamListAsTask(Int32? p_satsang_centre_id, 
		                                            String p_satsang_centre_nm, 
		                                            Int32? p_sewa_id, 
		                                            ref Int32 p_session_id)
		{
			List<SqlParameter> prms = GenerateSewaTeamList_Params(p_satsang_centre_id, p_satsang_centre_nm, p_sewa_id, ref p_session_id);
			return gps("GenerateSewaTeamList", prms);

		}
		
		
		
private List<SqlParameter> GenerateSpclstnAreaSewadarList_Params(Int32? p_satsang_centre_id, 
		                                                                    String p_satsang_centre_nm, 
		                                                                    Int16? p_skill_id, 
		                                                                    String p_skill_nm, 
		                                                                    String p_gender, 
		                                                                    Int32? p_sewadar_list_id, 
		                                                                    ref Int32 p_session_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_satsang_centre_id", p_satsang_centre_id, INT, IN, p);
			csp("p_satsang_centre_nm", p_satsang_centre_nm, VARCHAR, IN, p);
			csp("p_skill_id", p_skill_id, SMALLINT, IN, p);
			csp("p_skill_nm", p_skill_nm, VARCHAR, IN, p);
			csp("p_gender", p_gender, VARCHAR, IN, p);
			csp("p_sewadar_list_id", p_sewadar_list_id, INT, IN, p);
			csp("p_session_id", p_session_id, INT, INOUT, p);
			return p;
		}
		
public DataSet GenerateSpclstnAreaSewadarList(Int32? p_satsang_centre_id, 
		                                                    String p_satsang_centre_nm, 
		                                                    Int16? p_skill_id, 
		                                                    String p_skill_nm, 
		                                                    String p_gender, 
		                                                    Int32? p_sewadar_list_id, 
		                                                    ref Int32 p_session_id)
		{
			List<SqlParameter> prms = GenerateSpclstnAreaSewadarList_Params(p_satsang_centre_id, p_satsang_centre_nm, p_skill_id, p_skill_nm, p_gender, p_sewadar_list_id, ref p_session_id);
			DataSet dset = esp("GenerateSpclstnAreaSewadarList", prms);
			p_session_id = (System.Int32)prms.FirstOrDefault(p => p.ParameterName == "p_session_id").Value;

			return dset;
		}
		
public string GenerateSpclstnAreaSewadarListAsTask(Int32? p_satsang_centre_id, 
		                                                        String p_satsang_centre_nm, 
		                                                        Int16? p_skill_id, 
		                                                        String p_skill_nm, 
		                                                        String p_gender, 
		                                                        Int32? p_sewadar_list_id, 
		                                                        ref Int32 p_session_id)
		{
			List<SqlParameter> prms = GenerateSpclstnAreaSewadarList_Params(p_satsang_centre_id, p_satsang_centre_nm, p_skill_id, p_skill_nm, p_gender, p_sewadar_list_id, ref p_session_id);
			return gps("GenerateSpclstnAreaSewadarList", prms);

		}
		
		
		
private List<SqlParameter> GenerateStateWiseSewadarList_Params(Int32? p_satsang_centre_id, 
		                                                                    String p_satsang_centre_nm, 
		                                                                    String p_country_ids, 
		                                                                    String p_state_ids, 
		                                                                    String p_gender, 
		                                                                    Int32? p_sewadar_list_id, 
		                                                                    String p_is_summary, 
		                                                                    ref Int32 p_session_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_satsang_centre_id", p_satsang_centre_id, INT, IN, p);
			csp("p_satsang_centre_nm", p_satsang_centre_nm, VARCHAR, IN, p);
			csp("p_country_ids", p_country_ids, VARCHAR, IN, p);
			csp("p_state_ids", p_state_ids, VARCHAR, IN, p);
			csp("p_gender", p_gender, VARCHAR, IN, p);
			csp("p_sewadar_list_id", p_sewadar_list_id, INT, IN, p);
			csp("p_is_summary", p_is_summary, VARCHAR, IN, p);
			csp("p_session_id", p_session_id, INT, INOUT, p);
			return p;
		}
		
public DataSet GenerateStateWiseSewadarList(Int32? p_satsang_centre_id, 
		                                                String p_satsang_centre_nm, 
		                                                String p_country_ids, 
		                                                String p_state_ids, 
		                                                String p_gender, 
		                                                Int32? p_sewadar_list_id, 
		                                                String p_is_summary, 
		                                                ref Int32 p_session_id)
		{
			List<SqlParameter> prms = GenerateStateWiseSewadarList_Params(p_satsang_centre_id, p_satsang_centre_nm, p_country_ids, p_state_ids, p_gender, p_sewadar_list_id, p_is_summary, ref p_session_id);
			DataSet dset = esp("GenerateStateWiseSewadarList", prms);
			p_session_id = (System.Int32)prms.FirstOrDefault(p => p.ParameterName == "p_session_id").Value;

			return dset;
		}
		
public string GenerateStateWiseSewadarListAsTask(Int32? p_satsang_centre_id, 
		                                                    String p_satsang_centre_nm, 
		                                                    String p_country_ids, 
		                                                    String p_state_ids, 
		                                                    String p_gender, 
		                                                    Int32? p_sewadar_list_id, 
		                                                    String p_is_summary, 
		                                                    ref Int32 p_session_id)
		{
			List<SqlParameter> prms = GenerateStateWiseSewadarList_Params(p_satsang_centre_id, p_satsang_centre_nm, p_country_ids, p_state_ids, p_gender, p_sewadar_list_id, p_is_summary, ref p_session_id);
			return gps("GenerateStateWiseSewadarList", prms);

		}
		
		
		
private List<SqlParameter> GenerateStatusChangeList_Params(Int32? p_satsang_centre_id, 
		                                                                String p_satsang_centre_nm, 
		                                                                DateTime? p_start_dt, 
		                                                                DateTime? p_finish_dt, 
		                                                                String p_statuses, 
		                                                                String p_gender, 
		                                                                ref Int32 p_session_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_satsang_centre_id", p_satsang_centre_id, INT, IN, p);
			csp("p_satsang_centre_nm", p_satsang_centre_nm, VARCHAR, IN, p);
			csp("p_start_dt", p_start_dt, SMALLDATETIME, IN, p);
			csp("p_finish_dt", p_finish_dt, SMALLDATETIME, IN, p);
			csp("p_statuses", p_statuses, VARCHAR, IN, p);
			csp("p_gender", p_gender, VARCHAR, IN, p);
			csp("p_session_id", p_session_id, INT, INOUT, p);
			return p;
		}
		
public DataSet GenerateStatusChangeList(Int32? p_satsang_centre_id, 
		                                            String p_satsang_centre_nm, 
		                                            DateTime? p_start_dt, 
		                                            DateTime? p_finish_dt, 
		                                            String p_statuses, 
		                                            String p_gender, 
		                                            ref Int32 p_session_id)
		{
			List<SqlParameter> prms = GenerateStatusChangeList_Params(p_satsang_centre_id, p_satsang_centre_nm, p_start_dt, p_finish_dt, p_statuses, p_gender, ref p_session_id);
			DataSet dset = esp("GenerateStatusChangeList", prms);
			p_session_id = (System.Int32)prms.FirstOrDefault(p => p.ParameterName == "p_session_id").Value;

			return dset;
		}
		
public string GenerateStatusChangeListAsTask(Int32? p_satsang_centre_id, 
		                                                String p_satsang_centre_nm, 
		                                                DateTime? p_start_dt, 
		                                                DateTime? p_finish_dt, 
		                                                String p_statuses, 
		                                                String p_gender, 
		                                                ref Int32 p_session_id)
		{
			List<SqlParameter> prms = GenerateStatusChangeList_Params(p_satsang_centre_id, p_satsang_centre_nm, p_start_dt, p_finish_dt, p_statuses, p_gender, ref p_session_id);
			return gps("GenerateStatusChangeList", prms);

		}
		
		
		
private List<SqlParameter> GenerateSubDepartmentsList_Params(Int32? p_satsang_centre_id, 
		                                                                String p_satsang_centre_nm, 
		                                                                String p_gender, 
		                                                                ref Int32 p_session_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_satsang_centre_id", p_satsang_centre_id, INT, IN, p);
			csp("p_satsang_centre_nm", p_satsang_centre_nm, VARCHAR, IN, p);
			csp("p_gender", p_gender, VARCHAR, IN, p);
			csp("p_session_id", p_session_id, INT, INOUT, p);
			return p;
		}
		
public DataSet GenerateSubDepartmentsList(Int32? p_satsang_centre_id, 
		                                                String p_satsang_centre_nm, 
		                                                String p_gender, 
		                                                ref Int32 p_session_id)
		{
			List<SqlParameter> prms = GenerateSubDepartmentsList_Params(p_satsang_centre_id, p_satsang_centre_nm, p_gender, ref p_session_id);
			DataSet dset = esp("GenerateSubDepartmentsList", prms);
			p_session_id = (System.Int32)prms.FirstOrDefault(p => p.ParameterName == "p_session_id").Value;

			return dset;
		}
		
public string GenerateSubDepartmentsListAsTask(Int32? p_satsang_centre_id, 
		                                                    String p_satsang_centre_nm, 
		                                                    String p_gender, 
		                                                    ref Int32 p_session_id)
		{
			List<SqlParameter> prms = GenerateSubDepartmentsList_Params(p_satsang_centre_id, p_satsang_centre_nm, p_gender, ref p_session_id);
			return gps("GenerateSubDepartmentsList", prms);

		}
		
		
		
private List<SqlParameter> GenerateTeamList_Params(Int32? p_satsang_centre_id, 
		                                                        String p_satsang_centre_nm, 
		                                                        Int16? p_department_id, 
		                                                        String p_department_nm, 
		                                                        Int16? p_sub_department_id, 
		                                                        String p_sub_department_nm, 
		                                                        String p_statuses, 
		                                                        String p_district_ids, 
		                                                        String p_is_outstation, 
		                                                        String p_gender, 
		                                                        String p_directly_make_team, 
		                                                        Int32? p_sewa_id, 
		                                                        ref Int32 p_session_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_satsang_centre_id", p_satsang_centre_id, INT, IN, p);
			csp("p_satsang_centre_nm", p_satsang_centre_nm, VARCHAR, IN, p);
			csp("p_department_id", p_department_id, SMALLINT, IN, p);
			csp("p_department_nm", p_department_nm, VARCHAR, IN, p);
			csp("p_sub_department_id", p_sub_department_id, SMALLINT, IN, p);
			csp("p_sub_department_nm", p_sub_department_nm, VARCHAR, IN, p);
			csp("p_statuses", p_statuses, VARCHAR, IN, p);
			csp("p_district_ids", p_district_ids, VARCHAR, IN, p);
			csp("p_is_outstation", p_is_outstation, VARCHAR, IN, p);
			csp("p_gender", p_gender, VARCHAR, IN, p);
			csp("p_directly_make_team", p_directly_make_team, VARCHAR, IN, p);
			csp("p_sewa_id", p_sewa_id, INT, IN, p);
			csp("p_session_id", p_session_id, INT, INOUT, p);
			return p;
		}
		
public DataSet GenerateTeamList(Int32? p_satsang_centre_id, 
		                                    String p_satsang_centre_nm, 
		                                    Int16? p_department_id, 
		                                    String p_department_nm, 
		                                    Int16? p_sub_department_id, 
		                                    String p_sub_department_nm, 
		                                    String p_statuses, 
		                                    String p_district_ids, 
		                                    String p_is_outstation, 
		                                    String p_gender, 
		                                    String p_directly_make_team, 
		                                    Int32? p_sewa_id, 
		                                    ref Int32 p_session_id)
		{
			List<SqlParameter> prms = GenerateTeamList_Params(p_satsang_centre_id, p_satsang_centre_nm, p_department_id, p_department_nm, p_sub_department_id, p_sub_department_nm, p_statuses, p_district_ids, p_is_outstation, p_gender, p_directly_make_team, p_sewa_id, ref p_session_id);
			DataSet dset = esp("GenerateTeamList", prms);
			p_session_id = (System.Int32)prms.FirstOrDefault(p => p.ParameterName == "p_session_id").Value;

			return dset;
		}
		
public string GenerateTeamListAsTask(Int32? p_satsang_centre_id, 
		                                        String p_satsang_centre_nm, 
		                                        Int16? p_department_id, 
		                                        String p_department_nm, 
		                                        Int16? p_sub_department_id, 
		                                        String p_sub_department_nm, 
		                                        String p_statuses, 
		                                        String p_district_ids, 
		                                        String p_is_outstation, 
		                                        String p_gender, 
		                                        String p_directly_make_team, 
		                                        Int32? p_sewa_id, 
		                                        ref Int32 p_session_id)
		{
			List<SqlParameter> prms = GenerateTeamList_Params(p_satsang_centre_id, p_satsang_centre_nm, p_department_id, p_department_nm, p_sub_department_id, p_sub_department_nm, p_statuses, p_district_ids, p_is_outstation, p_gender, p_directly_make_team, p_sewa_id, ref p_session_id);
			return gps("GenerateTeamList", prms);

		}
		
		
		
private List<SqlParameter> GenerateTempSewadarsToBeMadePerm_Params(Int32? p_satsang_centre_id, 
		                                                                        String p_satsang_centre_nm, 
		                                                                        String p_department_ids, 
		                                                                        String p_sub_department_ids, 
		                                                                        String p_is_outstation, 
		                                                                        String p_gender, 
		                                                                        DateTime? p_appointment_before_dt, 
		                                                                        ref Int32 p_session_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_satsang_centre_id", p_satsang_centre_id, INT, IN, p);
			csp("p_satsang_centre_nm", p_satsang_centre_nm, VARCHAR, IN, p);
			csp("p_department_ids", p_department_ids, VARCHAR, IN, p);
			csp("p_sub_department_ids", p_sub_department_ids, VARCHAR, IN, p);
			csp("p_is_outstation", p_is_outstation, VARCHAR, IN, p);
			csp("p_gender", p_gender, VARCHAR, IN, p);
			csp("p_appointment_before_dt", p_appointment_before_dt, DATETIME, IN, p);
			csp("p_session_id", p_session_id, INT, INOUT, p);
			return p;
		}
		
public DataSet GenerateTempSewadarsToBeMadePerm(Int32? p_satsang_centre_id, 
		                                                    String p_satsang_centre_nm, 
		                                                    String p_department_ids, 
		                                                    String p_sub_department_ids, 
		                                                    String p_is_outstation, 
		                                                    String p_gender, 
		                                                    DateTime? p_appointment_before_dt, 
		                                                    ref Int32 p_session_id)
		{
			List<SqlParameter> prms = GenerateTempSewadarsToBeMadePerm_Params(p_satsang_centre_id, p_satsang_centre_nm, p_department_ids, p_sub_department_ids, p_is_outstation, p_gender, p_appointment_before_dt, ref p_session_id);
			DataSet dset = esp("GenerateTempSewadarsToBeMadePerm", prms);
			p_session_id = (System.Int32)prms.FirstOrDefault(p => p.ParameterName == "p_session_id").Value;

			return dset;
		}
		
public string GenerateTempSewadarsToBeMadePermAsTask(Int32? p_satsang_centre_id, 
		                                                        String p_satsang_centre_nm, 
		                                                        String p_department_ids, 
		                                                        String p_sub_department_ids, 
		                                                        String p_is_outstation, 
		                                                        String p_gender, 
		                                                        DateTime? p_appointment_before_dt, 
		                                                        ref Int32 p_session_id)
		{
			List<SqlParameter> prms = GenerateTempSewadarsToBeMadePerm_Params(p_satsang_centre_id, p_satsang_centre_nm, p_department_ids, p_sub_department_ids, p_is_outstation, p_gender, p_appointment_before_dt, ref p_session_id);
			return gps("GenerateTempSewadarsToBeMadePerm", prms);

		}
		
		
		
private List<SqlParameter> GenerateTraineeOrOpenSewadarRegister_Params(Int32? p_satsang_centre_id, 
		                                                                            String p_satsang_centre_nm, 
		                                                                            String p_department_ids, 
		                                                                            String p_is_outstation, 
		                                                                            String p_gender, 
		                                                                            DateTime? p_appointments_after_dt, 
		                                                                            String p_sewadar_type, 
		                                                                            ref Int32 p_session_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_satsang_centre_id", p_satsang_centre_id, INT, IN, p);
			csp("p_satsang_centre_nm", p_satsang_centre_nm, VARCHAR, IN, p);
			csp("p_department_ids", p_department_ids, VARCHAR, IN, p);
			csp("p_is_outstation", p_is_outstation, VARCHAR, IN, p);
			csp("p_gender", p_gender, VARCHAR, IN, p);
			csp("p_appointments_after_dt", p_appointments_after_dt, DATETIME, IN, p);
			csp("p_sewadar_type", p_sewadar_type, CHAR, IN, p);
			csp("p_session_id", p_session_id, INT, INOUT, p);
			return p;
		}
		
public DataSet GenerateTraineeOrOpenSewadarRegister(Int32? p_satsang_centre_id, 
		                                                        String p_satsang_centre_nm, 
		                                                        String p_department_ids, 
		                                                        String p_is_outstation, 
		                                                        String p_gender, 
		                                                        DateTime? p_appointments_after_dt, 
		                                                        String p_sewadar_type, 
		                                                        ref Int32 p_session_id)
		{
			List<SqlParameter> prms = GenerateTraineeOrOpenSewadarRegister_Params(p_satsang_centre_id, p_satsang_centre_nm, p_department_ids, p_is_outstation, p_gender, p_appointments_after_dt, p_sewadar_type, ref p_session_id);
			DataSet dset = esp("GenerateTraineeOrOpenSewadarRegister", prms);
			p_session_id = (System.Int32)prms.FirstOrDefault(p => p.ParameterName == "p_session_id").Value;

			return dset;
		}
		
public string GenerateTraineeOrOpenSewadarRegisterAsTask(Int32? p_satsang_centre_id, 
		                                                            String p_satsang_centre_nm, 
		                                                            String p_department_ids, 
		                                                            String p_is_outstation, 
		                                                            String p_gender, 
		                                                            DateTime? p_appointments_after_dt, 
		                                                            String p_sewadar_type, 
		                                                            ref Int32 p_session_id)
		{
			List<SqlParameter> prms = GenerateTraineeOrOpenSewadarRegister_Params(p_satsang_centre_id, p_satsang_centre_nm, p_department_ids, p_is_outstation, p_gender, p_appointments_after_dt, p_sewadar_type, ref p_session_id);
			return gps("GenerateTraineeOrOpenSewadarRegister", prms);

		}
		
		
		
private List<SqlParameter> GenerateTraineeSewadarRegister_Params(Int32? p_satsang_centre_id, 
		                                                                    String p_satsang_centre_nm, 
		                                                                    String p_department_ids, 
		                                                                    String p_is_outstation, 
		                                                                    String p_gender, 
		                                                                    DateTime? p_appointments_after_dt, 
		                                                                    ref Int32 p_session_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_satsang_centre_id", p_satsang_centre_id, INT, IN, p);
			csp("p_satsang_centre_nm", p_satsang_centre_nm, VARCHAR, IN, p);
			csp("p_department_ids", p_department_ids, VARCHAR, IN, p);
			csp("p_is_outstation", p_is_outstation, VARCHAR, IN, p);
			csp("p_gender", p_gender, VARCHAR, IN, p);
			csp("p_appointments_after_dt", p_appointments_after_dt, DATETIME, IN, p);
			csp("p_session_id", p_session_id, INT, INOUT, p);
			return p;
		}
		
public DataSet GenerateTraineeSewadarRegister(Int32? p_satsang_centre_id, 
		                                                    String p_satsang_centre_nm, 
		                                                    String p_department_ids, 
		                                                    String p_is_outstation, 
		                                                    String p_gender, 
		                                                    DateTime? p_appointments_after_dt, 
		                                                    ref Int32 p_session_id)
		{
			List<SqlParameter> prms = GenerateTraineeSewadarRegister_Params(p_satsang_centre_id, p_satsang_centre_nm, p_department_ids, p_is_outstation, p_gender, p_appointments_after_dt, ref p_session_id);
			DataSet dset = esp("GenerateTraineeSewadarRegister", prms);
			p_session_id = (System.Int32)prms.FirstOrDefault(p => p.ParameterName == "p_session_id").Value;

			return dset;
		}
		
public string GenerateTraineeSewadarRegisterAsTask(Int32? p_satsang_centre_id, 
		                                                        String p_satsang_centre_nm, 
		                                                        String p_department_ids, 
		                                                        String p_is_outstation, 
		                                                        String p_gender, 
		                                                        DateTime? p_appointments_after_dt, 
		                                                        ref Int32 p_session_id)
		{
			List<SqlParameter> prms = GenerateTraineeSewadarRegister_Params(p_satsang_centre_id, p_satsang_centre_nm, p_department_ids, p_is_outstation, p_gender, p_appointments_after_dt, ref p_session_id);
			return gps("GenerateTraineeSewadarRegister", prms);

		}
		
		
		
private List<SqlParameter> GenerateTransfersInList_Params(Int32? p_satsang_centre_id, 
		                                                                String p_satsang_centre_nm, 
		                                                                DateTime? p_start_dt, 
		                                                                DateTime? p_finish_dt, 
		                                                                String p_gender, 
		                                                                String p_consider_sub_dept, 
		                                                                ref Int32 p_session_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_satsang_centre_id", p_satsang_centre_id, INT, IN, p);
			csp("p_satsang_centre_nm", p_satsang_centre_nm, VARCHAR, IN, p);
			csp("p_start_dt", p_start_dt, SMALLDATETIME, IN, p);
			csp("p_finish_dt", p_finish_dt, SMALLDATETIME, IN, p);
			csp("p_gender", p_gender, VARCHAR, IN, p);
			csp("p_consider_sub_dept", p_consider_sub_dept, VARCHAR, IN, p);
			csp("p_session_id", p_session_id, INT, INOUT, p);
			return p;
		}
		
public DataSet GenerateTransfersInList(Int32? p_satsang_centre_id, 
		                                            String p_satsang_centre_nm, 
		                                            DateTime? p_start_dt, 
		                                            DateTime? p_finish_dt, 
		                                            String p_gender, 
		                                            String p_consider_sub_dept, 
		                                            ref Int32 p_session_id)
		{
			List<SqlParameter> prms = GenerateTransfersInList_Params(p_satsang_centre_id, p_satsang_centre_nm, p_start_dt, p_finish_dt, p_gender, p_consider_sub_dept, ref p_session_id);
			DataSet dset = esp("GenerateTransfersInList", prms);
			p_session_id = (System.Int32)prms.FirstOrDefault(p => p.ParameterName == "p_session_id").Value;

			return dset;
		}
		
public string GenerateTransfersInListAsTask(Int32? p_satsang_centre_id, 
		                                                String p_satsang_centre_nm, 
		                                                DateTime? p_start_dt, 
		                                                DateTime? p_finish_dt, 
		                                                String p_gender, 
		                                                String p_consider_sub_dept, 
		                                                ref Int32 p_session_id)
		{
			List<SqlParameter> prms = GenerateTransfersInList_Params(p_satsang_centre_id, p_satsang_centre_nm, p_start_dt, p_finish_dt, p_gender, p_consider_sub_dept, ref p_session_id);
			return gps("GenerateTransfersInList", prms);

		}
		
		
		
private List<SqlParameter> GenerateUnallocatedSewadars_Params(Int32? p_sewa_id, 
		                                                                    String p_department_ids, 
		                                                                    String p_gender, 
		                                                                    String p_is_summary, 
		                                                                    ref Int32 p_session_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_sewa_id", p_sewa_id, INT, IN, p);
			csp("p_department_ids", p_department_ids, VARCHAR, IN, p);
			csp("p_gender", p_gender, VARCHAR, IN, p);
			csp("p_is_summary", p_is_summary, VARCHAR, IN, p);
			csp("p_session_id", p_session_id, INT, INOUT, p);
			return p;
		}
		
public DataSet GenerateUnallocatedSewadars(Int32? p_sewa_id, 
		                                                String p_department_ids, 
		                                                String p_gender, 
		                                                String p_is_summary, 
		                                                ref Int32 p_session_id)
		{
			List<SqlParameter> prms = GenerateUnallocatedSewadars_Params(p_sewa_id, p_department_ids, p_gender, p_is_summary, ref p_session_id);
			DataSet dset = esp("GenerateUnallocatedSewadars", prms);
			p_session_id = (System.Int32)prms.FirstOrDefault(p => p.ParameterName == "p_session_id").Value;

			return dset;
		}
		
public string GenerateUnallocatedSewadarsAsTask(Int32? p_sewa_id, 
		                                                    String p_department_ids, 
		                                                    String p_gender, 
		                                                    String p_is_summary, 
		                                                    ref Int32 p_session_id)
		{
			List<SqlParameter> prms = GenerateUnallocatedSewadars_Params(p_sewa_id, p_department_ids, p_gender, p_is_summary, ref p_session_id);
			return gps("GenerateUnallocatedSewadars", prms);

		}
		
		
		
private List<SqlParameter> GenerateWeeklySewadarList_Params(Int32? p_satsang_centre_id, 
		                                                                String p_satsang_centre_nm, 
		                                                                String p_department_ids, 
		                                                                String p_sub_department_ids, 
		                                                                Int32? p_weekly_sewa_location_id, 
		                                                                String p_weekly_sewa_location_nm, 
		                                                                String p_gender, 
		                                                                String p_is_summary, 
		                                                                ref Int32 p_session_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_satsang_centre_id", p_satsang_centre_id, INT, IN, p);
			csp("p_satsang_centre_nm", p_satsang_centre_nm, VARCHAR, IN, p);
			csp("p_department_ids", p_department_ids, VARCHAR, IN, p);
			csp("p_sub_department_ids", p_sub_department_ids, VARCHAR, IN, p);
			csp("p_weekly_sewa_location_id", p_weekly_sewa_location_id, INT, IN, p);
			csp("p_weekly_sewa_location_nm", p_weekly_sewa_location_nm, VARCHAR, IN, p);
			csp("p_gender", p_gender, VARCHAR, IN, p);
			csp("p_is_summary", p_is_summary, VARCHAR, IN, p);
			csp("p_session_id", p_session_id, INT, INOUT, p);
			return p;
		}
		
public DataSet GenerateWeeklySewadarList(Int32? p_satsang_centre_id, 
		                                            String p_satsang_centre_nm, 
		                                            String p_department_ids, 
		                                            String p_sub_department_ids, 
		                                            Int32? p_weekly_sewa_location_id, 
		                                            String p_weekly_sewa_location_nm, 
		                                            String p_gender, 
		                                            String p_is_summary, 
		                                            ref Int32 p_session_id)
		{
			List<SqlParameter> prms = GenerateWeeklySewadarList_Params(p_satsang_centre_id, p_satsang_centre_nm, p_department_ids, p_sub_department_ids, p_weekly_sewa_location_id, p_weekly_sewa_location_nm, p_gender, p_is_summary, ref p_session_id);
			DataSet dset = esp("GenerateWeeklySewadarList", prms);
			p_session_id = (System.Int32)prms.FirstOrDefault(p => p.ParameterName == "p_session_id").Value;

			return dset;
		}
		
public string GenerateWeeklySewadarListAsTask(Int32? p_satsang_centre_id, 
		                                                    String p_satsang_centre_nm, 
		                                                    String p_department_ids, 
		                                                    String p_sub_department_ids, 
		                                                    Int32? p_weekly_sewa_location_id, 
		                                                    String p_weekly_sewa_location_nm, 
		                                                    String p_gender, 
		                                                    String p_is_summary, 
		                                                    ref Int32 p_session_id)
		{
			List<SqlParameter> prms = GenerateWeeklySewadarList_Params(p_satsang_centre_id, p_satsang_centre_nm, p_department_ids, p_sub_department_ids, p_weekly_sewa_location_id, p_weekly_sewa_location_nm, p_gender, p_is_summary, ref p_session_id);
			return gps("GenerateWeeklySewadarList", prms);

		}
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
private List<SqlParameter> GetActiveSerialIdForSewadar_Params(Int32? satsang_centre_id, 
		                                                                    String sewadar_grno, 
		                                                                    DateTime? effective_dt)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("satsang_centre_id", satsang_centre_id, INT, IN, p);
			csp("sewadar_grno", sewadar_grno, CHAR, IN, p);
			csp("effective_dt", effective_dt, DATETIME, IN, p);
			return p;
		}
		
public DataSet GetActiveSerialIdForSewadar(Int32? satsang_centre_id, 
		                                                String sewadar_grno, 
		                                                DateTime? effective_dt)
		{
			List<SqlParameter> prms = GetActiveSerialIdForSewadar_Params(satsang_centre_id, sewadar_grno, effective_dt);
			DataSet dset = esp("GetActiveSerialIdForSewadar", prms);

			return dset;
		}
		
public string GetActiveSerialIdForSewadarAsTask(Int32? satsang_centre_id, 
		                                                    String sewadar_grno, 
		                                                    DateTime? effective_dt)
		{
			List<SqlParameter> prms = GetActiveSerialIdForSewadar_Params(satsang_centre_id, sewadar_grno, effective_dt);
			return gps("GetActiveSerialIdForSewadar", prms);

		}
		
		
		
private List<SqlParameter> GetAllSatsangCentresForMobileSupport_Params()
		{
			List<SqlParameter> p = new List<SqlParameter>();
			return p;
		}
		
public DataSet GetAllSatsangCentresForMobileSupport()
		{
			List<SqlParameter> prms = GetAllSatsangCentresForMobileSupport_Params();
			DataSet dset = esp("GetAllSatsangCentresForMobileSupport", prms);
			return dset;
		}
		
public string GetAllSatsangCentresForMobileSupportAsTask()
		{
			List<SqlParameter> prms = GetAllSatsangCentresForMobileSupport_Params();
			return gps("GetAllSatsangCentresForMobileSupport", prms);
		}
		
		
		
private List<SqlParameter> GetAllSewadarWiseSewaTeams_Params(Int32? sewa_id, 
		                                                                Int32? satsang_centre_id, 
		                                                                String user_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("sewa_id", sewa_id, INT, IN, p);
			csp("satsang_centre_id", satsang_centre_id, INT, IN, p);
			csp("user_id", user_id, VARCHAR, IN, p);
			return p;
		}
		
public DataSet GetAllSewadarWiseSewaTeams(Int32? sewa_id, 
		                                                Int32? satsang_centre_id, 
		                                                String user_id)
		{
			List<SqlParameter> prms = GetAllSewadarWiseSewaTeams_Params(sewa_id, satsang_centre_id, user_id);
			DataSet dset = esp("GetAllSewadarWiseSewaTeams", prms);

			return dset;
		}
		
public string GetAllSewadarWiseSewaTeamsAsTask(Int32? sewa_id, 
		                                                    Int32? satsang_centre_id, 
		                                                    String user_id)
		{
			List<SqlParameter> prms = GetAllSewadarWiseSewaTeams_Params(sewa_id, satsang_centre_id, user_id);
			return gps("GetAllSewadarWiseSewaTeams", prms);

		}
		
		
		
private List<SqlParameter> GetAllSewaTeamsBySewa_Params(Int32? sewa_id, 
		                                                            String user_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("sewa_id", sewa_id, INT, IN, p);
			csp("user_id", user_id, VARCHAR, IN, p);
			return p;
		}
		
public DataSet GetAllSewaTeamsBySewa(Int32? sewa_id, 
		                                        String user_id)
		{
			List<SqlParameter> prms = GetAllSewaTeamsBySewa_Params(sewa_id, user_id);
			DataSet dset = esp("GetAllSewaTeamsBySewa", prms);

			return dset;
		}
		
public string GetAllSewaTeamsBySewaAsTask(Int32? sewa_id, 
		                                                String user_id)
		{
			List<SqlParameter> prms = GetAllSewaTeamsBySewa_Params(sewa_id, user_id);
			return gps("GetAllSewaTeamsBySewa", prms);

		}
		
		
		
private List<SqlParameter> GetAreaName_Params(Int32? p_satsang_centre_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_satsang_centre_id", p_satsang_centre_id, INT, IN, p);
			return p;
		}
		
public System.String GetAreaName(Int32? p_satsang_centre_id)
		{
			List<SqlParameter> prms = GetAreaName_Params(p_satsang_centre_id);
			string commaSeparatedParameters = ObjDBManager.GetCommaSeparatedParameters(prms);
			Object obj = ObjDBManager.ExecuteScalar("SELECT dbo.GetAreaName(" + commaSeparatedParameters + ")");

			return obj == null || obj == DBNull.Value ? null : (System.String)obj;
		}
		
		
		
private List<SqlParameter> GetBadgeLineInfo_Params(String p_part_1_type, 
		                                                        String p_part_1_text, 
		                                                        String p_parts_separator, 
		                                                        String p_part_2_type, 
		                                                        String p_part_2_text, 
		                                                        String p_department_nm, 
		                                                        String p_sub_department_nm, 
		                                                        String p_satsang_centre_nm, 
		                                                        String p_weekly_sewa_location_nm)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_part_1_type", p_part_1_type, VARCHAR, IN, p);
			csp("p_part_1_text", p_part_1_text, VARCHAR, IN, p);
			csp("p_parts_separator", p_parts_separator, VARCHAR, IN, p);
			csp("p_part_2_type", p_part_2_type, VARCHAR, IN, p);
			csp("p_part_2_text", p_part_2_text, VARCHAR, IN, p);
			csp("p_department_nm", p_department_nm, VARCHAR, IN, p);
			csp("p_sub_department_nm", p_sub_department_nm, VARCHAR, IN, p);
			csp("p_satsang_centre_nm", p_satsang_centre_nm, VARCHAR, IN, p);
			csp("p_weekly_sewa_location_nm", p_weekly_sewa_location_nm, VARCHAR, IN, p);
			return p;
		}
		
public System.String GetBadgeLineInfo(String p_part_1_type, 
		                                            String p_part_1_text, 
		                                            String p_parts_separator, 
		                                            String p_part_2_type, 
		                                            String p_part_2_text, 
		                                            String p_department_nm, 
		                                            String p_sub_department_nm, 
		                                            String p_satsang_centre_nm, 
		                                            String p_weekly_sewa_location_nm)
		{
			List<SqlParameter> prms = GetBadgeLineInfo_Params(p_part_1_type, p_part_1_text, p_parts_separator, p_part_2_type, p_part_2_text, p_department_nm, p_sub_department_nm, p_satsang_centre_nm, p_weekly_sewa_location_nm);
			string commaSeparatedParameters = ObjDBManager.GetCommaSeparatedParameters(prms);
			Object obj = ObjDBManager.ExecuteScalar("SELECT dbo.GetBadgeLineInfo(" + commaSeparatedParameters + ")");

			return obj == null || obj == DBNull.Value ? null : (System.String)obj;
		}
		
		
		
private List<SqlParameter> GetConstructionSewaBadgeInfo_Params(Int32? p_from_badge_id, 
		                                                                    Int32? p_till_badge_id, 
		                                                                    Int32? p_satsang_centre_id, 
		                                                                    String p_badge_template_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_from_badge_id", p_from_badge_id, INT, IN, p);
			csp("p_till_badge_id", p_till_badge_id, INT, IN, p);
			csp("p_satsang_centre_id", p_satsang_centre_id, INT, IN, p);
			csp("p_badge_template_id", p_badge_template_id, VARCHAR, IN, p);
			return p;
		}
		
public DataSet GetConstructionSewaBadgeInfo(Int32? p_from_badge_id, 
		                                                Int32? p_till_badge_id, 
		                                                Int32? p_satsang_centre_id, 
		                                                String p_badge_template_id)
		{
			List<SqlParameter> prms = GetConstructionSewaBadgeInfo_Params(p_from_badge_id, p_till_badge_id, p_satsang_centre_id, p_badge_template_id);
			DataSet dset = esp("GetConstructionSewaBadgeInfo", prms);

			return dset;
		}
		
public string GetConstructionSewaBadgeInfoAsTask(Int32? p_from_badge_id, 
		                                                    Int32? p_till_badge_id, 
		                                                    Int32? p_satsang_centre_id, 
		                                                    String p_badge_template_id)
		{
			List<SqlParameter> prms = GetConstructionSewaBadgeInfo_Params(p_from_badge_id, p_till_badge_id, p_satsang_centre_id, p_badge_template_id);
			return gps("GetConstructionSewaBadgeInfo", prms);

		}
		
		
		
private List<SqlParameter> GetDarshanSewaSeriesFrontInfo_Params(Int32? p_from, 
		                                                                    Int32? p_till, 
		                                                                    Int32? p_satsang_centre_id, 
		                                                                    String p_badge_template_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_from", p_from, INT, IN, p);
			csp("p_till", p_till, INT, IN, p);
			csp("p_satsang_centre_id", p_satsang_centre_id, INT, IN, p);
			csp("p_badge_template_id", p_badge_template_id, VARCHAR, IN, p);
			return p;
		}
		
public DataSet GetDarshanSewaSeriesFrontInfo(Int32? p_from, 
		                                                Int32? p_till, 
		                                                Int32? p_satsang_centre_id, 
		                                                String p_badge_template_id)
		{
			List<SqlParameter> prms = GetDarshanSewaSeriesFrontInfo_Params(p_from, p_till, p_satsang_centre_id, p_badge_template_id);
			DataSet dset = esp("GetDarshanSewaSeriesFrontInfo", prms);

			return dset;
		}
		
public string GetDarshanSewaSeriesFrontInfoAsTask(Int32? p_from, 
		                                                        Int32? p_till, 
		                                                        Int32? p_satsang_centre_id, 
		                                                        String p_badge_template_id)
		{
			List<SqlParameter> prms = GetDarshanSewaSeriesFrontInfo_Params(p_from, p_till, p_satsang_centre_id, p_badge_template_id);
			return gps("GetDarshanSewaSeriesFrontInfo", prms);

		}
		
		
		
private List<SqlParameter> GetDayText_Params(Int32? p_day)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_day", p_day, INT, IN, p);
			return p;
		}
		
public System.String GetDayText(Int32? p_day)
		{
			List<SqlParameter> prms = GetDayText_Params(p_day);
			string commaSeparatedParameters = ObjDBManager.GetCommaSeparatedParameters(prms);
			Object obj = ObjDBManager.ExecuteScalar("SELECT dbo.GetDayText(" + commaSeparatedParameters + ")");

			return obj == null || obj == DBNull.Value ? null : (System.String)obj;
		}
		
		
		
private List<SqlParameter> GetGRNoBySewadarIdSatsangCentre_Params(String sewadar_grno, 
		                                                                        Int32? satsang_centre_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("sewadar_grno", sewadar_grno, CHAR, IN, p);
			csp("satsang_centre_id", satsang_centre_id, INT, IN, p);
			return p;
		}
		
public DataSet GetGRNoBySewadarIdSatsangCentre(String sewadar_grno, 
		                                                    Int32? satsang_centre_id)
		{
			List<SqlParameter> prms = GetGRNoBySewadarIdSatsangCentre_Params(sewadar_grno, satsang_centre_id);
			DataSet dset = esp("GetGRNoBySewadarIdSatsangCentre", prms);

			return dset;
		}
		
public string GetGRNoBySewadarIdSatsangCentreAsTask(String sewadar_grno, 
		                                                        Int32? satsang_centre_id)
		{
			List<SqlParameter> prms = GetGRNoBySewadarIdSatsangCentre_Params(sewadar_grno, satsang_centre_id);
			return gps("GetGRNoBySewadarIdSatsangCentre", prms);

		}
		
		
		
private List<SqlParameter> GetHorizontalSewadarBackInfo_Params(Int32? p_from_badge_id, 
		                                                                    Int32? p_till_badge_id, 
		                                                                    Int32? p_satsang_centre_id, 
		                                                                    String p_badge_template_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_from_badge_id", p_from_badge_id, INT, IN, p);
			csp("p_till_badge_id", p_till_badge_id, INT, IN, p);
			csp("p_satsang_centre_id", p_satsang_centre_id, INT, IN, p);
			csp("p_badge_template_id", p_badge_template_id, VARCHAR, IN, p);
			return p;
		}
		
public DataSet GetHorizontalSewadarBackInfo(Int32? p_from_badge_id, 
		                                                Int32? p_till_badge_id, 
		                                                Int32? p_satsang_centre_id, 
		                                                String p_badge_template_id)
		{
			List<SqlParameter> prms = GetHorizontalSewadarBackInfo_Params(p_from_badge_id, p_till_badge_id, p_satsang_centre_id, p_badge_template_id);
			DataSet dset = esp("GetHorizontalSewadarBackInfo", prms);

			return dset;
		}
		
public string GetHorizontalSewadarBackInfoAsTask(Int32? p_from_badge_id, 
		                                                    Int32? p_till_badge_id, 
		                                                    Int32? p_satsang_centre_id, 
		                                                    String p_badge_template_id)
		{
			List<SqlParameter> prms = GetHorizontalSewadarBackInfo_Params(p_from_badge_id, p_till_badge_id, p_satsang_centre_id, p_badge_template_id);
			return gps("GetHorizontalSewadarBackInfo", prms);

		}
		
		
		
private List<SqlParameter> GetHorizontalSewadarFrontInfo_Params(Int32? p_from_badge_id, 
		                                                                    Int32? p_till_badge_id, 
		                                                                    Int32? p_satsang_centre_id, 
		                                                                    String p_badge_template_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_from_badge_id", p_from_badge_id, INT, IN, p);
			csp("p_till_badge_id", p_till_badge_id, INT, IN, p);
			csp("p_satsang_centre_id", p_satsang_centre_id, INT, IN, p);
			csp("p_badge_template_id", p_badge_template_id, VARCHAR, IN, p);
			return p;
		}
		
public DataSet GetHorizontalSewadarFrontInfo(Int32? p_from_badge_id, 
		                                                Int32? p_till_badge_id, 
		                                                Int32? p_satsang_centre_id, 
		                                                String p_badge_template_id)
		{
			List<SqlParameter> prms = GetHorizontalSewadarFrontInfo_Params(p_from_badge_id, p_till_badge_id, p_satsang_centre_id, p_badge_template_id);
			DataSet dset = esp("GetHorizontalSewadarFrontInfo", prms);

			return dset;
		}
		
public string GetHorizontalSewadarFrontInfoAsTask(Int32? p_from_badge_id, 
		                                                        Int32? p_till_badge_id, 
		                                                        Int32? p_satsang_centre_id, 
		                                                        String p_badge_template_id)
		{
			List<SqlParameter> prms = GetHorizontalSewadarFrontInfo_Params(p_from_badge_id, p_till_badge_id, p_satsang_centre_id, p_badge_template_id);
			return gps("GetHorizontalSewadarFrontInfo", prms);

		}
		
		
		
private List<SqlParameter> GetHorizontalSpecialFrontInfo_Params(Int32? p_from_badge_id, 
		                                                                    Int32? p_till_badge_id, 
		                                                                    Int32? p_satsang_centre_id, 
		                                                                    String p_badge_template_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_from_badge_id", p_from_badge_id, INT, IN, p);
			csp("p_till_badge_id", p_till_badge_id, INT, IN, p);
			csp("p_satsang_centre_id", p_satsang_centre_id, INT, IN, p);
			csp("p_badge_template_id", p_badge_template_id, VARCHAR, IN, p);
			return p;
		}
		
public DataSet GetHorizontalSpecialFrontInfo(Int32? p_from_badge_id, 
		                                                Int32? p_till_badge_id, 
		                                                Int32? p_satsang_centre_id, 
		                                                String p_badge_template_id)
		{
			List<SqlParameter> prms = GetHorizontalSpecialFrontInfo_Params(p_from_badge_id, p_till_badge_id, p_satsang_centre_id, p_badge_template_id);
			DataSet dset = esp("GetHorizontalSpecialFrontInfo", prms);

			return dset;
		}
		
public string GetHorizontalSpecialFrontInfoAsTask(Int32? p_from_badge_id, 
		                                                        Int32? p_till_badge_id, 
		                                                        Int32? p_satsang_centre_id, 
		                                                        String p_badge_template_id)
		{
			List<SqlParameter> prms = GetHorizontalSpecialFrontInfo_Params(p_from_badge_id, p_till_badge_id, p_satsang_centre_id, p_badge_template_id);
			return gps("GetHorizontalSpecialFrontInfo", prms);

		}
		
		
		
private List<SqlParameter> GetIDCardSewaBadgeInfo_Params(Int32? p_from_badge_id, 
		                                                            Int32? p_till_badge_id, 
		                                                            Int32? p_satsang_centre_id, 
		                                                            String p_badge_template_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_from_badge_id", p_from_badge_id, INT, IN, p);
			csp("p_till_badge_id", p_till_badge_id, INT, IN, p);
			csp("p_satsang_centre_id", p_satsang_centre_id, INT, IN, p);
			csp("p_badge_template_id", p_badge_template_id, VARCHAR, IN, p);
			return p;
		}
		
public DataSet GetIDCardSewaBadgeInfo(Int32? p_from_badge_id, 
		                                            Int32? p_till_badge_id, 
		                                            Int32? p_satsang_centre_id, 
		                                            String p_badge_template_id)
		{
			List<SqlParameter> prms = GetIDCardSewaBadgeInfo_Params(p_from_badge_id, p_till_badge_id, p_satsang_centre_id, p_badge_template_id);
			DataSet dset = esp("GetIDCardSewaBadgeInfo", prms);

			return dset;
		}
		
public string GetIDCardSewaBadgeInfoAsTask(Int32? p_from_badge_id, 
		                                                Int32? p_till_badge_id, 
		                                                Int32? p_satsang_centre_id, 
		                                                String p_badge_template_id)
		{
			List<SqlParameter> prms = GetIDCardSewaBadgeInfo_Params(p_from_badge_id, p_till_badge_id, p_satsang_centre_id, p_badge_template_id);
			return gps("GetIDCardSewaBadgeInfo", prms);

		}
		
		
		
private List<SqlParameter> GetMaxColourId_Params(ref Int16 colour_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("colour_id", colour_id, SMALLINT, INOUT, p);
			return p;
		}
		
public DataSet GetMaxColourId(ref Int16 colour_id)
		{
			List<SqlParameter> prms = GetMaxColourId_Params(ref colour_id);
			DataSet dset = esp("GetMaxColourId", prms);
			colour_id = (System.Int16)prms.FirstOrDefault(p => p.ParameterName == "colour_id").Value;

			return dset;
		}
		
public string GetMaxColourIdAsTask(ref Int16 colour_id)
		{
			List<SqlParameter> prms = GetMaxColourId_Params(ref colour_id);
			return gps("GetMaxColourId", prms);

		}
		
		
		
private List<SqlParameter> GetMonthText_Params(Int32? p_mth)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_mth", p_mth, INT, IN, p);
			return p;
		}
		
public System.String GetMonthText(Int32? p_mth)
		{
			List<SqlParameter> prms = GetMonthText_Params(p_mth);
			string commaSeparatedParameters = ObjDBManager.GetCommaSeparatedParameters(prms);
			Object obj = ObjDBManager.ExecuteScalar("SELECT dbo.GetMonthText(" + commaSeparatedParameters + ")");

			return obj == null || obj == DBNull.Value ? null : (System.String)obj;
		}
		
		
		
private List<SqlParameter> GetOpenSewadarRegistrationNumber_Params(Int32? p_satsang_centre_id, 
		                                                                        Int32? p_sewa_id, 
		                                                                        ref String p_sewadar_grno)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_satsang_centre_id", p_satsang_centre_id, INT, IN, p);
			csp("p_sewa_id", p_sewa_id, INT, IN, p);
			csp("p_sewadar_grno", p_sewadar_grno, CHAR, INOUT, p);
			return p;
		}
		
public DataSet GetOpenSewadarRegistrationNumber(Int32? p_satsang_centre_id, 
		                                                    Int32? p_sewa_id, 
		                                                    ref String p_sewadar_grno)
		{
			List<SqlParameter> prms = GetOpenSewadarRegistrationNumber_Params(p_satsang_centre_id, p_sewa_id, ref p_sewadar_grno);
			DataSet dset = esp("GetOpenSewadarRegistrationNumber", prms);
			p_sewadar_grno = (System.String)prms.FirstOrDefault(p => p.ParameterName == "p_sewadar_grno").Value;

			return dset;
		}
		
public string GetOpenSewadarRegistrationNumberAsTask(Int32? p_satsang_centre_id, 
		                                                        Int32? p_sewa_id, 
		                                                        ref String p_sewadar_grno)
		{
			List<SqlParameter> prms = GetOpenSewadarRegistrationNumber_Params(p_satsang_centre_id, p_sewa_id, ref p_sewadar_grno);
			return gps("GetOpenSewadarRegistrationNumber", prms);

		}
		
		
		
private List<SqlParameter> GetOtherDisabilities_Params(Int32? p_sewadar_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_sewadar_id", p_sewadar_id, INT, IN, p);
			return p;
		}
		
public System.String GetOtherDisabilities(Int32? p_sewadar_id)
		{
			List<SqlParameter> prms = GetOtherDisabilities_Params(p_sewadar_id);
			string commaSeparatedParameters = ObjDBManager.GetCommaSeparatedParameters(prms);
			Object obj = ObjDBManager.ExecuteScalar("SELECT dbo.GetOtherDisabilities(" + commaSeparatedParameters + ")");

			return obj == null || obj == DBNull.Value ? null : (System.String)obj;
		}
		
		
		
private List<SqlParameter> GetProgramSewaDetails_Params(Int32? satsang_centre_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("satsang_centre_id", satsang_centre_id, INT, IN, p);
			return p;
		}
		
public DataSet GetProgramSewaDetails(Int32? satsang_centre_id)
		{
			List<SqlParameter> prms = GetProgramSewaDetails_Params(satsang_centre_id);
			DataSet dset = esp("GetProgramSewaDetails", prms);

			return dset;
		}
		
public string GetProgramSewaDetailsAsTask(Int32? satsang_centre_id)
		{
			List<SqlParameter> prms = GetProgramSewaDetails_Params(satsang_centre_id);
			return gps("GetProgramSewaDetails", prms);

		}
		
		
		
private List<SqlParameter> GetScannedBadgeFileAuditLog_Params(Int32? scanning_job_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("scanning_job_id", scanning_job_id, INT, IN, p);
			return p;
		}
		
public DataSet GetScannedBadgeFileAuditLog(Int32? scanning_job_id)
		{
			List<SqlParameter> prms = GetScannedBadgeFileAuditLog_Params(scanning_job_id);
			DataSet dset = esp("GetScannedBadgeFileAuditLog", prms);

			return dset;
		}
		
public string GetScannedBadgeFileAuditLogAsTask(Int32? scanning_job_id)
		{
			List<SqlParameter> prms = GetScannedBadgeFileAuditLog_Params(scanning_job_id);
			return gps("GetScannedBadgeFileAuditLog", prms);

		}
		
		
		
private List<SqlParameter> GetScannedSewadarInformation_Params(String sewadar_grno, 
		                                                                    Int32? satsang_centre_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("sewadar_grno", sewadar_grno, CHAR, IN, p);
			csp("satsang_centre_id", satsang_centre_id, INT, IN, p);
			return p;
		}
		
public DataSet GetScannedSewadarInformation(String sewadar_grno, 
		                                                Int32? satsang_centre_id)
		{
			List<SqlParameter> prms = GetScannedSewadarInformation_Params(sewadar_grno, satsang_centre_id);
			DataSet dset = esp("GetScannedSewadarInformation", prms);

			return dset;
		}
		
public string GetScannedSewadarInformationAsTask(String sewadar_grno, 
		                                                    Int32? satsang_centre_id)
		{
			List<SqlParameter> prms = GetScannedSewadarInformation_Params(sewadar_grno, satsang_centre_id);
			return gps("GetScannedSewadarInformation", prms);

		}
		
		
		
private List<SqlParameter> GetSewadarArbitraryShiftPresencesCount_Params(Int16? p_sub_job_id, 
		                                                                            Int32? p_satsang_centre_id, 
		                                                                            String p_sewadar_grno, 
		                                                                            ref Decimal p_total_count)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_sub_job_id", p_sub_job_id, SMALLINT, IN, p);
			csp("p_satsang_centre_id", p_satsang_centre_id, INT, IN, p);
			csp("p_sewadar_grno", p_sewadar_grno, CHAR, IN, p);
			csp("p_total_count", p_total_count, DECIMAL, INOUT, p);
			return p;
		}
		
public DataSet GetSewadarArbitraryShiftPresencesCount(Int16? p_sub_job_id, 
		                                                            Int32? p_satsang_centre_id, 
		                                                            String p_sewadar_grno, 
		                                                            ref Decimal p_total_count)
		{
			List<SqlParameter> prms = GetSewadarArbitraryShiftPresencesCount_Params(p_sub_job_id, p_satsang_centre_id, p_sewadar_grno, ref p_total_count);
			DataSet dset = esp("GetSewadarArbitraryShiftPresencesCount", prms);
			p_total_count = (System.Decimal)prms.FirstOrDefault(p => p.ParameterName == "p_total_count").Value;

			return dset;
		}
		
public string GetSewadarArbitraryShiftPresencesCountAsTask(Int16? p_sub_job_id, 
		                                                                Int32? p_satsang_centre_id, 
		                                                                String p_sewadar_grno, 
		                                                                ref Decimal p_total_count)
		{
			List<SqlParameter> prms = GetSewadarArbitraryShiftPresencesCount_Params(p_sub_job_id, p_satsang_centre_id, p_sewadar_grno, ref p_total_count);
			return gps("GetSewadarArbitraryShiftPresencesCount", prms);

		}
		
		
		
private List<SqlParameter> GetSewadarAttributes_Params(String sewadar_grno, 
		                                                            Int32? satsang_centre_id, 
		                                                            String attribute_group)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("sewadar_grno", sewadar_grno, CHAR, IN, p);
			csp("satsang_centre_id", satsang_centre_id, INT, IN, p);
			csp("attribute_group", attribute_group, VARCHAR, IN, p);
			return p;
		}
		
public DataSet GetSewadarAttributes(String sewadar_grno, 
		                                        Int32? satsang_centre_id, 
		                                        String attribute_group)
		{
			List<SqlParameter> prms = GetSewadarAttributes_Params(sewadar_grno, satsang_centre_id, attribute_group);
			DataSet dset = esp("GetSewadarAttributes", prms);

			return dset;
		}
		
public string GetSewadarAttributesAsTask(String sewadar_grno, 
		                                            Int32? satsang_centre_id, 
		                                            String attribute_group)
		{
			List<SqlParameter> prms = GetSewadarAttributes_Params(sewadar_grno, satsang_centre_id, attribute_group);
			return gps("GetSewadarAttributes", prms);

		}
		
		
		
private List<SqlParameter> GetSewadarOtherDisabilities_Params(Int32? sewadar_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("sewadar_id", sewadar_id, INT, IN, p);
			return p;
		}
		
public System.String GetSewadarOtherDisabilities(Int32? sewadar_id)
		{
			List<SqlParameter> prms = GetSewadarOtherDisabilities_Params(sewadar_id);
			string commaSeparatedParameters = ObjDBManager.GetCommaSeparatedParameters(prms);
			Object obj = ObjDBManager.ExecuteScalar("SELECT dbo.GetSewadarOtherDisabilities(" + commaSeparatedParameters + ")");

			return obj == null || obj == DBNull.Value ? null : (System.String)obj;
		}
		
		
		
private List<SqlParameter> GetSewadarQualifications_Params(Int32? p_sewadar_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_sewadar_id", p_sewadar_id, INT, IN, p);
			return p;
		}
		
public System.String GetSewadarQualifications(Int32? p_sewadar_id)
		{
			List<SqlParameter> prms = GetSewadarQualifications_Params(p_sewadar_id);
			string commaSeparatedParameters = ObjDBManager.GetCommaSeparatedParameters(prms);
			Object obj = ObjDBManager.ExecuteScalar("SELECT dbo.GetSewadarQualifications(" + commaSeparatedParameters + ")");

			return obj == null || obj == DBNull.Value ? null : (System.String)obj;
		}
		
		
		
private List<SqlParameter> GetSewadarRegistrationNumber_Params(Int32? p_satsang_centre_id, 
		                                                                    String p_gender, 
		                                                                    String p_is_outstation_sewadar, 
		                                                                    ref String p_sewadar_grno)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_satsang_centre_id", p_satsang_centre_id, INT, IN, p);
			csp("p_gender", p_gender, VARCHAR, IN, p);
			csp("p_is_outstation_sewadar", p_is_outstation_sewadar, VARCHAR, IN, p);
			csp("p_sewadar_grno", p_sewadar_grno, CHAR, INOUT, p);
			return p;
		}
		
public DataSet GetSewadarRegistrationNumber(Int32? p_satsang_centre_id, 
		                                                String p_gender, 
		                                                String p_is_outstation_sewadar, 
		                                                ref String p_sewadar_grno)
		{
			List<SqlParameter> prms = GetSewadarRegistrationNumber_Params(p_satsang_centre_id, p_gender, p_is_outstation_sewadar, ref p_sewadar_grno);
			DataSet dset = esp("GetSewadarRegistrationNumber", prms);
			p_sewadar_grno = (System.String)prms.FirstOrDefault(p => p.ParameterName == "p_sewadar_grno").Value;

			return dset;
		}
		
public string GetSewadarRegistrationNumberAsTask(Int32? p_satsang_centre_id, 
		                                                    String p_gender, 
		                                                    String p_is_outstation_sewadar, 
		                                                    ref String p_sewadar_grno)
		{
			List<SqlParameter> prms = GetSewadarRegistrationNumber_Params(p_satsang_centre_id, p_gender, p_is_outstation_sewadar, ref p_sewadar_grno);
			return gps("GetSewadarRegistrationNumber", prms);

		}
		
		
		
private List<SqlParameter> GetSewadarRemarks_Params(Int32? p_sewadar_id, 
		                                                        String p_remarks_type)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_sewadar_id", p_sewadar_id, INT, IN, p);
			csp("p_remarks_type", p_remarks_type, VARCHAR, IN, p);
			return p;
		}
		
public System.String GetSewadarRemarks(Int32? p_sewadar_id, 
		                                            String p_remarks_type)
		{
			List<SqlParameter> prms = GetSewadarRemarks_Params(p_sewadar_id, p_remarks_type);
			string commaSeparatedParameters = ObjDBManager.GetCommaSeparatedParameters(prms);
			Object obj = ObjDBManager.ExecuteScalar("SELECT dbo.GetSewadarRemarks(" + commaSeparatedParameters + ")");

			return obj == null || obj == DBNull.Value ? null : (System.String)obj;
		}
		
		
		
private List<SqlParameter> GetSewadarRosterDetails_Params(Int32? p_sewa_id, 
		                                                                Int32? p_team_id, 
		                                                                Int32? p_prev_year_sewa_id, 
		                                                                Int32? p_prev_2nd_year_sewa_id, 
		                                                                Int32? p_prev_3rd_year_sewa_id, 
		                                                                Int32? p_construction_sewa_id, 
		                                                                String p_NonInitiateTeam)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_sewa_id", p_sewa_id, INT, IN, p);
			csp("p_team_id", p_team_id, INT, IN, p);
			csp("p_prev_year_sewa_id", p_prev_year_sewa_id, INT, IN, p);
			csp("p_prev_2nd_year_sewa_id", p_prev_2nd_year_sewa_id, INT, IN, p);
			csp("p_prev_3rd_year_sewa_id", p_prev_3rd_year_sewa_id, INT, IN, p);
			csp("p_construction_sewa_id", p_construction_sewa_id, INT, IN, p);
			csp("p_NonInitiateTeam", p_NonInitiateTeam, VARCHAR, IN, p);
			return p;
		}
		
public DataSet GetSewadarRosterDetails(Int32? p_sewa_id, 
		                                            Int32? p_team_id, 
		                                            Int32? p_prev_year_sewa_id, 
		                                            Int32? p_prev_2nd_year_sewa_id, 
		                                            Int32? p_prev_3rd_year_sewa_id, 
		                                            Int32? p_construction_sewa_id, 
		                                            String p_NonInitiateTeam)
		{
			List<SqlParameter> prms = GetSewadarRosterDetails_Params(p_sewa_id, p_team_id, p_prev_year_sewa_id, p_prev_2nd_year_sewa_id, p_prev_3rd_year_sewa_id, p_construction_sewa_id, p_NonInitiateTeam);
			DataSet dset = esp("GetSewadarRosterDetails", prms);

			return dset;
		}
		
public string GetSewadarRosterDetailsAsTask(Int32? p_sewa_id, 
		                                                Int32? p_team_id, 
		                                                Int32? p_prev_year_sewa_id, 
		                                                Int32? p_prev_2nd_year_sewa_id, 
		                                                Int32? p_prev_3rd_year_sewa_id, 
		                                                Int32? p_construction_sewa_id, 
		                                                String p_NonInitiateTeam)
		{
			List<SqlParameter> prms = GetSewadarRosterDetails_Params(p_sewa_id, p_team_id, p_prev_year_sewa_id, p_prev_2nd_year_sewa_id, p_prev_3rd_year_sewa_id, p_construction_sewa_id, p_NonInitiateTeam);
			return gps("GetSewadarRosterDetails", prms);

		}
		
		
		
private List<SqlParameter> GetSewadarRosterHeaders_Params(String p_team_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_team_id", p_team_id, VARCHAR, IN, p);
			return p;
		}
		
public DataSet GetSewadarRosterHeaders(String p_team_id)
		{
			List<SqlParameter> prms = GetSewadarRosterHeaders_Params(p_team_id);
			DataSet dset = esp("GetSewadarRosterHeaders", prms);

			return dset;
		}
		
public string GetSewadarRosterHeadersAsTask(String p_team_id)
		{
			List<SqlParameter> prms = GetSewadarRosterHeaders_Params(p_team_id);
			return gps("GetSewadarRosterHeaders", prms);

		}
		
		
		
private List<SqlParameter> GetSewaMaxPresenceAllowedDate_Params(Int32? p_sewa_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_sewa_id", p_sewa_id, INT, IN, p);
			return p;
		}
		
public System.DateTime? GetSewaMaxPresenceAllowedDate(Int32? p_sewa_id)
		{
			List<SqlParameter> prms = GetSewaMaxPresenceAllowedDate_Params(p_sewa_id);
			string commaSeparatedParameters = ObjDBManager.GetCommaSeparatedParameters(prms);
			Object obj = ObjDBManager.ExecuteScalar("SELECT dbo.GetSewaMaxPresenceAllowedDate(" + commaSeparatedParameters + ")");

			return (obj == null || obj == DBNull.Value) ? null : (System.DateTime?)obj;
		}
		
		
		
private List<SqlParameter> GetSystemDate_Params()
		{
			List<SqlParameter> p = new List<SqlParameter>();
			return p;
		}
		
public System.DateTime? GetSystemDate()
		{
			List<SqlParameter> prms = GetSystemDate_Params();
			string commaSeparatedParameters = ObjDBManager.GetCommaSeparatedParameters(prms);
			Object obj = ObjDBManager.ExecuteScalar("SELECT dbo.GetSystemDate(" + commaSeparatedParameters + ")");
			return (obj == null || obj == DBNull.Value) ? null : (System.DateTime?)obj;
		}
		
		
		
private List<SqlParameter> GetSystemInfoValue_Params(Int32? p_value_int, 
		                                                        String p_value_varchar, 
		                                                        DateTime? p_value_dt, 
		                                                        DateTime? p_value_dtm)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_value_int", p_value_int, INT, IN, p);
			csp("p_value_varchar", p_value_varchar, VARCHAR, IN, p);
			csp("p_value_dt", p_value_dt, DATETIME, IN, p);
			csp("p_value_dtm", p_value_dtm, DATETIME, IN, p);
			return p;
		}
		
public System.String GetSystemInfoValue(Int32? p_value_int, 
		                                            String p_value_varchar, 
		                                            DateTime? p_value_dt, 
		                                            DateTime? p_value_dtm)
		{
			List<SqlParameter> prms = GetSystemInfoValue_Params(p_value_int, p_value_varchar, p_value_dt, p_value_dtm);
			string commaSeparatedParameters = ObjDBManager.GetCommaSeparatedParameters(prms);
			Object obj = ObjDBManager.ExecuteScalar("SELECT dbo.GetSystemInfoValue(" + commaSeparatedParameters + ")");

			return obj == null || obj == DBNull.Value ? null : (System.String)obj;
		}
		
		
		
private List<SqlParameter> GetTraineeSewadarRegistrationNumber_Params(Int32? p_satsang_centre_id, 
		                                                                            Int32? p_sewa_id, 
		                                                                            ref String p_sewadar_grno)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_satsang_centre_id", p_satsang_centre_id, INT, IN, p);
			csp("p_sewa_id", p_sewa_id, INT, IN, p);
			csp("p_sewadar_grno", p_sewadar_grno, CHAR, INOUT, p);
			return p;
		}
		
public DataSet GetTraineeSewadarRegistrationNumber(Int32? p_satsang_centre_id, 
		                                                        Int32? p_sewa_id, 
		                                                        ref String p_sewadar_grno)
		{
			List<SqlParameter> prms = GetTraineeSewadarRegistrationNumber_Params(p_satsang_centre_id, p_sewa_id, ref p_sewadar_grno);
			DataSet dset = esp("GetTraineeSewadarRegistrationNumber", prms);
			p_sewadar_grno = (System.String)prms.FirstOrDefault(p => p.ParameterName == "p_sewadar_grno").Value;

			return dset;
		}
		
public string GetTraineeSewadarRegistrationNumberAsTask(Int32? p_satsang_centre_id, 
		                                                            Int32? p_sewa_id, 
		                                                            ref String p_sewadar_grno)
		{
			List<SqlParameter> prms = GetTraineeSewadarRegistrationNumber_Params(p_satsang_centre_id, p_sewa_id, ref p_sewadar_grno);
			return gps("GetTraineeSewadarRegistrationNumber", prms);

		}
		
		
		
private List<SqlParameter> GetTraineeSewadarsBadgeInfo_Params(Int32? p_from_badge_id, 
		                                                                    Int32? p_till_badge_id, 
		                                                                    Int32? p_satsang_centre_id, 
		                                                                    String p_badge_template_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_from_badge_id", p_from_badge_id, INT, IN, p);
			csp("p_till_badge_id", p_till_badge_id, INT, IN, p);
			csp("p_satsang_centre_id", p_satsang_centre_id, INT, IN, p);
			csp("p_badge_template_id", p_badge_template_id, VARCHAR, IN, p);
			return p;
		}
		
public DataSet GetTraineeSewadarsBadgeInfo(Int32? p_from_badge_id, 
		                                                Int32? p_till_badge_id, 
		                                                Int32? p_satsang_centre_id, 
		                                                String p_badge_template_id)
		{
			List<SqlParameter> prms = GetTraineeSewadarsBadgeInfo_Params(p_from_badge_id, p_till_badge_id, p_satsang_centre_id, p_badge_template_id);
			DataSet dset = esp("GetTraineeSewadarsBadgeInfo", prms);

			return dset;
		}
		
public string GetTraineeSewadarsBadgeInfoAsTask(Int32? p_from_badge_id, 
		                                                    Int32? p_till_badge_id, 
		                                                    Int32? p_satsang_centre_id, 
		                                                    String p_badge_template_id)
		{
			List<SqlParameter> prms = GetTraineeSewadarsBadgeInfo_Params(p_from_badge_id, p_till_badge_id, p_satsang_centre_id, p_badge_template_id);
			return gps("GetTraineeSewadarsBadgeInfo", prms);

		}
		
		
		
private List<SqlParameter> GetTriangularSewadarBackInfo_Params(Int32? p_from_badge_id, 
		                                                                    Int32? p_till_badge_id, 
		                                                                    Int32? p_satsang_centre_id, 
		                                                                    String p_badge_template_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_from_badge_id", p_from_badge_id, INT, IN, p);
			csp("p_till_badge_id", p_till_badge_id, INT, IN, p);
			csp("p_satsang_centre_id", p_satsang_centre_id, INT, IN, p);
			csp("p_badge_template_id", p_badge_template_id, VARCHAR, IN, p);
			return p;
		}
		
public DataSet GetTriangularSewadarBackInfo(Int32? p_from_badge_id, 
		                                                Int32? p_till_badge_id, 
		                                                Int32? p_satsang_centre_id, 
		                                                String p_badge_template_id)
		{
			List<SqlParameter> prms = GetTriangularSewadarBackInfo_Params(p_from_badge_id, p_till_badge_id, p_satsang_centre_id, p_badge_template_id);
			DataSet dset = esp("GetTriangularSewadarBackInfo", prms);

			return dset;
		}
		
public string GetTriangularSewadarBackInfoAsTask(Int32? p_from_badge_id, 
		                                                    Int32? p_till_badge_id, 
		                                                    Int32? p_satsang_centre_id, 
		                                                    String p_badge_template_id)
		{
			List<SqlParameter> prms = GetTriangularSewadarBackInfo_Params(p_from_badge_id, p_till_badge_id, p_satsang_centre_id, p_badge_template_id);
			return gps("GetTriangularSewadarBackInfo", prms);

		}
		
		
		
private List<SqlParameter> GetTriangularSewadarFrontInfo_Params(Int32? p_from_badge_id, 
		                                                                    Int32? p_till_badge_id, 
		                                                                    Int32? p_satsang_centre_id, 
		                                                                    String p_badge_template_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_from_badge_id", p_from_badge_id, INT, IN, p);
			csp("p_till_badge_id", p_till_badge_id, INT, IN, p);
			csp("p_satsang_centre_id", p_satsang_centre_id, INT, IN, p);
			csp("p_badge_template_id", p_badge_template_id, VARCHAR, IN, p);
			return p;
		}
		
public DataSet GetTriangularSewadarFrontInfo(Int32? p_from_badge_id, 
		                                                Int32? p_till_badge_id, 
		                                                Int32? p_satsang_centre_id, 
		                                                String p_badge_template_id)
		{
			List<SqlParameter> prms = GetTriangularSewadarFrontInfo_Params(p_from_badge_id, p_till_badge_id, p_satsang_centre_id, p_badge_template_id);
			DataSet dset = esp("GetTriangularSewadarFrontInfo", prms);

			return dset;
		}
		
public string GetTriangularSewadarFrontInfoAsTask(Int32? p_from_badge_id, 
		                                                        Int32? p_till_badge_id, 
		                                                        Int32? p_satsang_centre_id, 
		                                                        String p_badge_template_id)
		{
			List<SqlParameter> prms = GetTriangularSewadarFrontInfo_Params(p_from_badge_id, p_till_badge_id, p_satsang_centre_id, p_badge_template_id);
			return gps("GetTriangularSewadarFrontInfo", prms);

		}
		
		
		
private List<SqlParameter> GetVerticalSewadarBackInfo_Params(Int32? p_from_badge_id, 
		                                                                Int32? p_till_badge_id, 
		                                                                Int32? p_satsang_centre_id, 
		                                                                String p_badge_template_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_from_badge_id", p_from_badge_id, INT, IN, p);
			csp("p_till_badge_id", p_till_badge_id, INT, IN, p);
			csp("p_satsang_centre_id", p_satsang_centre_id, INT, IN, p);
			csp("p_badge_template_id", p_badge_template_id, VARCHAR, IN, p);
			return p;
		}
		
public DataSet GetVerticalSewadarBackInfo(Int32? p_from_badge_id, 
		                                                Int32? p_till_badge_id, 
		                                                Int32? p_satsang_centre_id, 
		                                                String p_badge_template_id)
		{
			List<SqlParameter> prms = GetVerticalSewadarBackInfo_Params(p_from_badge_id, p_till_badge_id, p_satsang_centre_id, p_badge_template_id);
			DataSet dset = esp("GetVerticalSewadarBackInfo", prms);

			return dset;
		}
		
public string GetVerticalSewadarBackInfoAsTask(Int32? p_from_badge_id, 
		                                                    Int32? p_till_badge_id, 
		                                                    Int32? p_satsang_centre_id, 
		                                                    String p_badge_template_id)
		{
			List<SqlParameter> prms = GetVerticalSewadarBackInfo_Params(p_from_badge_id, p_till_badge_id, p_satsang_centre_id, p_badge_template_id);
			return gps("GetVerticalSewadarBackInfo", prms);

		}
		
		
		
private List<SqlParameter> GetVerticalSewadarFrontInfo_Params(Int32? p_from_badge_id, 
		                                                                    Int32? p_till_badge_id, 
		                                                                    Int32? p_satsang_centre_id, 
		                                                                    String p_badge_template_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_from_badge_id", p_from_badge_id, INT, IN, p);
			csp("p_till_badge_id", p_till_badge_id, INT, IN, p);
			csp("p_satsang_centre_id", p_satsang_centre_id, INT, IN, p);
			csp("p_badge_template_id", p_badge_template_id, VARCHAR, IN, p);
			return p;
		}
		
public DataSet GetVerticalSewadarFrontInfo(Int32? p_from_badge_id, 
		                                                Int32? p_till_badge_id, 
		                                                Int32? p_satsang_centre_id, 
		                                                String p_badge_template_id)
		{
			List<SqlParameter> prms = GetVerticalSewadarFrontInfo_Params(p_from_badge_id, p_till_badge_id, p_satsang_centre_id, p_badge_template_id);
			DataSet dset = esp("GetVerticalSewadarFrontInfo", prms);

			return dset;
		}
		
public string GetVerticalSewadarFrontInfoAsTask(Int32? p_from_badge_id, 
		                                                    Int32? p_till_badge_id, 
		                                                    Int32? p_satsang_centre_id, 
		                                                    String p_badge_template_id)
		{
			List<SqlParameter> prms = GetVerticalSewadarFrontInfo_Params(p_from_badge_id, p_till_badge_id, p_satsang_centre_id, p_badge_template_id);
			return gps("GetVerticalSewadarFrontInfo", prms);

		}
		
		
		
private List<SqlParameter> GrantExemptionForSewa_Params(Int32? p_sewadar_list_id, 
		                                                            Int32? p_sewa_id, 
		                                                            Int16? p_sewa_exemption_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_sewadar_list_id", p_sewadar_list_id, INT, IN, p);
			csp("p_sewa_id", p_sewa_id, INT, IN, p);
			csp("p_sewa_exemption_id", p_sewa_exemption_id, SMALLINT, IN, p);
			return p;
		}
		
public DataSet GrantExemptionForSewa(Int32? p_sewadar_list_id, 
		                                        Int32? p_sewa_id, 
		                                        Int16? p_sewa_exemption_id)
		{
			List<SqlParameter> prms = GrantExemptionForSewa_Params(p_sewadar_list_id, p_sewa_id, p_sewa_exemption_id);
			DataSet dset = esp("GrantExemptionForSewa", prms);

			return dset;
		}
		
public string GrantExemptionForSewaAsTask(Int32? p_sewadar_list_id, 
		                                                Int32? p_sewa_id, 
		                                                Int16? p_sewa_exemption_id)
		{
			List<SqlParameter> prms = GrantExemptionForSewa_Params(p_sewadar_list_id, p_sewa_id, p_sewa_exemption_id);
			return gps("GrantExemptionForSewa", prms);

		}
		
		
		
private List<SqlParameter> ImportBulkSewadarScannedRecords_Params(DataTable sewadarRecords)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("sewadarRecords", sewadarRecords, STRUCTURED, IN, p);
			return p;
		}
		
public DataSet ImportBulkSewadarScannedRecords(DataTable sewadarRecords)
		{
			List<SqlParameter> prms = ImportBulkSewadarScannedRecords_Params(sewadarRecords);
			DataSet dset = esp("ImportBulkSewadarScannedRecords", prms);

			return dset;
		}
		
public string ImportBulkSewadarScannedRecordsAsTask(DataTable sewadarRecords)
		{
			List<SqlParameter> prms = ImportBulkSewadarScannedRecords_Params(sewadarRecords);
			return gps("ImportBulkSewadarScannedRecords", prms);

		}
		
		
		
private List<SqlParameter> ImportSewadarListsToZone_Params()
		{
			List<SqlParameter> p = new List<SqlParameter>();
			return p;
		}
		
public DataSet ImportSewadarListsToZone()
		{
			List<SqlParameter> prms = ImportSewadarListsToZone_Params();
			DataSet dset = esp("ImportSewadarListsToZone", prms);
			return dset;
		}
		
public string ImportSewadarListsToZoneAsTask()
		{
			List<SqlParameter> prms = ImportSewadarListsToZone_Params();
			return gps("ImportSewadarListsToZone", prms);
		}
		
		
		
private List<SqlParameter> InsertArbitraryDailyPresence_Params(Int32? sewa_id, 
		                                                                    Int32? satsang_centre_id, 
		                                                                    String sewadar_grno, 
		                                                                    DateTime? presence_dt, 
		                                                                    String is_scanned)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("sewa_id", sewa_id, INT, IN, p);
			csp("satsang_centre_id", satsang_centre_id, INT, IN, p);
			csp("sewadar_grno", sewadar_grno, CHAR, IN, p);
			csp("presence_dt", presence_dt, SMALLDATETIME, IN, p);
			csp("is_scanned", is_scanned, VARCHAR, IN, p);
			return p;
		}
		
public DataSet InsertArbitraryDailyPresence(Int32? sewa_id, 
		                                                Int32? satsang_centre_id, 
		                                                String sewadar_grno, 
		                                                DateTime? presence_dt, 
		                                                String is_scanned)
		{
			List<SqlParameter> prms = InsertArbitraryDailyPresence_Params(sewa_id, satsang_centre_id, sewadar_grno, presence_dt, is_scanned);
			DataSet dset = esp("InsertArbitraryDailyPresence", prms);

			return dset;
		}
		
public string InsertArbitraryDailyPresenceAsTask(Int32? sewa_id, 
		                                                    Int32? satsang_centre_id, 
		                                                    String sewadar_grno, 
		                                                    DateTime? presence_dt, 
		                                                    String is_scanned)
		{
			List<SqlParameter> prms = InsertArbitraryDailyPresence_Params(sewa_id, satsang_centre_id, sewadar_grno, presence_dt, is_scanned);
			return gps("InsertArbitraryDailyPresence", prms);

		}
		
		
		
private List<SqlParameter> InsertArbitraryShiftPresence_Params(Int32? sewa_id, 
		                                                                    Int32? satsang_centre_id, 
		                                                                    String sewadar_grno, 
		                                                                    DateTime? presence_dt, 
		                                                                    String sewa_shift)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("sewa_id", sewa_id, INT, IN, p);
			csp("satsang_centre_id", satsang_centre_id, INT, IN, p);
			csp("sewadar_grno", sewadar_grno, CHAR, IN, p);
			csp("presence_dt", presence_dt, SMALLDATETIME, IN, p);
			csp("sewa_shift", sewa_shift, VARCHAR, IN, p);
			return p;
		}
		
public DataSet InsertArbitraryShiftPresence(Int32? sewa_id, 
		                                                Int32? satsang_centre_id, 
		                                                String sewadar_grno, 
		                                                DateTime? presence_dt, 
		                                                String sewa_shift)
		{
			List<SqlParameter> prms = InsertArbitraryShiftPresence_Params(sewa_id, satsang_centre_id, sewadar_grno, presence_dt, sewa_shift);
			DataSet dset = esp("InsertArbitraryShiftPresence", prms);

			return dset;
		}
		
public string InsertArbitraryShiftPresenceAsTask(Int32? sewa_id, 
		                                                    Int32? satsang_centre_id, 
		                                                    String sewadar_grno, 
		                                                    DateTime? presence_dt, 
		                                                    String sewa_shift)
		{
			List<SqlParameter> prms = InsertArbitraryShiftPresence_Params(sewa_id, satsang_centre_id, sewadar_grno, presence_dt, sewa_shift);
			return gps("InsertArbitraryShiftPresence", prms);

		}
		
		
		
private List<SqlParameter> InsertArbitrarySummarisedExemption_Params(Int32? sewa_id, 
		                                                                        Int32? satsang_centre_id, 
		                                                                        String sewadar_grno, 
		                                                                        Int16? sewa_exemption_id, 
		                                                                        Decimal? exemption_days)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("sewa_id", sewa_id, INT, IN, p);
			csp("satsang_centre_id", satsang_centre_id, INT, IN, p);
			csp("sewadar_grno", sewadar_grno, CHAR, IN, p);
			csp("sewa_exemption_id", sewa_exemption_id, SMALLINT, IN, p);
			csp("exemption_days", exemption_days, DECIMAL, IN, p);
			return p;
		}
		
public DataSet InsertArbitrarySummarisedExemption(Int32? sewa_id, 
		                                                        Int32? satsang_centre_id, 
		                                                        String sewadar_grno, 
		                                                        Int16? sewa_exemption_id, 
		                                                        Decimal? exemption_days)
		{
			List<SqlParameter> prms = InsertArbitrarySummarisedExemption_Params(sewa_id, satsang_centre_id, sewadar_grno, sewa_exemption_id, exemption_days);
			DataSet dset = esp("InsertArbitrarySummarisedExemption", prms);

			return dset;
		}
		
public string InsertArbitrarySummarisedExemptionAsTask(Int32? sewa_id, 
		                                                            Int32? satsang_centre_id, 
		                                                            String sewadar_grno, 
		                                                            Int16? sewa_exemption_id, 
		                                                            Decimal? exemption_days)
		{
			List<SqlParameter> prms = InsertArbitrarySummarisedExemption_Params(sewa_id, satsang_centre_id, sewadar_grno, sewa_exemption_id, exemption_days);
			return gps("InsertArbitrarySummarisedExemption", prms);

		}
		
		
		
private List<SqlParameter> InsertBadgeTemplate_Params(String badge_template_id, 
		                                                            String badge_template_nm, 
		                                                            String badge_shape, 
		                                                            String information_type, 
		                                                            String foreground_colour_control, 
		                                                            Int16? foreground_colour_id, 
		                                                            String background_colour_control, 
		                                                            Int16? background_colour_id, 
		                                                            Byte? top_line_font_size, 
		                                                            String top_line_part_1_type, 
		                                                            String top_line_part_1_text, 
		                                                            String top_line_parts_separator, 
		                                                            String top_line_part_2_type, 
		                                                            String top_line_part_2_text, 
		                                                            Byte? middle_line_font_size, 
		                                                            String middle_line_part_1_type, 
		                                                            String middle_line_part_1_text, 
		                                                            String middle_line_parts_separator, 
		                                                            String middle_line_part_2_type, 
		                                                            String middle_line_part_2_text, 
		                                                            Byte? bottom_line_font_size, 
		                                                            String bottom_line_part_1_type, 
		                                                            String bottom_line_part_1_text, 
		                                                            String bottom_line_parts_separator, 
		                                                            String bottom_line_part_2_type, 
		                                                            String bottom_line_part_2_text, 
		                                                            String expiry_year, 
		                                                            String report_file_nm_front, 
		                                                            String report_file_nm_back, 
		                                                            String procedure_nm_front, 
		                                                            String procedure_nm_back, 
		                                                            String are_outstation_sewadars_allowed)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("badge_template_id", badge_template_id, VARCHAR, IN, p);
			csp("badge_template_nm", badge_template_nm, VARCHAR, IN, p);
			csp("badge_shape", badge_shape, VARCHAR, IN, p);
			csp("information_type", information_type, VARCHAR, IN, p);
			csp("foreground_colour_control", foreground_colour_control, VARCHAR, IN, p);
			csp("foreground_colour_id", foreground_colour_id, SMALLINT, IN, p);
			csp("background_colour_control", background_colour_control, VARCHAR, IN, p);
			csp("background_colour_id", background_colour_id, SMALLINT, IN, p);
			csp("top_line_font_size", top_line_font_size, TINYINT, IN, p);
			csp("top_line_part_1_type", top_line_part_1_type, VARCHAR, IN, p);
			csp("top_line_part_1_text", top_line_part_1_text, VARCHAR, IN, p);
			csp("top_line_parts_separator", top_line_parts_separator, VARCHAR, IN, p);
			csp("top_line_part_2_type", top_line_part_2_type, VARCHAR, IN, p);
			csp("top_line_part_2_text", top_line_part_2_text, VARCHAR, IN, p);
			csp("middle_line_font_size", middle_line_font_size, TINYINT, IN, p);
			csp("middle_line_part_1_type", middle_line_part_1_type, VARCHAR, IN, p);
			csp("middle_line_part_1_text", middle_line_part_1_text, VARCHAR, IN, p);
			csp("middle_line_parts_separator", middle_line_parts_separator, VARCHAR, IN, p);
			csp("middle_line_part_2_type", middle_line_part_2_type, VARCHAR, IN, p);
			csp("middle_line_part_2_text", middle_line_part_2_text, VARCHAR, IN, p);
			csp("bottom_line_font_size", bottom_line_font_size, TINYINT, IN, p);
			csp("bottom_line_part_1_type", bottom_line_part_1_type, VARCHAR, IN, p);
			csp("bottom_line_part_1_text", bottom_line_part_1_text, VARCHAR, IN, p);
			csp("bottom_line_parts_separator", bottom_line_parts_separator, VARCHAR, IN, p);
			csp("bottom_line_part_2_type", bottom_line_part_2_type, VARCHAR, IN, p);
			csp("bottom_line_part_2_text", bottom_line_part_2_text, VARCHAR, IN, p);
			csp("expiry_year", expiry_year, CHAR, IN, p);
			csp("report_file_nm_front", report_file_nm_front, VARCHAR, IN, p);
			csp("report_file_nm_back", report_file_nm_back, VARCHAR, IN, p);
			csp("procedure_nm_front", procedure_nm_front, VARCHAR, IN, p);
			csp("procedure_nm_back", procedure_nm_back, VARCHAR, IN, p);
			csp("are_outstation_sewadars_allowed", are_outstation_sewadars_allowed, VARCHAR, IN, p);
			return p;
		}
		
public DataSet InsertBadgeTemplate(String badge_template_id, 
		                                        String badge_template_nm, 
		                                        String badge_shape, 
		                                        String information_type, 
		                                        String foreground_colour_control, 
		                                        Int16? foreground_colour_id, 
		                                        String background_colour_control, 
		                                        Int16? background_colour_id, 
		                                        Byte? top_line_font_size, 
		                                        String top_line_part_1_type, 
		                                        String top_line_part_1_text, 
		                                        String top_line_parts_separator, 
		                                        String top_line_part_2_type, 
		                                        String top_line_part_2_text, 
		                                        Byte? middle_line_font_size, 
		                                        String middle_line_part_1_type, 
		                                        String middle_line_part_1_text, 
		                                        String middle_line_parts_separator, 
		                                        String middle_line_part_2_type, 
		                                        String middle_line_part_2_text, 
		                                        Byte? bottom_line_font_size, 
		                                        String bottom_line_part_1_type, 
		                                        String bottom_line_part_1_text, 
		                                        String bottom_line_parts_separator, 
		                                        String bottom_line_part_2_type, 
		                                        String bottom_line_part_2_text, 
		                                        String expiry_year, 
		                                        String report_file_nm_front, 
		                                        String report_file_nm_back, 
		                                        String procedure_nm_front, 
		                                        String procedure_nm_back, 
		                                        String are_outstation_sewadars_allowed)
		{
			List<SqlParameter> prms = InsertBadgeTemplate_Params(badge_template_id, badge_template_nm, badge_shape, information_type, foreground_colour_control, foreground_colour_id, background_colour_control, background_colour_id, top_line_font_size, top_line_part_1_type, top_line_part_1_text, top_line_parts_separator, top_line_part_2_type, top_line_part_2_text, middle_line_font_size, middle_line_part_1_type, middle_line_part_1_text, middle_line_parts_separator, middle_line_part_2_type, middle_line_part_2_text, bottom_line_font_size, bottom_line_part_1_type, bottom_line_part_1_text, bottom_line_parts_separator, bottom_line_part_2_type, bottom_line_part_2_text, expiry_year, report_file_nm_front, report_file_nm_back, procedure_nm_front, procedure_nm_back, are_outstation_sewadars_allowed);
			DataSet dset = esp("InsertBadgeTemplate", prms);

			return dset;
		}
		
public string InsertBadgeTemplateAsTask(String badge_template_id, 
		                                            String badge_template_nm, 
		                                            String badge_shape, 
		                                            String information_type, 
		                                            String foreground_colour_control, 
		                                            Int16? foreground_colour_id, 
		                                            String background_colour_control, 
		                                            Int16? background_colour_id, 
		                                            Byte? top_line_font_size, 
		                                            String top_line_part_1_type, 
		                                            String top_line_part_1_text, 
		                                            String top_line_parts_separator, 
		                                            String top_line_part_2_type, 
		                                            String top_line_part_2_text, 
		                                            Byte? middle_line_font_size, 
		                                            String middle_line_part_1_type, 
		                                            String middle_line_part_1_text, 
		                                            String middle_line_parts_separator, 
		                                            String middle_line_part_2_type, 
		                                            String middle_line_part_2_text, 
		                                            Byte? bottom_line_font_size, 
		                                            String bottom_line_part_1_type, 
		                                            String bottom_line_part_1_text, 
		                                            String bottom_line_parts_separator, 
		                                            String bottom_line_part_2_type, 
		                                            String bottom_line_part_2_text, 
		                                            String expiry_year, 
		                                            String report_file_nm_front, 
		                                            String report_file_nm_back, 
		                                            String procedure_nm_front, 
		                                            String procedure_nm_back, 
		                                            String are_outstation_sewadars_allowed)
		{
			List<SqlParameter> prms = InsertBadgeTemplate_Params(badge_template_id, badge_template_nm, badge_shape, information_type, foreground_colour_control, foreground_colour_id, background_colour_control, background_colour_id, top_line_font_size, top_line_part_1_type, top_line_part_1_text, top_line_parts_separator, top_line_part_2_type, top_line_part_2_text, middle_line_font_size, middle_line_part_1_type, middle_line_part_1_text, middle_line_parts_separator, middle_line_part_2_type, middle_line_part_2_text, bottom_line_font_size, bottom_line_part_1_type, bottom_line_part_1_text, bottom_line_parts_separator, bottom_line_part_2_type, bottom_line_part_2_text, expiry_year, report_file_nm_front, report_file_nm_back, procedure_nm_front, procedure_nm_back, are_outstation_sewadars_allowed);
			return gps("InsertBadgeTemplate", prms);

		}
		
		
		
private List<SqlParameter> InsertColour_Params(Int16? colour_id, 
		                                                    String colour_nm, 
		                                                    Byte? red_component, 
		                                                    Byte? green_component, 
		                                                    Byte? blue_component, 
		                                                    String remarks, 
		                                                    DateTime? effective_from, 
		                                                    DateTime? effective_till)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("colour_id", colour_id, SMALLINT, IN, p);
			csp("colour_nm", colour_nm, VARCHAR, IN, p);
			csp("red_component", red_component, TINYINT, IN, p);
			csp("green_component", green_component, TINYINT, IN, p);
			csp("blue_component", blue_component, TINYINT, IN, p);
			csp("remarks", remarks, VARCHAR, IN, p);
			csp("effective_from", effective_from, DATETIME, IN, p);
			csp("effective_till", effective_till, DATETIME, IN, p);
			return p;
		}
		
public DataSet InsertColour(Int16? colour_id, 
		                                String colour_nm, 
		                                Byte? red_component, 
		                                Byte? green_component, 
		                                Byte? blue_component, 
		                                String remarks, 
		                                DateTime? effective_from, 
		                                DateTime? effective_till)
		{
			List<SqlParameter> prms = InsertColour_Params(colour_id, colour_nm, red_component, green_component, blue_component, remarks, effective_from, effective_till);
			DataSet dset = esp("InsertColour", prms);

			return dset;
		}
		
public string InsertColourAsTask(Int16? colour_id, 
		                                    String colour_nm, 
		                                    Byte? red_component, 
		                                    Byte? green_component, 
		                                    Byte? blue_component, 
		                                    String remarks, 
		                                    DateTime? effective_from, 
		                                    DateTime? effective_till)
		{
			List<SqlParameter> prms = InsertColour_Params(colour_id, colour_nm, red_component, green_component, blue_component, remarks, effective_from, effective_till);
			return gps("InsertColour", prms);

		}
		
		
		
private List<SqlParameter> InsertCreditSpecification_Params(ref Int16 credit_specification_id, 
		                                                                String credit_specification_nm, 
		                                                                DateTime? credit_specification_dt, 
		                                                                Int32? satsang_centre_id, 
		                                                                String credit_group_nm, 
		                                                                String is_uniform_specification, 
		                                                                String is_outstation_sewadar, 
		                                                                Int16? credit_cnt, 
		                                                                Int16? unit_cnt, 
		                                                                String is_exemption_considered, 
		                                                                Int32? presence_sewa_id, 
		                                                                Int16? min_credit_cnt, 
		                                                                DateTime? specification_ts, 
		                                                                DateTime? computation_ts, 
		                                                                DateTime? last_appointment_dt, 
		                                                                String is_finally_used)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("credit_specification_id", credit_specification_id, SMALLINT, INOUT, p);
			csp("credit_specification_nm", credit_specification_nm, VARCHAR, IN, p);
			csp("credit_specification_dt", credit_specification_dt, SMALLDATETIME, IN, p);
			csp("satsang_centre_id", satsang_centre_id, INT, IN, p);
			csp("credit_group_nm", credit_group_nm, VARCHAR, IN, p);
			csp("is_uniform_specification", is_uniform_specification, VARCHAR, IN, p);
			csp("is_outstation_sewadar", is_outstation_sewadar, VARCHAR, IN, p);
			csp("credit_cnt", credit_cnt, SMALLINT, IN, p);
			csp("unit_cnt", unit_cnt, SMALLINT, IN, p);
			csp("is_exemption_considered", is_exemption_considered, VARCHAR, IN, p);
			csp("presence_sewa_id", presence_sewa_id, INT, IN, p);
			csp("min_credit_cnt", min_credit_cnt, SMALLINT, IN, p);
			csp("specification_ts", specification_ts, DATETIME, IN, p);
			csp("computation_ts", computation_ts, DATETIME, IN, p);
			csp("last_appointment_dt", last_appointment_dt, SMALLDATETIME, IN, p);
			csp("is_finally_used", is_finally_used, VARCHAR, IN, p);
			return p;
		}
		
public DataSet InsertCreditSpecification(ref Int16 credit_specification_id, 
		                                            String credit_specification_nm, 
		                                            DateTime? credit_specification_dt, 
		                                            Int32? satsang_centre_id, 
		                                            String credit_group_nm, 
		                                            String is_uniform_specification, 
		                                            String is_outstation_sewadar, 
		                                            Int16? credit_cnt, 
		                                            Int16? unit_cnt, 
		                                            String is_exemption_considered, 
		                                            Int32? presence_sewa_id, 
		                                            Int16? min_credit_cnt, 
		                                            DateTime? specification_ts, 
		                                            DateTime? computation_ts, 
		                                            DateTime? last_appointment_dt, 
		                                            String is_finally_used)
		{
			List<SqlParameter> prms = InsertCreditSpecification_Params(ref credit_specification_id, credit_specification_nm, credit_specification_dt, satsang_centre_id, credit_group_nm, is_uniform_specification, is_outstation_sewadar, credit_cnt, unit_cnt, is_exemption_considered, presence_sewa_id, min_credit_cnt, specification_ts, computation_ts, last_appointment_dt, is_finally_used);
			DataSet dset = esp("InsertCreditSpecification", prms);
			credit_specification_id = (System.Int16)prms.FirstOrDefault(p => p.ParameterName == "credit_specification_id").Value;

			return dset;
		}
		
public string InsertCreditSpecificationAsTask(ref Int16 credit_specification_id, 
		                                                    String credit_specification_nm, 
		                                                    DateTime? credit_specification_dt, 
		                                                    Int32? satsang_centre_id, 
		                                                    String credit_group_nm, 
		                                                    String is_uniform_specification, 
		                                                    String is_outstation_sewadar, 
		                                                    Int16? credit_cnt, 
		                                                    Int16? unit_cnt, 
		                                                    String is_exemption_considered, 
		                                                    Int32? presence_sewa_id, 
		                                                    Int16? min_credit_cnt, 
		                                                    DateTime? specification_ts, 
		                                                    DateTime? computation_ts, 
		                                                    DateTime? last_appointment_dt, 
		                                                    String is_finally_used)
		{
			List<SqlParameter> prms = InsertCreditSpecification_Params(ref credit_specification_id, credit_specification_nm, credit_specification_dt, satsang_centre_id, credit_group_nm, is_uniform_specification, is_outstation_sewadar, credit_cnt, unit_cnt, is_exemption_considered, presence_sewa_id, min_credit_cnt, specification_ts, computation_ts, last_appointment_dt, is_finally_used);
			return gps("InsertCreditSpecification", prms);

		}
		
		
		
private List<SqlParameter> InsertCreditSpecificationsSewa_Params(Int16? credit_specification_id, 
		                                                                    Int32? sewa_id, 
		                                                                    Int16? credit_cnt, 
		                                                                    Int16? unit_cnt, 
		                                                                    String is_exemption_considered, 
		                                                                    Int16? min_credit_cnt, 
		                                                                    Decimal? max_credit_cnt)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("credit_specification_id", credit_specification_id, SMALLINT, IN, p);
			csp("sewa_id", sewa_id, INT, IN, p);
			csp("credit_cnt", credit_cnt, SMALLINT, IN, p);
			csp("unit_cnt", unit_cnt, SMALLINT, IN, p);
			csp("is_exemption_considered", is_exemption_considered, VARCHAR, IN, p);
			csp("min_credit_cnt", min_credit_cnt, SMALLINT, IN, p);
			csp("max_credit_cnt", max_credit_cnt, DECIMAL, IN, p);
			return p;
		}
		
public DataSet InsertCreditSpecificationsSewa(Int16? credit_specification_id, 
		                                                    Int32? sewa_id, 
		                                                    Int16? credit_cnt, 
		                                                    Int16? unit_cnt, 
		                                                    String is_exemption_considered, 
		                                                    Int16? min_credit_cnt, 
		                                                    Decimal? max_credit_cnt)
		{
			List<SqlParameter> prms = InsertCreditSpecificationsSewa_Params(credit_specification_id, sewa_id, credit_cnt, unit_cnt, is_exemption_considered, min_credit_cnt, max_credit_cnt);
			DataSet dset = esp("InsertCreditSpecificationsSewa", prms);

			return dset;
		}
		
public string InsertCreditSpecificationsSewaAsTask(Int16? credit_specification_id, 
		                                                        Int32? sewa_id, 
		                                                        Int16? credit_cnt, 
		                                                        Int16? unit_cnt, 
		                                                        String is_exemption_considered, 
		                                                        Int16? min_credit_cnt, 
		                                                        Decimal? max_credit_cnt)
		{
			List<SqlParameter> prms = InsertCreditSpecificationsSewa_Params(credit_specification_id, sewa_id, credit_cnt, unit_cnt, is_exemption_considered, min_credit_cnt, max_credit_cnt);
			return gps("InsertCreditSpecificationsSewa", prms);

		}
		
		
		
private List<SqlParameter> InsertDepartment_Params(ref Int16 department_id, 
		                                                        String department_cd, 
		                                                        String department_nm, 
		                                                        Int16? colour_id, 
		                                                        String has_sub_departments, 
		                                                        String remarks)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("department_id", department_id, SMALLINT, INOUT, p);
			csp("department_cd", department_cd, VARCHAR, IN, p);
			csp("department_nm", department_nm, VARCHAR, IN, p);
			csp("colour_id", colour_id, SMALLINT, IN, p);
			csp("has_sub_departments", has_sub_departments, VARCHAR, IN, p);
			csp("remarks", remarks, VARCHAR, IN, p);
			return p;
		}
		
public DataSet InsertDepartment(ref Int16 department_id, 
		                                    String department_cd, 
		                                    String department_nm, 
		                                    Int16? colour_id, 
		                                    String has_sub_departments, 
		                                    String remarks)
		{
			List<SqlParameter> prms = InsertDepartment_Params(ref department_id, department_cd, department_nm, colour_id, has_sub_departments, remarks);
			DataSet dset = esp("InsertDepartment", prms);
			department_id = (System.Int16)prms.FirstOrDefault(p => p.ParameterName == "department_id").Value;

			return dset;
		}
		
public string InsertDepartmentAsTask(ref Int16 department_id, 
		                                        String department_cd, 
		                                        String department_nm, 
		                                        Int16? colour_id, 
		                                        String has_sub_departments, 
		                                        String remarks)
		{
			List<SqlParameter> prms = InsertDepartment_Params(ref department_id, department_cd, department_nm, colour_id, has_sub_departments, remarks);
			return gps("InsertDepartment", prms);

		}
		
		
		
private List<SqlParameter> InsertDepartmentsSatsangCentre_Params(Int16? department_id, 
		                                                                    Int32? satsang_centre_id, 
		                                                                    String genders_allowed, 
		                                                                    String is_common_roster, 
		                                                                    String is_generic, 
		                                                                    String is_weekly, 
		                                                                    String sub_department_mandatory, 
		                                                                    DateTime? effective_from, 
		                                                                    DateTime? effective_till)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("department_id", department_id, SMALLINT, IN, p);
			csp("satsang_centre_id", satsang_centre_id, INT, IN, p);
			csp("genders_allowed", genders_allowed, CHAR, IN, p);
			csp("is_common_roster", is_common_roster, VARCHAR, IN, p);
			csp("is_generic", is_generic, VARCHAR, IN, p);
			csp("is_weekly", is_weekly, VARCHAR, IN, p);
			csp("sub_department_mandatory", sub_department_mandatory, VARCHAR, IN, p);
			csp("effective_from", effective_from, DATETIME, IN, p);
			csp("effective_till", effective_till, DATETIME, IN, p);
			return p;
		}
		
public DataSet InsertDepartmentsSatsangCentre(Int16? department_id, 
		                                                    Int32? satsang_centre_id, 
		                                                    String genders_allowed, 
		                                                    String is_common_roster, 
		                                                    String is_generic, 
		                                                    String is_weekly, 
		                                                    String sub_department_mandatory, 
		                                                    DateTime? effective_from, 
		                                                    DateTime? effective_till)
		{
			List<SqlParameter> prms = InsertDepartmentsSatsangCentre_Params(department_id, satsang_centre_id, genders_allowed, is_common_roster, is_generic, is_weekly, sub_department_mandatory, effective_from, effective_till);
			DataSet dset = esp("InsertDepartmentsSatsangCentre", prms);

			return dset;
		}
		
public string InsertDepartmentsSatsangCentreAsTask(Int16? department_id, 
		                                                        Int32? satsang_centre_id, 
		                                                        String genders_allowed, 
		                                                        String is_common_roster, 
		                                                        String is_generic, 
		                                                        String is_weekly, 
		                                                        String sub_department_mandatory, 
		                                                        DateTime? effective_from, 
		                                                        DateTime? effective_till)
		{
			List<SqlParameter> prms = InsertDepartmentsSatsangCentre_Params(department_id, satsang_centre_id, genders_allowed, is_common_roster, is_generic, is_weekly, sub_department_mandatory, effective_from, effective_till);
			return gps("InsertDepartmentsSatsangCentre", prms);

		}
		
		
		
private List<SqlParameter> InsertGenericAttribute_Params(ref Int16 attribute_id, 
		                                                            String attribute_nm, 
		                                                            String attribute_group, 
		                                                            Int16? attribute_sq, 
		                                                            String attribute_type, 
		                                                            Byte? attribute_length, 
		                                                            Byte? attribute_scale, 
		                                                            String is_temporal, 
		                                                            String is_mandatory, 
		                                                            String is_status_applicable, 
		                                                            String remarks)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("attribute_id", attribute_id, SMALLINT, INOUT, p);
			csp("attribute_nm", attribute_nm, VARCHAR, IN, p);
			csp("attribute_group", attribute_group, VARCHAR, IN, p);
			csp("attribute_sq", attribute_sq, SMALLINT, IN, p);
			csp("attribute_type", attribute_type, VARCHAR, IN, p);
			csp("attribute_length", attribute_length, TINYINT, IN, p);
			csp("attribute_scale", attribute_scale, TINYINT, IN, p);
			csp("is_temporal", is_temporal, VARCHAR, IN, p);
			csp("is_mandatory", is_mandatory, VARCHAR, IN, p);
			csp("is_status_applicable", is_status_applicable, VARCHAR, IN, p);
			csp("remarks", remarks, VARCHAR, IN, p);
			return p;
		}
		
public DataSet InsertGenericAttribute(ref Int16 attribute_id, 
		                                            String attribute_nm, 
		                                            String attribute_group, 
		                                            Int16? attribute_sq, 
		                                            String attribute_type, 
		                                            Byte? attribute_length, 
		                                            Byte? attribute_scale, 
		                                            String is_temporal, 
		                                            String is_mandatory, 
		                                            String is_status_applicable, 
		                                            String remarks)
		{
			List<SqlParameter> prms = InsertGenericAttribute_Params(ref attribute_id, attribute_nm, attribute_group, attribute_sq, attribute_type, attribute_length, attribute_scale, is_temporal, is_mandatory, is_status_applicable, remarks);
			DataSet dset = esp("InsertGenericAttribute", prms);
			attribute_id = (System.Int16)prms.FirstOrDefault(p => p.ParameterName == "attribute_id").Value;

			return dset;
		}
		
public string InsertGenericAttributeAsTask(ref Int16 attribute_id, 
		                                                String attribute_nm, 
		                                                String attribute_group, 
		                                                Int16? attribute_sq, 
		                                                String attribute_type, 
		                                                Byte? attribute_length, 
		                                                Byte? attribute_scale, 
		                                                String is_temporal, 
		                                                String is_mandatory, 
		                                                String is_status_applicable, 
		                                                String remarks)
		{
			List<SqlParameter> prms = InsertGenericAttribute_Params(ref attribute_id, attribute_nm, attribute_group, attribute_sq, attribute_type, attribute_length, attribute_scale, is_temporal, is_mandatory, is_status_applicable, remarks);
			return gps("InsertGenericAttribute", prms);

		}
		
		
		
private List<SqlParameter> InsertGenericAttributesListValue_Params(Int16? attribute_id, 
		                                                                        String attribute_value, 
		                                                                        Int16? attribute_value_sq)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("attribute_id", attribute_id, SMALLINT, IN, p);
			csp("attribute_value", attribute_value, VARCHAR, IN, p);
			csp("attribute_value_sq", attribute_value_sq, SMALLINT, IN, p);
			return p;
		}
		
public DataSet InsertGenericAttributesListValue(Int16? attribute_id, 
		                                                    String attribute_value, 
		                                                    Int16? attribute_value_sq)
		{
			List<SqlParameter> prms = InsertGenericAttributesListValue_Params(attribute_id, attribute_value, attribute_value_sq);
			DataSet dset = esp("InsertGenericAttributesListValue", prms);

			return dset;
		}
		
public string InsertGenericAttributesListValueAsTask(Int16? attribute_id, 
		                                                        String attribute_value, 
		                                                        Int16? attribute_value_sq)
		{
			List<SqlParameter> prms = InsertGenericAttributesListValue_Params(attribute_id, attribute_value, attribute_value_sq);
			return gps("InsertGenericAttributesListValue", prms);

		}
		
		
		
private List<SqlParameter> InsertGenericAttributesSatsangCentre_Params(Int16? attribute_id, 
		                                                                            Int32? satsang_centre_id, 
		                                                                            DateTime? effective_from, 
		                                                                            DateTime? effective_till)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("attribute_id", attribute_id, SMALLINT, IN, p);
			csp("satsang_centre_id", satsang_centre_id, INT, IN, p);
			csp("effective_from", effective_from, DATETIME, IN, p);
			csp("effective_till", effective_till, DATETIME, IN, p);
			return p;
		}
		
public DataSet InsertGenericAttributesSatsangCentre(Int16? attribute_id, 
		                                                        Int32? satsang_centre_id, 
		                                                        DateTime? effective_from, 
		                                                        DateTime? effective_till)
		{
			List<SqlParameter> prms = InsertGenericAttributesSatsangCentre_Params(attribute_id, satsang_centre_id, effective_from, effective_till);
			DataSet dset = esp("InsertGenericAttributesSatsangCentre", prms);

			return dset;
		}
		
public string InsertGenericAttributesSatsangCentreAsTask(Int16? attribute_id, 
		                                                            Int32? satsang_centre_id, 
		                                                            DateTime? effective_from, 
		                                                            DateTime? effective_till)
		{
			List<SqlParameter> prms = InsertGenericAttributesSatsangCentre_Params(attribute_id, satsang_centre_id, effective_from, effective_till);
			return gps("InsertGenericAttributesSatsangCentre", prms);

		}
		
		
		
private List<SqlParameter> InsertGenericAttributesStatus_Params(Int16? attribute_id, 
		                                                                    String sewadar_status_cd)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("attribute_id", attribute_id, SMALLINT, IN, p);
			csp("sewadar_status_cd", sewadar_status_cd, VARCHAR, IN, p);
			return p;
		}
		
public DataSet InsertGenericAttributesStatus(Int16? attribute_id, 
		                                                String sewadar_status_cd)
		{
			List<SqlParameter> prms = InsertGenericAttributesStatus_Params(attribute_id, sewadar_status_cd);
			DataSet dset = esp("InsertGenericAttributesStatus", prms);

			return dset;
		}
		
public string InsertGenericAttributesStatusAsTask(Int16? attribute_id, 
		                                                        String sewadar_status_cd)
		{
			List<SqlParameter> prms = InsertGenericAttributesStatus_Params(attribute_id, sewadar_status_cd);
			return gps("InsertGenericAttributesStatus", prms);

		}
		
		
		
private List<SqlParameter> InsertGenericSewadarList_Params(ref Int32 sewadar_list_id, 
		                                                                Int32? satsang_centre_id, 
		                                                                String sewadar_list_nm, 
		                                                                String sewadar_list_use, 
		                                                                String sewadar_list_other_use, 
		                                                                String other_satsang_centre_sewadars, 
		                                                                String is_other_satsang_centre, 
		                                                                String is_editing_allowed, 
		                                                                String remarks, 
		                                                                DateTime? generated_dtm, 
		                                                                String report_nm, 
		                                                                String is_for_export, 
		                                                                Int32? programme_satsang_centre_id, 
		                                                                Int32? session_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("sewadar_list_id", sewadar_list_id, INT, INOUT, p);
			csp("satsang_centre_id", satsang_centre_id, INT, IN, p);
			csp("sewadar_list_nm", sewadar_list_nm, VARCHAR, IN, p);
			csp("sewadar_list_use", sewadar_list_use, VARCHAR, IN, p);
			csp("sewadar_list_other_use", sewadar_list_other_use, VARCHAR, IN, p);
			csp("other_satsang_centre_sewadars", other_satsang_centre_sewadars, VARCHAR, IN, p);
			csp("is_other_satsang_centre", is_other_satsang_centre, VARCHAR, IN, p);
			csp("is_editing_allowed", is_editing_allowed, VARCHAR, IN, p);
			csp("remarks", remarks, VARCHAR, IN, p);
			csp("generated_dtm", generated_dtm, SMALLDATETIME, IN, p);
			csp("report_nm", report_nm, VARCHAR, IN, p);
			csp("is_for_export", is_for_export, VARCHAR, IN, p);
			csp("programme_satsang_centre_id", programme_satsang_centre_id, INT, IN, p);
			csp("session_id", session_id, INT, IN, p);
			return p;
		}
		
public DataSet InsertGenericSewadarList(ref Int32 sewadar_list_id, 
		                                            Int32? satsang_centre_id, 
		                                            String sewadar_list_nm, 
		                                            String sewadar_list_use, 
		                                            String sewadar_list_other_use, 
		                                            String other_satsang_centre_sewadars, 
		                                            String is_other_satsang_centre, 
		                                            String is_editing_allowed, 
		                                            String remarks, 
		                                            DateTime? generated_dtm, 
		                                            String report_nm, 
		                                            String is_for_export, 
		                                            Int32? programme_satsang_centre_id, 
		                                            Int32? session_id)
		{
			List<SqlParameter> prms = InsertGenericSewadarList_Params(ref sewadar_list_id, satsang_centre_id, sewadar_list_nm, sewadar_list_use, sewadar_list_other_use, other_satsang_centre_sewadars, is_other_satsang_centre, is_editing_allowed, remarks, generated_dtm, report_nm, is_for_export, programme_satsang_centre_id, session_id);
			DataSet dset = esp("InsertGenericSewadarList", prms);
			sewadar_list_id = (System.Int32)prms.FirstOrDefault(p => p.ParameterName == "sewadar_list_id").Value;

			return dset;
		}
		
public string InsertGenericSewadarListAsTask(ref Int32 sewadar_list_id, 
		                                                Int32? satsang_centre_id, 
		                                                String sewadar_list_nm, 
		                                                String sewadar_list_use, 
		                                                String sewadar_list_other_use, 
		                                                String other_satsang_centre_sewadars, 
		                                                String is_other_satsang_centre, 
		                                                String is_editing_allowed, 
		                                                String remarks, 
		                                                DateTime? generated_dtm, 
		                                                String report_nm, 
		                                                String is_for_export, 
		                                                Int32? programme_satsang_centre_id, 
		                                                Int32? session_id)
		{
			List<SqlParameter> prms = InsertGenericSewadarList_Params(ref sewadar_list_id, satsang_centre_id, sewadar_list_nm, sewadar_list_use, sewadar_list_other_use, other_satsang_centre_sewadars, is_other_satsang_centre, is_editing_allowed, remarks, generated_dtm, report_nm, is_for_export, programme_satsang_centre_id, session_id);
			return gps("InsertGenericSewadarList", prms);

		}
		
		
		
private List<SqlParameter> InsertGenericSewadarListsSewadar_Params(Int32? sewadar_list_id, 
		                                                                        Int32? satsang_centre_id, 
		                                                                        String sewadar_grno)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("sewadar_list_id", sewadar_list_id, INT, IN, p);
			csp("satsang_centre_id", satsang_centre_id, INT, IN, p);
			csp("sewadar_grno", sewadar_grno, CHAR, IN, p);
			return p;
		}
		
public DataSet InsertGenericSewadarListsSewadar(Int32? sewadar_list_id, 
		                                                    Int32? satsang_centre_id, 
		                                                    String sewadar_grno)
		{
			List<SqlParameter> prms = InsertGenericSewadarListsSewadar_Params(sewadar_list_id, satsang_centre_id, sewadar_grno);
			DataSet dset = esp("InsertGenericSewadarListsSewadar", prms);

			return dset;
		}
		
public string InsertGenericSewadarListsSewadarAsTask(Int32? sewadar_list_id, 
		                                                        Int32? satsang_centre_id, 
		                                                        String sewadar_grno)
		{
			List<SqlParameter> prms = InsertGenericSewadarListsSewadar_Params(sewadar_list_id, satsang_centre_id, sewadar_grno);
			return gps("InsertGenericSewadarListsSewadar", prms);

		}
		
		
		
private List<SqlParameter> InsertMedicalDisabilitie_Params(ref Int16 medical_disability_id, 
		                                                                String medical_disability_nm, 
		                                                                String medical_disability_cd, 
		                                                                DateTime? effective_from, 
		                                                                DateTime? effective_till)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("medical_disability_id", medical_disability_id, SMALLINT, INOUT, p);
			csp("medical_disability_nm", medical_disability_nm, VARCHAR, IN, p);
			csp("medical_disability_cd", medical_disability_cd, VARCHAR, IN, p);
			csp("effective_from", effective_from, DATETIME, IN, p);
			csp("effective_till", effective_till, DATETIME, IN, p);
			return p;
		}
		
public DataSet InsertMedicalDisabilitie(ref Int16 medical_disability_id, 
		                                            String medical_disability_nm, 
		                                            String medical_disability_cd, 
		                                            DateTime? effective_from, 
		                                            DateTime? effective_till)
		{
			List<SqlParameter> prms = InsertMedicalDisabilitie_Params(ref medical_disability_id, medical_disability_nm, medical_disability_cd, effective_from, effective_till);
			DataSet dset = esp("InsertMedicalDisabilitie", prms);
			medical_disability_id = (System.Int16)prms.FirstOrDefault(p => p.ParameterName == "medical_disability_id").Value;

			return dset;
		}
		
public string InsertMedicalDisabilitieAsTask(ref Int16 medical_disability_id, 
		                                                String medical_disability_nm, 
		                                                String medical_disability_cd, 
		                                                DateTime? effective_from, 
		                                                DateTime? effective_till)
		{
			List<SqlParameter> prms = InsertMedicalDisabilitie_Params(ref medical_disability_id, medical_disability_nm, medical_disability_cd, effective_from, effective_till);
			return gps("InsertMedicalDisabilitie", prms);

		}
		
		
		
private List<SqlParameter> InsertPhoto_Params(String p_sewadar_grno, 
		                                                    Byte[] p_sewadar_photo, 
		                                                    DateTime? p_photo_dt)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_sewadar_grno", p_sewadar_grno, CHAR, IN, p);
			csp("p_sewadar_photo", p_sewadar_photo, IMAGE, IN, p);
			csp("p_photo_dt", p_photo_dt, DATETIME, IN, p);
			return p;
		}
		
public DataSet InsertPhoto(String p_sewadar_grno, 
		                                Byte[] p_sewadar_photo, 
		                                DateTime? p_photo_dt)
		{
			List<SqlParameter> prms = InsertPhoto_Params(p_sewadar_grno, p_sewadar_photo, p_photo_dt);
			DataSet dset = esp("InsertPhoto", prms);

			return dset;
		}
		
public string InsertPhotoAsTask(String p_sewadar_grno, 
		                                    Byte[] p_sewadar_photo, 
		                                    DateTime? p_photo_dt)
		{
			List<SqlParameter> prms = InsertPhoto_Params(p_sewadar_grno, p_sewadar_photo, p_photo_dt);
			return gps("InsertPhoto", prms);

		}
		
		
		
private List<SqlParameter> InsertPostOfficesOrCitie_Params(ref Int32 post_office_or_city_id, 
		                                                                Int32? district_id, 
		                                                                String post_office_or_city_cd, 
		                                                                String post_office_or_city_nm, 
		                                                                String std_code, 
		                                                                DateTime? effective_from, 
		                                                                DateTime? effective_till)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("post_office_or_city_id", post_office_or_city_id, INT, INOUT, p);
			csp("district_id", district_id, INT, IN, p);
			csp("post_office_or_city_cd", post_office_or_city_cd, VARCHAR, IN, p);
			csp("post_office_or_city_nm", post_office_or_city_nm, VARCHAR, IN, p);
			csp("std_code", std_code, VARCHAR, IN, p);
			csp("effective_from", effective_from, DATETIME, IN, p);
			csp("effective_till", effective_till, DATETIME, IN, p);
			return p;
		}
		
public DataSet InsertPostOfficesOrCitie(ref Int32 post_office_or_city_id, 
		                                            Int32? district_id, 
		                                            String post_office_or_city_cd, 
		                                            String post_office_or_city_nm, 
		                                            String std_code, 
		                                            DateTime? effective_from, 
		                                            DateTime? effective_till)
		{
			List<SqlParameter> prms = InsertPostOfficesOrCitie_Params(ref post_office_or_city_id, district_id, post_office_or_city_cd, post_office_or_city_nm, std_code, effective_from, effective_till);
			DataSet dset = esp("InsertPostOfficesOrCitie", prms);
			post_office_or_city_id = (System.Int32)prms.FirstOrDefault(p => p.ParameterName == "post_office_or_city_id").Value;

			return dset;
		}
		
public string InsertPostOfficesOrCitieAsTask(ref Int32 post_office_or_city_id, 
		                                                Int32? district_id, 
		                                                String post_office_or_city_cd, 
		                                                String post_office_or_city_nm, 
		                                                String std_code, 
		                                                DateTime? effective_from, 
		                                                DateTime? effective_till)
		{
			List<SqlParameter> prms = InsertPostOfficesOrCitie_Params(ref post_office_or_city_id, district_id, post_office_or_city_cd, post_office_or_city_nm, std_code, effective_from, effective_till);
			return gps("InsertPostOfficesOrCitie", prms);

		}
		
		
		
private List<SqlParameter> InsertSatsangCentreFunctionarie_Params(ref Int16 centre_functionary_id, 
		                                                                        Int32? satsang_centre_id, 
		                                                                        String centre_functionary, 
		                                                                        String functionary_nm, 
		                                                                        String is_current, 
		                                                                        String telephones, 
		                                                                        String email_addresses, 
		                                                                        DateTime? effective_from, 
		                                                                        DateTime? effective_till)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("centre_functionary_id", centre_functionary_id, SMALLINT, INOUT, p);
			csp("satsang_centre_id", satsang_centre_id, INT, IN, p);
			csp("centre_functionary", centre_functionary, VARCHAR, IN, p);
			csp("functionary_nm", functionary_nm, VARCHAR, IN, p);
			csp("is_current", is_current, VARCHAR, IN, p);
			csp("telephones", telephones, VARCHAR, IN, p);
			csp("email_addresses", email_addresses, VARCHAR, IN, p);
			csp("effective_from", effective_from, DATETIME, IN, p);
			csp("effective_till", effective_till, DATETIME, IN, p);
			return p;
		}
		
public DataSet InsertSatsangCentreFunctionarie(ref Int16 centre_functionary_id, 
		                                                    Int32? satsang_centre_id, 
		                                                    String centre_functionary, 
		                                                    String functionary_nm, 
		                                                    String is_current, 
		                                                    String telephones, 
		                                                    String email_addresses, 
		                                                    DateTime? effective_from, 
		                                                    DateTime? effective_till)
		{
			List<SqlParameter> prms = InsertSatsangCentreFunctionarie_Params(ref centre_functionary_id, satsang_centre_id, centre_functionary, functionary_nm, is_current, telephones, email_addresses, effective_from, effective_till);
			DataSet dset = esp("InsertSatsangCentreFunctionarie", prms);
			centre_functionary_id = (System.Int16)prms.FirstOrDefault(p => p.ParameterName == "centre_functionary_id").Value;

			return dset;
		}
		
public string InsertSatsangCentreFunctionarieAsTask(ref Int16 centre_functionary_id, 
		                                                        Int32? satsang_centre_id, 
		                                                        String centre_functionary, 
		                                                        String functionary_nm, 
		                                                        String is_current, 
		                                                        String telephones, 
		                                                        String email_addresses, 
		                                                        DateTime? effective_from, 
		                                                        DateTime? effective_till)
		{
			List<SqlParameter> prms = InsertSatsangCentreFunctionarie_Params(ref centre_functionary_id, satsang_centre_id, centre_functionary, functionary_nm, is_current, telephones, email_addresses, effective_from, effective_till);
			return gps("InsertSatsangCentreFunctionarie", prms);

		}
		
		
		
private List<SqlParameter> InsertSatsangCentresDetail_Params(Int32? satsang_centre_id, 
		                                                                String is_main_centre, 
		                                                                String centre_nm, 
		                                                                String centre_alphabet, 
		                                                                String centre_cd, 
		                                                                Int32? reports_to_centre_id, 
		                                                                String remarks, 
		                                                                Int16? colour_id, 
		                                                                Byte[] secretary_signature)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("satsang_centre_id", satsang_centre_id, INT, IN, p);
			csp("is_main_centre", is_main_centre, VARCHAR, IN, p);
			csp("centre_nm", centre_nm, VARCHAR, IN, p);
			csp("centre_alphabet", centre_alphabet, VARCHAR, IN, p);
			csp("centre_cd", centre_cd, CHAR, IN, p);
			csp("reports_to_centre_id", reports_to_centre_id, INT, IN, p);
			csp("remarks", remarks, VARCHAR, IN, p);
			csp("colour_id", colour_id, SMALLINT, IN, p);
			csp("secretary_signature", secretary_signature, IMAGE, IN, p);
			return p;
		}
		
public DataSet InsertSatsangCentresDetail(Int32? satsang_centre_id, 
		                                                String is_main_centre, 
		                                                String centre_nm, 
		                                                String centre_alphabet, 
		                                                String centre_cd, 
		                                                Int32? reports_to_centre_id, 
		                                                String remarks, 
		                                                Int16? colour_id, 
		                                                Byte[] secretary_signature)
		{
			List<SqlParameter> prms = InsertSatsangCentresDetail_Params(satsang_centre_id, is_main_centre, centre_nm, centre_alphabet, centre_cd, reports_to_centre_id, remarks, colour_id, secretary_signature);
			DataSet dset = esp("InsertSatsangCentresDetail", prms);

			return dset;
		}
		
public string InsertSatsangCentresDetailAsTask(Int32? satsang_centre_id, 
		                                                    String is_main_centre, 
		                                                    String centre_nm, 
		                                                    String centre_alphabet, 
		                                                    String centre_cd, 
		                                                    Int32? reports_to_centre_id, 
		                                                    String remarks, 
		                                                    Int16? colour_id, 
		                                                    Byte[] secretary_signature)
		{
			List<SqlParameter> prms = InsertSatsangCentresDetail_Params(satsang_centre_id, is_main_centre, centre_nm, centre_alphabet, centre_cd, reports_to_centre_id, remarks, colour_id, secretary_signature);
			return gps("InsertSatsangCentresDetail", prms);

		}
		
		
		
private List<SqlParameter> InsertScannedBadgeFileAuditLog_Params(Int32? scanning_job_id, 
		                                                                    String filepath, 
		                                                                    DateTime? controlling_dt, 
		                                                                    String import_username, 
		                                                                    DateTime? process_dt, 
		                                                                    String process_username)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("scanning_job_id", scanning_job_id, INT, IN, p);
			csp("filepath", filepath, VARCHAR, IN, p);
			csp("controlling_dt", controlling_dt, SMALLDATETIME, IN, p);
			csp("import_username", import_username, VARCHAR, IN, p);
			csp("process_dt", process_dt, DATETIME, IN, p);
			csp("process_username", process_username, VARCHAR, IN, p);
			return p;
		}
		
public DataSet InsertScannedBadgeFileAuditLog(Int32? scanning_job_id, 
		                                                    String filepath, 
		                                                    DateTime? controlling_dt, 
		                                                    String import_username, 
		                                                    DateTime? process_dt, 
		                                                    String process_username)
		{
			List<SqlParameter> prms = InsertScannedBadgeFileAuditLog_Params(scanning_job_id, filepath, controlling_dt, import_username, process_dt, process_username);
			DataSet dset = esp("InsertScannedBadgeFileAuditLog", prms);

			return dset;
		}
		
public string InsertScannedBadgeFileAuditLogAsTask(Int32? scanning_job_id, 
		                                                        String filepath, 
		                                                        DateTime? controlling_dt, 
		                                                        String import_username, 
		                                                        DateTime? process_dt, 
		                                                        String process_username)
		{
			List<SqlParameter> prms = InsertScannedBadgeFileAuditLog_Params(scanning_job_id, filepath, controlling_dt, import_username, process_dt, process_username);
			return gps("InsertScannedBadgeFileAuditLog", prms);

		}
		
		
		
private List<SqlParameter> InsertScanningJob_Params(ref Int16 scanning_job_id, 
		                                                        Int32? satsang_centre_id, 
		                                                        String scanning_job_nm, 
		                                                        String scanning_job_type_cd, 
		                                                        String remarks, 
		                                                        DateTime? effective_from, 
		                                                        DateTime? effective_till, 
		                                                        Int32? sewadar_list_id, 
		                                                        Int32? sewa_id, 
		                                                        String is_deleting_allowed, 
		                                                        String status_system_info_cd, 
		                                                        DateTime? last_transfer_dtm, 
		                                                        Int16? total_processed_cnt, 
		                                                        String is_closed, 
		                                                        String is_concluded)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("scanning_job_id", scanning_job_id, SMALLINT, INOUT, p);
			csp("satsang_centre_id", satsang_centre_id, INT, IN, p);
			csp("scanning_job_nm", scanning_job_nm, VARCHAR, IN, p);
			csp("scanning_job_type_cd", scanning_job_type_cd, VARCHAR, IN, p);
			csp("remarks", remarks, VARCHAR, IN, p);
			csp("effective_from", effective_from, DATETIME, IN, p);
			csp("effective_till", effective_till, DATETIME, IN, p);
			csp("sewadar_list_id", sewadar_list_id, INT, IN, p);
			csp("sewa_id", sewa_id, INT, IN, p);
			csp("is_deleting_allowed", is_deleting_allowed, VARCHAR, IN, p);
			csp("status_system_info_cd", status_system_info_cd, VARCHAR, IN, p);
			csp("last_transfer_dtm", last_transfer_dtm, DATETIME, IN, p);
			csp("total_processed_cnt", total_processed_cnt, SMALLINT, IN, p);
			csp("is_closed", is_closed, VARCHAR, IN, p);
			csp("is_concluded", is_concluded, VARCHAR, IN, p);
			return p;
		}
		
public DataSet InsertScanningJob(ref Int16 scanning_job_id, 
		                                    Int32? satsang_centre_id, 
		                                    String scanning_job_nm, 
		                                    String scanning_job_type_cd, 
		                                    String remarks, 
		                                    DateTime? effective_from, 
		                                    DateTime? effective_till, 
		                                    Int32? sewadar_list_id, 
		                                    Int32? sewa_id, 
		                                    String is_deleting_allowed, 
		                                    String status_system_info_cd, 
		                                    DateTime? last_transfer_dtm, 
		                                    Int16? total_processed_cnt, 
		                                    String is_closed, 
		                                    String is_concluded)
		{
			List<SqlParameter> prms = InsertScanningJob_Params(ref scanning_job_id, satsang_centre_id, scanning_job_nm, scanning_job_type_cd, remarks, effective_from, effective_till, sewadar_list_id, sewa_id, is_deleting_allowed, status_system_info_cd, last_transfer_dtm, total_processed_cnt, is_closed, is_concluded);
			DataSet dset = esp("InsertScanningJob", prms);
			scanning_job_id = (System.Int16)prms.FirstOrDefault(p => p.ParameterName == "scanning_job_id").Value;

			return dset;
		}
		
public string InsertScanningJobAsTask(ref Int16 scanning_job_id, 
		                                            Int32? satsang_centre_id, 
		                                            String scanning_job_nm, 
		                                            String scanning_job_type_cd, 
		                                            String remarks, 
		                                            DateTime? effective_from, 
		                                            DateTime? effective_till, 
		                                            Int32? sewadar_list_id, 
		                                            Int32? sewa_id, 
		                                            String is_deleting_allowed, 
		                                            String status_system_info_cd, 
		                                            DateTime? last_transfer_dtm, 
		                                            Int16? total_processed_cnt, 
		                                            String is_closed, 
		                                            String is_concluded)
		{
			List<SqlParameter> prms = InsertScanningJob_Params(ref scanning_job_id, satsang_centre_id, scanning_job_nm, scanning_job_type_cd, remarks, effective_from, effective_till, sewadar_list_id, sewa_id, is_deleting_allowed, status_system_info_cd, last_transfer_dtm, total_processed_cnt, is_closed, is_concluded);
			return gps("InsertScanningJob", prms);

		}
		
		
		
private List<SqlParameter> InsertScanningJobsControllingDate_Params(Int16? scanning_job_id, 
		                                                                        DateTime? controlling_dt, 
		                                                                        DateTime? last_transfer_dtm, 
		                                                                        Int16? total_processed_cnt, 
		                                                                        String is_closed)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("scanning_job_id", scanning_job_id, SMALLINT, IN, p);
			csp("controlling_dt", controlling_dt, SMALLDATETIME, IN, p);
			csp("last_transfer_dtm", last_transfer_dtm, DATETIME, IN, p);
			csp("total_processed_cnt", total_processed_cnt, SMALLINT, IN, p);
			csp("is_closed", is_closed, VARCHAR, IN, p);
			return p;
		}
		
public DataSet InsertScanningJobsControllingDate(Int16? scanning_job_id, 
		                                                    DateTime? controlling_dt, 
		                                                    DateTime? last_transfer_dtm, 
		                                                    Int16? total_processed_cnt, 
		                                                    String is_closed)
		{
			List<SqlParameter> prms = InsertScanningJobsControllingDate_Params(scanning_job_id, controlling_dt, last_transfer_dtm, total_processed_cnt, is_closed);
			DataSet dset = esp("InsertScanningJobsControllingDate", prms);

			return dset;
		}
		
public string InsertScanningJobsControllingDateAsTask(Int16? scanning_job_id, 
		                                                            DateTime? controlling_dt, 
		                                                            DateTime? last_transfer_dtm, 
		                                                            Int16? total_processed_cnt, 
		                                                            String is_closed)
		{
			List<SqlParameter> prms = InsertScanningJobsControllingDate_Params(scanning_job_id, controlling_dt, last_transfer_dtm, total_processed_cnt, is_closed);
			return gps("InsertScanningJobsControllingDate", prms);

		}
		
		
		
private List<SqlParameter> InsertScanningJobsPeriod_Params(Int16? scanning_job_id, 
		                                                                DateTime? effective_from, 
		                                                                DateTime? effective_till)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("scanning_job_id", scanning_job_id, SMALLINT, IN, p);
			csp("effective_from", effective_from, DATETIME, IN, p);
			csp("effective_till", effective_till, DATETIME, IN, p);
			return p;
		}
		
public DataSet InsertScanningJobsPeriod(Int16? scanning_job_id, 
		                                            DateTime? effective_from, 
		                                            DateTime? effective_till)
		{
			List<SqlParameter> prms = InsertScanningJobsPeriod_Params(scanning_job_id, effective_from, effective_till);
			DataSet dset = esp("InsertScanningJobsPeriod", prms);

			return dset;
		}
		
public string InsertScanningJobsPeriodAsTask(Int16? scanning_job_id, 
		                                                DateTime? effective_from, 
		                                                DateTime? effective_till)
		{
			List<SqlParameter> prms = InsertScanningJobsPeriod_Params(scanning_job_id, effective_from, effective_till);
			return gps("InsertScanningJobsPeriod", prms);

		}
		
		
		
private List<SqlParameter> InsertScanningSubJob_Params(ref Int16 scanning_sub_job_id, 
		                                                            Int16? scanning_job_id, 
		                                                            String scanning_sub_job_nm, 
		                                                            Int16? scanning_sub_job_sq)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("scanning_sub_job_id", scanning_sub_job_id, SMALLINT, INOUT, p);
			csp("scanning_job_id", scanning_job_id, SMALLINT, IN, p);
			csp("scanning_sub_job_nm", scanning_sub_job_nm, VARCHAR, IN, p);
			csp("scanning_sub_job_sq", scanning_sub_job_sq, SMALLINT, IN, p);
			return p;
		}
		
public DataSet InsertScanningSubJob(ref Int16 scanning_sub_job_id, 
		                                        Int16? scanning_job_id, 
		                                        String scanning_sub_job_nm, 
		                                        Int16? scanning_sub_job_sq)
		{
			List<SqlParameter> prms = InsertScanningSubJob_Params(ref scanning_sub_job_id, scanning_job_id, scanning_sub_job_nm, scanning_sub_job_sq);
			DataSet dset = esp("InsertScanningSubJob", prms);
			scanning_sub_job_id = (System.Int16)prms.FirstOrDefault(p => p.ParameterName == "scanning_sub_job_id").Value;

			return dset;
		}
		
public string InsertScanningSubJobAsTask(ref Int16 scanning_sub_job_id, 
		                                            Int16? scanning_job_id, 
		                                            String scanning_sub_job_nm, 
		                                            Int16? scanning_sub_job_sq)
		{
			List<SqlParameter> prms = InsertScanningSubJob_Params(ref scanning_sub_job_id, scanning_job_id, scanning_sub_job_nm, scanning_sub_job_sq);
			return gps("InsertScanningSubJob", prms);

		}
		
		
		
private List<SqlParameter> InsertScanningSubJobsValidation_Params(Int16? recorded_sub_job_id, 
		                                                                        Int16? recording_sub_job_id, 
		                                                                        String validating_action)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("recorded_sub_job_id", recorded_sub_job_id, SMALLINT, IN, p);
			csp("recording_sub_job_id", recording_sub_job_id, SMALLINT, IN, p);
			csp("validating_action", validating_action, VARCHAR, IN, p);
			return p;
		}
		
public DataSet InsertScanningSubJobsValidation(Int16? recorded_sub_job_id, 
		                                                    Int16? recording_sub_job_id, 
		                                                    String validating_action)
		{
			List<SqlParameter> prms = InsertScanningSubJobsValidation_Params(recorded_sub_job_id, recording_sub_job_id, validating_action);
			DataSet dset = esp("InsertScanningSubJobsValidation", prms);

			return dset;
		}
		
public string InsertScanningSubJobsValidationAsTask(Int16? recorded_sub_job_id, 
		                                                        Int16? recording_sub_job_id, 
		                                                        String validating_action)
		{
			List<SqlParameter> prms = InsertScanningSubJobsValidation_Params(recorded_sub_job_id, recording_sub_job_id, validating_action);
			return gps("InsertScanningSubJobsValidation", prms);

		}
		
		
		
private List<SqlParameter> InsertScanningSubJobsValidCombination_Params(Int16? scanning_job_id, 
		                                                                            Int16? scanning_job_valid_sq, 
		                                                                            String valid_combination_sub_job_ids)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("scanning_job_id", scanning_job_id, SMALLINT, IN, p);
			csp("scanning_job_valid_sq", scanning_job_valid_sq, SMALLINT, IN, p);
			csp("valid_combination_sub_job_ids", valid_combination_sub_job_ids, VARCHAR, IN, p);
			return p;
		}
		
public DataSet InsertScanningSubJobsValidCombination(Int16? scanning_job_id, 
		                                                        Int16? scanning_job_valid_sq, 
		                                                        String valid_combination_sub_job_ids)
		{
			List<SqlParameter> prms = InsertScanningSubJobsValidCombination_Params(scanning_job_id, scanning_job_valid_sq, valid_combination_sub_job_ids);
			DataSet dset = esp("InsertScanningSubJobsValidCombination", prms);

			return dset;
		}
		
public string InsertScanningSubJobsValidCombinationAsTask(Int16? scanning_job_id, 
		                                                                Int16? scanning_job_valid_sq, 
		                                                                String valid_combination_sub_job_ids)
		{
			List<SqlParameter> prms = InsertScanningSubJobsValidCombination_Params(scanning_job_id, scanning_job_valid_sq, valid_combination_sub_job_ids);
			return gps("InsertScanningSubJobsValidCombination", prms);

		}
		
		
		
private List<SqlParameter> InsertSewa_Params(ref Int32 sewa_id, 
		                                                Int32? satsang_centre_id, 
		                                                String sewa_cd, 
		                                                String sewa_nm, 
		                                                DateTime? start_dt, 
		                                                DateTime? finish_dt, 
		                                                String is_satsang_programme, 
		                                                String is_scanner_used, 
		                                                String is_leave_allowed, 
		                                                String is_exemption_allowed, 
		                                                String is_default_sewa, 
		                                                String sewa_frequency, 
		                                                String attendance_unit, 
		                                                String attendance_marking, 
		                                                Int16? min_sewa_duration, 
		                                                Int16? max_sewa_duration, 
		                                                DateTime? gents_born_after, 
		                                                DateTime? ladies_born_after, 
		                                                Int32? referred_sewa_id, 
		                                                String trainee_current_seq_id, 
		                                                String open_sewadar_current_seq_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("sewa_id", sewa_id, INT, INOUT, p);
			csp("satsang_centre_id", satsang_centre_id, INT, IN, p);
			csp("sewa_cd", sewa_cd, VARCHAR, IN, p);
			csp("sewa_nm", sewa_nm, VARCHAR, IN, p);
			csp("start_dt", start_dt, SMALLDATETIME, IN, p);
			csp("finish_dt", finish_dt, SMALLDATETIME, IN, p);
			csp("is_satsang_programme", is_satsang_programme, VARCHAR, IN, p);
			csp("is_scanner_used", is_scanner_used, VARCHAR, IN, p);
			csp("is_leave_allowed", is_leave_allowed, VARCHAR, IN, p);
			csp("is_exemption_allowed", is_exemption_allowed, VARCHAR, IN, p);
			csp("is_default_sewa", is_default_sewa, VARCHAR, IN, p);
			csp("sewa_frequency", sewa_frequency, VARCHAR, IN, p);
			csp("attendance_unit", attendance_unit, VARCHAR, IN, p);
			csp("attendance_marking", attendance_marking, VARCHAR, IN, p);
			csp("min_sewa_duration", min_sewa_duration, SMALLINT, IN, p);
			csp("max_sewa_duration", max_sewa_duration, SMALLINT, IN, p);
			csp("gents_born_after", gents_born_after, DATETIME, IN, p);
			csp("ladies_born_after", ladies_born_after, DATETIME, IN, p);
			csp("referred_sewa_id", referred_sewa_id, INT, IN, p);
			csp("trainee_current_seq_id", trainee_current_seq_id, VARCHAR, IN, p);
			csp("open_sewadar_current_seq_id", open_sewadar_current_seq_id, VARCHAR, IN, p);
			return p;
		}
		
public DataSet InsertSewa(ref Int32 sewa_id, 
		                                Int32? satsang_centre_id, 
		                                String sewa_cd, 
		                                String sewa_nm, 
		                                DateTime? start_dt, 
		                                DateTime? finish_dt, 
		                                String is_satsang_programme, 
		                                String is_scanner_used, 
		                                String is_leave_allowed, 
		                                String is_exemption_allowed, 
		                                String is_default_sewa, 
		                                String sewa_frequency, 
		                                String attendance_unit, 
		                                String attendance_marking, 
		                                Int16? min_sewa_duration, 
		                                Int16? max_sewa_duration, 
		                                DateTime? gents_born_after, 
		                                DateTime? ladies_born_after, 
		                                Int32? referred_sewa_id, 
		                                String trainee_current_seq_id, 
		                                String open_sewadar_current_seq_id)
		{
			List<SqlParameter> prms = InsertSewa_Params(ref sewa_id, satsang_centre_id, sewa_cd, sewa_nm, start_dt, finish_dt, is_satsang_programme, is_scanner_used, is_leave_allowed, is_exemption_allowed, is_default_sewa, sewa_frequency, attendance_unit, attendance_marking, min_sewa_duration, max_sewa_duration, gents_born_after, ladies_born_after, referred_sewa_id, trainee_current_seq_id, open_sewadar_current_seq_id);
			DataSet dset = esp("InsertSewa", prms);
			sewa_id = (System.Int32)prms.FirstOrDefault(p => p.ParameterName == "sewa_id").Value;

			return dset;
		}
		
public string InsertSewaAsTask(ref Int32 sewa_id, 
		                                    Int32? satsang_centre_id, 
		                                    String sewa_cd, 
		                                    String sewa_nm, 
		                                    DateTime? start_dt, 
		                                    DateTime? finish_dt, 
		                                    String is_satsang_programme, 
		                                    String is_scanner_used, 
		                                    String is_leave_allowed, 
		                                    String is_exemption_allowed, 
		                                    String is_default_sewa, 
		                                    String sewa_frequency, 
		                                    String attendance_unit, 
		                                    String attendance_marking, 
		                                    Int16? min_sewa_duration, 
		                                    Int16? max_sewa_duration, 
		                                    DateTime? gents_born_after, 
		                                    DateTime? ladies_born_after, 
		                                    Int32? referred_sewa_id, 
		                                    String trainee_current_seq_id, 
		                                    String open_sewadar_current_seq_id)
		{
			List<SqlParameter> prms = InsertSewa_Params(ref sewa_id, satsang_centre_id, sewa_cd, sewa_nm, start_dt, finish_dt, is_satsang_programme, is_scanner_used, is_leave_allowed, is_exemption_allowed, is_default_sewa, sewa_frequency, attendance_unit, attendance_marking, min_sewa_duration, max_sewa_duration, gents_born_after, ladies_born_after, referred_sewa_id, trainee_current_seq_id, open_sewadar_current_seq_id);
			return gps("InsertSewa", prms);

		}
		
		
		
private List<SqlParameter> InsertSewadar_Params(ref Int32 sewadar_id, 
		                                                    String first_nm, 
		                                                    String middle_nm, 
		                                                    String last_nm, 
		                                                    String gender, 
		                                                    DateTime? birth_dtm, 
		                                                    String is_married, 
		                                                    DateTime? initiation_dt, 
		                                                    Int16? initiation_place_id, 
		                                                    Byte? initiation_by)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("sewadar_id", sewadar_id, INT, INOUT, p);
			csp("first_nm", first_nm, VARCHAR, IN, p);
			csp("middle_nm", middle_nm, VARCHAR, IN, p);
			csp("last_nm", last_nm, VARCHAR, IN, p);
			csp("gender", gender, VARCHAR, IN, p);
			csp("birth_dtm", birth_dtm, SMALLDATETIME, IN, p);
			csp("is_married", is_married, VARCHAR, IN, p);
			csp("initiation_dt", initiation_dt, SMALLDATETIME, IN, p);
			csp("initiation_place_id", initiation_place_id, SMALLINT, IN, p);
			csp("initiation_by", initiation_by, TINYINT, IN, p);
			return p;
		}
		
public DataSet InsertSewadar(ref Int32 sewadar_id, 
		                                String first_nm, 
		                                String middle_nm, 
		                                String last_nm, 
		                                String gender, 
		                                DateTime? birth_dtm, 
		                                String is_married, 
		                                DateTime? initiation_dt, 
		                                Int16? initiation_place_id, 
		                                Byte? initiation_by)
		{
			List<SqlParameter> prms = InsertSewadar_Params(ref sewadar_id, first_nm, middle_nm, last_nm, gender, birth_dtm, is_married, initiation_dt, initiation_place_id, initiation_by);
			DataSet dset = esp("InsertSewadar", prms);
			sewadar_id = (System.Int32)prms.FirstOrDefault(p => p.ParameterName == "sewadar_id").Value;

			return dset;
		}
		
public string InsertSewadarAsTask(ref Int32 sewadar_id, 
		                                        String first_nm, 
		                                        String middle_nm, 
		                                        String last_nm, 
		                                        String gender, 
		                                        DateTime? birth_dtm, 
		                                        String is_married, 
		                                        DateTime? initiation_dt, 
		                                        Int16? initiation_place_id, 
		                                        Byte? initiation_by)
		{
			List<SqlParameter> prms = InsertSewadar_Params(ref sewadar_id, first_nm, middle_nm, last_nm, gender, birth_dtm, is_married, initiation_dt, initiation_place_id, initiation_by);
			return gps("InsertSewadar", prms);

		}
		
		
		
private List<SqlParameter> InsertSewadarApplication_Params(ref Int32 application_id, 
		                                                                Int32? application_centre_id, 
		                                                                DateTime? application_dt, 
		                                                                String application_status, 
		                                                                DateTime? application_status_dtm, 
		                                                                String first_nm, 
		                                                                String middle_nm, 
		                                                                String last_nm, 
		                                                                String gender, 
		                                                                DateTime? birth_dtm, 
		                                                                String is_married, 
		                                                                DateTime? initiation_dt, 
		                                                                Int16? initiation_place_id, 
		                                                                Byte? initiation_by, 
		                                                                String address_line_1, 
		                                                                String address_line_2, 
		                                                                Int32? post_office_or_city_id, 
		                                                                String pin_or_zip_code, 
		                                                                String address_proof, 
		                                                                Int16? other_address_proof_id, 
		                                                                String telephone_mobile, 
		                                                                String telephone_residence, 
		                                                                String telephone_office, 
		                                                                String occupation, 
		                                                                String attends_weekly_satsang, 
		                                                                Int32? weekly_satsang_centre_id, 
		                                                                String has_hypertension, 
		                                                                String is_diabetic, 
		                                                                String has_skin_problem, 
		                                                                String has_epillepsy, 
		                                                                String photo_id, 
		                                                                DateTime? photo_dt, 
		                                                                DateTime? appointment_dt, 
		                                                                String is_outstation_sewadar, 
		                                                                Int16? department_id, 
		                                                                Int16? sub_department_id, 
		                                                                String old_grno, 
		                                                                Int32? reference_1_sewadar_id, 
		                                                                String reference_1_grno, 
		                                                                Int16? reference_1_relationship, 
		                                                                String reference_1_nm, 
		                                                                Int32? reference_1_centre_id, 
		                                                                String reference_1_department, 
		                                                                Int32? reference_2_sewadar_id, 
		                                                                String reference_2_grno, 
		                                                                Int16? reference_2_relationship, 
		                                                                String reference_2_nm, 
		                                                                Int32? reference_2_centre_id, 
		                                                                String reference_2_department, 
		                                                                Int32? security_approver_id, 
		                                                                Int32? security_approver_centre_id, 
		                                                                String security_approver_grno, 
		                                                                String security_approver_nm, 
		                                                                Int32? sewa_samiti_approver_id, 
		                                                                Int32? sewa_samiti_approver_centre_id, 
		                                                                String sewa_samiti_approver_grno, 
		                                                                String sewa_samiti_approver_nm, 
		                                                                Int16? area_secretary_id, 
		                                                                Int32? area_secretary_centre_id, 
		                                                                String area_secretary_grno, 
		                                                                String area_secretary_nm, 
		                                                                Int16? secretary_id, 
		                                                                Int32? secretary_centre_id, 
		                                                                String secretary_grno, 
		                                                                String secretary_nm, 
		                                                                Int32? sponsorer_id, 
		                                                                Int32? sponsorer_centre_id, 
		                                                                String sponsorer_grno, 
		                                                                String sponsorer_nm, 
		                                                                String sponsorer_department, 
		                                                                String remarks, 
		                                                                String reason, 
		                                                                String registered_sewadar_grno, 
		                                                                Int32? registered_sewadar_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("application_id", application_id, INT, INOUT, p);
			csp("application_centre_id", application_centre_id, INT, IN, p);
			csp("application_dt", application_dt, DATE, IN, p);
			csp("application_status", application_status, VARCHAR, IN, p);
			csp("application_status_dtm", application_status_dtm, SMALLDATETIME, IN, p);
			csp("first_nm", first_nm, VARCHAR, IN, p);
			csp("middle_nm", middle_nm, VARCHAR, IN, p);
			csp("last_nm", last_nm, VARCHAR, IN, p);
			csp("gender", gender, VARCHAR, IN, p);
			csp("birth_dtm", birth_dtm, SMALLDATETIME, IN, p);
			csp("is_married", is_married, VARCHAR, IN, p);
			csp("initiation_dt", initiation_dt, SMALLDATETIME, IN, p);
			csp("initiation_place_id", initiation_place_id, SMALLINT, IN, p);
			csp("initiation_by", initiation_by, TINYINT, IN, p);
			csp("address_line_1", address_line_1, VARCHAR, IN, p);
			csp("address_line_2", address_line_2, VARCHAR, IN, p);
			csp("post_office_or_city_id", post_office_or_city_id, INT, IN, p);
			csp("pin_or_zip_code", pin_or_zip_code, VARCHAR, IN, p);
			csp("address_proof", address_proof, VARCHAR, IN, p);
			csp("other_address_proof_id", other_address_proof_id, SMALLINT, IN, p);
			csp("telephone_mobile", telephone_mobile, VARCHAR, IN, p);
			csp("telephone_residence", telephone_residence, VARCHAR, IN, p);
			csp("telephone_office", telephone_office, VARCHAR, IN, p);
			csp("occupation", occupation, VARCHAR, IN, p);
			csp("attends_weekly_satsang", attends_weekly_satsang, VARCHAR, IN, p);
			csp("weekly_satsang_centre_id", weekly_satsang_centre_id, INT, IN, p);
			csp("has_hypertension", has_hypertension, VARCHAR, IN, p);
			csp("is_diabetic", is_diabetic, VARCHAR, IN, p);
			csp("has_skin_problem", has_skin_problem, VARCHAR, IN, p);
			csp("has_epillepsy", has_epillepsy, VARCHAR, IN, p);
			csp("photo_id", photo_id, VARCHAR, IN, p);
			csp("photo_dt", photo_dt, DATE, IN, p);
			csp("appointment_dt", appointment_dt, SMALLDATETIME, IN, p);
			csp("is_outstation_sewadar", is_outstation_sewadar, VARCHAR, IN, p);
			csp("department_id", department_id, SMALLINT, IN, p);
			csp("sub_department_id", sub_department_id, SMALLINT, IN, p);
			csp("old_grno", old_grno, VARCHAR, IN, p);
			csp("reference_1_sewadar_id", reference_1_sewadar_id, INT, IN, p);
			csp("reference_1_grno", reference_1_grno, CHAR, IN, p);
			csp("reference_1_relationship", reference_1_relationship, SMALLINT, IN, p);
			csp("reference_1_nm", reference_1_nm, VARCHAR, IN, p);
			csp("reference_1_centre_id", reference_1_centre_id, INT, IN, p);
			csp("reference_1_department", reference_1_department, VARCHAR, IN, p);
			csp("reference_2_sewadar_id", reference_2_sewadar_id, INT, IN, p);
			csp("reference_2_grno", reference_2_grno, CHAR, IN, p);
			csp("reference_2_relationship", reference_2_relationship, SMALLINT, IN, p);
			csp("reference_2_nm", reference_2_nm, VARCHAR, IN, p);
			csp("reference_2_centre_id", reference_2_centre_id, INT, IN, p);
			csp("reference_2_department", reference_2_department, VARCHAR, IN, p);
			csp("security_approver_id", security_approver_id, INT, IN, p);
			csp("security_approver_centre_id", security_approver_centre_id, INT, IN, p);
			csp("security_approver_grno", security_approver_grno, CHAR, IN, p);
			csp("security_approver_nm", security_approver_nm, VARCHAR, IN, p);
			csp("sewa_samiti_approver_id", sewa_samiti_approver_id, INT, IN, p);
			csp("sewa_samiti_approver_centre_id", sewa_samiti_approver_centre_id, INT, IN, p);
			csp("sewa_samiti_approver_grno", sewa_samiti_approver_grno, CHAR, IN, p);
			csp("sewa_samiti_approver_nm", sewa_samiti_approver_nm, VARCHAR, IN, p);
			csp("area_secretary_id", area_secretary_id, SMALLINT, IN, p);
			csp("area_secretary_centre_id", area_secretary_centre_id, INT, IN, p);
			csp("area_secretary_grno", area_secretary_grno, CHAR, IN, p);
			csp("area_secretary_nm", area_secretary_nm, VARCHAR, IN, p);
			csp("secretary_id", secretary_id, SMALLINT, IN, p);
			csp("secretary_centre_id", secretary_centre_id, INT, IN, p);
			csp("secretary_grno", secretary_grno, CHAR, IN, p);
			csp("secretary_nm", secretary_nm, VARCHAR, IN, p);
			csp("sponsorer_id", sponsorer_id, INT, IN, p);
			csp("sponsorer_centre_id", sponsorer_centre_id, INT, IN, p);
			csp("sponsorer_grno", sponsorer_grno, CHAR, IN, p);
			csp("sponsorer_nm", sponsorer_nm, VARCHAR, IN, p);
			csp("sponsorer_department", sponsorer_department, VARCHAR, IN, p);
			csp("remarks", remarks, VARCHAR, IN, p);
			csp("reason", reason, VARCHAR, IN, p);
			csp("registered_sewadar_grno", registered_sewadar_grno, CHAR, IN, p);
			csp("registered_sewadar_id", registered_sewadar_id, INT, IN, p);
			return p;
		}
		
public DataSet InsertSewadarApplication(ref Int32 application_id, 
		                                            Int32? application_centre_id, 
		                                            DateTime? application_dt, 
		                                            String application_status, 
		                                            DateTime? application_status_dtm, 
		                                            String first_nm, 
		                                            String middle_nm, 
		                                            String last_nm, 
		                                            String gender, 
		                                            DateTime? birth_dtm, 
		                                            String is_married, 
		                                            DateTime? initiation_dt, 
		                                            Int16? initiation_place_id, 
		                                            Byte? initiation_by, 
		                                            String address_line_1, 
		                                            String address_line_2, 
		                                            Int32? post_office_or_city_id, 
		                                            String pin_or_zip_code, 
		                                            String address_proof, 
		                                            Int16? other_address_proof_id, 
		                                            String telephone_mobile, 
		                                            String telephone_residence, 
		                                            String telephone_office, 
		                                            String occupation, 
		                                            String attends_weekly_satsang, 
		                                            Int32? weekly_satsang_centre_id, 
		                                            String has_hypertension, 
		                                            String is_diabetic, 
		                                            String has_skin_problem, 
		                                            String has_epillepsy, 
		                                            String photo_id, 
		                                            DateTime? photo_dt, 
		                                            DateTime? appointment_dt, 
		                                            String is_outstation_sewadar, 
		                                            Int16? department_id, 
		                                            Int16? sub_department_id, 
		                                            String old_grno, 
		                                            Int32? reference_1_sewadar_id, 
		                                            String reference_1_grno, 
		                                            Int16? reference_1_relationship, 
		                                            String reference_1_nm, 
		                                            Int32? reference_1_centre_id, 
		                                            String reference_1_department, 
		                                            Int32? reference_2_sewadar_id, 
		                                            String reference_2_grno, 
		                                            Int16? reference_2_relationship, 
		                                            String reference_2_nm, 
		                                            Int32? reference_2_centre_id, 
		                                            String reference_2_department, 
		                                            Int32? security_approver_id, 
		                                            Int32? security_approver_centre_id, 
		                                            String security_approver_grno, 
		                                            String security_approver_nm, 
		                                            Int32? sewa_samiti_approver_id, 
		                                            Int32? sewa_samiti_approver_centre_id, 
		                                            String sewa_samiti_approver_grno, 
		                                            String sewa_samiti_approver_nm, 
		                                            Int16? area_secretary_id, 
		                                            Int32? area_secretary_centre_id, 
		                                            String area_secretary_grno, 
		                                            String area_secretary_nm, 
		                                            Int16? secretary_id, 
		                                            Int32? secretary_centre_id, 
		                                            String secretary_grno, 
		                                            String secretary_nm, 
		                                            Int32? sponsorer_id, 
		                                            Int32? sponsorer_centre_id, 
		                                            String sponsorer_grno, 
		                                            String sponsorer_nm, 
		                                            String sponsorer_department, 
		                                            String remarks, 
		                                            String reason, 
		                                            String registered_sewadar_grno, 
		                                            Int32? registered_sewadar_id)
		{
			List<SqlParameter> prms = InsertSewadarApplication_Params(ref application_id, application_centre_id, application_dt, application_status, application_status_dtm, first_nm, middle_nm, last_nm, gender, birth_dtm, is_married, initiation_dt, initiation_place_id, initiation_by, address_line_1, address_line_2, post_office_or_city_id, pin_or_zip_code, address_proof, other_address_proof_id, telephone_mobile, telephone_residence, telephone_office, occupation, attends_weekly_satsang, weekly_satsang_centre_id, has_hypertension, is_diabetic, has_skin_problem, has_epillepsy, photo_id, photo_dt, appointment_dt, is_outstation_sewadar, department_id, sub_department_id, old_grno, reference_1_sewadar_id, reference_1_grno, reference_1_relationship, reference_1_nm, reference_1_centre_id, reference_1_department, reference_2_sewadar_id, reference_2_grno, reference_2_relationship, reference_2_nm, reference_2_centre_id, reference_2_department, security_approver_id, security_approver_centre_id, security_approver_grno, security_approver_nm, sewa_samiti_approver_id, sewa_samiti_approver_centre_id, sewa_samiti_approver_grno, sewa_samiti_approver_nm, area_secretary_id, area_secretary_centre_id, area_secretary_grno, area_secretary_nm, secretary_id, secretary_centre_id, secretary_grno, secretary_nm, sponsorer_id, sponsorer_centre_id, sponsorer_grno, sponsorer_nm, sponsorer_department, remarks, reason, registered_sewadar_grno, registered_sewadar_id);
			DataSet dset = esp("InsertSewadarApplication", prms);
			application_id = (System.Int32)prms.FirstOrDefault(p => p.ParameterName == "application_id").Value;

			return dset;
		}
		
public string InsertSewadarApplicationAsTask(ref Int32 application_id, 
		                                                Int32? application_centre_id, 
		                                                DateTime? application_dt, 
		                                                String application_status, 
		                                                DateTime? application_status_dtm, 
		                                                String first_nm, 
		                                                String middle_nm, 
		                                                String last_nm, 
		                                                String gender, 
		                                                DateTime? birth_dtm, 
		                                                String is_married, 
		                                                DateTime? initiation_dt, 
		                                                Int16? initiation_place_id, 
		                                                Byte? initiation_by, 
		                                                String address_line_1, 
		                                                String address_line_2, 
		                                                Int32? post_office_or_city_id, 
		                                                String pin_or_zip_code, 
		                                                String address_proof, 
		                                                Int16? other_address_proof_id, 
		                                                String telephone_mobile, 
		                                                String telephone_residence, 
		                                                String telephone_office, 
		                                                String occupation, 
		                                                String attends_weekly_satsang, 
		                                                Int32? weekly_satsang_centre_id, 
		                                                String has_hypertension, 
		                                                String is_diabetic, 
		                                                String has_skin_problem, 
		                                                String has_epillepsy, 
		                                                String photo_id, 
		                                                DateTime? photo_dt, 
		                                                DateTime? appointment_dt, 
		                                                String is_outstation_sewadar, 
		                                                Int16? department_id, 
		                                                Int16? sub_department_id, 
		                                                String old_grno, 
		                                                Int32? reference_1_sewadar_id, 
		                                                String reference_1_grno, 
		                                                Int16? reference_1_relationship, 
		                                                String reference_1_nm, 
		                                                Int32? reference_1_centre_id, 
		                                                String reference_1_department, 
		                                                Int32? reference_2_sewadar_id, 
		                                                String reference_2_grno, 
		                                                Int16? reference_2_relationship, 
		                                                String reference_2_nm, 
		                                                Int32? reference_2_centre_id, 
		                                                String reference_2_department, 
		                                                Int32? security_approver_id, 
		                                                Int32? security_approver_centre_id, 
		                                                String security_approver_grno, 
		                                                String security_approver_nm, 
		                                                Int32? sewa_samiti_approver_id, 
		                                                Int32? sewa_samiti_approver_centre_id, 
		                                                String sewa_samiti_approver_grno, 
		                                                String sewa_samiti_approver_nm, 
		                                                Int16? area_secretary_id, 
		                                                Int32? area_secretary_centre_id, 
		                                                String area_secretary_grno, 
		                                                String area_secretary_nm, 
		                                                Int16? secretary_id, 
		                                                Int32? secretary_centre_id, 
		                                                String secretary_grno, 
		                                                String secretary_nm, 
		                                                Int32? sponsorer_id, 
		                                                Int32? sponsorer_centre_id, 
		                                                String sponsorer_grno, 
		                                                String sponsorer_nm, 
		                                                String sponsorer_department, 
		                                                String remarks, 
		                                                String reason, 
		                                                String registered_sewadar_grno, 
		                                                Int32? registered_sewadar_id)
		{
			List<SqlParameter> prms = InsertSewadarApplication_Params(ref application_id, application_centre_id, application_dt, application_status, application_status_dtm, first_nm, middle_nm, last_nm, gender, birth_dtm, is_married, initiation_dt, initiation_place_id, initiation_by, address_line_1, address_line_2, post_office_or_city_id, pin_or_zip_code, address_proof, other_address_proof_id, telephone_mobile, telephone_residence, telephone_office, occupation, attends_weekly_satsang, weekly_satsang_centre_id, has_hypertension, is_diabetic, has_skin_problem, has_epillepsy, photo_id, photo_dt, appointment_dt, is_outstation_sewadar, department_id, sub_department_id, old_grno, reference_1_sewadar_id, reference_1_grno, reference_1_relationship, reference_1_nm, reference_1_centre_id, reference_1_department, reference_2_sewadar_id, reference_2_grno, reference_2_relationship, reference_2_nm, reference_2_centre_id, reference_2_department, security_approver_id, security_approver_centre_id, security_approver_grno, security_approver_nm, sewa_samiti_approver_id, sewa_samiti_approver_centre_id, sewa_samiti_approver_grno, sewa_samiti_approver_nm, area_secretary_id, area_secretary_centre_id, area_secretary_grno, area_secretary_nm, secretary_id, secretary_centre_id, secretary_grno, secretary_nm, sponsorer_id, sponsorer_centre_id, sponsorer_grno, sponsorer_nm, sponsorer_department, remarks, reason, registered_sewadar_grno, registered_sewadar_id);
			return gps("InsertSewadarApplication", prms);

		}
		
		
		
private List<SqlParameter> InsertSewadarApplicationOtherDisabilitie_Params(Int32? sewadar_application_id, 
		                                                                                Int16? medical_disability_id, 
		                                                                                Int16? medical_disability_sq)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("sewadar_application_id", sewadar_application_id, INT, IN, p);
			csp("medical_disability_id", medical_disability_id, SMALLINT, IN, p);
			csp("medical_disability_sq", medical_disability_sq, SMALLINT, IN, p);
			return p;
		}
		
public DataSet InsertSewadarApplicationOtherDisabilitie(Int32? sewadar_application_id, 
		                                                            Int16? medical_disability_id, 
		                                                            Int16? medical_disability_sq)
		{
			List<SqlParameter> prms = InsertSewadarApplicationOtherDisabilitie_Params(sewadar_application_id, medical_disability_id, medical_disability_sq);
			DataSet dset = esp("InsertSewadarApplicationOtherDisabilitie", prms);

			return dset;
		}
		
public string InsertSewadarApplicationOtherDisabilitieAsTask(Int32? sewadar_application_id, 
		                                                                Int16? medical_disability_id, 
		                                                                Int16? medical_disability_sq)
		{
			List<SqlParameter> prms = InsertSewadarApplicationOtherDisabilitie_Params(sewadar_application_id, medical_disability_id, medical_disability_sq);
			return gps("InsertSewadarApplicationOtherDisabilitie", prms);

		}
		
		
		
private List<SqlParameter> InsertSewadarApplicationQualification_Params(Int32? sewadar_application_id, 
		                                                                            Int16? qualification_sq, 
		                                                                            Int16? qualification_id, 
		                                                                            Int16? qlfctn_subject_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("sewadar_application_id", sewadar_application_id, INT, IN, p);
			csp("qualification_sq", qualification_sq, SMALLINT, IN, p);
			csp("qualification_id", qualification_id, SMALLINT, IN, p);
			csp("qlfctn_subject_id", qlfctn_subject_id, SMALLINT, IN, p);
			return p;
		}
		
public DataSet InsertSewadarApplicationQualification(Int32? sewadar_application_id, 
		                                                        Int16? qualification_sq, 
		                                                        Int16? qualification_id, 
		                                                        Int16? qlfctn_subject_id)
		{
			List<SqlParameter> prms = InsertSewadarApplicationQualification_Params(sewadar_application_id, qualification_sq, qualification_id, qlfctn_subject_id);
			DataSet dset = esp("InsertSewadarApplicationQualification", prms);

			return dset;
		}
		
public string InsertSewadarApplicationQualificationAsTask(Int32? sewadar_application_id, 
		                                                                Int16? qualification_sq, 
		                                                                Int16? qualification_id, 
		                                                                Int16? qlfctn_subject_id)
		{
			List<SqlParameter> prms = InsertSewadarApplicationQualification_Params(sewadar_application_id, qualification_sq, qualification_id, qlfctn_subject_id);
			return gps("InsertSewadarApplicationQualification", prms);

		}
		
		
		
private List<SqlParameter> InsertSewadarApplicationSkill_Params(Int32? sewadar_application_id, 
		                                                                    Int16? skill_id, 
		                                                                    Int16? skill_sq)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("sewadar_application_id", sewadar_application_id, INT, IN, p);
			csp("skill_id", skill_id, SMALLINT, IN, p);
			csp("skill_sq", skill_sq, SMALLINT, IN, p);
			return p;
		}
		
public DataSet InsertSewadarApplicationSkill(Int32? sewadar_application_id, 
		                                                Int16? skill_id, 
		                                                Int16? skill_sq)
		{
			List<SqlParameter> prms = InsertSewadarApplicationSkill_Params(sewadar_application_id, skill_id, skill_sq);
			DataSet dset = esp("InsertSewadarApplicationSkill", prms);

			return dset;
		}
		
public string InsertSewadarApplicationSkillAsTask(Int32? sewadar_application_id, 
		                                                        Int16? skill_id, 
		                                                        Int16? skill_sq)
		{
			List<SqlParameter> prms = InsertSewadarApplicationSkill_Params(sewadar_application_id, skill_id, skill_sq);
			return gps("InsertSewadarApplicationSkill", prms);

		}
		
		
		
private List<SqlParameter> InsertSewadarsAddresse_Params(Int32? sewadar_id, 
		                                                            String address_type, 
		                                                            String address_line_1, 
		                                                            String address_line_2, 
		                                                            Int32? post_office_or_city_id, 
		                                                            String pin_or_zip_code)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("sewadar_id", sewadar_id, INT, IN, p);
			csp("address_type", address_type, VARCHAR, IN, p);
			csp("address_line_1", address_line_1, VARCHAR, IN, p);
			csp("address_line_2", address_line_2, VARCHAR, IN, p);
			csp("post_office_or_city_id", post_office_or_city_id, INT, IN, p);
			csp("pin_or_zip_code", pin_or_zip_code, VARCHAR, IN, p);
			return p;
		}
		
public DataSet InsertSewadarsAddresse(Int32? sewadar_id, 
		                                            String address_type, 
		                                            String address_line_1, 
		                                            String address_line_2, 
		                                            Int32? post_office_or_city_id, 
		                                            String pin_or_zip_code)
		{
			List<SqlParameter> prms = InsertSewadarsAddresse_Params(sewadar_id, address_type, address_line_1, address_line_2, post_office_or_city_id, pin_or_zip_code);
			DataSet dset = esp("InsertSewadarsAddresse", prms);

			return dset;
		}
		
public string InsertSewadarsAddresseAsTask(Int32? sewadar_id, 
		                                                String address_type, 
		                                                String address_line_1, 
		                                                String address_line_2, 
		                                                Int32? post_office_or_city_id, 
		                                                String pin_or_zip_code)
		{
			List<SqlParameter> prms = InsertSewadarsAddresse_Params(sewadar_id, address_type, address_line_1, address_line_2, post_office_or_city_id, pin_or_zip_code);
			return gps("InsertSewadarsAddresse", prms);

		}
		
		
		
private List<SqlParameter> InsertSewadarsAttribute_Params(Int32? satsang_centre_id, 
		                                                                String sewadar_grno, 
		                                                                Int16? attribute_id, 
		                                                                String string_value, 
		                                                                String boolean_value, 
		                                                                DateTime? date_value, 
		                                                                Int32? int_value, 
		                                                                Decimal? number_value, 
		                                                                String list_value, 
		                                                                String remarks, 
		                                                                DateTime? effective_from, 
		                                                                DateTime? effective_till)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("satsang_centre_id", satsang_centre_id, INT, IN, p);
			csp("sewadar_grno", sewadar_grno, CHAR, IN, p);
			csp("attribute_id", attribute_id, SMALLINT, IN, p);
			csp("string_value", string_value, VARCHAR, IN, p);
			csp("boolean_value", boolean_value, VARCHAR, IN, p);
			csp("date_value", date_value, SMALLDATETIME, IN, p);
			csp("int_value", int_value, INT, IN, p);
			csp("number_value", number_value, DECIMAL, IN, p);
			csp("list_value", list_value, VARCHAR, IN, p);
			csp("remarks", remarks, VARCHAR, IN, p);
			csp("effective_from", effective_from, DATETIME, IN, p);
			csp("effective_till", effective_till, DATETIME, IN, p);
			return p;
		}
		
public DataSet InsertSewadarsAttribute(Int32? satsang_centre_id, 
		                                            String sewadar_grno, 
		                                            Int16? attribute_id, 
		                                            String string_value, 
		                                            String boolean_value, 
		                                            DateTime? date_value, 
		                                            Int32? int_value, 
		                                            Decimal? number_value, 
		                                            String list_value, 
		                                            String remarks, 
		                                            DateTime? effective_from, 
		                                            DateTime? effective_till)
		{
			List<SqlParameter> prms = InsertSewadarsAttribute_Params(satsang_centre_id, sewadar_grno, attribute_id, string_value, boolean_value, date_value, int_value, number_value, list_value, remarks, effective_from, effective_till);
			DataSet dset = esp("InsertSewadarsAttribute", prms);

			return dset;
		}
		
public string InsertSewadarsAttributeAsTask(Int32? satsang_centre_id, 
		                                                String sewadar_grno, 
		                                                Int16? attribute_id, 
		                                                String string_value, 
		                                                String boolean_value, 
		                                                DateTime? date_value, 
		                                                Int32? int_value, 
		                                                Decimal? number_value, 
		                                                String list_value, 
		                                                String remarks, 
		                                                DateTime? effective_from, 
		                                                DateTime? effective_till)
		{
			List<SqlParameter> prms = InsertSewadarsAttribute_Params(satsang_centre_id, sewadar_grno, attribute_id, string_value, boolean_value, date_value, int_value, number_value, list_value, remarks, effective_from, effective_till);
			return gps("InsertSewadarsAttribute", prms);

		}
		
		
		
private List<SqlParameter> InsertSewadarsBadge_Params(ref Int32 badge_id, 
		                                                            Int32? satsang_centre_id, 
		                                                            String sewadar_grno, 
		                                                            String badge_template_id, 
		                                                            Int16? department_id, 
		                                                            Int32? weekly_sewa_location_id, 
		                                                            String is_front_printed, 
		                                                            String is_back_printed, 
		                                                            DateTime? expiry_dt, 
		                                                            String remarks)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("badge_id", badge_id, INT, INOUT, p);
			csp("satsang_centre_id", satsang_centre_id, INT, IN, p);
			csp("sewadar_grno", sewadar_grno, CHAR, IN, p);
			csp("badge_template_id", badge_template_id, VARCHAR, IN, p);
			csp("department_id", department_id, SMALLINT, IN, p);
			csp("weekly_sewa_location_id", weekly_sewa_location_id, INT, IN, p);
			csp("is_front_printed", is_front_printed, VARCHAR, IN, p);
			csp("is_back_printed", is_back_printed, VARCHAR, IN, p);
			csp("expiry_dt", expiry_dt, SMALLDATETIME, IN, p);
			csp("remarks", remarks, VARCHAR, IN, p);
			return p;
		}
		
public DataSet InsertSewadarsBadge(ref Int32 badge_id, 
		                                        Int32? satsang_centre_id, 
		                                        String sewadar_grno, 
		                                        String badge_template_id, 
		                                        Int16? department_id, 
		                                        Int32? weekly_sewa_location_id, 
		                                        String is_front_printed, 
		                                        String is_back_printed, 
		                                        DateTime? expiry_dt, 
		                                        String remarks)
		{
			List<SqlParameter> prms = InsertSewadarsBadge_Params(ref badge_id, satsang_centre_id, sewadar_grno, badge_template_id, department_id, weekly_sewa_location_id, is_front_printed, is_back_printed, expiry_dt, remarks);
			DataSet dset = esp("InsertSewadarsBadge", prms);
			badge_id = (System.Int32)prms.FirstOrDefault(p => p.ParameterName == "badge_id").Value;

			return dset;
		}
		
public string InsertSewadarsBadgeAsTask(ref Int32 badge_id, 
		                                            Int32? satsang_centre_id, 
		                                            String sewadar_grno, 
		                                            String badge_template_id, 
		                                            Int16? department_id, 
		                                            Int32? weekly_sewa_location_id, 
		                                            String is_front_printed, 
		                                            String is_back_printed, 
		                                            DateTime? expiry_dt, 
		                                            String remarks)
		{
			List<SqlParameter> prms = InsertSewadarsBadge_Params(ref badge_id, satsang_centre_id, sewadar_grno, badge_template_id, department_id, weekly_sewa_location_id, is_front_printed, is_back_printed, expiry_dt, remarks);
			return gps("InsertSewadarsBadge", prms);

		}
		
		
		
private List<SqlParameter> InsertSewadarsDetail_Params(Int32? sewadar_id, 
		                                                            String address_proof, 
		                                                            Int16? other_address_proof_id, 
		                                                            String telephone_mobile, 
		                                                            String telephone_residence, 
		                                                            String telephone_office, 
		                                                            String occupation, 
		                                                            String attends_weekly_satsang, 
		                                                            Int32? weekly_satsang_centre_id, 
		                                                            String has_hypertension, 
		                                                            String is_diabetic, 
		                                                            String has_skin_problem, 
		                                                            String has_epillepsy)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("sewadar_id", sewadar_id, INT, IN, p);
			csp("address_proof", address_proof, VARCHAR, IN, p);
			csp("other_address_proof_id", other_address_proof_id, SMALLINT, IN, p);
			csp("telephone_mobile", telephone_mobile, VARCHAR, IN, p);
			csp("telephone_residence", telephone_residence, VARCHAR, IN, p);
			csp("telephone_office", telephone_office, VARCHAR, IN, p);
			csp("occupation", occupation, VARCHAR, IN, p);
			csp("attends_weekly_satsang", attends_weekly_satsang, VARCHAR, IN, p);
			csp("weekly_satsang_centre_id", weekly_satsang_centre_id, INT, IN, p);
			csp("has_hypertension", has_hypertension, VARCHAR, IN, p);
			csp("is_diabetic", is_diabetic, VARCHAR, IN, p);
			csp("has_skin_problem", has_skin_problem, VARCHAR, IN, p);
			csp("has_epillepsy", has_epillepsy, VARCHAR, IN, p);
			return p;
		}
		
public DataSet InsertSewadarsDetail(Int32? sewadar_id, 
		                                        String address_proof, 
		                                        Int16? other_address_proof_id, 
		                                        String telephone_mobile, 
		                                        String telephone_residence, 
		                                        String telephone_office, 
		                                        String occupation, 
		                                        String attends_weekly_satsang, 
		                                        Int32? weekly_satsang_centre_id, 
		                                        String has_hypertension, 
		                                        String is_diabetic, 
		                                        String has_skin_problem, 
		                                        String has_epillepsy)
		{
			List<SqlParameter> prms = InsertSewadarsDetail_Params(sewadar_id, address_proof, other_address_proof_id, telephone_mobile, telephone_residence, telephone_office, occupation, attends_weekly_satsang, weekly_satsang_centre_id, has_hypertension, is_diabetic, has_skin_problem, has_epillepsy);
			DataSet dset = esp("InsertSewadarsDetail", prms);

			return dset;
		}
		
public string InsertSewadarsDetailAsTask(Int32? sewadar_id, 
		                                            String address_proof, 
		                                            Int16? other_address_proof_id, 
		                                            String telephone_mobile, 
		                                            String telephone_residence, 
		                                            String telephone_office, 
		                                            String occupation, 
		                                            String attends_weekly_satsang, 
		                                            Int32? weekly_satsang_centre_id, 
		                                            String has_hypertension, 
		                                            String is_diabetic, 
		                                            String has_skin_problem, 
		                                            String has_epillepsy)
		{
			List<SqlParameter> prms = InsertSewadarsDetail_Params(sewadar_id, address_proof, other_address_proof_id, telephone_mobile, telephone_residence, telephone_office, occupation, attends_weekly_satsang, weekly_satsang_centre_id, has_hypertension, is_diabetic, has_skin_problem, has_epillepsy);
			return gps("InsertSewadarsDetail", prms);

		}
		
		
		
private List<SqlParameter> InsertSewadarsMerged_Params(Int32? src_sewadar_id, 
		                                                            Int32? dst_sewadar_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("src_sewadar_id", src_sewadar_id, INT, IN, p);
			csp("dst_sewadar_id", dst_sewadar_id, INT, IN, p);
			return p;
		}
		
public DataSet InsertSewadarsMerged(Int32? src_sewadar_id, 
		                                        Int32? dst_sewadar_id)
		{
			List<SqlParameter> prms = InsertSewadarsMerged_Params(src_sewadar_id, dst_sewadar_id);
			DataSet dset = esp("InsertSewadarsMerged", prms);

			return dset;
		}
		
public string InsertSewadarsMergedAsTask(Int32? src_sewadar_id, 
		                                            Int32? dst_sewadar_id)
		{
			List<SqlParameter> prms = InsertSewadarsMerged_Params(src_sewadar_id, dst_sewadar_id);
			return gps("InsertSewadarsMerged", prms);

		}
		
		
		
private List<SqlParameter> InsertSewadarsOtherDisabilities_Params(Int32? sewadar_id, 
		                                                                        Int16? medical_disability_id, 
		                                                                        Int16? medical_disability_sq)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("sewadar_id", sewadar_id, INT, IN, p);
			csp("medical_disability_id", medical_disability_id, SMALLINT, IN, p);
			csp("medical_disability_sq", medical_disability_sq, SMALLINT, IN, p);
			return p;
		}
		
public DataSet InsertSewadarsOtherDisabilities(Int32? sewadar_id, 
		                                                    Int16? medical_disability_id, 
		                                                    Int16? medical_disability_sq)
		{
			List<SqlParameter> prms = InsertSewadarsOtherDisabilities_Params(sewadar_id, medical_disability_id, medical_disability_sq);
			DataSet dset = esp("InsertSewadarsOtherDisabilities", prms);

			return dset;
		}
		
public string InsertSewadarsOtherDisabilitiesAsTask(Int32? sewadar_id, 
		                                                        Int16? medical_disability_id, 
		                                                        Int16? medical_disability_sq)
		{
			List<SqlParameter> prms = InsertSewadarsOtherDisabilities_Params(sewadar_id, medical_disability_id, medical_disability_sq);
			return gps("InsertSewadarsOtherDisabilities", prms);

		}
		
		
		
private List<SqlParameter> InsertSewadarsParticular_Params(Int32? satsang_centre_id, 
		                                                                String sewadar_grno)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("satsang_centre_id", satsang_centre_id, INT, IN, p);
			csp("sewadar_grno", sewadar_grno, CHAR, IN, p);
			return p;
		}
		
public DataSet InsertSewadarsParticular(Int32? satsang_centre_id, 
		                                            String sewadar_grno)
		{
			List<SqlParameter> prms = InsertSewadarsParticular_Params(satsang_centre_id, sewadar_grno);
			DataSet dset = esp("InsertSewadarsParticular", prms);

			return dset;
		}
		
public string InsertSewadarsParticularAsTask(Int32? satsang_centre_id, 
		                                                String sewadar_grno)
		{
			List<SqlParameter> prms = InsertSewadarsParticular_Params(satsang_centre_id, sewadar_grno);
			return gps("InsertSewadarsParticular", prms);

		}
		
		
		
private List<SqlParameter> InsertSewadarsPhoto_Params(Int32? sewadar_id, 
		                                                            Byte[] sewadar_photo, 
		                                                            DateTime? photo_dt)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("sewadar_id", sewadar_id, INT, IN, p);
			csp("sewadar_photo", sewadar_photo, IMAGE, IN, p);
			csp("photo_dt", photo_dt, DATETIME, IN, p);
			return p;
		}
		
public DataSet InsertSewadarsPhoto(Int32? sewadar_id, 
		                                        Byte[] sewadar_photo, 
		                                        DateTime? photo_dt)
		{
			List<SqlParameter> prms = InsertSewadarsPhoto_Params(sewadar_id, sewadar_photo, photo_dt);
			DataSet dset = esp("InsertSewadarsPhoto", prms);

			return dset;
		}
		
public string InsertSewadarsPhotoAsTask(Int32? sewadar_id, 
		                                            Byte[] sewadar_photo, 
		                                            DateTime? photo_dt)
		{
			List<SqlParameter> prms = InsertSewadarsPhoto_Params(sewadar_id, sewadar_photo, photo_dt);
			return gps("InsertSewadarsPhoto", prms);

		}
		
		
		
private List<SqlParameter> InsertSewadarsQualification_Params(Int32? sewadar_id, 
		                                                                    Int16? qualification_sq, 
		                                                                    Int16? qualification_id, 
		                                                                    Int16? qlfctn_subject_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("sewadar_id", sewadar_id, INT, IN, p);
			csp("qualification_sq", qualification_sq, SMALLINT, IN, p);
			csp("qualification_id", qualification_id, SMALLINT, IN, p);
			csp("qlfctn_subject_id", qlfctn_subject_id, SMALLINT, IN, p);
			return p;
		}
		
public DataSet InsertSewadarsQualification(Int32? sewadar_id, 
		                                                Int16? qualification_sq, 
		                                                Int16? qualification_id, 
		                                                Int16? qlfctn_subject_id)
		{
			List<SqlParameter> prms = InsertSewadarsQualification_Params(sewadar_id, qualification_sq, qualification_id, qlfctn_subject_id);
			DataSet dset = esp("InsertSewadarsQualification", prms);

			return dset;
		}
		
public string InsertSewadarsQualificationAsTask(Int32? sewadar_id, 
		                                                    Int16? qualification_sq, 
		                                                    Int16? qualification_id, 
		                                                    Int16? qlfctn_subject_id)
		{
			List<SqlParameter> prms = InsertSewadarsQualification_Params(sewadar_id, qualification_sq, qualification_id, qlfctn_subject_id);
			return gps("InsertSewadarsQualification", prms);

		}
		
		
		
private List<SqlParameter> InsertSewadarsRegistration_Params(Int32? satsang_centre_id, 
		                                                                String sewadar_grno, 
		                                                                Int32? sewadar_id, 
		                                                                DateTime? appointment_dt, 
		                                                                String is_outstation_sewadar, 
		                                                                Int16? department_id, 
		                                                                Int16? sub_department_id, 
		                                                                DateTime? department_dt, 
		                                                                String sewadar_status_cd, 
		                                                                DateTime? sewadar_status_dtm, 
		                                                                String responsibility, 
		                                                                DateTime? responsibility_dtm, 
		                                                                Int32? reference_1_sewadar_id, 
		                                                                Int16? reference_1_relationship, 
		                                                                String reference_1_nm, 
		                                                                Int32? reference_1_centre_id, 
		                                                                String reference_1_department, 
		                                                                Int32? reference_2_sewadar_id, 
		                                                                Int16? reference_2_relationship, 
		                                                                String reference_2_nm, 
		                                                                Int32? reference_2_centre_id, 
		                                                                String reference_2_department, 
		                                                                Int32? sponsorer_id, 
		                                                                Int16? area_secretary_id, 
		                                                                Int16? secretary_id, 
		                                                                Int32? security_approver_id, 
		                                                                Int32? sewa_samiti_approver_id, 
		                                                                Int32? weekly_sewa_location_id, 
		                                                                Int16? weekly_department_id, 
		                                                                String sewadar_type, 
		                                                                Int32? sewa_id, 
		                                                                Int32? location_district_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("satsang_centre_id", satsang_centre_id, INT, IN, p);
			csp("sewadar_grno", sewadar_grno, CHAR, IN, p);
			csp("sewadar_id", sewadar_id, INT, IN, p);
			csp("appointment_dt", appointment_dt, SMALLDATETIME, IN, p);
			csp("is_outstation_sewadar", is_outstation_sewadar, VARCHAR, IN, p);
			csp("department_id", department_id, SMALLINT, IN, p);
			csp("sub_department_id", sub_department_id, SMALLINT, IN, p);
			csp("department_dt", department_dt, SMALLDATETIME, IN, p);
			csp("sewadar_status_cd", sewadar_status_cd, VARCHAR, IN, p);
			csp("sewadar_status_dtm", sewadar_status_dtm, SMALLDATETIME, IN, p);
			csp("responsibility", responsibility, VARCHAR, IN, p);
			csp("responsibility_dtm", responsibility_dtm, SMALLDATETIME, IN, p);
			csp("reference_1_sewadar_id", reference_1_sewadar_id, INT, IN, p);
			csp("reference_1_relationship", reference_1_relationship, SMALLINT, IN, p);
			csp("reference_1_nm", reference_1_nm, VARCHAR, IN, p);
			csp("reference_1_centre_id", reference_1_centre_id, INT, IN, p);
			csp("reference_1_department", reference_1_department, VARCHAR, IN, p);
			csp("reference_2_sewadar_id", reference_2_sewadar_id, INT, IN, p);
			csp("reference_2_relationship", reference_2_relationship, SMALLINT, IN, p);
			csp("reference_2_nm", reference_2_nm, VARCHAR, IN, p);
			csp("reference_2_centre_id", reference_2_centre_id, INT, IN, p);
			csp("reference_2_department", reference_2_department, VARCHAR, IN, p);
			csp("sponsorer_id", sponsorer_id, INT, IN, p);
			csp("area_secretary_id", area_secretary_id, SMALLINT, IN, p);
			csp("secretary_id", secretary_id, SMALLINT, IN, p);
			csp("security_approver_id", security_approver_id, INT, IN, p);
			csp("sewa_samiti_approver_id", sewa_samiti_approver_id, INT, IN, p);
			csp("weekly_sewa_location_id", weekly_sewa_location_id, INT, IN, p);
			csp("weekly_department_id", weekly_department_id, SMALLINT, IN, p);
			csp("sewadar_type", sewadar_type, CHAR, IN, p);
			csp("sewa_id", sewa_id, INT, IN, p);
			csp("location_district_id", location_district_id, INT, IN, p);
			return p;
		}
		
public DataSet InsertSewadarsRegistration(Int32? satsang_centre_id, 
		                                                String sewadar_grno, 
		                                                Int32? sewadar_id, 
		                                                DateTime? appointment_dt, 
		                                                String is_outstation_sewadar, 
		                                                Int16? department_id, 
		                                                Int16? sub_department_id, 
		                                                DateTime? department_dt, 
		                                                String sewadar_status_cd, 
		                                                DateTime? sewadar_status_dtm, 
		                                                String responsibility, 
		                                                DateTime? responsibility_dtm, 
		                                                Int32? reference_1_sewadar_id, 
		                                                Int16? reference_1_relationship, 
		                                                String reference_1_nm, 
		                                                Int32? reference_1_centre_id, 
		                                                String reference_1_department, 
		                                                Int32? reference_2_sewadar_id, 
		                                                Int16? reference_2_relationship, 
		                                                String reference_2_nm, 
		                                                Int32? reference_2_centre_id, 
		                                                String reference_2_department, 
		                                                Int32? sponsorer_id, 
		                                                Int16? area_secretary_id, 
		                                                Int16? secretary_id, 
		                                                Int32? security_approver_id, 
		                                                Int32? sewa_samiti_approver_id, 
		                                                Int32? weekly_sewa_location_id, 
		                                                Int16? weekly_department_id, 
		                                                String sewadar_type, 
		                                                Int32? sewa_id, 
		                                                Int32? location_district_id)
		{
			List<SqlParameter> prms = InsertSewadarsRegistration_Params(satsang_centre_id, sewadar_grno, sewadar_id, appointment_dt, is_outstation_sewadar, department_id, sub_department_id, department_dt, sewadar_status_cd, sewadar_status_dtm, responsibility, responsibility_dtm, reference_1_sewadar_id, reference_1_relationship, reference_1_nm, reference_1_centre_id, reference_1_department, reference_2_sewadar_id, reference_2_relationship, reference_2_nm, reference_2_centre_id, reference_2_department, sponsorer_id, area_secretary_id, secretary_id, security_approver_id, sewa_samiti_approver_id, weekly_sewa_location_id, weekly_department_id, sewadar_type, sewa_id, location_district_id);
			DataSet dset = esp("InsertSewadarsRegistration", prms);

			return dset;
		}
		
public string InsertSewadarsRegistrationAsTask(Int32? satsang_centre_id, 
		                                                    String sewadar_grno, 
		                                                    Int32? sewadar_id, 
		                                                    DateTime? appointment_dt, 
		                                                    String is_outstation_sewadar, 
		                                                    Int16? department_id, 
		                                                    Int16? sub_department_id, 
		                                                    DateTime? department_dt, 
		                                                    String sewadar_status_cd, 
		                                                    DateTime? sewadar_status_dtm, 
		                                                    String responsibility, 
		                                                    DateTime? responsibility_dtm, 
		                                                    Int32? reference_1_sewadar_id, 
		                                                    Int16? reference_1_relationship, 
		                                                    String reference_1_nm, 
		                                                    Int32? reference_1_centre_id, 
		                                                    String reference_1_department, 
		                                                    Int32? reference_2_sewadar_id, 
		                                                    Int16? reference_2_relationship, 
		                                                    String reference_2_nm, 
		                                                    Int32? reference_2_centre_id, 
		                                                    String reference_2_department, 
		                                                    Int32? sponsorer_id, 
		                                                    Int16? area_secretary_id, 
		                                                    Int16? secretary_id, 
		                                                    Int32? security_approver_id, 
		                                                    Int32? sewa_samiti_approver_id, 
		                                                    Int32? weekly_sewa_location_id, 
		                                                    Int16? weekly_department_id, 
		                                                    String sewadar_type, 
		                                                    Int32? sewa_id, 
		                                                    Int32? location_district_id)
		{
			List<SqlParameter> prms = InsertSewadarsRegistration_Params(satsang_centre_id, sewadar_grno, sewadar_id, appointment_dt, is_outstation_sewadar, department_id, sub_department_id, department_dt, sewadar_status_cd, sewadar_status_dtm, responsibility, responsibility_dtm, reference_1_sewadar_id, reference_1_relationship, reference_1_nm, reference_1_centre_id, reference_1_department, reference_2_sewadar_id, reference_2_relationship, reference_2_nm, reference_2_centre_id, reference_2_department, sponsorer_id, area_secretary_id, secretary_id, security_approver_id, sewa_samiti_approver_id, weekly_sewa_location_id, weekly_department_id, sewadar_type, sewa_id, location_district_id);
			return gps("InsertSewadarsRegistration", prms);

		}
		
		
		
private List<SqlParameter> InsertSewadarsRemark_Params(Int32? sewadar_id, 
		                                                            String remarks_type, 
		                                                            Int16? remarks_sq, 
		                                                            String remarks)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("sewadar_id", sewadar_id, INT, IN, p);
			csp("remarks_type", remarks_type, VARCHAR, IN, p);
			csp("remarks_sq", remarks_sq, SMALLINT, IN, p);
			csp("remarks", remarks, VARCHAR, IN, p);
			return p;
		}
		
public DataSet InsertSewadarsRemark(Int32? sewadar_id, 
		                                        String remarks_type, 
		                                        Int16? remarks_sq, 
		                                        String remarks)
		{
			List<SqlParameter> prms = InsertSewadarsRemark_Params(sewadar_id, remarks_type, remarks_sq, remarks);
			DataSet dset = esp("InsertSewadarsRemark", prms);

			return dset;
		}
		
public string InsertSewadarsRemarkAsTask(Int32? sewadar_id, 
		                                            String remarks_type, 
		                                            Int16? remarks_sq, 
		                                            String remarks)
		{
			List<SqlParameter> prms = InsertSewadarsRemark_Params(sewadar_id, remarks_type, remarks_sq, remarks);
			return gps("InsertSewadarsRemark", prms);

		}
		
		
		
private List<SqlParameter> InsertSewadarsSkill_Params(Int32? sewadar_id, 
		                                                            Int16? skill_id, 
		                                                            Int16? skill_sq)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("sewadar_id", sewadar_id, INT, IN, p);
			csp("skill_id", skill_id, SMALLINT, IN, p);
			csp("skill_sq", skill_sq, SMALLINT, IN, p);
			return p;
		}
		
public DataSet InsertSewadarsSkill(Int32? sewadar_id, 
		                                        Int16? skill_id, 
		                                        Int16? skill_sq)
		{
			List<SqlParameter> prms = InsertSewadarsSkill_Params(sewadar_id, skill_id, skill_sq);
			DataSet dset = esp("InsertSewadarsSkill", prms);

			return dset;
		}
		
public string InsertSewadarsSkillAsTask(Int32? sewadar_id, 
		                                            Int16? skill_id, 
		                                            Int16? skill_sq)
		{
			List<SqlParameter> prms = InsertSewadarsSkill_Params(sewadar_id, skill_id, skill_sq);
			return gps("InsertSewadarsSkill", prms);

		}
		
		
		
private List<SqlParameter> InsertSewadarsTransfer_Params(Int32? satsang_centre_id, 
		                                                            String sewadar_grno, 
		                                                            DateTime? effective_dt, 
		                                                            Int16? old_department_id, 
		                                                            Int16? old_sub_department_id, 
		                                                            Int16? department_id, 
		                                                            Int16? sub_department_id, 
		                                                            String remarks)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("satsang_centre_id", satsang_centre_id, INT, IN, p);
			csp("sewadar_grno", sewadar_grno, CHAR, IN, p);
			csp("effective_dt", effective_dt, SMALLDATETIME, IN, p);
			csp("old_department_id", old_department_id, SMALLINT, IN, p);
			csp("old_sub_department_id", old_sub_department_id, SMALLINT, IN, p);
			csp("department_id", department_id, SMALLINT, IN, p);
			csp("sub_department_id", sub_department_id, SMALLINT, IN, p);
			csp("remarks", remarks, VARCHAR, IN, p);
			return p;
		}
		
public DataSet InsertSewadarsTransfer(Int32? satsang_centre_id, 
		                                            String sewadar_grno, 
		                                            DateTime? effective_dt, 
		                                            Int16? old_department_id, 
		                                            Int16? old_sub_department_id, 
		                                            Int16? department_id, 
		                                            Int16? sub_department_id, 
		                                            String remarks)
		{
			List<SqlParameter> prms = InsertSewadarsTransfer_Params(satsang_centre_id, sewadar_grno, effective_dt, old_department_id, old_sub_department_id, department_id, sub_department_id, remarks);
			DataSet dset = esp("InsertSewadarsTransfer", prms);

			return dset;
		}
		
public string InsertSewadarsTransferAsTask(Int32? satsang_centre_id, 
		                                                String sewadar_grno, 
		                                                DateTime? effective_dt, 
		                                                Int16? old_department_id, 
		                                                Int16? old_sub_department_id, 
		                                                Int16? department_id, 
		                                                Int16? sub_department_id, 
		                                                String remarks)
		{
			List<SqlParameter> prms = InsertSewadarsTransfer_Params(satsang_centre_id, sewadar_grno, effective_dt, old_department_id, old_sub_department_id, department_id, sub_department_id, remarks);
			return gps("InsertSewadarsTransfer", prms);

		}
		
		
		
private List<SqlParameter> InsertSewadarWiseSewaSummarie_Params(Int32? sewa_id, 
		                                                                    Int32? satsang_centre_id, 
		                                                                    String sewadar_grno, 
		                                                                    Decimal? present_cnt, 
		                                                                    Decimal? exempt_cnt, 
		                                                                    Decimal? leave_cnt, 
		                                                                    Decimal? absent_cnt, 
		                                                                    String is_system_recorded)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("sewa_id", sewa_id, INT, IN, p);
			csp("satsang_centre_id", satsang_centre_id, INT, IN, p);
			csp("sewadar_grno", sewadar_grno, CHAR, IN, p);
			csp("present_cnt", present_cnt, DECIMAL, IN, p);
			csp("exempt_cnt", exempt_cnt, DECIMAL, IN, p);
			csp("leave_cnt", leave_cnt, DECIMAL, IN, p);
			csp("absent_cnt", absent_cnt, DECIMAL, IN, p);
			csp("is_system_recorded", is_system_recorded, VARCHAR, IN, p);
			return p;
		}
		
public DataSet InsertSewadarWiseSewaSummarie(Int32? sewa_id, 
		                                                Int32? satsang_centre_id, 
		                                                String sewadar_grno, 
		                                                Decimal? present_cnt, 
		                                                Decimal? exempt_cnt, 
		                                                Decimal? leave_cnt, 
		                                                Decimal? absent_cnt, 
		                                                String is_system_recorded)
		{
			List<SqlParameter> prms = InsertSewadarWiseSewaSummarie_Params(sewa_id, satsang_centre_id, sewadar_grno, present_cnt, exempt_cnt, leave_cnt, absent_cnt, is_system_recorded);
			DataSet dset = esp("InsertSewadarWiseSewaSummarie", prms);

			return dset;
		}
		
public string InsertSewadarWiseSewaSummarieAsTask(Int32? sewa_id, 
		                                                        Int32? satsang_centre_id, 
		                                                        String sewadar_grno, 
		                                                        Decimal? present_cnt, 
		                                                        Decimal? exempt_cnt, 
		                                                        Decimal? leave_cnt, 
		                                                        Decimal? absent_cnt, 
		                                                        String is_system_recorded)
		{
			List<SqlParameter> prms = InsertSewadarWiseSewaSummarie_Params(sewa_id, satsang_centre_id, sewadar_grno, present_cnt, exempt_cnt, leave_cnt, absent_cnt, is_system_recorded);
			return gps("InsertSewadarWiseSewaSummarie", prms);

		}
		
		
		
private List<SqlParameter> InsertSewaExemption_Params(ref Int16 sewa_exemption_id, 
		                                                            String sewa_exemption_nm, 
		                                                            String sewa_exemption_type, 
		                                                            String sewa_applicability, 
		                                                            String is_computed, 
		                                                            DateTime? effective_from, 
		                                                            DateTime? effective_till)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("sewa_exemption_id", sewa_exemption_id, SMALLINT, INOUT, p);
			csp("sewa_exemption_nm", sewa_exemption_nm, VARCHAR, IN, p);
			csp("sewa_exemption_type", sewa_exemption_type, VARCHAR, IN, p);
			csp("sewa_applicability", sewa_applicability, VARCHAR, IN, p);
			csp("is_computed", is_computed, VARCHAR, IN, p);
			csp("effective_from", effective_from, DATETIME, IN, p);
			csp("effective_till", effective_till, DATETIME, IN, p);
			return p;
		}
		
public DataSet InsertSewaExemption(ref Int16 sewa_exemption_id, 
		                                        String sewa_exemption_nm, 
		                                        String sewa_exemption_type, 
		                                        String sewa_applicability, 
		                                        String is_computed, 
		                                        DateTime? effective_from, 
		                                        DateTime? effective_till)
		{
			List<SqlParameter> prms = InsertSewaExemption_Params(ref sewa_exemption_id, sewa_exemption_nm, sewa_exemption_type, sewa_applicability, is_computed, effective_from, effective_till);
			DataSet dset = esp("InsertSewaExemption", prms);
			sewa_exemption_id = (System.Int16)prms.FirstOrDefault(p => p.ParameterName == "sewa_exemption_id").Value;

			return dset;
		}
		
public string InsertSewaExemptionAsTask(ref Int16 sewa_exemption_id, 
		                                            String sewa_exemption_nm, 
		                                            String sewa_exemption_type, 
		                                            String sewa_applicability, 
		                                            String is_computed, 
		                                            DateTime? effective_from, 
		                                            DateTime? effective_till)
		{
			List<SqlParameter> prms = InsertSewaExemption_Params(ref sewa_exemption_id, sewa_exemption_nm, sewa_exemption_type, sewa_applicability, is_computed, effective_from, effective_till);
			return gps("InsertSewaExemption", prms);

		}
		
		
		
private List<SqlParameter> InsertSewaExemptionsApplicableSewa_Params(Int16? sewa_exemption_id, 
		                                                                        Int32? sewa_id, 
		                                                                        Decimal? exemption_days)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("sewa_exemption_id", sewa_exemption_id, SMALLINT, IN, p);
			csp("sewa_id", sewa_id, INT, IN, p);
			csp("exemption_days", exemption_days, DECIMAL, IN, p);
			return p;
		}
		
public DataSet InsertSewaExemptionsApplicableSewa(Int16? sewa_exemption_id, 
		                                                        Int32? sewa_id, 
		                                                        Decimal? exemption_days)
		{
			List<SqlParameter> prms = InsertSewaExemptionsApplicableSewa_Params(sewa_exemption_id, sewa_id, exemption_days);
			DataSet dset = esp("InsertSewaExemptionsApplicableSewa", prms);

			return dset;
		}
		
public string InsertSewaExemptionsApplicableSewaAsTask(Int16? sewa_exemption_id, 
		                                                            Int32? sewa_id, 
		                                                            Decimal? exemption_days)
		{
			List<SqlParameter> prms = InsertSewaExemptionsApplicableSewa_Params(sewa_exemption_id, sewa_id, exemption_days);
			return gps("InsertSewaExemptionsApplicableSewa", prms);

		}
		
		
		
private List<SqlParameter> InsertSewasPeriod_Params(Int32? sewa_id, 
		                                                        DateTime? start_dt, 
		                                                        DateTime? finish_dt)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("sewa_id", sewa_id, INT, IN, p);
			csp("start_dt", start_dt, SMALLDATETIME, IN, p);
			csp("finish_dt", finish_dt, SMALLDATETIME, IN, p);
			return p;
		}
		
public DataSet InsertSewasPeriod(Int32? sewa_id, 
		                                    DateTime? start_dt, 
		                                    DateTime? finish_dt)
		{
			List<SqlParameter> prms = InsertSewasPeriod_Params(sewa_id, start_dt, finish_dt);
			DataSet dset = esp("InsertSewasPeriod", prms);

			return dset;
		}
		
public string InsertSewasPeriodAsTask(Int32? sewa_id, 
		                                            DateTime? start_dt, 
		                                            DateTime? finish_dt)
		{
			List<SqlParameter> prms = InsertSewasPeriod_Params(sewa_id, start_dt, finish_dt);
			return gps("InsertSewasPeriod", prms);

		}
		
		
		
private List<SqlParameter> InsertSewasSatsangCentre_Params(Int32? sewa_id, 
		                                                                Int32? satsang_centre_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("sewa_id", sewa_id, INT, IN, p);
			csp("satsang_centre_id", satsang_centre_id, INT, IN, p);
			return p;
		}
		
public DataSet InsertSewasSatsangCentre(Int32? sewa_id, 
		                                            Int32? satsang_centre_id)
		{
			List<SqlParameter> prms = InsertSewasSatsangCentre_Params(sewa_id, satsang_centre_id);
			DataSet dset = esp("InsertSewasSatsangCentre", prms);

			return dset;
		}
		
public string InsertSewasSatsangCentreAsTask(Int32? sewa_id, 
		                                                Int32? satsang_centre_id)
		{
			List<SqlParameter> prms = InsertSewasSatsangCentre_Params(sewa_id, satsang_centre_id);
			return gps("InsertSewasSatsangCentre", prms);

		}
		
		
		
private List<SqlParameter> InsertSewasSewaShift_Params(Int32? sewa_id, 
		                                                            String sewa_shift, 
		                                                            Int16? sewa_shift_sq, 
		                                                            Int16? credit_cnt, 
		                                                            Int16? unit_cnt)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("sewa_id", sewa_id, INT, IN, p);
			csp("sewa_shift", sewa_shift, VARCHAR, IN, p);
			csp("sewa_shift_sq", sewa_shift_sq, SMALLINT, IN, p);
			csp("credit_cnt", credit_cnt, SMALLINT, IN, p);
			csp("unit_cnt", unit_cnt, SMALLINT, IN, p);
			return p;
		}
		
public DataSet InsertSewasSewaShift(Int32? sewa_id, 
		                                        String sewa_shift, 
		                                        Int16? sewa_shift_sq, 
		                                        Int16? credit_cnt, 
		                                        Int16? unit_cnt)
		{
			List<SqlParameter> prms = InsertSewasSewaShift_Params(sewa_id, sewa_shift, sewa_shift_sq, credit_cnt, unit_cnt);
			DataSet dset = esp("InsertSewasSewaShift", prms);

			return dset;
		}
		
public string InsertSewasSewaShiftAsTask(Int32? sewa_id, 
		                                            String sewa_shift, 
		                                            Int16? sewa_shift_sq, 
		                                            Int16? credit_cnt, 
		                                            Int16? unit_cnt)
		{
			List<SqlParameter> prms = InsertSewasSewaShift_Params(sewa_id, sewa_shift, sewa_shift_sq, credit_cnt, unit_cnt);
			return gps("InsertSewasSewaShift", prms);

		}
		
		
		
private List<SqlParameter> InsertSewasSewaShiftCombination_Params(Int32? sewa_id, 
		                                                                        String recorded_sewa_shift, 
		                                                                        String recording_sewa_shift)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("sewa_id", sewa_id, INT, IN, p);
			csp("recorded_sewa_shift", recorded_sewa_shift, VARCHAR, IN, p);
			csp("recording_sewa_shift", recording_sewa_shift, VARCHAR, IN, p);
			return p;
		}
		
public DataSet InsertSewasSewaShiftCombination(Int32? sewa_id, 
		                                                    String recorded_sewa_shift, 
		                                                    String recording_sewa_shift)
		{
			List<SqlParameter> prms = InsertSewasSewaShiftCombination_Params(sewa_id, recorded_sewa_shift, recording_sewa_shift);
			DataSet dset = esp("InsertSewasSewaShiftCombination", prms);

			return dset;
		}
		
public string InsertSewasSewaShiftCombinationAsTask(Int32? sewa_id, 
		                                                        String recorded_sewa_shift, 
		                                                        String recording_sewa_shift)
		{
			List<SqlParameter> prms = InsertSewasSewaShiftCombination_Params(sewa_id, recorded_sewa_shift, recording_sewa_shift);
			return gps("InsertSewasSewaShiftCombination", prms);

		}
		
		
		
private List<SqlParameter> InsertSewaTeam_Params(ref Int32 sewa_team_id, 
		                                                    String sewa_team_nm, 
		                                                    String team_description, 
		                                                    Int32? sewa_id, 
		                                                    DateTime? acceptance_ts)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("sewa_team_id", sewa_team_id, INT, INOUT, p);
			csp("sewa_team_nm", sewa_team_nm, VARCHAR, IN, p);
			csp("team_description", team_description, VARCHAR, IN, p);
			csp("sewa_id", sewa_id, INT, IN, p);
			csp("acceptance_ts", acceptance_ts, SMALLDATETIME, IN, p);
			return p;
		}
		
public DataSet InsertSewaTeam(ref Int32 sewa_team_id, 
		                                    String sewa_team_nm, 
		                                    String team_description, 
		                                    Int32? sewa_id, 
		                                    DateTime? acceptance_ts)
		{
			List<SqlParameter> prms = InsertSewaTeam_Params(ref sewa_team_id, sewa_team_nm, team_description, sewa_id, acceptance_ts);
			DataSet dset = esp("InsertSewaTeam", prms);
			sewa_team_id = (System.Int32)prms.FirstOrDefault(p => p.ParameterName == "sewa_team_id").Value;

			return dset;
		}
		
public string InsertSewaTeamAsTask(ref Int32 sewa_team_id, 
		                                        String sewa_team_nm, 
		                                        String team_description, 
		                                        Int32? sewa_id, 
		                                        DateTime? acceptance_ts)
		{
			List<SqlParameter> prms = InsertSewaTeam_Params(ref sewa_team_id, sewa_team_nm, team_description, sewa_id, acceptance_ts);
			return gps("InsertSewaTeam", prms);

		}
		
		
		
private List<SqlParameter> InsertSewaTeamsTxnT_Params(Int32? sewa_team_id, 
		                                                            DateTime? attendance_dt)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("sewa_team_id", sewa_team_id, INT, IN, p);
			csp("attendance_dt", attendance_dt, SMALLDATETIME, IN, p);
			return p;
		}
		
public DataSet InsertSewaTeamsTxnT(Int32? sewa_team_id, 
		                                        DateTime? attendance_dt)
		{
			List<SqlParameter> prms = InsertSewaTeamsTxnT_Params(sewa_team_id, attendance_dt);
			DataSet dset = esp("InsertSewaTeamsTxnT", prms);

			return dset;
		}
		
public string InsertSewaTeamsTxnTAsTask(Int32? sewa_team_id, 
		                                            DateTime? attendance_dt)
		{
			List<SqlParameter> prms = InsertSewaTeamsTxnT_Params(sewa_team_id, attendance_dt);
			return gps("InsertSewaTeamsTxnT", prms);

		}
		
		
		
private List<SqlParameter> InsertSewaTeamWiseSewadar_Params(Int32? sewa_team_id, 
		                                                                Int32? serial_id, 
		                                                                Int32? satsang_centre_id, 
		                                                                String sewadar_grno, 
		                                                                DateTime? transfer_in_dt, 
		                                                                DateTime? transfer_out_dt)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("sewa_team_id", sewa_team_id, INT, IN, p);
			csp("serial_id", serial_id, INT, IN, p);
			csp("satsang_centre_id", satsang_centre_id, INT, IN, p);
			csp("sewadar_grno", sewadar_grno, CHAR, IN, p);
			csp("transfer_in_dt", transfer_in_dt, SMALLDATETIME, IN, p);
			csp("transfer_out_dt", transfer_out_dt, SMALLDATETIME, IN, p);
			return p;
		}
		
public DataSet InsertSewaTeamWiseSewadar(Int32? sewa_team_id, 
		                                            Int32? serial_id, 
		                                            Int32? satsang_centre_id, 
		                                            String sewadar_grno, 
		                                            DateTime? transfer_in_dt, 
		                                            DateTime? transfer_out_dt)
		{
			List<SqlParameter> prms = InsertSewaTeamWiseSewadar_Params(sewa_team_id, serial_id, satsang_centre_id, sewadar_grno, transfer_in_dt, transfer_out_dt);
			DataSet dset = esp("InsertSewaTeamWiseSewadar", prms);

			return dset;
		}
		
public string InsertSewaTeamWiseSewadarAsTask(Int32? sewa_team_id, 
		                                                    Int32? serial_id, 
		                                                    Int32? satsang_centre_id, 
		                                                    String sewadar_grno, 
		                                                    DateTime? transfer_in_dt, 
		                                                    DateTime? transfer_out_dt)
		{
			List<SqlParameter> prms = InsertSewaTeamWiseSewadar_Params(sewa_team_id, serial_id, satsang_centre_id, sewadar_grno, transfer_in_dt, transfer_out_dt);
			return gps("InsertSewaTeamWiseSewadar", prms);

		}
		
		
		
private List<SqlParameter> InsertSpeakers_Params(Int32? speaker_id, 
		                                                    String speaker_type, 
		                                                    Int32? satsang_centre_id, 
		                                                    String speaker_status, 
		                                                    DateTime? speaker_status_dtm)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("speaker_id", speaker_id, INT, IN, p);
			csp("speaker_type", speaker_type, VARCHAR, IN, p);
			csp("satsang_centre_id", satsang_centre_id, INT, IN, p);
			csp("speaker_status", speaker_status, VARCHAR, IN, p);
			csp("speaker_status_dtm", speaker_status_dtm, SMALLDATETIME, IN, p);
			return p;
		}
		
public DataSet InsertSpeakers(Int32? speaker_id, 
		                                    String speaker_type, 
		                                    Int32? satsang_centre_id, 
		                                    String speaker_status, 
		                                    DateTime? speaker_status_dtm)
		{
			List<SqlParameter> prms = InsertSpeakers_Params(speaker_id, speaker_type, satsang_centre_id, speaker_status, speaker_status_dtm);
			DataSet dset = esp("InsertSpeakers", prms);

			return dset;
		}
		
public string InsertSpeakersAsTask(Int32? speaker_id, 
		                                        String speaker_type, 
		                                        Int32? satsang_centre_id, 
		                                        String speaker_status, 
		                                        DateTime? speaker_status_dtm)
		{
			List<SqlParameter> prms = InsertSpeakers_Params(speaker_id, speaker_type, satsang_centre_id, speaker_status, speaker_status_dtm);
			return gps("InsertSpeakers", prms);

		}
		
		
		
private List<SqlParameter> InsertSpeakersApprovalsRenewals_Params(Int32? speaker_id, 
		                                                                        String request_for_speaker_type, 
		                                                                        Boolean? is_approval, 
		                                                                        DateTime? approval_dt, 
		                                                                        DateTime? request_dt, 
		                                                                        String reference_no, 
		                                                                        DateTime? reference_dt, 
		                                                                        String audition_remarks, 
		                                                                        String review_remarks, 
		                                                                        Int32? review_sewadar_id, 
		                                                                        String review_non_sewadar_nm, 
		                                                                        String remarks)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("speaker_id", speaker_id, INT, IN, p);
			csp("request_for_speaker_type", request_for_speaker_type, VARCHAR, IN, p);
			csp("is_approval", is_approval, BIT, IN, p);
			csp("approval_dt", approval_dt, DATE, IN, p);
			csp("request_dt", request_dt, DATE, IN, p);
			csp("reference_no", reference_no, VARCHAR, IN, p);
			csp("reference_dt", reference_dt, DATE, IN, p);
			csp("audition_remarks", audition_remarks, VARCHAR, IN, p);
			csp("review_remarks", review_remarks, VARCHAR, IN, p);
			csp("review_sewadar_id", review_sewadar_id, INT, IN, p);
			csp("review_non_sewadar_nm", review_non_sewadar_nm, VARCHAR, IN, p);
			csp("remarks", remarks, VARCHAR, IN, p);
			return p;
		}
		
public DataSet InsertSpeakersApprovalsRenewals(Int32? speaker_id, 
		                                                    String request_for_speaker_type, 
		                                                    Boolean? is_approval, 
		                                                    DateTime? approval_dt, 
		                                                    DateTime? request_dt, 
		                                                    String reference_no, 
		                                                    DateTime? reference_dt, 
		                                                    String audition_remarks, 
		                                                    String review_remarks, 
		                                                    Int32? review_sewadar_id, 
		                                                    String review_non_sewadar_nm, 
		                                                    String remarks)
		{
			List<SqlParameter> prms = InsertSpeakersApprovalsRenewals_Params(speaker_id, request_for_speaker_type, is_approval, approval_dt, request_dt, reference_no, reference_dt, audition_remarks, review_remarks, review_sewadar_id, review_non_sewadar_nm, remarks);
			DataSet dset = esp("InsertSpeakersApprovalsRenewals", prms);

			return dset;
		}
		
public string InsertSpeakersApprovalsRenewalsAsTask(Int32? speaker_id, 
		                                                        String request_for_speaker_type, 
		                                                        Boolean? is_approval, 
		                                                        DateTime? approval_dt, 
		                                                        DateTime? request_dt, 
		                                                        String reference_no, 
		                                                        DateTime? reference_dt, 
		                                                        String audition_remarks, 
		                                                        String review_remarks, 
		                                                        Int32? review_sewadar_id, 
		                                                        String review_non_sewadar_nm, 
		                                                        String remarks)
		{
			List<SqlParameter> prms = InsertSpeakersApprovalsRenewals_Params(speaker_id, request_for_speaker_type, is_approval, approval_dt, request_dt, reference_no, reference_dt, audition_remarks, review_remarks, review_sewadar_id, review_non_sewadar_nm, remarks);
			return gps("InsertSpeakersApprovalsRenewals", prms);

		}
		
		
		
private List<SqlParameter> InsertSpeakersTrainings_Params(Int32? speaker_id, 
		                                                                String training_for_speaker_type, 
		                                                                DateTime? training_dt, 
		                                                                Boolean? is_attended, 
		                                                                DateTime? request_dt, 
		                                                                String reference_no, 
		                                                                DateTime? reference_dt, 
		                                                                String remarks)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("speaker_id", speaker_id, INT, IN, p);
			csp("training_for_speaker_type", training_for_speaker_type, VARCHAR, IN, p);
			csp("training_dt", training_dt, DATE, IN, p);
			csp("is_attended", is_attended, BIT, IN, p);
			csp("request_dt", request_dt, DATE, IN, p);
			csp("reference_no", reference_no, VARCHAR, IN, p);
			csp("reference_dt", reference_dt, DATE, IN, p);
			csp("remarks", remarks, VARCHAR, IN, p);
			return p;
		}
		
public DataSet InsertSpeakersTrainings(Int32? speaker_id, 
		                                            String training_for_speaker_type, 
		                                            DateTime? training_dt, 
		                                            Boolean? is_attended, 
		                                            DateTime? request_dt, 
		                                            String reference_no, 
		                                            DateTime? reference_dt, 
		                                            String remarks)
		{
			List<SqlParameter> prms = InsertSpeakersTrainings_Params(speaker_id, training_for_speaker_type, training_dt, is_attended, request_dt, reference_no, reference_dt, remarks);
			DataSet dset = esp("InsertSpeakersTrainings", prms);

			return dset;
		}
		
public string InsertSpeakersTrainingsAsTask(Int32? speaker_id, 
		                                                String training_for_speaker_type, 
		                                                DateTime? training_dt, 
		                                                Boolean? is_attended, 
		                                                DateTime? request_dt, 
		                                                String reference_no, 
		                                                DateTime? reference_dt, 
		                                                String remarks)
		{
			List<SqlParameter> prms = InsertSpeakersTrainings_Params(speaker_id, training_for_speaker_type, training_dt, is_attended, request_dt, reference_no, reference_dt, remarks);
			return gps("InsertSpeakersTrainings", prms);

		}
		
		
		
private List<SqlParameter> InsertSubDepartment_Params(ref Int16 sub_department_id, 
		                                                            Int16? department_id, 
		                                                            String sub_department_cd, 
		                                                            String sub_department_nm, 
		                                                            String sub_remarks)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("sub_department_id", sub_department_id, SMALLINT, INOUT, p);
			csp("department_id", department_id, SMALLINT, IN, p);
			csp("sub_department_cd", sub_department_cd, VARCHAR, IN, p);
			csp("sub_department_nm", sub_department_nm, VARCHAR, IN, p);
			csp("sub_remarks", sub_remarks, VARCHAR, IN, p);
			return p;
		}
		
public DataSet InsertSubDepartment(ref Int16 sub_department_id, 
		                                        Int16? department_id, 
		                                        String sub_department_cd, 
		                                        String sub_department_nm, 
		                                        String sub_remarks)
		{
			List<SqlParameter> prms = InsertSubDepartment_Params(ref sub_department_id, department_id, sub_department_cd, sub_department_nm, sub_remarks);
			DataSet dset = esp("InsertSubDepartment", prms);
			sub_department_id = (System.Int16)prms.FirstOrDefault(p => p.ParameterName == "sub_department_id").Value;

			return dset;
		}
		
public string InsertSubDepartmentAsTask(ref Int16 sub_department_id, 
		                                            Int16? department_id, 
		                                            String sub_department_cd, 
		                                            String sub_department_nm, 
		                                            String sub_remarks)
		{
			List<SqlParameter> prms = InsertSubDepartment_Params(ref sub_department_id, department_id, sub_department_cd, sub_department_nm, sub_remarks);
			return gps("InsertSubDepartment", prms);

		}
		
		
		
private List<SqlParameter> InsertSubDepartmentsSatsangCentre_Params(Int16? sub_department_id, 
		                                                                        Int32? satsang_centre_id, 
		                                                                        DateTime? effective_from, 
		                                                                        DateTime? effective_till)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("sub_department_id", sub_department_id, SMALLINT, IN, p);
			csp("satsang_centre_id", satsang_centre_id, INT, IN, p);
			csp("effective_from", effective_from, DATETIME, IN, p);
			csp("effective_till", effective_till, DATETIME, IN, p);
			return p;
		}
		
public DataSet InsertSubDepartmentsSatsangCentre(Int16? sub_department_id, 
		                                                    Int32? satsang_centre_id, 
		                                                    DateTime? effective_from, 
		                                                    DateTime? effective_till)
		{
			List<SqlParameter> prms = InsertSubDepartmentsSatsangCentre_Params(sub_department_id, satsang_centre_id, effective_from, effective_till);
			DataSet dset = esp("InsertSubDepartmentsSatsangCentre", prms);

			return dset;
		}
		
public string InsertSubDepartmentsSatsangCentreAsTask(Int16? sub_department_id, 
		                                                            Int32? satsang_centre_id, 
		                                                            DateTime? effective_from, 
		                                                            DateTime? effective_till)
		{
			List<SqlParameter> prms = InsertSubDepartmentsSatsangCentre_Params(sub_department_id, satsang_centre_id, effective_from, effective_till);
			return gps("InsertSubDepartmentsSatsangCentre", prms);

		}
		
		
		
private List<SqlParameter> InsertSystemInformationCodes_Params(String system_info_cd, 
		                                                                    String system_info_nm, 
		                                                                    String remarks)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("system_info_cd", system_info_cd, VARCHAR, IN, p);
			csp("system_info_nm", system_info_nm, VARCHAR, IN, p);
			csp("remarks", remarks, VARCHAR, IN, p);
			return p;
		}
		
public DataSet InsertSystemInformationCodes(String system_info_cd, 
		                                                String system_info_nm, 
		                                                String remarks)
		{
			List<SqlParameter> prms = InsertSystemInformationCodes_Params(system_info_cd, system_info_nm, remarks);
			DataSet dset = esp("InsertSystemInformationCodes", prms);

			return dset;
		}
		
public string InsertSystemInformationCodesAsTask(String system_info_cd, 
		                                                    String system_info_nm, 
		                                                    String remarks)
		{
			List<SqlParameter> prms = InsertSystemInformationCodes_Params(system_info_cd, system_info_nm, remarks);
			return gps("InsertSystemInformationCodes", prms);

		}
		
		
		
private List<SqlParameter> InsertSystemInformationValues_Params(String system_info_cd, 
		                                                                    Int32? value_int, 
		                                                                    String value_varchar, 
		                                                                    DateTime? value_dt, 
		                                                                    DateTime? value_dtm)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("system_info_cd", system_info_cd, VARCHAR, IN, p);
			csp("value_int", value_int, INT, IN, p);
			csp("value_varchar", value_varchar, VARCHAR, IN, p);
			csp("value_dt", value_dt, DATETIME, IN, p);
			csp("value_dtm", value_dtm, DATETIME, IN, p);
			return p;
		}
		
public DataSet InsertSystemInformationValues(String system_info_cd, 
		                                                Int32? value_int, 
		                                                String value_varchar, 
		                                                DateTime? value_dt, 
		                                                DateTime? value_dtm)
		{
			List<SqlParameter> prms = InsertSystemInformationValues_Params(system_info_cd, value_int, value_varchar, value_dt, value_dtm);
			DataSet dset = esp("InsertSystemInformationValues", prms);

			return dset;
		}
		
public string InsertSystemInformationValuesAsTask(String system_info_cd, 
		                                                        Int32? value_int, 
		                                                        String value_varchar, 
		                                                        DateTime? value_dt, 
		                                                        DateTime? value_dtm)
		{
			List<SqlParameter> prms = InsertSystemInformationValues_Params(system_info_cd, value_int, value_varchar, value_dt, value_dtm);
			return gps("InsertSystemInformationValues", prms);

		}
		
		
		
private List<SqlParameter> InsertTeamWiseDailyAttendance_Params(Int32? sewa_team_id, 
		                                                                    Int32? serial_id, 
		                                                                    DateTime? attendance_dt, 
		                                                                    String is_p, 
		                                                                    String is_e, 
		                                                                    String is_l, 
		                                                                    String is_a, 
		                                                                    Int16? sewa_exemption_id, 
		                                                                    String is_scanned)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("sewa_team_id", sewa_team_id, INT, IN, p);
			csp("serial_id", serial_id, INT, IN, p);
			csp("attendance_dt", attendance_dt, SMALLDATETIME, IN, p);
			csp("is_p", is_p, VARCHAR, IN, p);
			csp("is_e", is_e, VARCHAR, IN, p);
			csp("is_l", is_l, VARCHAR, IN, p);
			csp("is_a", is_a, VARCHAR, IN, p);
			csp("sewa_exemption_id", sewa_exemption_id, SMALLINT, IN, p);
			csp("is_scanned", is_scanned, VARCHAR, IN, p);
			return p;
		}
		
public DataSet InsertTeamWiseDailyAttendance(Int32? sewa_team_id, 
		                                                Int32? serial_id, 
		                                                DateTime? attendance_dt, 
		                                                String is_p, 
		                                                String is_e, 
		                                                String is_l, 
		                                                String is_a, 
		                                                Int16? sewa_exemption_id, 
		                                                String is_scanned)
		{
			List<SqlParameter> prms = InsertTeamWiseDailyAttendance_Params(sewa_team_id, serial_id, attendance_dt, is_p, is_e, is_l, is_a, sewa_exemption_id, is_scanned);
			DataSet dset = esp("InsertTeamWiseDailyAttendance", prms);

			return dset;
		}
		
public string InsertTeamWiseDailyAttendanceAsTask(Int32? sewa_team_id, 
		                                                        Int32? serial_id, 
		                                                        DateTime? attendance_dt, 
		                                                        String is_p, 
		                                                        String is_e, 
		                                                        String is_l, 
		                                                        String is_a, 
		                                                        Int16? sewa_exemption_id, 
		                                                        String is_scanned)
		{
			List<SqlParameter> prms = InsertTeamWiseDailyAttendance_Params(sewa_team_id, serial_id, attendance_dt, is_p, is_e, is_l, is_a, sewa_exemption_id, is_scanned);
			return gps("InsertTeamWiseDailyAttendance", prms);

		}
		
		
		
private List<SqlParameter> InsertUpdateScannedBadge_Params(Int16? scanning_sub_job_id, 
		                                                                DateTime? controlling_dt, 
		                                                                Int32? satsang_centre_id, 
		                                                                String sewadar_grno, 
		                                                                String cntProcedureNm, 
		                                                                ref String validating_action, 
		                                                                ref String label1, 
		                                                                ref Double count1, 
		                                                                ref String label2, 
		                                                                ref Int32 count2, 
		                                                                ref String message)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("scanning_sub_job_id", scanning_sub_job_id, SMALLINT, IN, p);
			csp("controlling_dt", controlling_dt, SMALLDATETIME, IN, p);
			csp("satsang_centre_id", satsang_centre_id, INT, IN, p);
			csp("sewadar_grno", sewadar_grno, CHAR, IN, p);
			csp("cntProcedureNm", cntProcedureNm, VARCHAR, IN, p);
			csp("validating_action", validating_action, VARCHAR, INOUT, p);
			csp("label1", label1, VARCHAR, INOUT, p);
			csp("count1", count1, FLOAT, INOUT, p);
			csp("label2", label2, VARCHAR, INOUT, p);
			csp("count2", count2, INT, INOUT, p);
			csp("message", message, VARCHAR, INOUT, p);
			return p;
		}
		
public DataSet InsertUpdateScannedBadge(Int16? scanning_sub_job_id, 
		                                            DateTime? controlling_dt, 
		                                            Int32? satsang_centre_id, 
		                                            String sewadar_grno, 
		                                            String cntProcedureNm, 
		                                            ref String validating_action, 
		                                            ref String label1, 
		                                            ref Double count1, 
		                                            ref String label2, 
		                                            ref Int32 count2, 
		                                            ref String message)
		{
			List<SqlParameter> prms = InsertUpdateScannedBadge_Params(scanning_sub_job_id, controlling_dt, satsang_centre_id, sewadar_grno, cntProcedureNm, ref validating_action, ref label1, ref count1, ref label2, ref count2, ref message);
			DataSet dset = esp("InsertUpdateScannedBadge", prms);
			validating_action = (System.String)prms.FirstOrDefault(p => p.ParameterName == "validating_action").Value;
			label1 = (System.String)prms.FirstOrDefault(p => p.ParameterName == "label1").Value;
			count1 = (System.Double)prms.FirstOrDefault(p => p.ParameterName == "count1").Value;
			label2 = (System.String)prms.FirstOrDefault(p => p.ParameterName == "label2").Value;
			count2 = (System.Int32)prms.FirstOrDefault(p => p.ParameterName == "count2").Value;
			message = (System.String)prms.FirstOrDefault(p => p.ParameterName == "message").Value;

			return dset;
		}
		
public string InsertUpdateScannedBadgeAsTask(Int16? scanning_sub_job_id, 
		                                                DateTime? controlling_dt, 
		                                                Int32? satsang_centre_id, 
		                                                String sewadar_grno, 
		                                                String cntProcedureNm, 
		                                                ref String validating_action, 
		                                                ref String label1, 
		                                                ref Double count1, 
		                                                ref String label2, 
		                                                ref Int32 count2, 
		                                                ref String message)
		{
			List<SqlParameter> prms = InsertUpdateScannedBadge_Params(scanning_sub_job_id, controlling_dt, satsang_centre_id, sewadar_grno, cntProcedureNm, ref validating_action, ref label1, ref count1, ref label2, ref count2, ref message);
			return gps("InsertUpdateScannedBadge", prms);

		}
		
		
		
private List<SqlParameter> InsertUsersApplicationDetails_Params(String user_id, 
		                                                                    String application_id, 
		                                                                    String user_role_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("user_id", user_id, VARCHAR, IN, p);
			csp("application_id", application_id, CHAR, IN, p);
			csp("user_role_id", user_role_id, VARCHAR, IN, p);
			return p;
		}
		
public DataSet InsertUsersApplicationDetails(String user_id, 
		                                                String application_id, 
		                                                String user_role_id)
		{
			List<SqlParameter> prms = InsertUsersApplicationDetails_Params(user_id, application_id, user_role_id);
			DataSet dset = esp("InsertUsersApplicationDetails", prms);

			return dset;
		}
		
public string InsertUsersApplicationDetailsAsTask(String user_id, 
		                                                        String application_id, 
		                                                        String user_role_id)
		{
			List<SqlParameter> prms = InsertUsersApplicationDetails_Params(user_id, application_id, user_role_id);
			return gps("InsertUsersApplicationDetails", prms);

		}
		
		
		
private List<SqlParameter> InsertWeeklySewaLocation_Params(ref Int32 weekly_sewa_location_id, 
		                                                                String weekly_sewa_location_nm, 
		                                                                Int32? satsang_centre_id, 
		                                                                String remarks, 
		                                                                DateTime? effective_from, 
		                                                                DateTime? effective_till)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("weekly_sewa_location_id", weekly_sewa_location_id, INT, INOUT, p);
			csp("weekly_sewa_location_nm", weekly_sewa_location_nm, VARCHAR, IN, p);
			csp("satsang_centre_id", satsang_centre_id, INT, IN, p);
			csp("remarks", remarks, VARCHAR, IN, p);
			csp("effective_from", effective_from, DATETIME, IN, p);
			csp("effective_till", effective_till, DATETIME, IN, p);
			return p;
		}
		
public DataSet InsertWeeklySewaLocation(ref Int32 weekly_sewa_location_id, 
		                                            String weekly_sewa_location_nm, 
		                                            Int32? satsang_centre_id, 
		                                            String remarks, 
		                                            DateTime? effective_from, 
		                                            DateTime? effective_till)
		{
			List<SqlParameter> prms = InsertWeeklySewaLocation_Params(ref weekly_sewa_location_id, weekly_sewa_location_nm, satsang_centre_id, remarks, effective_from, effective_till);
			DataSet dset = esp("InsertWeeklySewaLocation", prms);
			weekly_sewa_location_id = (System.Int32)prms.FirstOrDefault(p => p.ParameterName == "weekly_sewa_location_id").Value;

			return dset;
		}
		
public string InsertWeeklySewaLocationAsTask(ref Int32 weekly_sewa_location_id, 
		                                                String weekly_sewa_location_nm, 
		                                                Int32? satsang_centre_id, 
		                                                String remarks, 
		                                                DateTime? effective_from, 
		                                                DateTime? effective_till)
		{
			List<SqlParameter> prms = InsertWeeklySewaLocation_Params(ref weekly_sewa_location_id, weekly_sewa_location_nm, satsang_centre_id, remarks, effective_from, effective_till);
			return gps("InsertWeeklySewaLocation", prms);

		}
		
		
		
private List<SqlParameter> InsUpdateSewadarsAddresseForSewadarDetail_Params(Int32? sewadar_id, 
		                                                                                String address_line_1, 
		                                                                                String address_line_2, 
		                                                                                Int32? post_office_or_city_id, 
		                                                                                String pin_or_zip_code)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("sewadar_id", sewadar_id, INT, IN, p);
			csp("address_line_1", address_line_1, VARCHAR, IN, p);
			csp("address_line_2", address_line_2, VARCHAR, IN, p);
			csp("post_office_or_city_id", post_office_or_city_id, INT, IN, p);
			csp("pin_or_zip_code", pin_or_zip_code, VARCHAR, IN, p);
			return p;
		}
		
public DataSet InsUpdateSewadarsAddresseForSewadarDetail(Int32? sewadar_id, 
		                                                            String address_line_1, 
		                                                            String address_line_2, 
		                                                            Int32? post_office_or_city_id, 
		                                                            String pin_or_zip_code)
		{
			List<SqlParameter> prms = InsUpdateSewadarsAddresseForSewadarDetail_Params(sewadar_id, address_line_1, address_line_2, post_office_or_city_id, pin_or_zip_code);
			DataSet dset = esp("InsUpdateSewadarsAddresseForSewadarDetail", prms);

			return dset;
		}
		
public string InsUpdateSewadarsAddresseForSewadarDetailAsTask(Int32? sewadar_id, 
		                                                                    String address_line_1, 
		                                                                    String address_line_2, 
		                                                                    Int32? post_office_or_city_id, 
		                                                                    String pin_or_zip_code)
		{
			List<SqlParameter> prms = InsUpdateSewadarsAddresseForSewadarDetail_Params(sewadar_id, address_line_1, address_line_2, post_office_or_city_id, pin_or_zip_code);
			return gps("InsUpdateSewadarsAddresseForSewadarDetail", prms);

		}
		
		
		
private List<SqlParameter> InsUpdSewadarsTxnts_Params(Int32? satsang_centre_id, 
		                                                            String sewadar_grno, 
		                                                            Int32? sewa_id, 
		                                                            String screen_id, 
		                                                            Byte[] txn_ts)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("satsang_centre_id", satsang_centre_id, INT, IN, p);
			csp("sewadar_grno", sewadar_grno, CHAR, IN, p);
			csp("sewa_id", sewa_id, INT, IN, p);
			csp("screen_id", screen_id, CHAR, IN, p);
			csp("txn_ts", txn_ts, TIMESTAMP, IN, p);
			return p;
		}
		
public DataSet InsUpdSewadarsTxnts(Int32? satsang_centre_id, 
		                                        String sewadar_grno, 
		                                        Int32? sewa_id, 
		                                        String screen_id, 
		                                        Byte[] txn_ts)
		{
			List<SqlParameter> prms = InsUpdSewadarsTxnts_Params(satsang_centre_id, sewadar_grno, sewa_id, screen_id, txn_ts);
			DataSet dset = esp("InsUpdSewadarsTxnts", prms);

			return dset;
		}
		
public string InsUpdSewadarsTxntsAsTask(Int32? satsang_centre_id, 
		                                            String sewadar_grno, 
		                                            Int32? sewa_id, 
		                                            String screen_id, 
		                                            Byte[] txn_ts)
		{
			List<SqlParameter> prms = InsUpdSewadarsTxnts_Params(satsang_centre_id, sewadar_grno, sewa_id, screen_id, txn_ts);
			return gps("InsUpdSewadarsTxnts", prms);

		}
		
		
		
private List<SqlParameter> IntersectGenericSewadarListsSewadar_Params(Int32? sewadar_list_id, 
		                                                                            Int32? other_sewadar_list_id, 
		                                                                            Boolean? is_delete_list)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("sewadar_list_id", sewadar_list_id, INT, IN, p);
			csp("other_sewadar_list_id", other_sewadar_list_id, INT, IN, p);
			csp("is_delete_list", is_delete_list, BIT, IN, p);
			return p;
		}
		
public DataSet IntersectGenericSewadarListsSewadar(Int32? sewadar_list_id, 
		                                                        Int32? other_sewadar_list_id, 
		                                                        Boolean? is_delete_list)
		{
			List<SqlParameter> prms = IntersectGenericSewadarListsSewadar_Params(sewadar_list_id, other_sewadar_list_id, is_delete_list);
			DataSet dset = esp("IntersectGenericSewadarListsSewadar", prms);

			return dset;
		}
		
public string IntersectGenericSewadarListsSewadarAsTask(Int32? sewadar_list_id, 
		                                                            Int32? other_sewadar_list_id, 
		                                                            Boolean? is_delete_list)
		{
			List<SqlParameter> prms = IntersectGenericSewadarListsSewadar_Params(sewadar_list_id, other_sewadar_list_id, is_delete_list);
			return gps("IntersectGenericSewadarListsSewadar", prms);

		}
		
		
		
private List<SqlParameter> IsAnActiveStatus_Params(String p_status)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_status", p_status, VARCHAR, IN, p);
			return p;
		}
		
public System.String IsAnActiveStatus(String p_status)
		{
			List<SqlParameter> prms = IsAnActiveStatus_Params(p_status);
			string commaSeparatedParameters = ObjDBManager.GetCommaSeparatedParameters(prms);
			Object obj = ObjDBManager.ExecuteScalar("SELECT dbo.IsAnActiveStatus(" + commaSeparatedParameters + ")");

			return obj == null || obj == DBNull.Value ? null : (System.String)obj;
		}
		
		
		
private List<SqlParameter> IsGenericAttributeInUse_Params(Int16? attribute_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("attribute_id", attribute_id, SMALLINT, IN, p);
			return p;
		}
		
public System.String IsGenericAttributeInUse(Int16? attribute_id)
		{
			List<SqlParameter> prms = IsGenericAttributeInUse_Params(attribute_id);
			string commaSeparatedParameters = ObjDBManager.GetCommaSeparatedParameters(prms);
			Object obj = ObjDBManager.ExecuteScalar("SELECT dbo.IsGenericAttributeInUse(" + commaSeparatedParameters + ")");

			return obj == null || obj == DBNull.Value ? null : (System.String)obj;
		}
		
		
		
private List<SqlParameter> LockSewa_Params(Int32? p_sewa_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_sewa_id", p_sewa_id, INT, IN, p);
			return p;
		}
		
public DataSet LockSewa(Int32? p_sewa_id)
		{
			List<SqlParameter> prms = LockSewa_Params(p_sewa_id);
			DataSet dset = esp("LockSewa", prms);

			return dset;
		}
		
public string LockSewaAsTask(Int32? p_sewa_id)
		{
			List<SqlParameter> prms = LockSewa_Params(p_sewa_id);
			return gps("LockSewa", prms);

		}
		
		
		
private List<SqlParameter> LogOperation_Params(Int32? p_session_id, 
		                                                    String p_package_id, 
		                                                    String p_application_id, 
		                                                    Int32? p_user_no, 
		                                                    String p_user_role_id, 
		                                                    String p_operation, 
		                                                    String p_screen_id, 
		                                                    String p_object_id, 
		                                                    Int32? p_sewadar_id, 
		                                                    Int32? p_sewa_id, 
		                                                    DateTime? p_transaction_dt, 
		                                                    Int32? p_satsang_centre_id, 
		                                                    String p_sewadar_grno)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_session_id", p_session_id, INT, IN, p);
			csp("p_package_id", p_package_id, CHAR, IN, p);
			csp("p_application_id", p_application_id, CHAR, IN, p);
			csp("p_user_no", p_user_no, INT, IN, p);
			csp("p_user_role_id", p_user_role_id, VARCHAR, IN, p);
			csp("p_operation", p_operation, CHAR, IN, p);
			csp("p_screen_id", p_screen_id, CHAR, IN, p);
			csp("p_object_id", p_object_id, VARCHAR, IN, p);
			csp("p_sewadar_id", p_sewadar_id, INT, IN, p);
			csp("p_sewa_id", p_sewa_id, INT, IN, p);
			csp("p_transaction_dt", p_transaction_dt, DATETIME, IN, p);
			csp("p_satsang_centre_id", p_satsang_centre_id, INT, IN, p);
			csp("p_sewadar_grno", p_sewadar_grno, CHAR, IN, p);
			return p;
		}
		
public DataSet LogOperation(Int32? p_session_id, 
		                                String p_package_id, 
		                                String p_application_id, 
		                                Int32? p_user_no, 
		                                String p_user_role_id, 
		                                String p_operation, 
		                                String p_screen_id, 
		                                String p_object_id, 
		                                Int32? p_sewadar_id, 
		                                Int32? p_sewa_id, 
		                                DateTime? p_transaction_dt, 
		                                Int32? p_satsang_centre_id, 
		                                String p_sewadar_grno)
		{
			List<SqlParameter> prms = LogOperation_Params(p_session_id, p_package_id, p_application_id, p_user_no, p_user_role_id, p_operation, p_screen_id, p_object_id, p_sewadar_id, p_sewa_id, p_transaction_dt, p_satsang_centre_id, p_sewadar_grno);
			DataSet dset = esp("LogOperation", prms);

			return dset;
		}
		
public string LogOperationAsTask(Int32? p_session_id, 
		                                    String p_package_id, 
		                                    String p_application_id, 
		                                    Int32? p_user_no, 
		                                    String p_user_role_id, 
		                                    String p_operation, 
		                                    String p_screen_id, 
		                                    String p_object_id, 
		                                    Int32? p_sewadar_id, 
		                                    Int32? p_sewa_id, 
		                                    DateTime? p_transaction_dt, 
		                                    Int32? p_satsang_centre_id, 
		                                    String p_sewadar_grno)
		{
			List<SqlParameter> prms = LogOperation_Params(p_session_id, p_package_id, p_application_id, p_user_no, p_user_role_id, p_operation, p_screen_id, p_object_id, p_sewadar_id, p_sewa_id, p_transaction_dt, p_satsang_centre_id, p_sewadar_grno);
			return gps("LogOperation", prms);

		}
		
		
		
private List<SqlParameter> MakeAreaWiseSewaTeams_Params(Int32? p_satsang_centre_id, 
		                                                            Int32? p_sewa_id, 
		                                                            Int32? p_sewadar_list_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_satsang_centre_id", p_satsang_centre_id, INT, IN, p);
			csp("p_sewa_id", p_sewa_id, INT, IN, p);
			csp("p_sewadar_list_id", p_sewadar_list_id, INT, IN, p);
			return p;
		}
		
public DataSet MakeAreaWiseSewaTeams(Int32? p_satsang_centre_id, 
		                                        Int32? p_sewa_id, 
		                                        Int32? p_sewadar_list_id)
		{
			List<SqlParameter> prms = MakeAreaWiseSewaTeams_Params(p_satsang_centre_id, p_sewa_id, p_sewadar_list_id);
			DataSet dset = esp("MakeAreaWiseSewaTeams", prms);

			return dset;
		}
		
public string MakeAreaWiseSewaTeamsAsTask(Int32? p_satsang_centre_id, 
		                                                Int32? p_sewa_id, 
		                                                Int32? p_sewadar_list_id)
		{
			List<SqlParameter> prms = MakeAreaWiseSewaTeams_Params(p_satsang_centre_id, p_sewa_id, p_sewadar_list_id);
			return gps("MakeAreaWiseSewaTeams", prms);

		}
		
		
		
private List<SqlParameter> MakeCamelCase_Params(String p_str)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_str", p_str, VARCHAR, IN, p);
			return p;
		}
		
public System.String MakeCamelCase(String p_str)
		{
			List<SqlParameter> prms = MakeCamelCase_Params(p_str);
			string commaSeparatedParameters = ObjDBManager.GetCommaSeparatedParameters(prms);
			Object obj = ObjDBManager.ExecuteScalar("SELECT dbo.MakeCamelCase(" + commaSeparatedParameters + ")");

			return obj == null || obj == DBNull.Value ? null : (System.String)obj;
		}
		
		
		
private List<SqlParameter> MakeCombinedSewaTeams_Params(Int32? p_satsang_centre_id, 
		                                                            Int32? p_sewa_id, 
		                                                            Int32? p_sewadar_list_id, 
		                                                            String p_department_ids)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_satsang_centre_id", p_satsang_centre_id, INT, IN, p);
			csp("p_sewa_id", p_sewa_id, INT, IN, p);
			csp("p_sewadar_list_id", p_sewadar_list_id, INT, IN, p);
			csp("p_department_ids", p_department_ids, VARCHAR, IN, p);
			return p;
		}
		
public DataSet MakeCombinedSewaTeams(Int32? p_satsang_centre_id, 
		                                        Int32? p_sewa_id, 
		                                        Int32? p_sewadar_list_id, 
		                                        String p_department_ids)
		{
			List<SqlParameter> prms = MakeCombinedSewaTeams_Params(p_satsang_centre_id, p_sewa_id, p_sewadar_list_id, p_department_ids);
			DataSet dset = esp("MakeCombinedSewaTeams", prms);

			return dset;
		}
		
public string MakeCombinedSewaTeamsAsTask(Int32? p_satsang_centre_id, 
		                                                Int32? p_sewa_id, 
		                                                Int32? p_sewadar_list_id, 
		                                                String p_department_ids)
		{
			List<SqlParameter> prms = MakeCombinedSewaTeams_Params(p_satsang_centre_id, p_sewa_id, p_sewadar_list_id, p_department_ids);
			return gps("MakeCombinedSewaTeams", prms);

		}
		
		
		
private List<SqlParameter> MakeGenericAttributesListValuesSqPositive_Params(Int16? attribute_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("attribute_id", attribute_id, SMALLINT, IN, p);
			return p;
		}
		
public DataSet MakeGenericAttributesListValuesSqPositive(Int16? attribute_id)
		{
			List<SqlParameter> prms = MakeGenericAttributesListValuesSqPositive_Params(attribute_id);
			DataSet dset = esp("MakeGenericAttributesListValuesSqPositive", prms);

			return dset;
		}
		
public string MakeGenericAttributesListValuesSqPositiveAsTask(Int16? attribute_id)
		{
			List<SqlParameter> prms = MakeGenericAttributesListValuesSqPositive_Params(attribute_id);
			return gps("MakeGenericAttributesListValuesSqPositive", prms);

		}
		
		
		
private List<SqlParameter> MakeListReport_Params(Int32? p_session_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_session_id", p_session_id, INT, IN, p);
			return p;
		}
		
public DataSet MakeListReport(Int32? p_session_id)
		{
			List<SqlParameter> prms = MakeListReport_Params(p_session_id);
			DataSet dset = esp("MakeListReport", prms);

			return dset;
		}
		
public string MakeListReportAsTask(Int32? p_session_id)
		{
			List<SqlParameter> prms = MakeListReport_Params(p_session_id);
			return gps("MakeListReport", prms);

		}
		
		
		
private List<SqlParameter> MakeNISewaTeams_Params(Int32? p_satsang_centre_id, 
		                                                        Int32? p_sewa_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_satsang_centre_id", p_satsang_centre_id, INT, IN, p);
			csp("p_sewa_id", p_sewa_id, INT, IN, p);
			return p;
		}
		
public DataSet MakeNISewaTeams(Int32? p_satsang_centre_id, 
		                                    Int32? p_sewa_id)
		{
			List<SqlParameter> prms = MakeNISewaTeams_Params(p_satsang_centre_id, p_sewa_id);
			DataSet dset = esp("MakeNISewaTeams", prms);

			return dset;
		}
		
public string MakeNISewaTeamsAsTask(Int32? p_satsang_centre_id, 
		                                        Int32? p_sewa_id)
		{
			List<SqlParameter> prms = MakeNISewaTeams_Params(p_satsang_centre_id, p_sewa_id);
			return gps("MakeNISewaTeams", prms);

		}
		
		
		
private List<SqlParameter> MakePositiveSewaTeamWiseSewadar_Params(Int32? sewa_team_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("sewa_team_id", sewa_team_id, INT, IN, p);
			return p;
		}
		
public DataSet MakePositiveSewaTeamWiseSewadar(Int32? sewa_team_id)
		{
			List<SqlParameter> prms = MakePositiveSewaTeamWiseSewadar_Params(sewa_team_id);
			DataSet dset = esp("MakePositiveSewaTeamWiseSewadar", prms);

			return dset;
		}
		
public string MakePositiveSewaTeamWiseSewadarAsTask(Int32? sewa_team_id)
		{
			List<SqlParameter> prms = MakePositiveSewaTeamWiseSewadar_Params(sewa_team_id);
			return gps("MakePositiveSewaTeamWiseSewadar", prms);

		}
		
		
		
private List<SqlParameter> MakeScanningSubJobSqPositive_Params(Int16? scanning_job_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("scanning_job_id", scanning_job_id, SMALLINT, IN, p);
			return p;
		}
		
public DataSet MakeScanningSubJobSqPositive(Int16? scanning_job_id)
		{
			List<SqlParameter> prms = MakeScanningSubJobSqPositive_Params(scanning_job_id);
			DataSet dset = esp("MakeScanningSubJobSqPositive", prms);

			return dset;
		}
		
public string MakeScanningSubJobSqPositiveAsTask(Int16? scanning_job_id)
		{
			List<SqlParameter> prms = MakeScanningSubJobSqPositive_Params(scanning_job_id);
			return gps("MakeScanningSubJobSqPositive", prms);

		}
		
		
		
private List<SqlParameter> MakeSewadarsQualificationSqPositive_Params(Int32? sewadar_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("sewadar_id", sewadar_id, INT, IN, p);
			return p;
		}
		
public DataSet MakeSewadarsQualificationSqPositive(Int32? sewadar_id)
		{
			List<SqlParameter> prms = MakeSewadarsQualificationSqPositive_Params(sewadar_id);
			DataSet dset = esp("MakeSewadarsQualificationSqPositive", prms);

			return dset;
		}
		
public string MakeSewadarsQualificationSqPositiveAsTask(Int32? sewadar_id)
		{
			List<SqlParameter> prms = MakeSewadarsQualificationSqPositive_Params(sewadar_id);
			return gps("MakeSewadarsQualificationSqPositive", prms);

		}
		
		
		
private List<SqlParameter> MakeSewadarsRemarkSqPositive_Params(Int32? sewadar_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("sewadar_id", sewadar_id, INT, IN, p);
			return p;
		}
		
public DataSet MakeSewadarsRemarkSqPositive(Int32? sewadar_id)
		{
			List<SqlParameter> prms = MakeSewadarsRemarkSqPositive_Params(sewadar_id);
			DataSet dset = esp("MakeSewadarsRemarkSqPositive", prms);

			return dset;
		}
		
public string MakeSewadarsRemarkSqPositiveAsTask(Int32? sewadar_id)
		{
			List<SqlParameter> prms = MakeSewadarsRemarkSqPositive_Params(sewadar_id);
			return gps("MakeSewadarsRemarkSqPositive", prms);

		}
		
		
		
private List<SqlParameter> MakeSewasSewaShiftSqPositive_Params(Int32? sewa_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("sewa_id", sewa_id, INT, IN, p);
			return p;
		}
		
public DataSet MakeSewasSewaShiftSqPositive(Int32? sewa_id)
		{
			List<SqlParameter> prms = MakeSewasSewaShiftSqPositive_Params(sewa_id);
			DataSet dset = esp("MakeSewasSewaShiftSqPositive", prms);

			return dset;
		}
		
public string MakeSewasSewaShiftSqPositiveAsTask(Int32? sewa_id)
		{
			List<SqlParameter> prms = MakeSewasSewaShiftSqPositive_Params(sewa_id);
			return gps("MakeSewasSewaShiftSqPositive", prms);

		}
		
		
		
private List<SqlParameter> MakeSewaTeams_Params(Int32? p_satsang_centre_id, 
		                                                    Int32? p_sewa_id, 
		                                                    Int32? p_sewadar_list_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_satsang_centre_id", p_satsang_centre_id, INT, IN, p);
			csp("p_sewa_id", p_sewa_id, INT, IN, p);
			csp("p_sewadar_list_id", p_sewadar_list_id, INT, IN, p);
			return p;
		}
		
public DataSet MakeSewaTeams(Int32? p_satsang_centre_id, 
		                                Int32? p_sewa_id, 
		                                Int32? p_sewadar_list_id)
		{
			List<SqlParameter> prms = MakeSewaTeams_Params(p_satsang_centre_id, p_sewa_id, p_sewadar_list_id);
			DataSet dset = esp("MakeSewaTeams", prms);

			return dset;
		}
		
public string MakeSewaTeamsAsTask(Int32? p_satsang_centre_id, 
		                                        Int32? p_sewa_id, 
		                                        Int32? p_sewadar_list_id)
		{
			List<SqlParameter> prms = MakeSewaTeams_Params(p_satsang_centre_id, p_sewa_id, p_sewadar_list_id);
			return gps("MakeSewaTeams", prms);

		}
		
		
		
private List<SqlParameter> MakeSewaTeamUsingSewadarList_Params(Int32? p_sewadar_list_id, 
		                                                                    Int32? p_sewa_id, 
		                                                                    ref Int32 p_sewa_team_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_sewadar_list_id", p_sewadar_list_id, INT, IN, p);
			csp("p_sewa_id", p_sewa_id, INT, IN, p);
			csp("p_sewa_team_id", p_sewa_team_id, INT, INOUT, p);
			return p;
		}
		
public DataSet MakeSewaTeamUsingSewadarList(Int32? p_sewadar_list_id, 
		                                                Int32? p_sewa_id, 
		                                                ref Int32 p_sewa_team_id)
		{
			List<SqlParameter> prms = MakeSewaTeamUsingSewadarList_Params(p_sewadar_list_id, p_sewa_id, ref p_sewa_team_id);
			DataSet dset = esp("MakeSewaTeamUsingSewadarList", prms);
			p_sewa_team_id = (System.Int32)prms.FirstOrDefault(p => p.ParameterName == "p_sewa_team_id").Value;

			return dset;
		}
		
public string MakeSewaTeamUsingSewadarListAsTask(Int32? p_sewadar_list_id, 
		                                                    Int32? p_sewa_id, 
		                                                    ref Int32 p_sewa_team_id)
		{
			List<SqlParameter> prms = MakeSewaTeamUsingSewadarList_Params(p_sewadar_list_id, p_sewa_id, ref p_sewa_team_id);
			return gps("MakeSewaTeamUsingSewadarList", prms);

		}
		
		
		
private List<SqlParameter> MakeSubJobsValidCombinationSqPositive_Params(Int16? scanning_job_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("scanning_job_id", scanning_job_id, SMALLINT, IN, p);
			return p;
		}
		
public DataSet MakeSubJobsValidCombinationSqPositive(Int16? scanning_job_id)
		{
			List<SqlParameter> prms = MakeSubJobsValidCombinationSqPositive_Params(scanning_job_id);
			DataSet dset = esp("MakeSubJobsValidCombinationSqPositive", prms);

			return dset;
		}
		
public string MakeSubJobsValidCombinationSqPositiveAsTask(Int16? scanning_job_id)
		{
			List<SqlParameter> prms = MakeSubJobsValidCombinationSqPositive_Params(scanning_job_id);
			return gps("MakeSubJobsValidCombinationSqPositive", prms);

		}
		
		
		
		
		
		
		
private List<SqlParameter> MergeSewadarInformation_Params(Int32? p_src_sewadar_id, 
		                                                                Int32? p_dst_sewadar_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_src_sewadar_id", p_src_sewadar_id, INT, IN, p);
			csp("p_dst_sewadar_id", p_dst_sewadar_id, INT, IN, p);
			return p;
		}
		
public DataSet MergeSewadarInformation(Int32? p_src_sewadar_id, 
		                                            Int32? p_dst_sewadar_id)
		{
			List<SqlParameter> prms = MergeSewadarInformation_Params(p_src_sewadar_id, p_dst_sewadar_id);
			DataSet dset = esp("MergeSewadarInformation", prms);

			return dset;
		}
		
public string MergeSewadarInformationAsTask(Int32? p_src_sewadar_id, 
		                                                Int32? p_dst_sewadar_id)
		{
			List<SqlParameter> prms = MergeSewadarInformation_Params(p_src_sewadar_id, p_dst_sewadar_id);
			return gps("MergeSewadarInformation", prms);

		}
		
		
		
private List<SqlParameter> MergeTeamsForASewa_Params(Int32? p_sewa_team_id_1, 
		                                                        Int32? p_sewa_team_id_2)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_sewa_team_id_1", p_sewa_team_id_1, INT, IN, p);
			csp("p_sewa_team_id_2", p_sewa_team_id_2, INT, IN, p);
			return p;
		}
		
public DataSet MergeTeamsForASewa(Int32? p_sewa_team_id_1, 
		                                        Int32? p_sewa_team_id_2)
		{
			List<SqlParameter> prms = MergeTeamsForASewa_Params(p_sewa_team_id_1, p_sewa_team_id_2);
			DataSet dset = esp("MergeTeamsForASewa", prms);

			return dset;
		}
		
public string MergeTeamsForASewaAsTask(Int32? p_sewa_team_id_1, 
		                                            Int32? p_sewa_team_id_2)
		{
			List<SqlParameter> prms = MergeTeamsForASewa_Params(p_sewa_team_id_1, p_sewa_team_id_2);
			return gps("MergeTeamsForASewa", prms);

		}
		
		
		
		
		
		
		
private List<SqlParameter> MigrateSewadars_Params(String satsang_centre_nm, 
		                                                        Int32? satsang_centre_id, 
		                                                        DateTime? photo_dt)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("satsang_centre_nm", satsang_centre_nm, VARCHAR, IN, p);
			csp("satsang_centre_id", satsang_centre_id, INT, IN, p);
			csp("photo_dt", photo_dt, SMALLDATETIME, IN, p);
			return p;
		}
		
public DataSet MigrateSewadars(String satsang_centre_nm, 
		                                    Int32? satsang_centre_id, 
		                                    DateTime? photo_dt)
		{
			List<SqlParameter> prms = MigrateSewadars_Params(satsang_centre_nm, satsang_centre_id, photo_dt);
			DataSet dset = esp("MigrateSewadars", prms);

			return dset;
		}
		
public string MigrateSewadarsAsTask(String satsang_centre_nm, 
		                                        Int32? satsang_centre_id, 
		                                        DateTime? photo_dt)
		{
			List<SqlParameter> prms = MigrateSewadars_Params(satsang_centre_nm, satsang_centre_id, photo_dt);
			return gps("MigrateSewadars", prms);

		}
		
		
		
private List<SqlParameter> MigrateSewadarsErrors_Params(String satsang_centre_nm, 
		                                                            Int32? satsang_centre_id, 
		                                                            DateTime? photo_dt, 
		                                                            Int32? level)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("satsang_centre_nm", satsang_centre_nm, VARCHAR, IN, p);
			csp("satsang_centre_id", satsang_centre_id, INT, IN, p);
			csp("photo_dt", photo_dt, SMALLDATETIME, IN, p);
			csp("level", level, INT, IN, p);
			return p;
		}
		
public DataSet MigrateSewadarsErrors(String satsang_centre_nm, 
		                                        Int32? satsang_centre_id, 
		                                        DateTime? photo_dt, 
		                                        Int32? level)
		{
			List<SqlParameter> prms = MigrateSewadarsErrors_Params(satsang_centre_nm, satsang_centre_id, photo_dt, level);
			DataSet dset = esp("MigrateSewadarsErrors", prms);

			return dset;
		}
		
public string MigrateSewadarsErrorsAsTask(String satsang_centre_nm, 
		                                                Int32? satsang_centre_id, 
		                                                DateTime? photo_dt, 
		                                                Int32? level)
		{
			List<SqlParameter> prms = MigrateSewadarsErrors_Params(satsang_centre_nm, satsang_centre_id, photo_dt, level);
			return gps("MigrateSewadarsErrors", prms);

		}
		
		
		
private List<SqlParameter> MinusGenericSewadarListsSewadar_Params(Int32? sewadar_list_id, 
		                                                                        Int32? other_sewadar_list_id, 
		                                                                        Boolean? is_delete_list)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("sewadar_list_id", sewadar_list_id, INT, IN, p);
			csp("other_sewadar_list_id", other_sewadar_list_id, INT, IN, p);
			csp("is_delete_list", is_delete_list, BIT, IN, p);
			return p;
		}
		
public DataSet MinusGenericSewadarListsSewadar(Int32? sewadar_list_id, 
		                                                    Int32? other_sewadar_list_id, 
		                                                    Boolean? is_delete_list)
		{
			List<SqlParameter> prms = MinusGenericSewadarListsSewadar_Params(sewadar_list_id, other_sewadar_list_id, is_delete_list);
			DataSet dset = esp("MinusGenericSewadarListsSewadar", prms);

			return dset;
		}
		
public string MinusGenericSewadarListsSewadarAsTask(Int32? sewadar_list_id, 
		                                                        Int32? other_sewadar_list_id, 
		                                                        Boolean? is_delete_list)
		{
			List<SqlParameter> prms = MinusGenericSewadarListsSewadar_Params(sewadar_list_id, other_sewadar_list_id, is_delete_list);
			return gps("MinusGenericSewadarListsSewadar", prms);

		}
		
		
		
		
		
private List<SqlParameter> OpenScanningJob_Params(Int16? p_scanning_job_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_scanning_job_id", p_scanning_job_id, SMALLINT, IN, p);
			return p;
		}
		
public DataSet OpenScanningJob(Int16? p_scanning_job_id)
		{
			List<SqlParameter> prms = OpenScanningJob_Params(p_scanning_job_id);
			DataSet dset = esp("OpenScanningJob", prms);

			return dset;
		}
		
public string OpenScanningJobAsTask(Int16? p_scanning_job_id)
		{
			List<SqlParameter> prms = OpenScanningJob_Params(p_scanning_job_id);
			return gps("OpenScanningJob", prms);

		}
		
		
		
private List<SqlParameter> OpenScanningJobDate_Params(Int16? p_scanning_job_id, 
		                                                            DateTime? p_controlling_dt)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_scanning_job_id", p_scanning_job_id, SMALLINT, IN, p);
			csp("p_controlling_dt", p_controlling_dt, SMALLDATETIME, IN, p);
			return p;
		}
		
public DataSet OpenScanningJobDate(Int16? p_scanning_job_id, 
		                                        DateTime? p_controlling_dt)
		{
			List<SqlParameter> prms = OpenScanningJobDate_Params(p_scanning_job_id, p_controlling_dt);
			DataSet dset = esp("OpenScanningJobDate", prms);

			return dset;
		}
		
public string OpenScanningJobDateAsTask(Int16? p_scanning_job_id, 
		                                            DateTime? p_controlling_dt)
		{
			List<SqlParameter> prms = OpenScanningJobDate_Params(p_scanning_job_id, p_controlling_dt);
			return gps("OpenScanningJobDate", prms);

		}
		
		
		
		
		
private List<SqlParameter> ParsePipeSeparatedThreeArgs_Params(String p_object_id, 
		                                                                    ref String str1, 
		                                                                    ref String str2, 
		                                                                    ref String str3)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_object_id", p_object_id, VARCHAR, IN, p);
			csp("str1", str1, VARCHAR, INOUT, p);
			csp("str2", str2, VARCHAR, INOUT, p);
			csp("str3", str3, VARCHAR, INOUT, p);
			return p;
		}
		
public DataSet ParsePipeSeparatedThreeArgs(String p_object_id, 
		                                                ref String str1, 
		                                                ref String str2, 
		                                                ref String str3)
		{
			List<SqlParameter> prms = ParsePipeSeparatedThreeArgs_Params(p_object_id, ref str1, ref str2, ref str3);
			DataSet dset = esp("ParsePipeSeparatedThreeArgs", prms);
			str1 = (System.String)prms.FirstOrDefault(p => p.ParameterName == "str1").Value;
			str2 = (System.String)prms.FirstOrDefault(p => p.ParameterName == "str2").Value;
			str3 = (System.String)prms.FirstOrDefault(p => p.ParameterName == "str3").Value;

			return dset;
		}
		
public string ParsePipeSeparatedThreeArgsAsTask(String p_object_id, 
		                                                    ref String str1, 
		                                                    ref String str2, 
		                                                    ref String str3)
		{
			List<SqlParameter> prms = ParsePipeSeparatedThreeArgs_Params(p_object_id, ref str1, ref str2, ref str3);
			return gps("ParsePipeSeparatedThreeArgs", prms);

		}
		
		
		
private List<SqlParameter> ParsePipeSeparatedTwoArgs_Params(String p_object_id, 
		                                                                ref String str1, 
		                                                                ref String str2)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_object_id", p_object_id, VARCHAR, IN, p);
			csp("str1", str1, VARCHAR, INOUT, p);
			csp("str2", str2, VARCHAR, INOUT, p);
			return p;
		}
		
public DataSet ParsePipeSeparatedTwoArgs(String p_object_id, 
		                                            ref String str1, 
		                                            ref String str2)
		{
			List<SqlParameter> prms = ParsePipeSeparatedTwoArgs_Params(p_object_id, ref str1, ref str2);
			DataSet dset = esp("ParsePipeSeparatedTwoArgs", prms);
			str1 = (System.String)prms.FirstOrDefault(p => p.ParameterName == "str1").Value;
			str2 = (System.String)prms.FirstOrDefault(p => p.ParameterName == "str2").Value;

			return dset;
		}
		
public string ParsePipeSeparatedTwoArgsAsTask(String p_object_id, 
		                                                    ref String str1, 
		                                                    ref String str2)
		{
			List<SqlParameter> prms = ParsePipeSeparatedTwoArgs_Params(p_object_id, ref str1, ref str2);
			return gps("ParsePipeSeparatedTwoArgs", prms);

		}
		
		
		
private List<SqlParameter> PopulateDefaultScanningSubJobsValidation_Params(Int16? scanning_job_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("scanning_job_id", scanning_job_id, SMALLINT, IN, p);
			return p;
		}
		
public DataSet PopulateDefaultScanningSubJobsValidation(Int16? scanning_job_id)
		{
			List<SqlParameter> prms = PopulateDefaultScanningSubJobsValidation_Params(scanning_job_id);
			DataSet dset = esp("PopulateDefaultScanningSubJobsValidation", prms);

			return dset;
		}
		
public string PopulateDefaultScanningSubJobsValidationAsTask(Int16? scanning_job_id)
		{
			List<SqlParameter> prms = PopulateDefaultScanningSubJobsValidation_Params(scanning_job_id);
			return gps("PopulateDefaultScanningSubJobsValidation", prms);

		}
		
		
		
		
		
private List<SqlParameter> ProcessConstructionSewaDate_Params(Int16? p_scanning_job_id, 
		                                                                    DateTime? p_controlling_dt)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_scanning_job_id", p_scanning_job_id, SMALLINT, IN, p);
			csp("p_controlling_dt", p_controlling_dt, SMALLDATETIME, IN, p);
			return p;
		}
		
public DataSet ProcessConstructionSewaDate(Int16? p_scanning_job_id, 
		                                                DateTime? p_controlling_dt)
		{
			List<SqlParameter> prms = ProcessConstructionSewaDate_Params(p_scanning_job_id, p_controlling_dt);
			DataSet dset = esp("ProcessConstructionSewaDate", prms);

			return dset;
		}
		
public string ProcessConstructionSewaDateAsTask(Int16? p_scanning_job_id, 
		                                                    DateTime? p_controlling_dt)
		{
			List<SqlParameter> prms = ProcessConstructionSewaDate_Params(p_scanning_job_id, p_controlling_dt);
			return gps("ProcessConstructionSewaDate", prms);

		}
		
		
		
private List<SqlParameter> ProcessScannedAnnualAttendance_Params(Int16? p_scanning_job_id, 
		                                                                    DateTime? p_controlling_dt, 
		                                                                    Int16? p_isConcluded)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_scanning_job_id", p_scanning_job_id, SMALLINT, IN, p);
			csp("p_controlling_dt", p_controlling_dt, SMALLDATETIME, IN, p);
			csp("p_isConcluded", p_isConcluded, SMALLINT, IN, p);
			return p;
		}
		
public DataSet ProcessScannedAnnualAttendance(Int16? p_scanning_job_id, 
		                                                    DateTime? p_controlling_dt, 
		                                                    Int16? p_isConcluded)
		{
			List<SqlParameter> prms = ProcessScannedAnnualAttendance_Params(p_scanning_job_id, p_controlling_dt, p_isConcluded);
			DataSet dset = esp("ProcessScannedAnnualAttendance", prms);

			return dset;
		}
		
public string ProcessScannedAnnualAttendanceAsTask(Int16? p_scanning_job_id, 
		                                                        DateTime? p_controlling_dt, 
		                                                        Int16? p_isConcluded)
		{
			List<SqlParameter> prms = ProcessScannedAnnualAttendance_Params(p_scanning_job_id, p_controlling_dt, p_isConcluded);
			return gps("ProcessScannedAnnualAttendance", prms);

		}
		
		
		
private List<SqlParameter> ProcessScannedFingerPrints_Params(Int32? p_sewa_id, 
		                                                                DateTime? p_start_dt, 
		                                                                DateTime? p_end_dt, 
		                                                                DataTable p_fp_data, 
		                                                                ref Int32 p_controlling_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_sewa_id", p_sewa_id, INT, IN, p);
			csp("p_start_dt", p_start_dt, DATE, IN, p);
			csp("p_end_dt", p_end_dt, DATE, IN, p);
			csp("p_fp_data", p_fp_data, STRUCTURED, IN, p);
			csp("p_controlling_id", p_controlling_id, INT, INOUT, p);
			return p;
		}
		
public DataSet ProcessScannedFingerPrints(Int32? p_sewa_id, 
		                                                DateTime? p_start_dt, 
		                                                DateTime? p_end_dt, 
		                                                DataTable p_fp_data, 
		                                                ref Int32 p_controlling_id)
		{
			List<SqlParameter> prms = ProcessScannedFingerPrints_Params(p_sewa_id, p_start_dt, p_end_dt, p_fp_data, ref p_controlling_id);
			DataSet dset = esp("ProcessScannedFingerPrints", prms);
			p_controlling_id = (System.Int32)prms.FirstOrDefault(p => p.ParameterName == "p_controlling_id").Value;

			return dset;
		}
		
public string ProcessScannedFingerPrintsAsTask(Int32? p_sewa_id, 
		                                                    DateTime? p_start_dt, 
		                                                    DateTime? p_end_dt, 
		                                                    DataTable p_fp_data, 
		                                                    ref Int32 p_controlling_id)
		{
			List<SqlParameter> prms = ProcessScannedFingerPrints_Params(p_sewa_id, p_start_dt, p_end_dt, p_fp_data, ref p_controlling_id);
			return gps("ProcessScannedFingerPrints", prms);

		}
		
		
		
private List<SqlParameter> QrySewadarstxnts_Params(Int32? satsang_centre_id, 
		                                                        String sewadar_grno, 
		                                                        Int32? sewadar_id, 
		                                                        Int32? sewa_id, 
		                                                        String screen_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("satsang_centre_id", satsang_centre_id, INT, IN, p);
			csp("sewadar_grno", sewadar_grno, CHAR, IN, p);
			csp("sewadar_id", sewadar_id, INT, IN, p);
			csp("sewa_id", sewa_id, INT, IN, p);
			csp("screen_id", screen_id, CHAR, IN, p);
			return p;
		}
		
public DataSet QrySewadarstxnts(Int32? satsang_centre_id, 
		                                    String sewadar_grno, 
		                                    Int32? sewadar_id, 
		                                    Int32? sewa_id, 
		                                    String screen_id)
		{
			List<SqlParameter> prms = QrySewadarstxnts_Params(satsang_centre_id, sewadar_grno, sewadar_id, sewa_id, screen_id);
			DataSet dset = esp("QrySewadarstxnts", prms);

			return dset;
		}
		
public string QrySewadarstxntsAsTask(Int32? satsang_centre_id, 
		                                        String sewadar_grno, 
		                                        Int32? sewadar_id, 
		                                        Int32? sewa_id, 
		                                        String screen_id)
		{
			List<SqlParameter> prms = QrySewadarstxnts_Params(satsang_centre_id, sewadar_grno, sewadar_id, sewa_id, screen_id);
			return gps("QrySewadarstxnts", prms);

		}
		
public DCCSqlDataReader QrySewadarstxntsAsReader(Int32? satsang_centre_id, 
		                                                    String sewadar_grno, 
		                                                    Int32? sewadar_id, 
		                                                    Int32? sewa_id, 
		                                                    String screen_id)
		{
			List<SqlParameter> prms = QrySewadarstxnts_Params(satsang_centre_id, sewadar_grno, sewadar_id, sewa_id, screen_id);
			DCCSqlDataReader reader = ObjDBManager.ExecuteReader("QrySewadarstxnts", prms);

			return reader;
		}
		
		
		
private List<SqlParameter> QueryAllScanningJobTypes_Params()
		{
			List<SqlParameter> p = new List<SqlParameter>();
			return p;
		}
		
public DataSet QueryAllScanningJobTypes()
		{
			List<SqlParameter> prms = QueryAllScanningJobTypes_Params();
			DataSet dset = esp("QueryAllScanningJobTypes", prms);
			return dset;
		}
		
public string QueryAllScanningJobTypesAsTask()
		{
			List<SqlParameter> prms = QueryAllScanningJobTypes_Params();
			return gps("QueryAllScanningJobTypes", prms);
		}
		
		
		
private List<SqlParameter> QueryBadgeTemplate_Params(String badge_template_id, 
		                                                        String badge_template_nm, 
		                                                        String badge_shape, 
		                                                        String information_type, 
		                                                        String foreground_colour_control, 
		                                                        Int16? foreground_colour_id, 
		                                                        String background_colour_control, 
		                                                        Int16? background_colour_id, 
		                                                        Byte? top_line_font_size, 
		                                                        String top_line_part_1_type, 
		                                                        String top_line_part_1_text, 
		                                                        String top_line_parts_separator, 
		                                                        String top_line_part_2_type, 
		                                                        String top_line_part_2_text, 
		                                                        Byte? middle_line_font_size, 
		                                                        String middle_line_part_1_type, 
		                                                        String middle_line_part_1_text, 
		                                                        String middle_line_parts_separator, 
		                                                        String middle_line_part_2_type, 
		                                                        String middle_line_part_2_text, 
		                                                        Byte? bottom_line_font_size, 
		                                                        String bottom_line_part_1_type, 
		                                                        String bottom_line_part_1_text, 
		                                                        String bottom_line_parts_separator, 
		                                                        String bottom_line_part_2_type, 
		                                                        String bottom_line_part_2_text, 
		                                                        String expiry_year, 
		                                                        String report_file_nm_front, 
		                                                        String report_file_nm_back, 
		                                                        String procedure_nm_front, 
		                                                        String procedure_nm_back, 
		                                                        Byte[] txn_ts)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("badge_template_id", badge_template_id, VARCHAR, IN, p);
			csp("badge_template_nm", badge_template_nm, VARCHAR, IN, p);
			csp("badge_shape", badge_shape, VARCHAR, IN, p);
			csp("information_type", information_type, VARCHAR, IN, p);
			csp("foreground_colour_control", foreground_colour_control, VARCHAR, IN, p);
			csp("foreground_colour_id", foreground_colour_id, SMALLINT, IN, p);
			csp("background_colour_control", background_colour_control, VARCHAR, IN, p);
			csp("background_colour_id", background_colour_id, SMALLINT, IN, p);
			csp("top_line_font_size", top_line_font_size, TINYINT, IN, p);
			csp("top_line_part_1_type", top_line_part_1_type, VARCHAR, IN, p);
			csp("top_line_part_1_text", top_line_part_1_text, VARCHAR, IN, p);
			csp("top_line_parts_separator", top_line_parts_separator, VARCHAR, IN, p);
			csp("top_line_part_2_type", top_line_part_2_type, VARCHAR, IN, p);
			csp("top_line_part_2_text", top_line_part_2_text, VARCHAR, IN, p);
			csp("middle_line_font_size", middle_line_font_size, TINYINT, IN, p);
			csp("middle_line_part_1_type", middle_line_part_1_type, VARCHAR, IN, p);
			csp("middle_line_part_1_text", middle_line_part_1_text, VARCHAR, IN, p);
			csp("middle_line_parts_separator", middle_line_parts_separator, VARCHAR, IN, p);
			csp("middle_line_part_2_type", middle_line_part_2_type, VARCHAR, IN, p);
			csp("middle_line_part_2_text", middle_line_part_2_text, VARCHAR, IN, p);
			csp("bottom_line_font_size", bottom_line_font_size, TINYINT, IN, p);
			csp("bottom_line_part_1_type", bottom_line_part_1_type, VARCHAR, IN, p);
			csp("bottom_line_part_1_text", bottom_line_part_1_text, VARCHAR, IN, p);
			csp("bottom_line_parts_separator", bottom_line_parts_separator, VARCHAR, IN, p);
			csp("bottom_line_part_2_type", bottom_line_part_2_type, VARCHAR, IN, p);
			csp("bottom_line_part_2_text", bottom_line_part_2_text, VARCHAR, IN, p);
			csp("expiry_year", expiry_year, CHAR, IN, p);
			csp("report_file_nm_front", report_file_nm_front, VARCHAR, IN, p);
			csp("report_file_nm_back", report_file_nm_back, VARCHAR, IN, p);
			csp("procedure_nm_front", procedure_nm_front, VARCHAR, IN, p);
			csp("procedure_nm_back", procedure_nm_back, VARCHAR, IN, p);
			csp("txn_ts", txn_ts, TIMESTAMP, IN, p);
			return p;
		}
		
public DataSet QueryBadgeTemplate(String badge_template_id, 
		                                        String badge_template_nm, 
		                                        String badge_shape, 
		                                        String information_type, 
		                                        String foreground_colour_control, 
		                                        Int16? foreground_colour_id, 
		                                        String background_colour_control, 
		                                        Int16? background_colour_id, 
		                                        Byte? top_line_font_size, 
		                                        String top_line_part_1_type, 
		                                        String top_line_part_1_text, 
		                                        String top_line_parts_separator, 
		                                        String top_line_part_2_type, 
		                                        String top_line_part_2_text, 
		                                        Byte? middle_line_font_size, 
		                                        String middle_line_part_1_type, 
		                                        String middle_line_part_1_text, 
		                                        String middle_line_parts_separator, 
		                                        String middle_line_part_2_type, 
		                                        String middle_line_part_2_text, 
		                                        Byte? bottom_line_font_size, 
		                                        String bottom_line_part_1_type, 
		                                        String bottom_line_part_1_text, 
		                                        String bottom_line_parts_separator, 
		                                        String bottom_line_part_2_type, 
		                                        String bottom_line_part_2_text, 
		                                        String expiry_year, 
		                                        String report_file_nm_front, 
		                                        String report_file_nm_back, 
		                                        String procedure_nm_front, 
		                                        String procedure_nm_back, 
		                                        Byte[] txn_ts)
		{
			List<SqlParameter> prms = QueryBadgeTemplate_Params(badge_template_id, badge_template_nm, badge_shape, information_type, foreground_colour_control, foreground_colour_id, background_colour_control, background_colour_id, top_line_font_size, top_line_part_1_type, top_line_part_1_text, top_line_parts_separator, top_line_part_2_type, top_line_part_2_text, middle_line_font_size, middle_line_part_1_type, middle_line_part_1_text, middle_line_parts_separator, middle_line_part_2_type, middle_line_part_2_text, bottom_line_font_size, bottom_line_part_1_type, bottom_line_part_1_text, bottom_line_parts_separator, bottom_line_part_2_type, bottom_line_part_2_text, expiry_year, report_file_nm_front, report_file_nm_back, procedure_nm_front, procedure_nm_back, txn_ts);
			DataSet dset = esp("QueryBadgeTemplate", prms);

			return dset;
		}
		
public string QueryBadgeTemplateAsTask(String badge_template_id, 
		                                            String badge_template_nm, 
		                                            String badge_shape, 
		                                            String information_type, 
		                                            String foreground_colour_control, 
		                                            Int16? foreground_colour_id, 
		                                            String background_colour_control, 
		                                            Int16? background_colour_id, 
		                                            Byte? top_line_font_size, 
		                                            String top_line_part_1_type, 
		                                            String top_line_part_1_text, 
		                                            String top_line_parts_separator, 
		                                            String top_line_part_2_type, 
		                                            String top_line_part_2_text, 
		                                            Byte? middle_line_font_size, 
		                                            String middle_line_part_1_type, 
		                                            String middle_line_part_1_text, 
		                                            String middle_line_parts_separator, 
		                                            String middle_line_part_2_type, 
		                                            String middle_line_part_2_text, 
		                                            Byte? bottom_line_font_size, 
		                                            String bottom_line_part_1_type, 
		                                            String bottom_line_part_1_text, 
		                                            String bottom_line_parts_separator, 
		                                            String bottom_line_part_2_type, 
		                                            String bottom_line_part_2_text, 
		                                            String expiry_year, 
		                                            String report_file_nm_front, 
		                                            String report_file_nm_back, 
		                                            String procedure_nm_front, 
		                                            String procedure_nm_back, 
		                                            Byte[] txn_ts)
		{
			List<SqlParameter> prms = QueryBadgeTemplate_Params(badge_template_id, badge_template_nm, badge_shape, information_type, foreground_colour_control, foreground_colour_id, background_colour_control, background_colour_id, top_line_font_size, top_line_part_1_type, top_line_part_1_text, top_line_parts_separator, top_line_part_2_type, top_line_part_2_text, middle_line_font_size, middle_line_part_1_type, middle_line_part_1_text, middle_line_parts_separator, middle_line_part_2_type, middle_line_part_2_text, bottom_line_font_size, bottom_line_part_1_type, bottom_line_part_1_text, bottom_line_parts_separator, bottom_line_part_2_type, bottom_line_part_2_text, expiry_year, report_file_nm_front, report_file_nm_back, procedure_nm_front, procedure_nm_back, txn_ts);
			return gps("QueryBadgeTemplate", prms);

		}
		
		
		
private List<SqlParameter> QueryCreditSpecification_Params(Int16? credit_specification_id, 
		                                                                String credit_specification_nm, 
		                                                                DateTime? credit_specification_dt, 
		                                                                Int32? satsang_centre_id, 
		                                                                String credit_group_nm, 
		                                                                String is_uniform_specification, 
		                                                                String is_outstation_sewadar, 
		                                                                Int16? credit_cnt, 
		                                                                Int16? unit_cnt, 
		                                                                String is_exemption_considered, 
		                                                                Int32? presence_sewa_id, 
		                                                                Int16? min_credit_cnt, 
		                                                                DateTime? specification_ts, 
		                                                                DateTime? computation_ts, 
		                                                                String is_finally_used, 
		                                                                Byte[] txn_ts)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("credit_specification_id", credit_specification_id, SMALLINT, IN, p);
			csp("credit_specification_nm", credit_specification_nm, VARCHAR, IN, p);
			csp("credit_specification_dt", credit_specification_dt, SMALLDATETIME, IN, p);
			csp("satsang_centre_id", satsang_centre_id, INT, IN, p);
			csp("credit_group_nm", credit_group_nm, VARCHAR, IN, p);
			csp("is_uniform_specification", is_uniform_specification, VARCHAR, IN, p);
			csp("is_outstation_sewadar", is_outstation_sewadar, VARCHAR, IN, p);
			csp("credit_cnt", credit_cnt, SMALLINT, IN, p);
			csp("unit_cnt", unit_cnt, SMALLINT, IN, p);
			csp("is_exemption_considered", is_exemption_considered, VARCHAR, IN, p);
			csp("presence_sewa_id", presence_sewa_id, INT, IN, p);
			csp("min_credit_cnt", min_credit_cnt, SMALLINT, IN, p);
			csp("specification_ts", specification_ts, DATETIME, IN, p);
			csp("computation_ts", computation_ts, DATETIME, IN, p);
			csp("is_finally_used", is_finally_used, VARCHAR, IN, p);
			csp("txn_ts", txn_ts, TIMESTAMP, IN, p);
			return p;
		}
		
public DataSet QueryCreditSpecification(Int16? credit_specification_id, 
		                                            String credit_specification_nm, 
		                                            DateTime? credit_specification_dt, 
		                                            Int32? satsang_centre_id, 
		                                            String credit_group_nm, 
		                                            String is_uniform_specification, 
		                                            String is_outstation_sewadar, 
		                                            Int16? credit_cnt, 
		                                            Int16? unit_cnt, 
		                                            String is_exemption_considered, 
		                                            Int32? presence_sewa_id, 
		                                            Int16? min_credit_cnt, 
		                                            DateTime? specification_ts, 
		                                            DateTime? computation_ts, 
		                                            String is_finally_used, 
		                                            Byte[] txn_ts)
		{
			List<SqlParameter> prms = QueryCreditSpecification_Params(credit_specification_id, credit_specification_nm, credit_specification_dt, satsang_centre_id, credit_group_nm, is_uniform_specification, is_outstation_sewadar, credit_cnt, unit_cnt, is_exemption_considered, presence_sewa_id, min_credit_cnt, specification_ts, computation_ts, is_finally_used, txn_ts);
			DataSet dset = esp("QueryCreditSpecification", prms);

			return dset;
		}
		
public string QueryCreditSpecificationAsTask(Int16? credit_specification_id, 
		                                                String credit_specification_nm, 
		                                                DateTime? credit_specification_dt, 
		                                                Int32? satsang_centre_id, 
		                                                String credit_group_nm, 
		                                                String is_uniform_specification, 
		                                                String is_outstation_sewadar, 
		                                                Int16? credit_cnt, 
		                                                Int16? unit_cnt, 
		                                                String is_exemption_considered, 
		                                                Int32? presence_sewa_id, 
		                                                Int16? min_credit_cnt, 
		                                                DateTime? specification_ts, 
		                                                DateTime? computation_ts, 
		                                                String is_finally_used, 
		                                                Byte[] txn_ts)
		{
			List<SqlParameter> prms = QueryCreditSpecification_Params(credit_specification_id, credit_specification_nm, credit_specification_dt, satsang_centre_id, credit_group_nm, is_uniform_specification, is_outstation_sewadar, credit_cnt, unit_cnt, is_exemption_considered, presence_sewa_id, min_credit_cnt, specification_ts, computation_ts, is_finally_used, txn_ts);
			return gps("QueryCreditSpecification", prms);

		}
		
		
		
private List<SqlParameter> QueryCreditSpecificationsOfAGroup_Params(String credit_group_nm, 
		                                                                        Int16? exclude_credit_specification_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("credit_group_nm", credit_group_nm, VARCHAR, IN, p);
			csp("exclude_credit_specification_id", exclude_credit_specification_id, SMALLINT, IN, p);
			return p;
		}
		
public DataSet QueryCreditSpecificationsOfAGroup(String credit_group_nm, 
		                                                    Int16? exclude_credit_specification_id)
		{
			List<SqlParameter> prms = QueryCreditSpecificationsOfAGroup_Params(credit_group_nm, exclude_credit_specification_id);
			DataSet dset = esp("QueryCreditSpecificationsOfAGroup", prms);

			return dset;
		}
		
public string QueryCreditSpecificationsOfAGroupAsTask(String credit_group_nm, 
		                                                            Int16? exclude_credit_specification_id)
		{
			List<SqlParameter> prms = QueryCreditSpecificationsOfAGroup_Params(credit_group_nm, exclude_credit_specification_id);
			return gps("QueryCreditSpecificationsOfAGroup", prms);

		}
		
		
		
private List<SqlParameter> QueryCreditSpecificationsSewa_Params(Int16? credit_specification_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("credit_specification_id", credit_specification_id, SMALLINT, IN, p);
			return p;
		}
		
public DataSet QueryCreditSpecificationsSewa(Int16? credit_specification_id)
		{
			List<SqlParameter> prms = QueryCreditSpecificationsSewa_Params(credit_specification_id);
			DataSet dset = esp("QueryCreditSpecificationsSewa", prms);

			return dset;
		}
		
public string QueryCreditSpecificationsSewaAsTask(Int16? credit_specification_id)
		{
			List<SqlParameter> prms = QueryCreditSpecificationsSewa_Params(credit_specification_id);
			return gps("QueryCreditSpecificationsSewa", prms);

		}
		
		
		
private List<SqlParameter> QueryDepartmentsSatsangCentre_Params(Int16? department_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("department_id", department_id, SMALLINT, IN, p);
			return p;
		}
		
public DataSet QueryDepartmentsSatsangCentre(Int16? department_id)
		{
			List<SqlParameter> prms = QueryDepartmentsSatsangCentre_Params(department_id);
			DataSet dset = esp("QueryDepartmentsSatsangCentre", prms);

			return dset;
		}
		
public string QueryDepartmentsSatsangCentreAsTask(Int16? department_id)
		{
			List<SqlParameter> prms = QueryDepartmentsSatsangCentre_Params(department_id);
			return gps("QueryDepartmentsSatsangCentre", prms);

		}
		
		
		
private List<SqlParameter> QueryGenericAttributesListValue_Params(Int16? attribute_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("attribute_id", attribute_id, SMALLINT, IN, p);
			return p;
		}
		
public DataSet QueryGenericAttributesListValue(Int16? attribute_id)
		{
			List<SqlParameter> prms = QueryGenericAttributesListValue_Params(attribute_id);
			DataSet dset = esp("QueryGenericAttributesListValue", prms);

			return dset;
		}
		
public string QueryGenericAttributesListValueAsTask(Int16? attribute_id)
		{
			List<SqlParameter> prms = QueryGenericAttributesListValue_Params(attribute_id);
			return gps("QueryGenericAttributesListValue", prms);

		}
		
		
		
private List<SqlParameter> QueryGenericAttributesSatsangCentre_Params(Int16? attribute_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("attribute_id", attribute_id, SMALLINT, IN, p);
			return p;
		}
		
public DataSet QueryGenericAttributesSatsangCentre(Int16? attribute_id)
		{
			List<SqlParameter> prms = QueryGenericAttributesSatsangCentre_Params(attribute_id);
			DataSet dset = esp("QueryGenericAttributesSatsangCentre", prms);

			return dset;
		}
		
public string QueryGenericAttributesSatsangCentreAsTask(Int16? attribute_id)
		{
			List<SqlParameter> prms = QueryGenericAttributesSatsangCentre_Params(attribute_id);
			return gps("QueryGenericAttributesSatsangCentre", prms);

		}
		
		
		
private List<SqlParameter> QueryGenericAttributesStatus_Params(Int16? attribute_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("attribute_id", attribute_id, SMALLINT, IN, p);
			return p;
		}
		
public DataSet QueryGenericAttributesStatus(Int16? attribute_id)
		{
			List<SqlParameter> prms = QueryGenericAttributesStatus_Params(attribute_id);
			DataSet dset = esp("QueryGenericAttributesStatus", prms);

			return dset;
		}
		
public string QueryGenericAttributesStatusAsTask(Int16? attribute_id)
		{
			List<SqlParameter> prms = QueryGenericAttributesStatus_Params(attribute_id);
			return gps("QueryGenericAttributesStatus", prms);

		}
		
		
		
private List<SqlParameter> QueryGenericSewadarListsSewadar_Params(Int32? sewadar_list_id, 
		                                                                        Int32? satsang_centre_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("sewadar_list_id", sewadar_list_id, INT, IN, p);
			csp("satsang_centre_id", satsang_centre_id, INT, IN, p);
			return p;
		}
		
public DataSet QueryGenericSewadarListsSewadar(Int32? sewadar_list_id, 
		                                                    Int32? satsang_centre_id)
		{
			List<SqlParameter> prms = QueryGenericSewadarListsSewadar_Params(sewadar_list_id, satsang_centre_id);
			DataSet dset = esp("QueryGenericSewadarListsSewadar", prms);

			return dset;
		}
		
public string QueryGenericSewadarListsSewadarAsTask(Int32? sewadar_list_id, 
		                                                        Int32? satsang_centre_id)
		{
			List<SqlParameter> prms = QueryGenericSewadarListsSewadar_Params(sewadar_list_id, satsang_centre_id);
			return gps("QueryGenericSewadarListsSewadar", prms);

		}
		
		
		
private List<SqlParameter> QueryGenericSewadarListsSewadarForBadgePrinting_Params(Int32? sewadar_list_id, 
		                                                                                        Int32? satsang_centre_id, 
		                                                                                        String remarks, 
		                                                                                        String badge_template_id, 
		                                                                                        String badge_expiry_year, 
		                                                                                        Int32? gents_retirement_age, 
		                                                                                        Int32? ladies_retirement_age)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("sewadar_list_id", sewadar_list_id, INT, IN, p);
			csp("satsang_centre_id", satsang_centre_id, INT, IN, p);
			csp("remarks", remarks, VARCHAR, IN, p);
			csp("badge_template_id", badge_template_id, VARCHAR, IN, p);
			csp("badge_expiry_year", badge_expiry_year, CHAR, IN, p);
			csp("gents_retirement_age", gents_retirement_age, INT, IN, p);
			csp("ladies_retirement_age", ladies_retirement_age, INT, IN, p);
			return p;
		}
		
public DataSet QueryGenericSewadarListsSewadarForBadgePrinting(Int32? sewadar_list_id, 
		                                                                    Int32? satsang_centre_id, 
		                                                                    String remarks, 
		                                                                    String badge_template_id, 
		                                                                    String badge_expiry_year, 
		                                                                    Int32? gents_retirement_age, 
		                                                                    Int32? ladies_retirement_age)
		{
			List<SqlParameter> prms = QueryGenericSewadarListsSewadarForBadgePrinting_Params(sewadar_list_id, satsang_centre_id, remarks, badge_template_id, badge_expiry_year, gents_retirement_age, ladies_retirement_age);
			DataSet dset = esp("QueryGenericSewadarListsSewadarForBadgePrinting", prms);

			return dset;
		}
		
public string QueryGenericSewadarListsSewadarForBadgePrintingAsTask(Int32? sewadar_list_id, 
		                                                                        Int32? satsang_centre_id, 
		                                                                        String remarks, 
		                                                                        String badge_template_id, 
		                                                                        String badge_expiry_year, 
		                                                                        Int32? gents_retirement_age, 
		                                                                        Int32? ladies_retirement_age)
		{
			List<SqlParameter> prms = QueryGenericSewadarListsSewadarForBadgePrinting_Params(sewadar_list_id, satsang_centre_id, remarks, badge_template_id, badge_expiry_year, gents_retirement_age, ladies_retirement_age);
			return gps("QueryGenericSewadarListsSewadarForBadgePrinting", prms);

		}
		
		
		
private List<SqlParameter> QueryPhotoIdsBulkRegister_Params()
		{
			List<SqlParameter> p = new List<SqlParameter>();
			return p;
		}
		
public DataSet QueryPhotoIdsBulkRegister()
		{
			List<SqlParameter> prms = QueryPhotoIdsBulkRegister_Params();
			DataSet dset = esp("QueryPhotoIdsBulkRegister", prms);
			return dset;
		}
		
public string QueryPhotoIdsBulkRegisterAsTask()
		{
			List<SqlParameter> prms = QueryPhotoIdsBulkRegister_Params();
			return gps("QueryPhotoIdsBulkRegister", prms);
		}
		
		
		
private List<SqlParameter> QueryPhotoIdsToMigrate_Params(Int32? satsang_centre_id, 
		                                                            String is_migrated)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("satsang_centre_id", satsang_centre_id, INT, IN, p);
			csp("is_migrated", is_migrated, CHAR, IN, p);
			return p;
		}
		
public DataSet QueryPhotoIdsToMigrate(Int32? satsang_centre_id, 
		                                            String is_migrated)
		{
			List<SqlParameter> prms = QueryPhotoIdsToMigrate_Params(satsang_centre_id, is_migrated);
			DataSet dset = esp("QueryPhotoIdsToMigrate", prms);

			return dset;
		}
		
public string QueryPhotoIdsToMigrateAsTask(Int32? satsang_centre_id, 
		                                                String is_migrated)
		{
			List<SqlParameter> prms = QueryPhotoIdsToMigrate_Params(satsang_centre_id, is_migrated);
			return gps("QueryPhotoIdsToMigrate", prms);

		}
		
		
		
private List<SqlParameter> QuerySatsangCentreFunctionarie_Params(Int32? satsang_centre_id, 
		                                                                    String centre_functionary)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("satsang_centre_id", satsang_centre_id, INT, IN, p);
			csp("centre_functionary", centre_functionary, VARCHAR, IN, p);
			return p;
		}
		
public DataSet QuerySatsangCentreFunctionarie(Int32? satsang_centre_id, 
		                                                    String centre_functionary)
		{
			List<SqlParameter> prms = QuerySatsangCentreFunctionarie_Params(satsang_centre_id, centre_functionary);
			DataSet dset = esp("QuerySatsangCentreFunctionarie", prms);

			return dset;
		}
		
public string QuerySatsangCentreFunctionarieAsTask(Int32? satsang_centre_id, 
		                                                        String centre_functionary)
		{
			List<SqlParameter> prms = QuerySatsangCentreFunctionarie_Params(satsang_centre_id, centre_functionary);
			return gps("QuerySatsangCentreFunctionarie", prms);

		}
		
		
		
private List<SqlParameter> QuerySatsangCentresDetail_Params(Int32? satsang_centre_id, 
		                                                                String is_main_centre, 
		                                                                String centre_nm, 
		                                                                String centre_alphabet, 
		                                                                String centre_cd, 
		                                                                Int32? reports_to_centre_id, 
		                                                                String remarks, 
		                                                                Byte[] secretary_signature)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("satsang_centre_id", satsang_centre_id, INT, IN, p);
			csp("is_main_centre", is_main_centre, VARCHAR, IN, p);
			csp("centre_nm", centre_nm, VARCHAR, IN, p);
			csp("centre_alphabet", centre_alphabet, VARCHAR, IN, p);
			csp("centre_cd", centre_cd, CHAR, IN, p);
			csp("reports_to_centre_id", reports_to_centre_id, INT, IN, p);
			csp("remarks", remarks, VARCHAR, IN, p);
			csp("secretary_signature", secretary_signature, IMAGE, IN, p);
			return p;
		}
		
public DataSet QuerySatsangCentresDetail(Int32? satsang_centre_id, 
		                                            String is_main_centre, 
		                                            String centre_nm, 
		                                            String centre_alphabet, 
		                                            String centre_cd, 
		                                            Int32? reports_to_centre_id, 
		                                            String remarks, 
		                                            Byte[] secretary_signature)
		{
			List<SqlParameter> prms = QuerySatsangCentresDetail_Params(satsang_centre_id, is_main_centre, centre_nm, centre_alphabet, centre_cd, reports_to_centre_id, remarks, secretary_signature);
			DataSet dset = esp("QuerySatsangCentresDetail", prms);

			return dset;
		}
		
public string QuerySatsangCentresDetailAsTask(Int32? satsang_centre_id, 
		                                                    String is_main_centre, 
		                                                    String centre_nm, 
		                                                    String centre_alphabet, 
		                                                    String centre_cd, 
		                                                    Int32? reports_to_centre_id, 
		                                                    String remarks, 
		                                                    Byte[] secretary_signature)
		{
			List<SqlParameter> prms = QuerySatsangCentresDetail_Params(satsang_centre_id, is_main_centre, centre_nm, centre_alphabet, centre_cd, reports_to_centre_id, remarks, secretary_signature);
			return gps("QuerySatsangCentresDetail", prms);

		}
		
		
		
private List<SqlParameter> QueryScannedFingerprints_Params(Int32? p_controlling_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_controlling_id", p_controlling_id, INT, IN, p);
			return p;
		}
		
public DataSet QueryScannedFingerprints(Int32? p_controlling_id)
		{
			List<SqlParameter> prms = QueryScannedFingerprints_Params(p_controlling_id);
			DataSet dset = esp("QueryScannedFingerprints", prms);

			return dset;
		}
		
public string QueryScannedFingerprintsAsTask(Int32? p_controlling_id)
		{
			List<SqlParameter> prms = QueryScannedFingerprints_Params(p_controlling_id);
			return gps("QueryScannedFingerprints", prms);

		}
		
		
		
private List<SqlParameter> QueryScannedFingerprintsStore_Params(Int32? p_controlling_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_controlling_id", p_controlling_id, INT, IN, p);
			return p;
		}
		
public DataSet QueryScannedFingerprintsStore(Int32? p_controlling_id)
		{
			List<SqlParameter> prms = QueryScannedFingerprintsStore_Params(p_controlling_id);
			DataSet dset = esp("QueryScannedFingerprintsStore", prms);

			return dset;
		}
		
public string QueryScannedFingerprintsStoreAsTask(Int32? p_controlling_id)
		{
			List<SqlParameter> prms = QueryScannedFingerprintsStore_Params(p_controlling_id);
			return gps("QueryScannedFingerprintsStore", prms);

		}
		
		
		
private List<SqlParameter> QueryScanningJobForInsertMode_Params(Int16? scanning_job_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("scanning_job_id", scanning_job_id, SMALLINT, IN, p);
			return p;
		}
		
public DataSet QueryScanningJobForInsertMode(Int16? scanning_job_id)
		{
			List<SqlParameter> prms = QueryScanningJobForInsertMode_Params(scanning_job_id);
			DataSet dset = esp("QueryScanningJobForInsertMode", prms);

			return dset;
		}
		
public string QueryScanningJobForInsertModeAsTask(Int16? scanning_job_id)
		{
			List<SqlParameter> prms = QueryScanningJobForInsertMode_Params(scanning_job_id);
			return gps("QueryScanningJobForInsertMode", prms);

		}
		
		
		
private List<SqlParameter> QueryScanningJobsPeriod_Params(Int16? scanning_job_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("scanning_job_id", scanning_job_id, SMALLINT, IN, p);
			return p;
		}
		
public DataSet QueryScanningJobsPeriod(Int16? scanning_job_id)
		{
			List<SqlParameter> prms = QueryScanningJobsPeriod_Params(scanning_job_id);
			DataSet dset = esp("QueryScanningJobsPeriod", prms);

			return dset;
		}
		
public string QueryScanningJobsPeriodAsTask(Int16? scanning_job_id)
		{
			List<SqlParameter> prms = QueryScanningJobsPeriod_Params(scanning_job_id);
			return gps("QueryScanningJobsPeriod", prms);

		}
		
		
		
private List<SqlParameter> QueryScanningJobTypes_Params(String scanning_job_type_cd)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("scanning_job_type_cd", scanning_job_type_cd, VARCHAR, IN, p);
			return p;
		}
		
public DataSet QueryScanningJobTypes(String scanning_job_type_cd)
		{
			List<SqlParameter> prms = QueryScanningJobTypes_Params(scanning_job_type_cd);
			DataSet dset = esp("QueryScanningJobTypes", prms);

			return dset;
		}
		
public string QueryScanningJobTypesAsTask(String scanning_job_type_cd)
		{
			List<SqlParameter> prms = QueryScanningJobTypes_Params(scanning_job_type_cd);
			return gps("QueryScanningJobTypes", prms);

		}
		
		
		
private List<SqlParameter> QueryScanningSubJob_Params(Int16? scanning_job_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("scanning_job_id", scanning_job_id, SMALLINT, IN, p);
			return p;
		}
		
public DataSet QueryScanningSubJob(Int16? scanning_job_id)
		{
			List<SqlParameter> prms = QueryScanningSubJob_Params(scanning_job_id);
			DataSet dset = esp("QueryScanningSubJob", prms);

			return dset;
		}
		
public string QueryScanningSubJobAsTask(Int16? scanning_job_id)
		{
			List<SqlParameter> prms = QueryScanningSubJob_Params(scanning_job_id);
			return gps("QueryScanningSubJob", prms);

		}
		
		
		
private List<SqlParameter> QueryScanningSubJobsValidation_Params(Int16? scanning_job_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("scanning_job_id", scanning_job_id, SMALLINT, IN, p);
			return p;
		}
		
public DataSet QueryScanningSubJobsValidation(Int16? scanning_job_id)
		{
			List<SqlParameter> prms = QueryScanningSubJobsValidation_Params(scanning_job_id);
			DataSet dset = esp("QueryScanningSubJobsValidation", prms);

			return dset;
		}
		
public string QueryScanningSubJobsValidationAsTask(Int16? scanning_job_id)
		{
			List<SqlParameter> prms = QueryScanningSubJobsValidation_Params(scanning_job_id);
			return gps("QueryScanningSubJobsValidation", prms);

		}
		
		
		
private List<SqlParameter> QueryScanningSubJobsValidCombination_Params(Int16? scanning_job_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("scanning_job_id", scanning_job_id, SMALLINT, IN, p);
			return p;
		}
		
public DataSet QueryScanningSubJobsValidCombination(Int16? scanning_job_id)
		{
			List<SqlParameter> prms = QueryScanningSubJobsValidCombination_Params(scanning_job_id);
			DataSet dset = esp("QueryScanningSubJobsValidCombination", prms);

			return dset;
		}
		
public string QueryScanningSubJobsValidCombinationAsTask(Int16? scanning_job_id)
		{
			List<SqlParameter> prms = QueryScanningSubJobsValidCombination_Params(scanning_job_id);
			return gps("QueryScanningSubJobsValidCombination", prms);

		}
		
		
		
private List<SqlParameter> QuerySewa_Params(Int32? sewa_id, 
		                                                Int32? satsang_centre_id, 
		                                                String sewa_cd, 
		                                                String sewa_nm, 
		                                                DateTime? start_dt, 
		                                                DateTime? finish_dt, 
		                                                String is_satsang_programme, 
		                                                String is_scanner_used, 
		                                                String is_leave_allowed, 
		                                                String is_exemption_allowed, 
		                                                String is_default_sewa, 
		                                                String sewa_frequency, 
		                                                String attendance_unit, 
		                                                String attendance_marking, 
		                                                Int16? min_sewa_duration, 
		                                                Int16? max_sewa_duration, 
		                                                DateTime? gents_born_after, 
		                                                DateTime? ladies_born_after, 
		                                                Int32? referred_sewa_id, 
		                                                DateTime? attendance_ts, 
		                                                DateTime? summary_ts, 
		                                                DateTime? deleted_ts, 
		                                                DateTime? locked_dtm, 
		                                                Byte[] txn_ts)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("sewa_id", sewa_id, INT, IN, p);
			csp("satsang_centre_id", satsang_centre_id, INT, IN, p);
			csp("sewa_cd", sewa_cd, VARCHAR, IN, p);
			csp("sewa_nm", sewa_nm, VARCHAR, IN, p);
			csp("start_dt", start_dt, SMALLDATETIME, IN, p);
			csp("finish_dt", finish_dt, SMALLDATETIME, IN, p);
			csp("is_satsang_programme", is_satsang_programme, VARCHAR, IN, p);
			csp("is_scanner_used", is_scanner_used, VARCHAR, IN, p);
			csp("is_leave_allowed", is_leave_allowed, VARCHAR, IN, p);
			csp("is_exemption_allowed", is_exemption_allowed, VARCHAR, IN, p);
			csp("is_default_sewa", is_default_sewa, VARCHAR, IN, p);
			csp("sewa_frequency", sewa_frequency, VARCHAR, IN, p);
			csp("attendance_unit", attendance_unit, VARCHAR, IN, p);
			csp("attendance_marking", attendance_marking, VARCHAR, IN, p);
			csp("min_sewa_duration", min_sewa_duration, SMALLINT, IN, p);
			csp("max_sewa_duration", max_sewa_duration, SMALLINT, IN, p);
			csp("gents_born_after", gents_born_after, DATETIME, IN, p);
			csp("ladies_born_after", ladies_born_after, DATETIME, IN, p);
			csp("referred_sewa_id", referred_sewa_id, INT, IN, p);
			csp("attendance_ts", attendance_ts, DATETIME, IN, p);
			csp("summary_ts", summary_ts, DATETIME, IN, p);
			csp("deleted_ts", deleted_ts, DATETIME, IN, p);
			csp("locked_dtm", locked_dtm, DATETIME, IN, p);
			csp("txn_ts", txn_ts, TIMESTAMP, IN, p);
			return p;
		}
		
public DataSet QuerySewa(Int32? sewa_id, 
		                            Int32? satsang_centre_id, 
		                            String sewa_cd, 
		                            String sewa_nm, 
		                            DateTime? start_dt, 
		                            DateTime? finish_dt, 
		                            String is_satsang_programme, 
		                            String is_scanner_used, 
		                            String is_leave_allowed, 
		                            String is_exemption_allowed, 
		                            String is_default_sewa, 
		                            String sewa_frequency, 
		                            String attendance_unit, 
		                            String attendance_marking, 
		                            Int16? min_sewa_duration, 
		                            Int16? max_sewa_duration, 
		                            DateTime? gents_born_after, 
		                            DateTime? ladies_born_after, 
		                            Int32? referred_sewa_id, 
		                            DateTime? attendance_ts, 
		                            DateTime? summary_ts, 
		                            DateTime? deleted_ts, 
		                            DateTime? locked_dtm, 
		                            Byte[] txn_ts)
		{
			List<SqlParameter> prms = QuerySewa_Params(sewa_id, satsang_centre_id, sewa_cd, sewa_nm, start_dt, finish_dt, is_satsang_programme, is_scanner_used, is_leave_allowed, is_exemption_allowed, is_default_sewa, sewa_frequency, attendance_unit, attendance_marking, min_sewa_duration, max_sewa_duration, gents_born_after, ladies_born_after, referred_sewa_id, attendance_ts, summary_ts, deleted_ts, locked_dtm, txn_ts);
			DataSet dset = esp("QuerySewa", prms);

			return dset;
		}
		
public string QuerySewaAsTask(Int32? sewa_id, 
		                                    Int32? satsang_centre_id, 
		                                    String sewa_cd, 
		                                    String sewa_nm, 
		                                    DateTime? start_dt, 
		                                    DateTime? finish_dt, 
		                                    String is_satsang_programme, 
		                                    String is_scanner_used, 
		                                    String is_leave_allowed, 
		                                    String is_exemption_allowed, 
		                                    String is_default_sewa, 
		                                    String sewa_frequency, 
		                                    String attendance_unit, 
		                                    String attendance_marking, 
		                                    Int16? min_sewa_duration, 
		                                    Int16? max_sewa_duration, 
		                                    DateTime? gents_born_after, 
		                                    DateTime? ladies_born_after, 
		                                    Int32? referred_sewa_id, 
		                                    DateTime? attendance_ts, 
		                                    DateTime? summary_ts, 
		                                    DateTime? deleted_ts, 
		                                    DateTime? locked_dtm, 
		                                    Byte[] txn_ts)
		{
			List<SqlParameter> prms = QuerySewa_Params(sewa_id, satsang_centre_id, sewa_cd, sewa_nm, start_dt, finish_dt, is_satsang_programme, is_scanner_used, is_leave_allowed, is_exemption_allowed, is_default_sewa, sewa_frequency, attendance_unit, attendance_marking, min_sewa_duration, max_sewa_duration, gents_born_after, ladies_born_after, referred_sewa_id, attendance_ts, summary_ts, deleted_ts, locked_dtm, txn_ts);
			return gps("QuerySewa", prms);

		}
		
		
		
private List<SqlParameter> QuerySewadarApplicationOtherDisabilitie_Params(Int32? sewadar_application_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("sewadar_application_id", sewadar_application_id, INT, IN, p);
			return p;
		}
		
public DataSet QuerySewadarApplicationOtherDisabilitie(Int32? sewadar_application_id)
		{
			List<SqlParameter> prms = QuerySewadarApplicationOtherDisabilitie_Params(sewadar_application_id);
			DataSet dset = esp("QuerySewadarApplicationOtherDisabilitie", prms);

			return dset;
		}
		
public string QuerySewadarApplicationOtherDisabilitieAsTask(Int32? sewadar_application_id)
		{
			List<SqlParameter> prms = QuerySewadarApplicationOtherDisabilitie_Params(sewadar_application_id);
			return gps("QuerySewadarApplicationOtherDisabilitie", prms);

		}
		
		
		
private List<SqlParameter> QuerySewadarApplicationQualification_Params(Int32? sewadar_application_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("sewadar_application_id", sewadar_application_id, INT, IN, p);
			return p;
		}
		
public DataSet QuerySewadarApplicationQualification(Int32? sewadar_application_id)
		{
			List<SqlParameter> prms = QuerySewadarApplicationQualification_Params(sewadar_application_id);
			DataSet dset = esp("QuerySewadarApplicationQualification", prms);

			return dset;
		}
		
public string QuerySewadarApplicationQualificationAsTask(Int32? sewadar_application_id)
		{
			List<SqlParameter> prms = QuerySewadarApplicationQualification_Params(sewadar_application_id);
			return gps("QuerySewadarApplicationQualification", prms);

		}
		
		
		
private List<SqlParameter> QuerySewadarApplicationSkill_Params(Int32? sewadar_application_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("sewadar_application_id", sewadar_application_id, INT, IN, p);
			return p;
		}
		
public DataSet QuerySewadarApplicationSkill(Int32? sewadar_application_id)
		{
			List<SqlParameter> prms = QuerySewadarApplicationSkill_Params(sewadar_application_id);
			DataSet dset = esp("QuerySewadarApplicationSkill", prms);

			return dset;
		}
		
public string QuerySewadarApplicationSkillAsTask(Int32? sewadar_application_id)
		{
			List<SqlParameter> prms = QuerySewadarApplicationSkill_Params(sewadar_application_id);
			return gps("QuerySewadarApplicationSkill", prms);

		}
		
		
		
private List<SqlParameter> QuerySewadarForBadgePrinting_Params(String sewadar_grno, 
		                                                                    Int32? satsang_centre_id, 
		                                                                    String badge_template_id, 
		                                                                    String badge_expiry_year, 
		                                                                    Int32? gents_retirement_age, 
		                                                                    Int32? ladies_retirement_age)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("sewadar_grno", sewadar_grno, CHAR, IN, p);
			csp("satsang_centre_id", satsang_centre_id, INT, IN, p);
			csp("badge_template_id", badge_template_id, VARCHAR, IN, p);
			csp("badge_expiry_year", badge_expiry_year, CHAR, IN, p);
			csp("gents_retirement_age", gents_retirement_age, INT, IN, p);
			csp("ladies_retirement_age", ladies_retirement_age, INT, IN, p);
			return p;
		}
		
public DataSet QuerySewadarForBadgePrinting(String sewadar_grno, 
		                                                Int32? satsang_centre_id, 
		                                                String badge_template_id, 
		                                                String badge_expiry_year, 
		                                                Int32? gents_retirement_age, 
		                                                Int32? ladies_retirement_age)
		{
			List<SqlParameter> prms = QuerySewadarForBadgePrinting_Params(sewadar_grno, satsang_centre_id, badge_template_id, badge_expiry_year, gents_retirement_age, ladies_retirement_age);
			DataSet dset = esp("QuerySewadarForBadgePrinting", prms);

			return dset;
		}
		
public string QuerySewadarForBadgePrintingAsTask(String sewadar_grno, 
		                                                    Int32? satsang_centre_id, 
		                                                    String badge_template_id, 
		                                                    String badge_expiry_year, 
		                                                    Int32? gents_retirement_age, 
		                                                    Int32? ladies_retirement_age)
		{
			List<SqlParameter> prms = QuerySewadarForBadgePrinting_Params(sewadar_grno, satsang_centre_id, badge_template_id, badge_expiry_year, gents_retirement_age, ladies_retirement_age);
			return gps("QuerySewadarForBadgePrinting", prms);

		}
		
		
		
private List<SqlParameter> QuerySewadarHistory_Params(Int32? sewadar_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("sewadar_id", sewadar_id, INT, IN, p);
			return p;
		}
		
public DataSet QuerySewadarHistory(Int32? sewadar_id)
		{
			List<SqlParameter> prms = QuerySewadarHistory_Params(sewadar_id);
			DataSet dset = esp("QuerySewadarHistory", prms);

			return dset;
		}
		
public string QuerySewadarHistoryAsTask(Int32? sewadar_id)
		{
			List<SqlParameter> prms = QuerySewadarHistory_Params(sewadar_id);
			return gps("QuerySewadarHistory", prms);

		}
		
		
		
private List<SqlParameter> QuerySewadarPrintDetails_Params(Int32? sewadar_id, 
		                                                                String sewadar_gr_no)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("sewadar_id", sewadar_id, INT, IN, p);
			csp("sewadar_gr_no", sewadar_gr_no, CHAR, IN, p);
			return p;
		}
		
public DataSet QuerySewadarPrintDetails(Int32? sewadar_id, 
		                                            String sewadar_gr_no)
		{
			List<SqlParameter> prms = QuerySewadarPrintDetails_Params(sewadar_id, sewadar_gr_no);
			DataSet dset = esp("QuerySewadarPrintDetails", prms);

			return dset;
		}
		
public string QuerySewadarPrintDetailsAsTask(Int32? sewadar_id, 
		                                                String sewadar_gr_no)
		{
			List<SqlParameter> prms = QuerySewadarPrintDetails_Params(sewadar_id, sewadar_gr_no);
			return gps("QuerySewadarPrintDetails", prms);

		}
		
		
		
private List<SqlParameter> QuerySewadarsAddresse_Params(Int32? sewadar_id, 
		                                                            String address_type)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("sewadar_id", sewadar_id, INT, IN, p);
			csp("address_type", address_type, VARCHAR, IN, p);
			return p;
		}
		
public DataSet QuerySewadarsAddresse(Int32? sewadar_id, 
		                                        String address_type)
		{
			List<SqlParameter> prms = QuerySewadarsAddresse_Params(sewadar_id, address_type);
			DataSet dset = esp("QuerySewadarsAddresse", prms);

			return dset;
		}
		
public string QuerySewadarsAddresseAsTask(Int32? sewadar_id, 
		                                                String address_type)
		{
			List<SqlParameter> prms = QuerySewadarsAddresse_Params(sewadar_id, address_type);
			return gps("QuerySewadarsAddresse", prms);

		}
		
		
		
private List<SqlParameter> QuerySewadarsBadge_Params(Int32? satsang_centre_id, 
		                                                        String sewadar_grno)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("satsang_centre_id", satsang_centre_id, INT, IN, p);
			csp("sewadar_grno", sewadar_grno, CHAR, IN, p);
			return p;
		}
		
public DataSet QuerySewadarsBadge(Int32? satsang_centre_id, 
		                                        String sewadar_grno)
		{
			List<SqlParameter> prms = QuerySewadarsBadge_Params(satsang_centre_id, sewadar_grno);
			DataSet dset = esp("QuerySewadarsBadge", prms);

			return dset;
		}
		
public string QuerySewadarsBadgeAsTask(Int32? satsang_centre_id, 
		                                            String sewadar_grno)
		{
			List<SqlParameter> prms = QuerySewadarsBadge_Params(satsang_centre_id, sewadar_grno);
			return gps("QuerySewadarsBadge", prms);

		}
		
		
		
private List<SqlParameter> QuerySewadarsOtherDisabilities_Params(Int32? sewadar_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("sewadar_id", sewadar_id, INT, IN, p);
			return p;
		}
		
public DataSet QuerySewadarsOtherDisabilities(Int32? sewadar_id)
		{
			List<SqlParameter> prms = QuerySewadarsOtherDisabilities_Params(sewadar_id);
			DataSet dset = esp("QuerySewadarsOtherDisabilities", prms);

			return dset;
		}
		
public string QuerySewadarsOtherDisabilitiesAsTask(Int32? sewadar_id)
		{
			List<SqlParameter> prms = QuerySewadarsOtherDisabilities_Params(sewadar_id);
			return gps("QuerySewadarsOtherDisabilities", prms);

		}
		
		
		
private List<SqlParameter> QuerySewadarsPhoto_Params(Int32? sewadar_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("sewadar_id", sewadar_id, INT, IN, p);
			return p;
		}
		
public DataSet QuerySewadarsPhoto(Int32? sewadar_id)
		{
			List<SqlParameter> prms = QuerySewadarsPhoto_Params(sewadar_id);
			DataSet dset = esp("QuerySewadarsPhoto", prms);

			return dset;
		}
		
public string QuerySewadarsPhotoAsTask(Int32? sewadar_id)
		{
			List<SqlParameter> prms = QuerySewadarsPhoto_Params(sewadar_id);
			return gps("QuerySewadarsPhoto", prms);

		}
		
		
		
private List<SqlParameter> QuerySewadarsQualification_Params(Int32? sewadar_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("sewadar_id", sewadar_id, INT, IN, p);
			return p;
		}
		
public DataSet QuerySewadarsQualification(Int32? sewadar_id)
		{
			List<SqlParameter> prms = QuerySewadarsQualification_Params(sewadar_id);
			DataSet dset = esp("QuerySewadarsQualification", prms);

			return dset;
		}
		
public string QuerySewadarsQualificationAsTask(Int32? sewadar_id)
		{
			List<SqlParameter> prms = QuerySewadarsQualification_Params(sewadar_id);
			return gps("QuerySewadarsQualification", prms);

		}
		
		
		
private List<SqlParameter> QuerySewadarsRemark_Params(Int32? sewadar_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("sewadar_id", sewadar_id, INT, IN, p);
			return p;
		}
		
public DataSet QuerySewadarsRemark(Int32? sewadar_id)
		{
			List<SqlParameter> prms = QuerySewadarsRemark_Params(sewadar_id);
			DataSet dset = esp("QuerySewadarsRemark", prms);

			return dset;
		}
		
public string QuerySewadarsRemarkAsTask(Int32? sewadar_id)
		{
			List<SqlParameter> prms = QuerySewadarsRemark_Params(sewadar_id);
			return gps("QuerySewadarsRemark", prms);

		}
		
		
		
private List<SqlParameter> QuerySewadarsResponsibilityChange_Params(Int32? satsang_centre_id, 
		                                                                        String sewadar_grno)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("satsang_centre_id", satsang_centre_id, INT, IN, p);
			csp("sewadar_grno", sewadar_grno, CHAR, IN, p);
			return p;
		}
		
public DataSet QuerySewadarsResponsibilityChange(Int32? satsang_centre_id, 
		                                                    String sewadar_grno)
		{
			List<SqlParameter> prms = QuerySewadarsResponsibilityChange_Params(satsang_centre_id, sewadar_grno);
			DataSet dset = esp("QuerySewadarsResponsibilityChange", prms);

			return dset;
		}
		
public string QuerySewadarsResponsibilityChangeAsTask(Int32? satsang_centre_id, 
		                                                            String sewadar_grno)
		{
			List<SqlParameter> prms = QuerySewadarsResponsibilityChange_Params(satsang_centre_id, sewadar_grno);
			return gps("QuerySewadarsResponsibilityChange", prms);

		}
		
		
		
private List<SqlParameter> QuerySewadarsSkill_Params(Int32? sewadar_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("sewadar_id", sewadar_id, INT, IN, p);
			return p;
		}
		
public DataSet QuerySewadarsSkill(Int32? sewadar_id)
		{
			List<SqlParameter> prms = QuerySewadarsSkill_Params(sewadar_id);
			DataSet dset = esp("QuerySewadarsSkill", prms);

			return dset;
		}
		
public string QuerySewadarsSkillAsTask(Int32? sewadar_id)
		{
			List<SqlParameter> prms = QuerySewadarsSkill_Params(sewadar_id);
			return gps("QuerySewadarsSkill", prms);

		}
		
		
		
private List<SqlParameter> QuerySewadarsStatusChange_Params(Int32? satsang_centre_id, 
		                                                                String sewadar_grno)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("satsang_centre_id", satsang_centre_id, INT, IN, p);
			csp("sewadar_grno", sewadar_grno, CHAR, IN, p);
			return p;
		}
		
public DataSet QuerySewadarsStatusChange(Int32? satsang_centre_id, 
		                                            String sewadar_grno)
		{
			List<SqlParameter> prms = QuerySewadarsStatusChange_Params(satsang_centre_id, sewadar_grno);
			DataSet dset = esp("QuerySewadarsStatusChange", prms);

			return dset;
		}
		
public string QuerySewadarsStatusChangeAsTask(Int32? satsang_centre_id, 
		                                                    String sewadar_grno)
		{
			List<SqlParameter> prms = QuerySewadarsStatusChange_Params(satsang_centre_id, sewadar_grno);
			return gps("QuerySewadarsStatusChange", prms);

		}
		
		
		
private List<SqlParameter> QuerySewadarsTransfer_Params(Int32? satsang_centre_id, 
		                                                            String sewadar_grno)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("satsang_centre_id", satsang_centre_id, INT, IN, p);
			csp("sewadar_grno", sewadar_grno, CHAR, IN, p);
			return p;
		}
		
public DataSet QuerySewadarsTransfer(Int32? satsang_centre_id, 
		                                        String sewadar_grno)
		{
			List<SqlParameter> prms = QuerySewadarsTransfer_Params(satsang_centre_id, sewadar_grno);
			DataSet dset = esp("QuerySewadarsTransfer", prms);

			return dset;
		}
		
public string QuerySewadarsTransferAsTask(Int32? satsang_centre_id, 
		                                                String sewadar_grno)
		{
			List<SqlParameter> prms = QuerySewadarsTransfer_Params(satsang_centre_id, sewadar_grno);
			return gps("QuerySewadarsTransfer", prms);

		}
		
		
		
private List<SqlParameter> QuerySewadarTeamWiseDailyAttendance_Params(Int32? satsang_centre_id, 
		                                                                            String sewadar_grno, 
		                                                                            Int32? sewa_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("satsang_centre_id", satsang_centre_id, INT, IN, p);
			csp("sewadar_grno", sewadar_grno, CHAR, IN, p);
			csp("sewa_id", sewa_id, INT, IN, p);
			return p;
		}
		
public DataSet QuerySewadarTeamWiseDailyAttendance(Int32? satsang_centre_id, 
		                                                        String sewadar_grno, 
		                                                        Int32? sewa_id)
		{
			List<SqlParameter> prms = QuerySewadarTeamWiseDailyAttendance_Params(satsang_centre_id, sewadar_grno, sewa_id);
			DataSet dset = esp("QuerySewadarTeamWiseDailyAttendance", prms);

			return dset;
		}
		
public string QuerySewadarTeamWiseDailyAttendanceAsTask(Int32? satsang_centre_id, 
		                                                            String sewadar_grno, 
		                                                            Int32? sewa_id)
		{
			List<SqlParameter> prms = QuerySewadarTeamWiseDailyAttendance_Params(satsang_centre_id, sewadar_grno, sewa_id);
			return gps("QuerySewadarTeamWiseDailyAttendance", prms);

		}
		
		
		
private List<SqlParameter> QuerySewadarTeamWiseDailyAttendanceForInsert_Params(Int32? satsang_centre_id, 
		                                                                                    String sewadar_grno, 
		                                                                                    Int32? sewa_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("satsang_centre_id", satsang_centre_id, INT, IN, p);
			csp("sewadar_grno", sewadar_grno, CHAR, IN, p);
			csp("sewa_id", sewa_id, INT, IN, p);
			return p;
		}
		
public DataSet QuerySewadarTeamWiseDailyAttendanceForInsert(Int32? satsang_centre_id, 
		                                                                String sewadar_grno, 
		                                                                Int32? sewa_id)
		{
			List<SqlParameter> prms = QuerySewadarTeamWiseDailyAttendanceForInsert_Params(satsang_centre_id, sewadar_grno, sewa_id);
			DataSet dset = esp("QuerySewadarTeamWiseDailyAttendanceForInsert", prms);

			return dset;
		}
		
public string QuerySewadarTeamWiseDailyAttendanceForInsertAsTask(Int32? satsang_centre_id, 
		                                                                    String sewadar_grno, 
		                                                                    Int32? sewa_id)
		{
			List<SqlParameter> prms = QuerySewadarTeamWiseDailyAttendanceForInsert_Params(satsang_centre_id, sewadar_grno, sewa_id);
			return gps("QuerySewadarTeamWiseDailyAttendanceForInsert", prms);

		}
		
		
		
private List<SqlParameter> QuerySewadarWiseSewaSummarie_Params(Int32? satsang_centre_id, 
		                                                                    String sewadar_grno)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("satsang_centre_id", satsang_centre_id, INT, IN, p);
			csp("sewadar_grno", sewadar_grno, CHAR, IN, p);
			return p;
		}
		
public DataSet QuerySewadarWiseSewaSummarie(Int32? satsang_centre_id, 
		                                                String sewadar_grno)
		{
			List<SqlParameter> prms = QuerySewadarWiseSewaSummarie_Params(satsang_centre_id, sewadar_grno);
			DataSet dset = esp("QuerySewadarWiseSewaSummarie", prms);

			return dset;
		}
		
public string QuerySewadarWiseSewaSummarieAsTask(Int32? satsang_centre_id, 
		                                                    String sewadar_grno)
		{
			List<SqlParameter> prms = QuerySewadarWiseSewaSummarie_Params(satsang_centre_id, sewadar_grno);
			return gps("QuerySewadarWiseSewaSummarie", prms);

		}
		
		
		
private List<SqlParameter> QuerySewaExemptionsApplicableSewa_Params(Int16? sewa_exemption_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("sewa_exemption_id", sewa_exemption_id, SMALLINT, IN, p);
			return p;
		}
		
public DataSet QuerySewaExemptionsApplicableSewa(Int16? sewa_exemption_id)
		{
			List<SqlParameter> prms = QuerySewaExemptionsApplicableSewa_Params(sewa_exemption_id);
			DataSet dset = esp("QuerySewaExemptionsApplicableSewa", prms);

			return dset;
		}
		
public string QuerySewaExemptionsApplicableSewaAsTask(Int16? sewa_exemption_id)
		{
			List<SqlParameter> prms = QuerySewaExemptionsApplicableSewa_Params(sewa_exemption_id);
			return gps("QuerySewaExemptionsApplicableSewa", prms);

		}
		
		
		
private List<SqlParameter> QuerySewasPeriod_Params(Int32? sewa_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("sewa_id", sewa_id, INT, IN, p);
			return p;
		}
		
public DataSet QuerySewasPeriod(Int32? sewa_id)
		{
			List<SqlParameter> prms = QuerySewasPeriod_Params(sewa_id);
			DataSet dset = esp("QuerySewasPeriod", prms);

			return dset;
		}
		
public string QuerySewasPeriodAsTask(Int32? sewa_id)
		{
			List<SqlParameter> prms = QuerySewasPeriod_Params(sewa_id);
			return gps("QuerySewasPeriod", prms);

		}
		
		
		
private List<SqlParameter> QuerySewasSatsangCentre_Params(Int32? sewa_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("sewa_id", sewa_id, INT, IN, p);
			return p;
		}
		
public DataSet QuerySewasSatsangCentre(Int32? sewa_id)
		{
			List<SqlParameter> prms = QuerySewasSatsangCentre_Params(sewa_id);
			DataSet dset = esp("QuerySewasSatsangCentre", prms);

			return dset;
		}
		
public string QuerySewasSatsangCentreAsTask(Int32? sewa_id)
		{
			List<SqlParameter> prms = QuerySewasSatsangCentre_Params(sewa_id);
			return gps("QuerySewasSatsangCentre", prms);

		}
		
		
		
private List<SqlParameter> QuerySewasSewaShift_Params(Int32? sewa_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("sewa_id", sewa_id, INT, IN, p);
			return p;
		}
		
public DataSet QuerySewasSewaShift(Int32? sewa_id)
		{
			List<SqlParameter> prms = QuerySewasSewaShift_Params(sewa_id);
			DataSet dset = esp("QuerySewasSewaShift", prms);

			return dset;
		}
		
public string QuerySewasSewaShiftAsTask(Int32? sewa_id)
		{
			List<SqlParameter> prms = QuerySewasSewaShift_Params(sewa_id);
			return gps("QuerySewasSewaShift", prms);

		}
		
		
		
private List<SqlParameter> QuerySewasSewaShiftCombinations_Params(Int32? sewa_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("sewa_id", sewa_id, INT, IN, p);
			return p;
		}
		
public DataSet QuerySewasSewaShiftCombinations(Int32? sewa_id)
		{
			List<SqlParameter> prms = QuerySewasSewaShiftCombinations_Params(sewa_id);
			DataSet dset = esp("QuerySewasSewaShiftCombinations", prms);

			return dset;
		}
		
public string QuerySewasSewaShiftCombinationsAsTask(Int32? sewa_id)
		{
			List<SqlParameter> prms = QuerySewasSewaShiftCombinations_Params(sewa_id);
			return gps("QuerySewasSewaShiftCombinations", prms);

		}
		
		
		
private List<SqlParameter> QuerySewaTeamWiseSewadar_Params(Int32? sewa_team_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("sewa_team_id", sewa_team_id, INT, IN, p);
			return p;
		}
		
public DataSet QuerySewaTeamWiseSewadar(Int32? sewa_team_id)
		{
			List<SqlParameter> prms = QuerySewaTeamWiseSewadar_Params(sewa_team_id);
			DataSet dset = esp("QuerySewaTeamWiseSewadar", prms);

			return dset;
		}
		
public string QuerySewaTeamWiseSewadarAsTask(Int32? sewa_team_id)
		{
			List<SqlParameter> prms = QuerySewaTeamWiseSewadar_Params(sewa_team_id);
			return gps("QuerySewaTeamWiseSewadar", prms);

		}
		
		
		
private List<SqlParameter> QuerySpeakers_Params(Int32? speaker_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("speaker_id", speaker_id, INT, IN, p);
			return p;
		}
		
public DataSet QuerySpeakers(Int32? speaker_id)
		{
			List<SqlParameter> prms = QuerySpeakers_Params(speaker_id);
			DataSet dset = esp("QuerySpeakers", prms);

			return dset;
		}
		
public string QuerySpeakersAsTask(Int32? speaker_id)
		{
			List<SqlParameter> prms = QuerySpeakers_Params(speaker_id);
			return gps("QuerySpeakers", prms);

		}
		
		
		
private List<SqlParameter> QuerySpeakersApprovalsRenewals_Params(Int32? speaker_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("speaker_id", speaker_id, INT, IN, p);
			return p;
		}
		
public DataSet QuerySpeakersApprovalsRenewals(Int32? speaker_id)
		{
			List<SqlParameter> prms = QuerySpeakersApprovalsRenewals_Params(speaker_id);
			DataSet dset = esp("QuerySpeakersApprovalsRenewals", prms);

			return dset;
		}
		
public string QuerySpeakersApprovalsRenewalsAsTask(Int32? speaker_id)
		{
			List<SqlParameter> prms = QuerySpeakersApprovalsRenewals_Params(speaker_id);
			return gps("QuerySpeakersApprovalsRenewals", prms);

		}
		
		
		
private List<SqlParameter> QuerySpeakersTrainings_Params(Int32? speaker_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("speaker_id", speaker_id, INT, IN, p);
			return p;
		}
		
public DataSet QuerySpeakersTrainings(Int32? speaker_id)
		{
			List<SqlParameter> prms = QuerySpeakersTrainings_Params(speaker_id);
			DataSet dset = esp("QuerySpeakersTrainings", prms);

			return dset;
		}
		
public string QuerySpeakersTrainingsAsTask(Int32? speaker_id)
		{
			List<SqlParameter> prms = QuerySpeakersTrainings_Params(speaker_id);
			return gps("QuerySpeakersTrainings", prms);

		}
		
		
		
private List<SqlParameter> QuerySubDepartment_Params(Int16? department_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("department_id", department_id, SMALLINT, IN, p);
			return p;
		}
		
public DataSet QuerySubDepartment(Int16? department_id)
		{
			List<SqlParameter> prms = QuerySubDepartment_Params(department_id);
			DataSet dset = esp("QuerySubDepartment", prms);

			return dset;
		}
		
public string QuerySubDepartmentAsTask(Int16? department_id)
		{
			List<SqlParameter> prms = QuerySubDepartment_Params(department_id);
			return gps("QuerySubDepartment", prms);

		}
		
		
		
private List<SqlParameter> QuerySubDepartmentsSatsangCentre_Params(Int16? sub_department_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("sub_department_id", sub_department_id, SMALLINT, IN, p);
			return p;
		}
		
public DataSet QuerySubDepartmentsSatsangCentre(Int16? sub_department_id)
		{
			List<SqlParameter> prms = QuerySubDepartmentsSatsangCentre_Params(sub_department_id);
			DataSet dset = esp("QuerySubDepartmentsSatsangCentre", prms);

			return dset;
		}
		
public string QuerySubDepartmentsSatsangCentreAsTask(Int16? sub_department_id)
		{
			List<SqlParameter> prms = QuerySubDepartmentsSatsangCentre_Params(sub_department_id);
			return gps("QuerySubDepartmentsSatsangCentre", prms);

		}
		
		
		
private List<SqlParameter> QuerySystemInformationValues_Params(String system_info_cd)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("system_info_cd", system_info_cd, VARCHAR, IN, p);
			return p;
		}
		
public DataSet QuerySystemInformationValues(String system_info_cd)
		{
			List<SqlParameter> prms = QuerySystemInformationValues_Params(system_info_cd);
			DataSet dset = esp("QuerySystemInformationValues", prms);

			return dset;
		}
		
public string QuerySystemInformationValuesAsTask(String system_info_cd)
		{
			List<SqlParameter> prms = QuerySystemInformationValues_Params(system_info_cd);
			return gps("QuerySystemInformationValues", prms);

		}
		
		
		
private List<SqlParameter> QueryTeamWiseDailyAttendance_Params(Int32? sewa_team_id, 
		                                                                    DateTime? attendance_dt)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("sewa_team_id", sewa_team_id, INT, IN, p);
			csp("attendance_dt", attendance_dt, SMALLDATETIME, IN, p);
			return p;
		}
		
public DataSet QueryTeamWiseDailyAttendance(Int32? sewa_team_id, 
		                                                DateTime? attendance_dt)
		{
			List<SqlParameter> prms = QueryTeamWiseDailyAttendance_Params(sewa_team_id, attendance_dt);
			DataSet dset = esp("QueryTeamWiseDailyAttendance", prms);

			return dset;
		}
		
public string QueryTeamWiseDailyAttendanceAsTask(Int32? sewa_team_id, 
		                                                    DateTime? attendance_dt)
		{
			List<SqlParameter> prms = QueryTeamWiseDailyAttendance_Params(sewa_team_id, attendance_dt);
			return gps("QueryTeamWiseDailyAttendance", prms);

		}
		
		
		
private List<SqlParameter> QueryTeamWiseDailyAttendanceForInsert_Params(Int32? sewa_team_id, 
		                                                                            DateTime? attendance_dt)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("sewa_team_id", sewa_team_id, INT, IN, p);
			csp("attendance_dt", attendance_dt, SMALLDATETIME, IN, p);
			return p;
		}
		
public DataSet QueryTeamWiseDailyAttendanceForInsert(Int32? sewa_team_id, 
		                                                        DateTime? attendance_dt)
		{
			List<SqlParameter> prms = QueryTeamWiseDailyAttendanceForInsert_Params(sewa_team_id, attendance_dt);
			DataSet dset = esp("QueryTeamWiseDailyAttendanceForInsert", prms);

			return dset;
		}
		
public string QueryTeamWiseDailyAttendanceForInsertAsTask(Int32? sewa_team_id, 
		                                                                DateTime? attendance_dt)
		{
			List<SqlParameter> prms = QueryTeamWiseDailyAttendanceForInsert_Params(sewa_team_id, attendance_dt);
			return gps("QueryTeamWiseDailyAttendanceForInsert", prms);

		}
		
		
		
private List<SqlParameter> QueryUsers_Params(Int32? user_no, 
		                                                String user_id, 
		                                                String user_nm, 
		                                                String email_id, 
		                                                DateTime? activation_dt, 
		                                                DateTime? deactivation_dt, 
		                                                String is_open_sewadar, 
		                                                Int32? sewadar_id, 
		                                                String is_locked, 
		                                                String user_role_id, 
		                                                String application_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("user_no", user_no, INT, IN, p);
			csp("user_id", user_id, VARCHAR, IN, p);
			csp("user_nm", user_nm, VARCHAR, IN, p);
			csp("email_id", email_id, VARCHAR, IN, p);
			csp("activation_dt", activation_dt, DATETIME, IN, p);
			csp("deactivation_dt", deactivation_dt, DATETIME, IN, p);
			csp("is_open_sewadar", is_open_sewadar, VARCHAR, IN, p);
			csp("sewadar_id", sewadar_id, INT, IN, p);
			csp("is_locked", is_locked, VARCHAR, IN, p);
			csp("user_role_id", user_role_id, VARCHAR, IN, p);
			csp("application_id", application_id, CHAR, IN, p);
			return p;
		}
		
public DataSet QueryUsers(Int32? user_no, 
		                                String user_id, 
		                                String user_nm, 
		                                String email_id, 
		                                DateTime? activation_dt, 
		                                DateTime? deactivation_dt, 
		                                String is_open_sewadar, 
		                                Int32? sewadar_id, 
		                                String is_locked, 
		                                String user_role_id, 
		                                String application_id)
		{
			List<SqlParameter> prms = QueryUsers_Params(user_no, user_id, user_nm, email_id, activation_dt, deactivation_dt, is_open_sewadar, sewadar_id, is_locked, user_role_id, application_id);
			DataSet dset = esp("QueryUsers", prms);

			return dset;
		}
		
public string QueryUsersAsTask(Int32? user_no, 
		                                    String user_id, 
		                                    String user_nm, 
		                                    String email_id, 
		                                    DateTime? activation_dt, 
		                                    DateTime? deactivation_dt, 
		                                    String is_open_sewadar, 
		                                    Int32? sewadar_id, 
		                                    String is_locked, 
		                                    String user_role_id, 
		                                    String application_id)
		{
			List<SqlParameter> prms = QueryUsers_Params(user_no, user_id, user_nm, email_id, activation_dt, deactivation_dt, is_open_sewadar, sewadar_id, is_locked, user_role_id, application_id);
			return gps("QueryUsers", prms);

		}
		
		
		
private List<SqlParameter> QueryUsersApplication_Params(Int32? user_no)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("user_no", user_no, INT, IN, p);
			return p;
		}
		
public DataSet QueryUsersApplication(Int32? user_no)
		{
			List<SqlParameter> prms = QueryUsersApplication_Params(user_no);
			DataSet dset = esp("QueryUsersApplication", prms);

			return dset;
		}
		
public string QueryUsersApplicationAsTask(Int32? user_no)
		{
			List<SqlParameter> prms = QueryUsersApplication_Params(user_no);
			return gps("QueryUsersApplication", prms);

		}
		
		
		
private List<SqlParameter> QueryWeeklySewaLocation_Params(Int32? weekly_sewa_location_id, 
		                                                                String weekly_sewa_location_nm, 
		                                                                Int32? satsang_centre_id, 
		                                                                String remarks, 
		                                                                DateTime? effective_from, 
		                                                                DateTime? effective_till, 
		                                                                Byte[] txn_ts)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("weekly_sewa_location_id", weekly_sewa_location_id, INT, IN, p);
			csp("weekly_sewa_location_nm", weekly_sewa_location_nm, VARCHAR, IN, p);
			csp("satsang_centre_id", satsang_centre_id, INT, IN, p);
			csp("remarks", remarks, VARCHAR, IN, p);
			csp("effective_from", effective_from, DATETIME, IN, p);
			csp("effective_till", effective_till, DATETIME, IN, p);
			csp("txn_ts", txn_ts, TIMESTAMP, IN, p);
			return p;
		}
		
public DataSet QueryWeeklySewaLocation(Int32? weekly_sewa_location_id, 
		                                            String weekly_sewa_location_nm, 
		                                            Int32? satsang_centre_id, 
		                                            String remarks, 
		                                            DateTime? effective_from, 
		                                            DateTime? effective_till, 
		                                            Byte[] txn_ts)
		{
			List<SqlParameter> prms = QueryWeeklySewaLocation_Params(weekly_sewa_location_id, weekly_sewa_location_nm, satsang_centre_id, remarks, effective_from, effective_till, txn_ts);
			DataSet dset = esp("QueryWeeklySewaLocation", prms);

			return dset;
		}
		
public string QueryWeeklySewaLocationAsTask(Int32? weekly_sewa_location_id, 
		                                                String weekly_sewa_location_nm, 
		                                                Int32? satsang_centre_id, 
		                                                String remarks, 
		                                                DateTime? effective_from, 
		                                                DateTime? effective_till, 
		                                                Byte[] txn_ts)
		{
			List<SqlParameter> prms = QueryWeeklySewaLocation_Params(weekly_sewa_location_id, weekly_sewa_location_nm, satsang_centre_id, remarks, effective_from, effective_till, txn_ts);
			return gps("QueryWeeklySewaLocation", prms);

		}
		
		
		
private List<SqlParameter> ReduceSewadarList_Params(Int16? p_scanning_job_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_scanning_job_id", p_scanning_job_id, SMALLINT, IN, p);
			return p;
		}
		
public DataSet ReduceSewadarList(Int16? p_scanning_job_id)
		{
			List<SqlParameter> prms = ReduceSewadarList_Params(p_scanning_job_id);
			DataSet dset = esp("ReduceSewadarList", prms);

			return dset;
		}
		
public string ReduceSewadarListAsTask(Int16? p_scanning_job_id)
		{
			List<SqlParameter> prms = ReduceSewadarList_Params(p_scanning_job_id);
			return gps("ReduceSewadarList", prms);

		}
		
		
		
		
		
private List<SqlParameter> RemoveAttributeUsingSewadarList_Params(Int32? p_sewadar_list_id, 
		                                                                        Int16? p_attribute_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_sewadar_list_id", p_sewadar_list_id, INT, IN, p);
			csp("p_attribute_id", p_attribute_id, SMALLINT, IN, p);
			return p;
		}
		
public DataSet RemoveAttributeUsingSewadarList(Int32? p_sewadar_list_id, 
		                                                    Int16? p_attribute_id)
		{
			List<SqlParameter> prms = RemoveAttributeUsingSewadarList_Params(p_sewadar_list_id, p_attribute_id);
			DataSet dset = esp("RemoveAttributeUsingSewadarList", prms);

			return dset;
		}
		
public string RemoveAttributeUsingSewadarListAsTask(Int32? p_sewadar_list_id, 
		                                                        Int16? p_attribute_id)
		{
			List<SqlParameter> prms = RemoveAttributeUsingSewadarList_Params(p_sewadar_list_id, p_attribute_id);
			return gps("RemoveAttributeUsingSewadarList", prms);

		}
		
		
		
private List<SqlParameter> ReportDiscrepancies_Params(String satsang_centre_nm, 
		                                                            Int32? satsang_centre_id, 
		                                                            ref String ret_str)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("satsang_centre_nm", satsang_centre_nm, VARCHAR, IN, p);
			csp("satsang_centre_id", satsang_centre_id, INT, IN, p);
			csp("ret_str", ret_str, VARCHAR, INOUT, p);
			return p;
		}
		
public DataSet ReportDiscrepancies(String satsang_centre_nm, 
		                                        Int32? satsang_centre_id, 
		                                        ref String ret_str)
		{
			List<SqlParameter> prms = ReportDiscrepancies_Params(satsang_centre_nm, satsang_centre_id, ref ret_str);
			DataSet dset = esp("ReportDiscrepancies", prms);
			ret_str = (System.String)prms.FirstOrDefault(p => p.ParameterName == "ret_str").Value;

			return dset;
		}
		
public string ReportDiscrepanciesAsTask(String satsang_centre_nm, 
		                                            Int32? satsang_centre_id, 
		                                            ref String ret_str)
		{
			List<SqlParameter> prms = ReportDiscrepancies_Params(satsang_centre_nm, satsang_centre_id, ref ret_str);
			return gps("ReportDiscrepancies", prms);

		}
		
		
		
private List<SqlParameter> ReportDiscrepanciesBulkRegister_Params(DataTable sewadar_registration_tbl, 
		                                                                        String satsang_centre_nm, 
		                                                                        Int32? satsang_centre_id, 
		                                                                        ref String ret_str)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("sewadar_registration_tbl", sewadar_registration_tbl, STRUCTURED, IN, p);
			csp("satsang_centre_nm", satsang_centre_nm, VARCHAR, IN, p);
			csp("satsang_centre_id", satsang_centre_id, INT, IN, p);
			csp("ret_str", ret_str, VARCHAR, INOUT, p);
			return p;
		}
		
public DataSet ReportDiscrepanciesBulkRegister(DataTable sewadar_registration_tbl, 
		                                                    String satsang_centre_nm, 
		                                                    Int32? satsang_centre_id, 
		                                                    ref String ret_str)
		{
			List<SqlParameter> prms = ReportDiscrepanciesBulkRegister_Params(sewadar_registration_tbl, satsang_centre_nm, satsang_centre_id, ref ret_str);
			DataSet dset = esp("ReportDiscrepanciesBulkRegister", prms);
			ret_str = (System.String)prms.FirstOrDefault(p => p.ParameterName == "ret_str").Value;

			return dset;
		}
		
public string ReportDiscrepanciesBulkRegisterAsTask(DataTable sewadar_registration_tbl, 
		                                                        String satsang_centre_nm, 
		                                                        Int32? satsang_centre_id, 
		                                                        ref String ret_str)
		{
			List<SqlParameter> prms = ReportDiscrepanciesBulkRegister_Params(sewadar_registration_tbl, satsang_centre_nm, satsang_centre_id, ref ret_str);
			return gps("ReportDiscrepanciesBulkRegister", prms);

		}
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
private List<SqlParameter> SetUserPassword_Params(String p_user_id, 
		                                                        String p_password)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_user_id", p_user_id, VARCHAR, IN, p);
			csp("p_password", p_password, VARCHAR, IN, p);
			return p;
		}
		
public DataSet SetUserPassword(String p_user_id, 
		                                    String p_password)
		{
			List<SqlParameter> prms = SetUserPassword_Params(p_user_id, p_password);
			DataSet dset = esp("SetUserPassword", prms);

			return dset;
		}
		
public string SetUserPasswordAsTask(String p_user_id, 
		                                        String p_password)
		{
			List<SqlParameter> prms = SetUserPassword_Params(p_user_id, p_password);
			return gps("SetUserPassword", prms);

		}
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
private List<SqlParameter> SewadarApplicationClearError_Params(Int32? p_application_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_application_id", p_application_id, INT, IN, p);
			return p;
		}
		
public DataSet SewadarApplicationClearError(Int32? p_application_id)
		{
			List<SqlParameter> prms = SewadarApplicationClearError_Params(p_application_id);
			DataSet dset = esp("SewadarApplicationClearError", prms);

			return dset;
		}
		
public string SewadarApplicationClearErrorAsTask(Int32? p_application_id)
		{
			List<SqlParameter> prms = SewadarApplicationClearError_Params(p_application_id);
			return gps("SewadarApplicationClearError", prms);

		}
		
		
		
private List<SqlParameter> SewadarApplicationMarkPending_Params(Int32? p_application_id, 
		                                                                    String p_reason)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_application_id", p_application_id, INT, IN, p);
			csp("p_reason", p_reason, VARCHAR, IN, p);
			return p;
		}
		
public DataSet SewadarApplicationMarkPending(Int32? p_application_id, 
		                                                String p_reason)
		{
			List<SqlParameter> prms = SewadarApplicationMarkPending_Params(p_application_id, p_reason);
			DataSet dset = esp("SewadarApplicationMarkPending", prms);

			return dset;
		}
		
public string SewadarApplicationMarkPendingAsTask(Int32? p_application_id, 
		                                                        String p_reason)
		{
			List<SqlParameter> prms = SewadarApplicationMarkPending_Params(p_application_id, p_reason);
			return gps("SewadarApplicationMarkPending", prms);

		}
		
		
		
private List<SqlParameter> SewadarApplicationProcess_Params(Int32? p_application_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_application_id", p_application_id, INT, IN, p);
			return p;
		}
		
public DataSet SewadarApplicationProcess(Int32? p_application_id)
		{
			List<SqlParameter> prms = SewadarApplicationProcess_Params(p_application_id);
			DataSet dset = esp("SewadarApplicationProcess", prms);

			return dset;
		}
		
public string SewadarApplicationProcessAsTask(Int32? p_application_id)
		{
			List<SqlParameter> prms = SewadarApplicationProcess_Params(p_application_id);
			return gps("SewadarApplicationProcess", prms);

		}
		
		
		
private List<SqlParameter> SewadarApplicationReject_Params(Int32? p_application_id, 
		                                                                String p_reason)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_application_id", p_application_id, INT, IN, p);
			csp("p_reason", p_reason, VARCHAR, IN, p);
			return p;
		}
		
public DataSet SewadarApplicationReject(Int32? p_application_id, 
		                                            String p_reason)
		{
			List<SqlParameter> prms = SewadarApplicationReject_Params(p_application_id, p_reason);
			DataSet dset = esp("SewadarApplicationReject", prms);

			return dset;
		}
		
public string SewadarApplicationRejectAsTask(Int32? p_application_id, 
		                                                String p_reason)
		{
			List<SqlParameter> prms = SewadarApplicationReject_Params(p_application_id, p_reason);
			return gps("SewadarApplicationReject", prms);

		}
		
		
		
private List<SqlParameter> SewadarApplicationVerify_Params(Int32? p_application_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_application_id", p_application_id, INT, IN, p);
			return p;
		}
		
public DataSet SewadarApplicationVerify(Int32? p_application_id)
		{
			List<SqlParameter> prms = SewadarApplicationVerify_Params(p_application_id);
			DataSet dset = esp("SewadarApplicationVerify", prms);

			return dset;
		}
		
public string SewadarApplicationVerifyAsTask(Int32? p_application_id)
		{
			List<SqlParameter> prms = SewadarApplicationVerify_Params(p_application_id);
			return gps("SewadarApplicationVerify", prms);

		}
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
private List<SqlParameter> SplitSewadarList_Params(Int32? p_sewadar_list_id, 
		                                                        Int32? p_sewadars_cnt)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_sewadar_list_id", p_sewadar_list_id, INT, IN, p);
			csp("p_sewadars_cnt", p_sewadars_cnt, INT, IN, p);
			return p;
		}
		
public DataSet SplitSewadarList(Int32? p_sewadar_list_id, 
		                                    Int32? p_sewadars_cnt)
		{
			List<SqlParameter> prms = SplitSewadarList_Params(p_sewadar_list_id, p_sewadars_cnt);
			DataSet dset = esp("SplitSewadarList", prms);

			return dset;
		}
		
public string SplitSewadarListAsTask(Int32? p_sewadar_list_id, 
		                                        Int32? p_sewadars_cnt)
		{
			List<SqlParameter> prms = SplitSewadarList_Params(p_sewadar_list_id, p_sewadars_cnt);
			return gps("SplitSewadarList", prms);

		}
		
		
		
		
		
		
		
private List<SqlParameter> SummariseDeptSewadarsCount_Params(Int32? p_satsang_centre_id, 
		                                                                String p_is_outstation, 
		                                                                Int32? p_sewadar_list_id, 
		                                                                ref Int32 p_session_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_satsang_centre_id", p_satsang_centre_id, INT, IN, p);
			csp("p_is_outstation", p_is_outstation, VARCHAR, IN, p);
			csp("p_sewadar_list_id", p_sewadar_list_id, INT, IN, p);
			csp("p_session_id", p_session_id, INT, INOUT, p);
			return p;
		}
		
public DataSet SummariseDeptSewadarsCount(Int32? p_satsang_centre_id, 
		                                                String p_is_outstation, 
		                                                Int32? p_sewadar_list_id, 
		                                                ref Int32 p_session_id)
		{
			List<SqlParameter> prms = SummariseDeptSewadarsCount_Params(p_satsang_centre_id, p_is_outstation, p_sewadar_list_id, ref p_session_id);
			DataSet dset = esp("SummariseDeptSewadarsCount", prms);
			p_session_id = (System.Int32)prms.FirstOrDefault(p => p.ParameterName == "p_session_id").Value;

			return dset;
		}
		
public string SummariseDeptSewadarsCountAsTask(Int32? p_satsang_centre_id, 
		                                                    String p_is_outstation, 
		                                                    Int32? p_sewadar_list_id, 
		                                                    ref Int32 p_session_id)
		{
			List<SqlParameter> prms = SummariseDeptSewadarsCount_Params(p_satsang_centre_id, p_is_outstation, p_sewadar_list_id, ref p_session_id);
			return gps("SummariseDeptSewadarsCount", prms);

		}
		
		
		
private List<SqlParameter> SummariseDeptSewadarsStatus_Params(Int32? p_satsang_centre_id, 
		                                                                    String p_statuses, 
		                                                                    String p_is_outstation, 
		                                                                    Int32? p_sewadar_list_id, 
		                                                                    ref Int32 p_session_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_satsang_centre_id", p_satsang_centre_id, INT, IN, p);
			csp("p_statuses", p_statuses, VARCHAR, IN, p);
			csp("p_is_outstation", p_is_outstation, VARCHAR, IN, p);
			csp("p_sewadar_list_id", p_sewadar_list_id, INT, IN, p);
			csp("p_session_id", p_session_id, INT, INOUT, p);
			return p;
		}
		
public DataSet SummariseDeptSewadarsStatus(Int32? p_satsang_centre_id, 
		                                                String p_statuses, 
		                                                String p_is_outstation, 
		                                                Int32? p_sewadar_list_id, 
		                                                ref Int32 p_session_id)
		{
			List<SqlParameter> prms = SummariseDeptSewadarsStatus_Params(p_satsang_centre_id, p_statuses, p_is_outstation, p_sewadar_list_id, ref p_session_id);
			DataSet dset = esp("SummariseDeptSewadarsStatus", prms);
			p_session_id = (System.Int32)prms.FirstOrDefault(p => p.ParameterName == "p_session_id").Value;

			return dset;
		}
		
public string SummariseDeptSewadarsStatusAsTask(Int32? p_satsang_centre_id, 
		                                                    String p_statuses, 
		                                                    String p_is_outstation, 
		                                                    Int32? p_sewadar_list_id, 
		                                                    ref Int32 p_session_id)
		{
			List<SqlParameter> prms = SummariseDeptSewadarsStatus_Params(p_satsang_centre_id, p_statuses, p_is_outstation, p_sewadar_list_id, ref p_session_id);
			return gps("SummariseDeptSewadarsStatus", prms);

		}
		
		
		
private List<SqlParameter> SummariseLocationWiseOpenSewadars_Params(Int32? p_satsang_centre_id, 
		                                                                        String p_satsang_centre_nm, 
		                                                                        String p_is_outstation, 
		                                                                        ref Int32 p_session_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_satsang_centre_id", p_satsang_centre_id, INT, IN, p);
			csp("p_satsang_centre_nm", p_satsang_centre_nm, VARCHAR, IN, p);
			csp("p_is_outstation", p_is_outstation, VARCHAR, IN, p);
			csp("p_session_id", p_session_id, INT, INOUT, p);
			return p;
		}
		
public DataSet SummariseLocationWiseOpenSewadars(Int32? p_satsang_centre_id, 
		                                                    String p_satsang_centre_nm, 
		                                                    String p_is_outstation, 
		                                                    ref Int32 p_session_id)
		{
			List<SqlParameter> prms = SummariseLocationWiseOpenSewadars_Params(p_satsang_centre_id, p_satsang_centre_nm, p_is_outstation, ref p_session_id);
			DataSet dset = esp("SummariseLocationWiseOpenSewadars", prms);
			p_session_id = (System.Int32)prms.FirstOrDefault(p => p.ParameterName == "p_session_id").Value;

			return dset;
		}
		
public string SummariseLocationWiseOpenSewadarsAsTask(Int32? p_satsang_centre_id, 
		                                                            String p_satsang_centre_nm, 
		                                                            String p_is_outstation, 
		                                                            ref Int32 p_session_id)
		{
			List<SqlParameter> prms = SummariseLocationWiseOpenSewadars_Params(p_satsang_centre_id, p_satsang_centre_nm, p_is_outstation, ref p_session_id);
			return gps("SummariseLocationWiseOpenSewadars", prms);

		}
		
		
		
private List<SqlParameter> SummariseLocationWiseTraineeOrOpenSewadars_Params(Int32? p_satsang_centre_id, 
		                                                                                String p_satsang_centre_nm, 
		                                                                                String p_is_outstation, 
		                                                                                String p_sewadar_type, 
		                                                                                ref Int32 p_session_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_satsang_centre_id", p_satsang_centre_id, INT, IN, p);
			csp("p_satsang_centre_nm", p_satsang_centre_nm, VARCHAR, IN, p);
			csp("p_is_outstation", p_is_outstation, VARCHAR, IN, p);
			csp("p_sewadar_type", p_sewadar_type, CHAR, IN, p);
			csp("p_session_id", p_session_id, INT, INOUT, p);
			return p;
		}
		
public DataSet SummariseLocationWiseTraineeOrOpenSewadars(Int32? p_satsang_centre_id, 
		                                                                String p_satsang_centre_nm, 
		                                                                String p_is_outstation, 
		                                                                String p_sewadar_type, 
		                                                                ref Int32 p_session_id)
		{
			List<SqlParameter> prms = SummariseLocationWiseTraineeOrOpenSewadars_Params(p_satsang_centre_id, p_satsang_centre_nm, p_is_outstation, p_sewadar_type, ref p_session_id);
			DataSet dset = esp("SummariseLocationWiseTraineeOrOpenSewadars", prms);
			p_session_id = (System.Int32)prms.FirstOrDefault(p => p.ParameterName == "p_session_id").Value;

			return dset;
		}
		
public string SummariseLocationWiseTraineeOrOpenSewadarsAsTask(Int32? p_satsang_centre_id, 
		                                                                    String p_satsang_centre_nm, 
		                                                                    String p_is_outstation, 
		                                                                    String p_sewadar_type, 
		                                                                    ref Int32 p_session_id)
		{
			List<SqlParameter> prms = SummariseLocationWiseTraineeOrOpenSewadars_Params(p_satsang_centre_id, p_satsang_centre_nm, p_is_outstation, p_sewadar_type, ref p_session_id);
			return gps("SummariseLocationWiseTraineeOrOpenSewadars", prms);

		}
		
		
		
private List<SqlParameter> SummariseLocationWiseTraineeSewadars_Params(Int32? p_satsang_centre_id, 
		                                                                            String p_satsang_centre_nm, 
		                                                                            String p_is_outstation, 
		                                                                            ref Int32 p_session_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_satsang_centre_id", p_satsang_centre_id, INT, IN, p);
			csp("p_satsang_centre_nm", p_satsang_centre_nm, VARCHAR, IN, p);
			csp("p_is_outstation", p_is_outstation, VARCHAR, IN, p);
			csp("p_session_id", p_session_id, INT, INOUT, p);
			return p;
		}
		
public DataSet SummariseLocationWiseTraineeSewadars(Int32? p_satsang_centre_id, 
		                                                        String p_satsang_centre_nm, 
		                                                        String p_is_outstation, 
		                                                        ref Int32 p_session_id)
		{
			List<SqlParameter> prms = SummariseLocationWiseTraineeSewadars_Params(p_satsang_centre_id, p_satsang_centre_nm, p_is_outstation, ref p_session_id);
			DataSet dset = esp("SummariseLocationWiseTraineeSewadars", prms);
			p_session_id = (System.Int32)prms.FirstOrDefault(p => p.ParameterName == "p_session_id").Value;

			return dset;
		}
		
public string SummariseLocationWiseTraineeSewadarsAsTask(Int32? p_satsang_centre_id, 
		                                                            String p_satsang_centre_nm, 
		                                                            String p_is_outstation, 
		                                                            ref Int32 p_session_id)
		{
			List<SqlParameter> prms = SummariseLocationWiseTraineeSewadars_Params(p_satsang_centre_id, p_satsang_centre_nm, p_is_outstation, ref p_session_id);
			return gps("SummariseLocationWiseTraineeSewadars", prms);

		}
		
		
		
private List<SqlParameter> SummariseSessionDeptSubDeptWise_Params(Int32? p_session_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_session_id", p_session_id, INT, IN, p);
			return p;
		}
		
public DataSet SummariseSessionDeptSubDeptWise(Int32? p_session_id)
		{
			List<SqlParameter> prms = SummariseSessionDeptSubDeptWise_Params(p_session_id);
			DataSet dset = esp("SummariseSessionDeptSubDeptWise", prms);

			return dset;
		}
		
public string SummariseSessionDeptSubDeptWiseAsTask(Int32? p_session_id)
		{
			List<SqlParameter> prms = SummariseSessionDeptSubDeptWise_Params(p_session_id);
			return gps("SummariseSessionDeptSubDeptWise", prms);

		}
		
		
		
private List<SqlParameter> SummariseSessionDeptWise_Params(Int32? p_session_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_session_id", p_session_id, INT, IN, p);
			return p;
		}
		
public DataSet SummariseSessionDeptWise(Int32? p_session_id)
		{
			List<SqlParameter> prms = SummariseSessionDeptWise_Params(p_session_id);
			DataSet dset = esp("SummariseSessionDeptWise", prms);

			return dset;
		}
		
public string SummariseSessionDeptWiseAsTask(Int32? p_session_id)
		{
			List<SqlParameter> prms = SummariseSessionDeptWise_Params(p_session_id);
			return gps("SummariseSessionDeptWise", prms);

		}
		
		
		
private List<SqlParameter> SummariseSewa_Params(Int32? p_sewa_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_sewa_id", p_sewa_id, INT, IN, p);
			return p;
		}
		
public DataSet SummariseSewa(Int32? p_sewa_id)
		{
			List<SqlParameter> prms = SummariseSewa_Params(p_sewa_id);
			DataSet dset = esp("SummariseSewa", prms);

			return dset;
		}
		
public string SummariseSewaAsTask(Int32? p_sewa_id)
		{
			List<SqlParameter> prms = SummariseSewa_Params(p_sewa_id);
			return gps("SummariseSewa", prms);

		}
		
		
		
private List<SqlParameter> SummariseSewadarStatusCount_Params(Int32? p_satsang_centre_id, 
		                                                                    String p_satsang_centre_nm, 
		                                                                    Int32? p_sewadar_list_id, 
		                                                                    ref Int32 p_session_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_satsang_centre_id", p_satsang_centre_id, INT, IN, p);
			csp("p_satsang_centre_nm", p_satsang_centre_nm, VARCHAR, IN, p);
			csp("p_sewadar_list_id", p_sewadar_list_id, INT, IN, p);
			csp("p_session_id", p_session_id, INT, INOUT, p);
			return p;
		}
		
public DataSet SummariseSewadarStatusCount(Int32? p_satsang_centre_id, 
		                                                String p_satsang_centre_nm, 
		                                                Int32? p_sewadar_list_id, 
		                                                ref Int32 p_session_id)
		{
			List<SqlParameter> prms = SummariseSewadarStatusCount_Params(p_satsang_centre_id, p_satsang_centre_nm, p_sewadar_list_id, ref p_session_id);
			DataSet dset = esp("SummariseSewadarStatusCount", prms);
			p_session_id = (System.Int32)prms.FirstOrDefault(p => p.ParameterName == "p_session_id").Value;

			return dset;
		}
		
public string SummariseSewadarStatusCountAsTask(Int32? p_satsang_centre_id, 
		                                                    String p_satsang_centre_nm, 
		                                                    Int32? p_sewadar_list_id, 
		                                                    ref Int32 p_session_id)
		{
			List<SqlParameter> prms = SummariseSewadarStatusCount_Params(p_satsang_centre_id, p_satsang_centre_nm, p_sewadar_list_id, ref p_session_id);
			return gps("SummariseSewadarStatusCount", prms);

		}
		
		
		
private List<SqlParameter> SummariseSewaForSewadar_Params(Int32? p_sewa_id, 
		                                                                Int32? p_satsang_centre_id, 
		                                                                String p_sewadar_grno)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_sewa_id", p_sewa_id, INT, IN, p);
			csp("p_satsang_centre_id", p_satsang_centre_id, INT, IN, p);
			csp("p_sewadar_grno", p_sewadar_grno, CHAR, IN, p);
			return p;
		}
		
public DataSet SummariseSewaForSewadar(Int32? p_sewa_id, 
		                                            Int32? p_satsang_centre_id, 
		                                            String p_sewadar_grno)
		{
			List<SqlParameter> prms = SummariseSewaForSewadar_Params(p_sewa_id, p_satsang_centre_id, p_sewadar_grno);
			DataSet dset = esp("SummariseSewaForSewadar", prms);

			return dset;
		}
		
public string SummariseSewaForSewadarAsTask(Int32? p_sewa_id, 
		                                                Int32? p_satsang_centre_id, 
		                                                String p_sewadar_grno)
		{
			List<SqlParameter> prms = SummariseSewaForSewadar_Params(p_sewa_id, p_satsang_centre_id, p_sewadar_grno);
			return gps("SummariseSewaForSewadar", prms);

		}
		
		
		
private List<SqlParameter> SummariseSewasForSewadar_Params(Int32? p_satsang_centre_id, 
		                                                                String p_sewadar_grno)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_satsang_centre_id", p_satsang_centre_id, INT, IN, p);
			csp("p_sewadar_grno", p_sewadar_grno, CHAR, IN, p);
			return p;
		}
		
public DataSet SummariseSewasForSewadar(Int32? p_satsang_centre_id, 
		                                            String p_sewadar_grno)
		{
			List<SqlParameter> prms = SummariseSewasForSewadar_Params(p_satsang_centre_id, p_sewadar_grno);
			DataSet dset = esp("SummariseSewasForSewadar", prms);

			return dset;
		}
		
public string SummariseSewasForSewadarAsTask(Int32? p_satsang_centre_id, 
		                                                String p_sewadar_grno)
		{
			List<SqlParameter> prms = SummariseSewasForSewadar_Params(p_satsang_centre_id, p_sewadar_grno);
			return gps("SummariseSewasForSewadar", prms);

		}
		
		
		
private List<SqlParameter> SummariseSubDeptSewadarsCount_Params(Int32? p_satsang_centre_id, 
		                                                                    String p_satsang_centre_nm, 
		                                                                    String p_is_outstation, 
		                                                                    String p_sewadar_type, 
		                                                                    Int32? p_sewadar_list_id, 
		                                                                    ref Int32 p_session_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_satsang_centre_id", p_satsang_centre_id, INT, IN, p);
			csp("p_satsang_centre_nm", p_satsang_centre_nm, VARCHAR, IN, p);
			csp("p_is_outstation", p_is_outstation, VARCHAR, IN, p);
			csp("p_sewadar_type", p_sewadar_type, VARCHAR, IN, p);
			csp("p_sewadar_list_id", p_sewadar_list_id, INT, IN, p);
			csp("p_session_id", p_session_id, INT, INOUT, p);
			return p;
		}
		
public DataSet SummariseSubDeptSewadarsCount(Int32? p_satsang_centre_id, 
		                                                String p_satsang_centre_nm, 
		                                                String p_is_outstation, 
		                                                String p_sewadar_type, 
		                                                Int32? p_sewadar_list_id, 
		                                                ref Int32 p_session_id)
		{
			List<SqlParameter> prms = SummariseSubDeptSewadarsCount_Params(p_satsang_centre_id, p_satsang_centre_nm, p_is_outstation, p_sewadar_type, p_sewadar_list_id, ref p_session_id);
			DataSet dset = esp("SummariseSubDeptSewadarsCount", prms);
			p_session_id = (System.Int32)prms.FirstOrDefault(p => p.ParameterName == "p_session_id").Value;

			return dset;
		}
		
public string SummariseSubDeptSewadarsCountAsTask(Int32? p_satsang_centre_id, 
		                                                        String p_satsang_centre_nm, 
		                                                        String p_is_outstation, 
		                                                        String p_sewadar_type, 
		                                                        Int32? p_sewadar_list_id, 
		                                                        ref Int32 p_session_id)
		{
			List<SqlParameter> prms = SummariseSubDeptSewadarsCount_Params(p_satsang_centre_id, p_satsang_centre_nm, p_is_outstation, p_sewadar_type, p_sewadar_list_id, ref p_session_id);
			return gps("SummariseSubDeptSewadarsCount", prms);

		}
		
		
		
private List<SqlParameter> SynopsisSessionDeptWise_Params(Int32? p_session_id, 
		                                                                Int32? p_satsang_centre_id, 
		                                                                Int32? p_sewa_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_session_id", p_session_id, INT, IN, p);
			csp("p_satsang_centre_id", p_satsang_centre_id, INT, IN, p);
			csp("p_sewa_id", p_sewa_id, INT, IN, p);
			return p;
		}
		
public DataSet SynopsisSessionDeptWise(Int32? p_session_id, 
		                                            Int32? p_satsang_centre_id, 
		                                            Int32? p_sewa_id)
		{
			List<SqlParameter> prms = SynopsisSessionDeptWise_Params(p_session_id, p_satsang_centre_id, p_sewa_id);
			DataSet dset = esp("SynopsisSessionDeptWise", prms);

			return dset;
		}
		
public string SynopsisSessionDeptWiseAsTask(Int32? p_session_id, 
		                                                Int32? p_satsang_centre_id, 
		                                                Int32? p_sewa_id)
		{
			List<SqlParameter> prms = SynopsisSessionDeptWise_Params(p_session_id, p_satsang_centre_id, p_sewa_id);
			return gps("SynopsisSessionDeptWise", prms);

		}
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
private List<SqlParameter> TransferSewadarToSatsangCentre_Params(Int32? p_current_satsang_centre_id, 
		                                                                    String p_current_sewadar_grno, 
		                                                                    Int32? p_new_satsang_centre_id, 
		                                                                    DateTime? p_effective_dt, 
		                                                                    Int16? p_department_id, 
		                                                                    Int16? p_sub_department_id, 
		                                                                    String p_is_outstation_sewadar, 
		                                                                    String p_remarks, 
		                                                                    ref String p_new_sewadar_grno)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_current_satsang_centre_id", p_current_satsang_centre_id, INT, IN, p);
			csp("p_current_sewadar_grno", p_current_sewadar_grno, CHAR, IN, p);
			csp("p_new_satsang_centre_id", p_new_satsang_centre_id, INT, IN, p);
			csp("p_effective_dt", p_effective_dt, SMALLDATETIME, IN, p);
			csp("p_department_id", p_department_id, SMALLINT, IN, p);
			csp("p_sub_department_id", p_sub_department_id, SMALLINT, IN, p);
			csp("p_is_outstation_sewadar", p_is_outstation_sewadar, VARCHAR, IN, p);
			csp("p_remarks", p_remarks, VARCHAR, IN, p);
			csp("p_new_sewadar_grno", p_new_sewadar_grno, CHAR, INOUT, p);
			return p;
		}
		
public DataSet TransferSewadarToSatsangCentre(Int32? p_current_satsang_centre_id, 
		                                                    String p_current_sewadar_grno, 
		                                                    Int32? p_new_satsang_centre_id, 
		                                                    DateTime? p_effective_dt, 
		                                                    Int16? p_department_id, 
		                                                    Int16? p_sub_department_id, 
		                                                    String p_is_outstation_sewadar, 
		                                                    String p_remarks, 
		                                                    ref String p_new_sewadar_grno)
		{
			List<SqlParameter> prms = TransferSewadarToSatsangCentre_Params(p_current_satsang_centre_id, p_current_sewadar_grno, p_new_satsang_centre_id, p_effective_dt, p_department_id, p_sub_department_id, p_is_outstation_sewadar, p_remarks, ref p_new_sewadar_grno);
			DataSet dset = esp("TransferSewadarToSatsangCentre", prms);
			p_new_sewadar_grno = (System.String)prms.FirstOrDefault(p => p.ParameterName == "p_new_sewadar_grno").Value;

			return dset;
		}
		
public string TransferSewadarToSatsangCentreAsTask(Int32? p_current_satsang_centre_id, 
		                                                        String p_current_sewadar_grno, 
		                                                        Int32? p_new_satsang_centre_id, 
		                                                        DateTime? p_effective_dt, 
		                                                        Int16? p_department_id, 
		                                                        Int16? p_sub_department_id, 
		                                                        String p_is_outstation_sewadar, 
		                                                        String p_remarks, 
		                                                        ref String p_new_sewadar_grno)
		{
			List<SqlParameter> prms = TransferSewadarToSatsangCentre_Params(p_current_satsang_centre_id, p_current_sewadar_grno, p_new_satsang_centre_id, p_effective_dt, p_department_id, p_sub_department_id, p_is_outstation_sewadar, p_remarks, ref p_new_sewadar_grno);
			return gps("TransferSewadarToSatsangCentre", prms);

		}
		
		
		
private List<SqlParameter> UnionGenericSewadarListsSewadar_Params(Int32? sewadar_list_id, 
		                                                                        Int32? other_sewadar_list_id, 
		                                                                        Boolean? is_delete_list)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("sewadar_list_id", sewadar_list_id, INT, IN, p);
			csp("other_sewadar_list_id", other_sewadar_list_id, INT, IN, p);
			csp("is_delete_list", is_delete_list, BIT, IN, p);
			return p;
		}
		
public DataSet UnionGenericSewadarListsSewadar(Int32? sewadar_list_id, 
		                                                    Int32? other_sewadar_list_id, 
		                                                    Boolean? is_delete_list)
		{
			List<SqlParameter> prms = UnionGenericSewadarListsSewadar_Params(sewadar_list_id, other_sewadar_list_id, is_delete_list);
			DataSet dset = esp("UnionGenericSewadarListsSewadar", prms);

			return dset;
		}
		
public string UnionGenericSewadarListsSewadarAsTask(Int32? sewadar_list_id, 
		                                                        Int32? other_sewadar_list_id, 
		                                                        Boolean? is_delete_list)
		{
			List<SqlParameter> prms = UnionGenericSewadarListsSewadar_Params(sewadar_list_id, other_sewadar_list_id, is_delete_list);
			return gps("UnionGenericSewadarListsSewadar", prms);

		}
		
		
		
private List<SqlParameter> UnLockSewa_Params(Int32? p_sewa_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_sewa_id", p_sewa_id, INT, IN, p);
			return p;
		}
		
public DataSet UnLockSewa(Int32? p_sewa_id)
		{
			List<SqlParameter> prms = UnLockSewa_Params(p_sewa_id);
			DataSet dset = esp("UnLockSewa", prms);

			return dset;
		}
		
public string UnLockSewaAsTask(Int32? p_sewa_id)
		{
			List<SqlParameter> prms = UnLockSewa_Params(p_sewa_id);
			return gps("UnLockSewa", prms);

		}
		
		
		
private List<SqlParameter> UpdateArbitraryDailyPresence_Params(Int32? sewa_id, 
		                                                                    Int32? satsang_centre_id, 
		                                                                    String sewadar_grno, 
		                                                                    DateTime? presence_dt, 
		                                                                    String is_scanned, 
		                                                                    Int32? old_sewa_id, 
		                                                                    Int32? old_satsang_centre_id, 
		                                                                    String old_sewadar_grno, 
		                                                                    DateTime? old_presence_dt)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("sewa_id", sewa_id, INT, IN, p);
			csp("satsang_centre_id", satsang_centre_id, INT, IN, p);
			csp("sewadar_grno", sewadar_grno, CHAR, IN, p);
			csp("presence_dt", presence_dt, SMALLDATETIME, IN, p);
			csp("is_scanned", is_scanned, VARCHAR, IN, p);
			csp("old_sewa_id", old_sewa_id, INT, IN, p);
			csp("old_satsang_centre_id", old_satsang_centre_id, INT, IN, p);
			csp("old_sewadar_grno", old_sewadar_grno, CHAR, IN, p);
			csp("old_presence_dt", old_presence_dt, SMALLDATETIME, IN, p);
			return p;
		}
		
public DataSet UpdateArbitraryDailyPresence(Int32? sewa_id, 
		                                                Int32? satsang_centre_id, 
		                                                String sewadar_grno, 
		                                                DateTime? presence_dt, 
		                                                String is_scanned, 
		                                                Int32? old_sewa_id, 
		                                                Int32? old_satsang_centre_id, 
		                                                String old_sewadar_grno, 
		                                                DateTime? old_presence_dt)
		{
			List<SqlParameter> prms = UpdateArbitraryDailyPresence_Params(sewa_id, satsang_centre_id, sewadar_grno, presence_dt, is_scanned, old_sewa_id, old_satsang_centre_id, old_sewadar_grno, old_presence_dt);
			DataSet dset = esp("UpdateArbitraryDailyPresence", prms);

			return dset;
		}
		
public string UpdateArbitraryDailyPresenceAsTask(Int32? sewa_id, 
		                                                    Int32? satsang_centre_id, 
		                                                    String sewadar_grno, 
		                                                    DateTime? presence_dt, 
		                                                    String is_scanned, 
		                                                    Int32? old_sewa_id, 
		                                                    Int32? old_satsang_centre_id, 
		                                                    String old_sewadar_grno, 
		                                                    DateTime? old_presence_dt)
		{
			List<SqlParameter> prms = UpdateArbitraryDailyPresence_Params(sewa_id, satsang_centre_id, sewadar_grno, presence_dt, is_scanned, old_sewa_id, old_satsang_centre_id, old_sewadar_grno, old_presence_dt);
			return gps("UpdateArbitraryDailyPresence", prms);

		}
		
		
		
private List<SqlParameter> UpdateArbitraryShiftPresence_Params(Int32? sewa_id, 
		                                                                    Int32? satsang_centre_id, 
		                                                                    String sewadar_grno, 
		                                                                    DateTime? presence_dt, 
		                                                                    String sewa_shift, 
		                                                                    String is_scanned, 
		                                                                    Int32? old_sewa_id, 
		                                                                    Int32? old_satsang_centre_id, 
		                                                                    String old_sewadar_grno, 
		                                                                    DateTime? old_presence_dt, 
		                                                                    String old_sewa_shift)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("sewa_id", sewa_id, INT, IN, p);
			csp("satsang_centre_id", satsang_centre_id, INT, IN, p);
			csp("sewadar_grno", sewadar_grno, CHAR, IN, p);
			csp("presence_dt", presence_dt, SMALLDATETIME, IN, p);
			csp("sewa_shift", sewa_shift, VARCHAR, IN, p);
			csp("is_scanned", is_scanned, VARCHAR, IN, p);
			csp("old_sewa_id", old_sewa_id, INT, IN, p);
			csp("old_satsang_centre_id", old_satsang_centre_id, INT, IN, p);
			csp("old_sewadar_grno", old_sewadar_grno, CHAR, IN, p);
			csp("old_presence_dt", old_presence_dt, SMALLDATETIME, IN, p);
			csp("old_sewa_shift", old_sewa_shift, VARCHAR, IN, p);
			return p;
		}
		
public DataSet UpdateArbitraryShiftPresence(Int32? sewa_id, 
		                                                Int32? satsang_centre_id, 
		                                                String sewadar_grno, 
		                                                DateTime? presence_dt, 
		                                                String sewa_shift, 
		                                                String is_scanned, 
		                                                Int32? old_sewa_id, 
		                                                Int32? old_satsang_centre_id, 
		                                                String old_sewadar_grno, 
		                                                DateTime? old_presence_dt, 
		                                                String old_sewa_shift)
		{
			List<SqlParameter> prms = UpdateArbitraryShiftPresence_Params(sewa_id, satsang_centre_id, sewadar_grno, presence_dt, sewa_shift, is_scanned, old_sewa_id, old_satsang_centre_id, old_sewadar_grno, old_presence_dt, old_sewa_shift);
			DataSet dset = esp("UpdateArbitraryShiftPresence", prms);

			return dset;
		}
		
public string UpdateArbitraryShiftPresenceAsTask(Int32? sewa_id, 
		                                                    Int32? satsang_centre_id, 
		                                                    String sewadar_grno, 
		                                                    DateTime? presence_dt, 
		                                                    String sewa_shift, 
		                                                    String is_scanned, 
		                                                    Int32? old_sewa_id, 
		                                                    Int32? old_satsang_centre_id, 
		                                                    String old_sewadar_grno, 
		                                                    DateTime? old_presence_dt, 
		                                                    String old_sewa_shift)
		{
			List<SqlParameter> prms = UpdateArbitraryShiftPresence_Params(sewa_id, satsang_centre_id, sewadar_grno, presence_dt, sewa_shift, is_scanned, old_sewa_id, old_satsang_centre_id, old_sewadar_grno, old_presence_dt, old_sewa_shift);
			return gps("UpdateArbitraryShiftPresence", prms);

		}
		
		
		
private List<SqlParameter> UpdateArbitrarySummarisedExemption_Params(Int32? sewa_id, 
		                                                                        Int32? satsang_centre_id, 
		                                                                        String sewadar_grno, 
		                                                                        Int16? sewa_exemption_id, 
		                                                                        Decimal? exemption_days, 
		                                                                        Int32? old_sewa_id, 
		                                                                        Int32? old_satsang_centre_id, 
		                                                                        String old_sewadar_grno)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("sewa_id", sewa_id, INT, IN, p);
			csp("satsang_centre_id", satsang_centre_id, INT, IN, p);
			csp("sewadar_grno", sewadar_grno, CHAR, IN, p);
			csp("sewa_exemption_id", sewa_exemption_id, SMALLINT, IN, p);
			csp("exemption_days", exemption_days, DECIMAL, IN, p);
			csp("old_sewa_id", old_sewa_id, INT, IN, p);
			csp("old_satsang_centre_id", old_satsang_centre_id, INT, IN, p);
			csp("old_sewadar_grno", old_sewadar_grno, CHAR, IN, p);
			return p;
		}
		
public DataSet UpdateArbitrarySummarisedExemption(Int32? sewa_id, 
		                                                        Int32? satsang_centre_id, 
		                                                        String sewadar_grno, 
		                                                        Int16? sewa_exemption_id, 
		                                                        Decimal? exemption_days, 
		                                                        Int32? old_sewa_id, 
		                                                        Int32? old_satsang_centre_id, 
		                                                        String old_sewadar_grno)
		{
			List<SqlParameter> prms = UpdateArbitrarySummarisedExemption_Params(sewa_id, satsang_centre_id, sewadar_grno, sewa_exemption_id, exemption_days, old_sewa_id, old_satsang_centre_id, old_sewadar_grno);
			DataSet dset = esp("UpdateArbitrarySummarisedExemption", prms);

			return dset;
		}
		
public string UpdateArbitrarySummarisedExemptionAsTask(Int32? sewa_id, 
		                                                            Int32? satsang_centre_id, 
		                                                            String sewadar_grno, 
		                                                            Int16? sewa_exemption_id, 
		                                                            Decimal? exemption_days, 
		                                                            Int32? old_sewa_id, 
		                                                            Int32? old_satsang_centre_id, 
		                                                            String old_sewadar_grno)
		{
			List<SqlParameter> prms = UpdateArbitrarySummarisedExemption_Params(sewa_id, satsang_centre_id, sewadar_grno, sewa_exemption_id, exemption_days, old_sewa_id, old_satsang_centre_id, old_sewadar_grno);
			return gps("UpdateArbitrarySummarisedExemption", prms);

		}
		
		
		
private List<SqlParameter> UpdateBadgeTemplate_Params(String badge_template_id, 
		                                                            String badge_template_nm, 
		                                                            String badge_shape, 
		                                                            String information_type, 
		                                                            String foreground_colour_control, 
		                                                            Int16? foreground_colour_id, 
		                                                            String background_colour_control, 
		                                                            Int16? background_colour_id, 
		                                                            Byte? top_line_font_size, 
		                                                            String top_line_part_1_type, 
		                                                            String top_line_part_1_text, 
		                                                            String top_line_parts_separator, 
		                                                            String top_line_part_2_type, 
		                                                            String top_line_part_2_text, 
		                                                            Byte? middle_line_font_size, 
		                                                            String middle_line_part_1_type, 
		                                                            String middle_line_part_1_text, 
		                                                            String middle_line_parts_separator, 
		                                                            String middle_line_part_2_type, 
		                                                            String middle_line_part_2_text, 
		                                                            Byte? bottom_line_font_size, 
		                                                            String bottom_line_part_1_type, 
		                                                            String bottom_line_part_1_text, 
		                                                            String bottom_line_parts_separator, 
		                                                            String bottom_line_part_2_type, 
		                                                            String bottom_line_part_2_text, 
		                                                            String expiry_year, 
		                                                            String report_file_nm_front, 
		                                                            String report_file_nm_back, 
		                                                            String procedure_nm_front, 
		                                                            String procedure_nm_back, 
		                                                            String are_outstation_sewadars_allowed, 
		                                                            Byte[] txn_ts)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("badge_template_id", badge_template_id, VARCHAR, IN, p);
			csp("badge_template_nm", badge_template_nm, VARCHAR, IN, p);
			csp("badge_shape", badge_shape, VARCHAR, IN, p);
			csp("information_type", information_type, VARCHAR, IN, p);
			csp("foreground_colour_control", foreground_colour_control, VARCHAR, IN, p);
			csp("foreground_colour_id", foreground_colour_id, SMALLINT, IN, p);
			csp("background_colour_control", background_colour_control, VARCHAR, IN, p);
			csp("background_colour_id", background_colour_id, SMALLINT, IN, p);
			csp("top_line_font_size", top_line_font_size, TINYINT, IN, p);
			csp("top_line_part_1_type", top_line_part_1_type, VARCHAR, IN, p);
			csp("top_line_part_1_text", top_line_part_1_text, VARCHAR, IN, p);
			csp("top_line_parts_separator", top_line_parts_separator, VARCHAR, IN, p);
			csp("top_line_part_2_type", top_line_part_2_type, VARCHAR, IN, p);
			csp("top_line_part_2_text", top_line_part_2_text, VARCHAR, IN, p);
			csp("middle_line_font_size", middle_line_font_size, TINYINT, IN, p);
			csp("middle_line_part_1_type", middle_line_part_1_type, VARCHAR, IN, p);
			csp("middle_line_part_1_text", middle_line_part_1_text, VARCHAR, IN, p);
			csp("middle_line_parts_separator", middle_line_parts_separator, VARCHAR, IN, p);
			csp("middle_line_part_2_type", middle_line_part_2_type, VARCHAR, IN, p);
			csp("middle_line_part_2_text", middle_line_part_2_text, VARCHAR, IN, p);
			csp("bottom_line_font_size", bottom_line_font_size, TINYINT, IN, p);
			csp("bottom_line_part_1_type", bottom_line_part_1_type, VARCHAR, IN, p);
			csp("bottom_line_part_1_text", bottom_line_part_1_text, VARCHAR, IN, p);
			csp("bottom_line_parts_separator", bottom_line_parts_separator, VARCHAR, IN, p);
			csp("bottom_line_part_2_type", bottom_line_part_2_type, VARCHAR, IN, p);
			csp("bottom_line_part_2_text", bottom_line_part_2_text, VARCHAR, IN, p);
			csp("expiry_year", expiry_year, CHAR, IN, p);
			csp("report_file_nm_front", report_file_nm_front, VARCHAR, IN, p);
			csp("report_file_nm_back", report_file_nm_back, VARCHAR, IN, p);
			csp("procedure_nm_front", procedure_nm_front, VARCHAR, IN, p);
			csp("procedure_nm_back", procedure_nm_back, VARCHAR, IN, p);
			csp("are_outstation_sewadars_allowed", are_outstation_sewadars_allowed, VARCHAR, IN, p);
			csp("txn_ts", txn_ts, TIMESTAMP, IN, p);
			return p;
		}
		
public DataSet UpdateBadgeTemplate(String badge_template_id, 
		                                        String badge_template_nm, 
		                                        String badge_shape, 
		                                        String information_type, 
		                                        String foreground_colour_control, 
		                                        Int16? foreground_colour_id, 
		                                        String background_colour_control, 
		                                        Int16? background_colour_id, 
		                                        Byte? top_line_font_size, 
		                                        String top_line_part_1_type, 
		                                        String top_line_part_1_text, 
		                                        String top_line_parts_separator, 
		                                        String top_line_part_2_type, 
		                                        String top_line_part_2_text, 
		                                        Byte? middle_line_font_size, 
		                                        String middle_line_part_1_type, 
		                                        String middle_line_part_1_text, 
		                                        String middle_line_parts_separator, 
		                                        String middle_line_part_2_type, 
		                                        String middle_line_part_2_text, 
		                                        Byte? bottom_line_font_size, 
		                                        String bottom_line_part_1_type, 
		                                        String bottom_line_part_1_text, 
		                                        String bottom_line_parts_separator, 
		                                        String bottom_line_part_2_type, 
		                                        String bottom_line_part_2_text, 
		                                        String expiry_year, 
		                                        String report_file_nm_front, 
		                                        String report_file_nm_back, 
		                                        String procedure_nm_front, 
		                                        String procedure_nm_back, 
		                                        String are_outstation_sewadars_allowed, 
		                                        Byte[] txn_ts)
		{
			List<SqlParameter> prms = UpdateBadgeTemplate_Params(badge_template_id, badge_template_nm, badge_shape, information_type, foreground_colour_control, foreground_colour_id, background_colour_control, background_colour_id, top_line_font_size, top_line_part_1_type, top_line_part_1_text, top_line_parts_separator, top_line_part_2_type, top_line_part_2_text, middle_line_font_size, middle_line_part_1_type, middle_line_part_1_text, middle_line_parts_separator, middle_line_part_2_type, middle_line_part_2_text, bottom_line_font_size, bottom_line_part_1_type, bottom_line_part_1_text, bottom_line_parts_separator, bottom_line_part_2_type, bottom_line_part_2_text, expiry_year, report_file_nm_front, report_file_nm_back, procedure_nm_front, procedure_nm_back, are_outstation_sewadars_allowed, txn_ts);
			DataSet dset = esp("UpdateBadgeTemplate", prms);

			return dset;
		}
		
public string UpdateBadgeTemplateAsTask(String badge_template_id, 
		                                            String badge_template_nm, 
		                                            String badge_shape, 
		                                            String information_type, 
		                                            String foreground_colour_control, 
		                                            Int16? foreground_colour_id, 
		                                            String background_colour_control, 
		                                            Int16? background_colour_id, 
		                                            Byte? top_line_font_size, 
		                                            String top_line_part_1_type, 
		                                            String top_line_part_1_text, 
		                                            String top_line_parts_separator, 
		                                            String top_line_part_2_type, 
		                                            String top_line_part_2_text, 
		                                            Byte? middle_line_font_size, 
		                                            String middle_line_part_1_type, 
		                                            String middle_line_part_1_text, 
		                                            String middle_line_parts_separator, 
		                                            String middle_line_part_2_type, 
		                                            String middle_line_part_2_text, 
		                                            Byte? bottom_line_font_size, 
		                                            String bottom_line_part_1_type, 
		                                            String bottom_line_part_1_text, 
		                                            String bottom_line_parts_separator, 
		                                            String bottom_line_part_2_type, 
		                                            String bottom_line_part_2_text, 
		                                            String expiry_year, 
		                                            String report_file_nm_front, 
		                                            String report_file_nm_back, 
		                                            String procedure_nm_front, 
		                                            String procedure_nm_back, 
		                                            String are_outstation_sewadars_allowed, 
		                                            Byte[] txn_ts)
		{
			List<SqlParameter> prms = UpdateBadgeTemplate_Params(badge_template_id, badge_template_nm, badge_shape, information_type, foreground_colour_control, foreground_colour_id, background_colour_control, background_colour_id, top_line_font_size, top_line_part_1_type, top_line_part_1_text, top_line_parts_separator, top_line_part_2_type, top_line_part_2_text, middle_line_font_size, middle_line_part_1_type, middle_line_part_1_text, middle_line_parts_separator, middle_line_part_2_type, middle_line_part_2_text, bottom_line_font_size, bottom_line_part_1_type, bottom_line_part_1_text, bottom_line_parts_separator, bottom_line_part_2_type, bottom_line_part_2_text, expiry_year, report_file_nm_front, report_file_nm_back, procedure_nm_front, procedure_nm_back, are_outstation_sewadars_allowed, txn_ts);
			return gps("UpdateBadgeTemplate", prms);

		}
		
		
		
private List<SqlParameter> UpdateColour_Params(Int16? colour_id, 
		                                                    String colour_nm, 
		                                                    Byte? red_component, 
		                                                    Byte? green_component, 
		                                                    Byte? blue_component, 
		                                                    String remarks, 
		                                                    DateTime? effective_from, 
		                                                    DateTime? effective_till, 
		                                                    Byte[] txn_ts, 
		                                                    Int16? old_colour_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("colour_id", colour_id, SMALLINT, IN, p);
			csp("colour_nm", colour_nm, VARCHAR, IN, p);
			csp("red_component", red_component, TINYINT, IN, p);
			csp("green_component", green_component, TINYINT, IN, p);
			csp("blue_component", blue_component, TINYINT, IN, p);
			csp("remarks", remarks, VARCHAR, IN, p);
			csp("effective_from", effective_from, DATETIME, IN, p);
			csp("effective_till", effective_till, DATETIME, IN, p);
			csp("txn_ts", txn_ts, TIMESTAMP, IN, p);
			csp("old_colour_id", old_colour_id, SMALLINT, IN, p);
			return p;
		}
		
public DataSet UpdateColour(Int16? colour_id, 
		                                String colour_nm, 
		                                Byte? red_component, 
		                                Byte? green_component, 
		                                Byte? blue_component, 
		                                String remarks, 
		                                DateTime? effective_from, 
		                                DateTime? effective_till, 
		                                Byte[] txn_ts, 
		                                Int16? old_colour_id)
		{
			List<SqlParameter> prms = UpdateColour_Params(colour_id, colour_nm, red_component, green_component, blue_component, remarks, effective_from, effective_till, txn_ts, old_colour_id);
			DataSet dset = esp("UpdateColour", prms);

			return dset;
		}
		
public string UpdateColourAsTask(Int16? colour_id, 
		                                    String colour_nm, 
		                                    Byte? red_component, 
		                                    Byte? green_component, 
		                                    Byte? blue_component, 
		                                    String remarks, 
		                                    DateTime? effective_from, 
		                                    DateTime? effective_till, 
		                                    Byte[] txn_ts, 
		                                    Int16? old_colour_id)
		{
			List<SqlParameter> prms = UpdateColour_Params(colour_id, colour_nm, red_component, green_component, blue_component, remarks, effective_from, effective_till, txn_ts, old_colour_id);
			return gps("UpdateColour", prms);

		}
		
		
		
private List<SqlParameter> UpdateCreditSpecification_Params(Int16? credit_specification_id, 
		                                                                String credit_specification_nm, 
		                                                                DateTime? credit_specification_dt, 
		                                                                Int32? satsang_centre_id, 
		                                                                String credit_group_nm, 
		                                                                String is_uniform_specification, 
		                                                                String is_outstation_sewadar, 
		                                                                Int16? credit_cnt, 
		                                                                Int16? unit_cnt, 
		                                                                String is_exemption_considered, 
		                                                                Int32? presence_sewa_id, 
		                                                                Int16? min_credit_cnt, 
		                                                                String is_finally_used, 
		                                                                DateTime? last_appointment_dt, 
		                                                                Byte[] txn_ts)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("credit_specification_id", credit_specification_id, SMALLINT, IN, p);
			csp("credit_specification_nm", credit_specification_nm, VARCHAR, IN, p);
			csp("credit_specification_dt", credit_specification_dt, SMALLDATETIME, IN, p);
			csp("satsang_centre_id", satsang_centre_id, INT, IN, p);
			csp("credit_group_nm", credit_group_nm, VARCHAR, IN, p);
			csp("is_uniform_specification", is_uniform_specification, VARCHAR, IN, p);
			csp("is_outstation_sewadar", is_outstation_sewadar, VARCHAR, IN, p);
			csp("credit_cnt", credit_cnt, SMALLINT, IN, p);
			csp("unit_cnt", unit_cnt, SMALLINT, IN, p);
			csp("is_exemption_considered", is_exemption_considered, VARCHAR, IN, p);
			csp("presence_sewa_id", presence_sewa_id, INT, IN, p);
			csp("min_credit_cnt", min_credit_cnt, SMALLINT, IN, p);
			csp("is_finally_used", is_finally_used, VARCHAR, IN, p);
			csp("last_appointment_dt", last_appointment_dt, SMALLDATETIME, IN, p);
			csp("txn_ts", txn_ts, TIMESTAMP, IN, p);
			return p;
		}
		
public DataSet UpdateCreditSpecification(Int16? credit_specification_id, 
		                                            String credit_specification_nm, 
		                                            DateTime? credit_specification_dt, 
		                                            Int32? satsang_centre_id, 
		                                            String credit_group_nm, 
		                                            String is_uniform_specification, 
		                                            String is_outstation_sewadar, 
		                                            Int16? credit_cnt, 
		                                            Int16? unit_cnt, 
		                                            String is_exemption_considered, 
		                                            Int32? presence_sewa_id, 
		                                            Int16? min_credit_cnt, 
		                                            String is_finally_used, 
		                                            DateTime? last_appointment_dt, 
		                                            Byte[] txn_ts)
		{
			List<SqlParameter> prms = UpdateCreditSpecification_Params(credit_specification_id, credit_specification_nm, credit_specification_dt, satsang_centre_id, credit_group_nm, is_uniform_specification, is_outstation_sewadar, credit_cnt, unit_cnt, is_exemption_considered, presence_sewa_id, min_credit_cnt, is_finally_used, last_appointment_dt, txn_ts);
			DataSet dset = esp("UpdateCreditSpecification", prms);

			return dset;
		}
		
public string UpdateCreditSpecificationAsTask(Int16? credit_specification_id, 
		                                                    String credit_specification_nm, 
		                                                    DateTime? credit_specification_dt, 
		                                                    Int32? satsang_centre_id, 
		                                                    String credit_group_nm, 
		                                                    String is_uniform_specification, 
		                                                    String is_outstation_sewadar, 
		                                                    Int16? credit_cnt, 
		                                                    Int16? unit_cnt, 
		                                                    String is_exemption_considered, 
		                                                    Int32? presence_sewa_id, 
		                                                    Int16? min_credit_cnt, 
		                                                    String is_finally_used, 
		                                                    DateTime? last_appointment_dt, 
		                                                    Byte[] txn_ts)
		{
			List<SqlParameter> prms = UpdateCreditSpecification_Params(credit_specification_id, credit_specification_nm, credit_specification_dt, satsang_centre_id, credit_group_nm, is_uniform_specification, is_outstation_sewadar, credit_cnt, unit_cnt, is_exemption_considered, presence_sewa_id, min_credit_cnt, is_finally_used, last_appointment_dt, txn_ts);
			return gps("UpdateCreditSpecification", prms);

		}
		
		
		
private List<SqlParameter> UpdateCreditSpecificationsSewa_Params(Int16? credit_specification_id, 
		                                                                    Int32? sewa_id, 
		                                                                    Int32? old_sewa_id, 
		                                                                    Int16? credit_cnt, 
		                                                                    Int16? unit_cnt, 
		                                                                    String is_exemption_considered, 
		                                                                    Int16? min_credit_cnt, 
		                                                                    Decimal? max_credit_cnt)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("credit_specification_id", credit_specification_id, SMALLINT, IN, p);
			csp("sewa_id", sewa_id, INT, IN, p);
			csp("old_sewa_id", old_sewa_id, INT, IN, p);
			csp("credit_cnt", credit_cnt, SMALLINT, IN, p);
			csp("unit_cnt", unit_cnt, SMALLINT, IN, p);
			csp("is_exemption_considered", is_exemption_considered, VARCHAR, IN, p);
			csp("min_credit_cnt", min_credit_cnt, SMALLINT, IN, p);
			csp("max_credit_cnt", max_credit_cnt, DECIMAL, IN, p);
			return p;
		}
		
public DataSet UpdateCreditSpecificationsSewa(Int16? credit_specification_id, 
		                                                    Int32? sewa_id, 
		                                                    Int32? old_sewa_id, 
		                                                    Int16? credit_cnt, 
		                                                    Int16? unit_cnt, 
		                                                    String is_exemption_considered, 
		                                                    Int16? min_credit_cnt, 
		                                                    Decimal? max_credit_cnt)
		{
			List<SqlParameter> prms = UpdateCreditSpecificationsSewa_Params(credit_specification_id, sewa_id, old_sewa_id, credit_cnt, unit_cnt, is_exemption_considered, min_credit_cnt, max_credit_cnt);
			DataSet dset = esp("UpdateCreditSpecificationsSewa", prms);

			return dset;
		}
		
public string UpdateCreditSpecificationsSewaAsTask(Int16? credit_specification_id, 
		                                                        Int32? sewa_id, 
		                                                        Int32? old_sewa_id, 
		                                                        Int16? credit_cnt, 
		                                                        Int16? unit_cnt, 
		                                                        String is_exemption_considered, 
		                                                        Int16? min_credit_cnt, 
		                                                        Decimal? max_credit_cnt)
		{
			List<SqlParameter> prms = UpdateCreditSpecificationsSewa_Params(credit_specification_id, sewa_id, old_sewa_id, credit_cnt, unit_cnt, is_exemption_considered, min_credit_cnt, max_credit_cnt);
			return gps("UpdateCreditSpecificationsSewa", prms);

		}
		
		
		
private List<SqlParameter> UpdateDepartment_Params(Int16? department_id, 
		                                                        String department_cd, 
		                                                        String department_nm, 
		                                                        Int16? colour_id, 
		                                                        String has_sub_departments, 
		                                                        String remarks, 
		                                                        Byte[] txn_ts)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("department_id", department_id, SMALLINT, IN, p);
			csp("department_cd", department_cd, VARCHAR, IN, p);
			csp("department_nm", department_nm, VARCHAR, IN, p);
			csp("colour_id", colour_id, SMALLINT, IN, p);
			csp("has_sub_departments", has_sub_departments, VARCHAR, IN, p);
			csp("remarks", remarks, VARCHAR, IN, p);
			csp("txn_ts", txn_ts, TIMESTAMP, IN, p);
			return p;
		}
		
public DataSet UpdateDepartment(Int16? department_id, 
		                                    String department_cd, 
		                                    String department_nm, 
		                                    Int16? colour_id, 
		                                    String has_sub_departments, 
		                                    String remarks, 
		                                    Byte[] txn_ts)
		{
			List<SqlParameter> prms = UpdateDepartment_Params(department_id, department_cd, department_nm, colour_id, has_sub_departments, remarks, txn_ts);
			DataSet dset = esp("UpdateDepartment", prms);

			return dset;
		}
		
public string UpdateDepartmentAsTask(Int16? department_id, 
		                                        String department_cd, 
		                                        String department_nm, 
		                                        Int16? colour_id, 
		                                        String has_sub_departments, 
		                                        String remarks, 
		                                        Byte[] txn_ts)
		{
			List<SqlParameter> prms = UpdateDepartment_Params(department_id, department_cd, department_nm, colour_id, has_sub_departments, remarks, txn_ts);
			return gps("UpdateDepartment", prms);

		}
		
		
		
private List<SqlParameter> UpdateDepartmentsSatsangCentre_Params(Int16? department_id, 
		                                                                    Int32? satsang_centre_id, 
		                                                                    Int32? old_satsang_centre_id, 
		                                                                    String genders_allowed, 
		                                                                    String is_common_roster, 
		                                                                    String is_generic, 
		                                                                    String is_weekly, 
		                                                                    String sub_department_mandatory, 
		                                                                    DateTime? effective_from, 
		                                                                    DateTime? effective_till)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("department_id", department_id, SMALLINT, IN, p);
			csp("satsang_centre_id", satsang_centre_id, INT, IN, p);
			csp("old_satsang_centre_id", old_satsang_centre_id, INT, IN, p);
			csp("genders_allowed", genders_allowed, CHAR, IN, p);
			csp("is_common_roster", is_common_roster, VARCHAR, IN, p);
			csp("is_generic", is_generic, VARCHAR, IN, p);
			csp("is_weekly", is_weekly, VARCHAR, IN, p);
			csp("sub_department_mandatory", sub_department_mandatory, VARCHAR, IN, p);
			csp("effective_from", effective_from, DATETIME, IN, p);
			csp("effective_till", effective_till, DATETIME, IN, p);
			return p;
		}
		
public DataSet UpdateDepartmentsSatsangCentre(Int16? department_id, 
		                                                    Int32? satsang_centre_id, 
		                                                    Int32? old_satsang_centre_id, 
		                                                    String genders_allowed, 
		                                                    String is_common_roster, 
		                                                    String is_generic, 
		                                                    String is_weekly, 
		                                                    String sub_department_mandatory, 
		                                                    DateTime? effective_from, 
		                                                    DateTime? effective_till)
		{
			List<SqlParameter> prms = UpdateDepartmentsSatsangCentre_Params(department_id, satsang_centre_id, old_satsang_centre_id, genders_allowed, is_common_roster, is_generic, is_weekly, sub_department_mandatory, effective_from, effective_till);
			DataSet dset = esp("UpdateDepartmentsSatsangCentre", prms);

			return dset;
		}
		
public string UpdateDepartmentsSatsangCentreAsTask(Int16? department_id, 
		                                                        Int32? satsang_centre_id, 
		                                                        Int32? old_satsang_centre_id, 
		                                                        String genders_allowed, 
		                                                        String is_common_roster, 
		                                                        String is_generic, 
		                                                        String is_weekly, 
		                                                        String sub_department_mandatory, 
		                                                        DateTime? effective_from, 
		                                                        DateTime? effective_till)
		{
			List<SqlParameter> prms = UpdateDepartmentsSatsangCentre_Params(department_id, satsang_centre_id, old_satsang_centre_id, genders_allowed, is_common_roster, is_generic, is_weekly, sub_department_mandatory, effective_from, effective_till);
			return gps("UpdateDepartmentsSatsangCentre", prms);

		}
		
		
		
private List<SqlParameter> UpdateGenericAttribute_Params(Int16? attribute_id, 
		                                                            String attribute_nm, 
		                                                            String attribute_group, 
		                                                            Int16? attribute_sq, 
		                                                            String attribute_type, 
		                                                            Byte? attribute_length, 
		                                                            Byte? attribute_scale, 
		                                                            String is_temporal, 
		                                                            String is_mandatory, 
		                                                            String is_status_applicable, 
		                                                            String remarks, 
		                                                            Byte[] txn_ts)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("attribute_id", attribute_id, SMALLINT, IN, p);
			csp("attribute_nm", attribute_nm, VARCHAR, IN, p);
			csp("attribute_group", attribute_group, VARCHAR, IN, p);
			csp("attribute_sq", attribute_sq, SMALLINT, IN, p);
			csp("attribute_type", attribute_type, VARCHAR, IN, p);
			csp("attribute_length", attribute_length, TINYINT, IN, p);
			csp("attribute_scale", attribute_scale, TINYINT, IN, p);
			csp("is_temporal", is_temporal, VARCHAR, IN, p);
			csp("is_mandatory", is_mandatory, VARCHAR, IN, p);
			csp("is_status_applicable", is_status_applicable, VARCHAR, IN, p);
			csp("remarks", remarks, VARCHAR, IN, p);
			csp("txn_ts", txn_ts, TIMESTAMP, IN, p);
			return p;
		}
		
public DataSet UpdateGenericAttribute(Int16? attribute_id, 
		                                            String attribute_nm, 
		                                            String attribute_group, 
		                                            Int16? attribute_sq, 
		                                            String attribute_type, 
		                                            Byte? attribute_length, 
		                                            Byte? attribute_scale, 
		                                            String is_temporal, 
		                                            String is_mandatory, 
		                                            String is_status_applicable, 
		                                            String remarks, 
		                                            Byte[] txn_ts)
		{
			List<SqlParameter> prms = UpdateGenericAttribute_Params(attribute_id, attribute_nm, attribute_group, attribute_sq, attribute_type, attribute_length, attribute_scale, is_temporal, is_mandatory, is_status_applicable, remarks, txn_ts);
			DataSet dset = esp("UpdateGenericAttribute", prms);

			return dset;
		}
		
public string UpdateGenericAttributeAsTask(Int16? attribute_id, 
		                                                String attribute_nm, 
		                                                String attribute_group, 
		                                                Int16? attribute_sq, 
		                                                String attribute_type, 
		                                                Byte? attribute_length, 
		                                                Byte? attribute_scale, 
		                                                String is_temporal, 
		                                                String is_mandatory, 
		                                                String is_status_applicable, 
		                                                String remarks, 
		                                                Byte[] txn_ts)
		{
			List<SqlParameter> prms = UpdateGenericAttribute_Params(attribute_id, attribute_nm, attribute_group, attribute_sq, attribute_type, attribute_length, attribute_scale, is_temporal, is_mandatory, is_status_applicable, remarks, txn_ts);
			return gps("UpdateGenericAttribute", prms);

		}
		
		
		
private List<SqlParameter> UpdateGenericAttributesListValue_Params(Int16? attribute_id, 
		                                                                        String attribute_value, 
		                                                                        String old_attribute_value, 
		                                                                        Int16? attribute_value_sq)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("attribute_id", attribute_id, SMALLINT, IN, p);
			csp("attribute_value", attribute_value, VARCHAR, IN, p);
			csp("old_attribute_value", old_attribute_value, VARCHAR, IN, p);
			csp("attribute_value_sq", attribute_value_sq, SMALLINT, IN, p);
			return p;
		}
		
public DataSet UpdateGenericAttributesListValue(Int16? attribute_id, 
		                                                    String attribute_value, 
		                                                    String old_attribute_value, 
		                                                    Int16? attribute_value_sq)
		{
			List<SqlParameter> prms = UpdateGenericAttributesListValue_Params(attribute_id, attribute_value, old_attribute_value, attribute_value_sq);
			DataSet dset = esp("UpdateGenericAttributesListValue", prms);

			return dset;
		}
		
public string UpdateGenericAttributesListValueAsTask(Int16? attribute_id, 
		                                                        String attribute_value, 
		                                                        String old_attribute_value, 
		                                                        Int16? attribute_value_sq)
		{
			List<SqlParameter> prms = UpdateGenericAttributesListValue_Params(attribute_id, attribute_value, old_attribute_value, attribute_value_sq);
			return gps("UpdateGenericAttributesListValue", prms);

		}
		
		
		
private List<SqlParameter> UpdateGenericAttributesListValuesSq_Params(Int16? attribute_id, 
		                                                                            Int16? attribute_value_sq)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("attribute_id", attribute_id, SMALLINT, IN, p);
			csp("attribute_value_sq", attribute_value_sq, SMALLINT, IN, p);
			return p;
		}
		
public DataSet UpdateGenericAttributesListValuesSq(Int16? attribute_id, 
		                                                        Int16? attribute_value_sq)
		{
			List<SqlParameter> prms = UpdateGenericAttributesListValuesSq_Params(attribute_id, attribute_value_sq);
			DataSet dset = esp("UpdateGenericAttributesListValuesSq", prms);

			return dset;
		}
		
public string UpdateGenericAttributesListValuesSqAsTask(Int16? attribute_id, 
		                                                            Int16? attribute_value_sq)
		{
			List<SqlParameter> prms = UpdateGenericAttributesListValuesSq_Params(attribute_id, attribute_value_sq);
			return gps("UpdateGenericAttributesListValuesSq", prms);

		}
		
		
		
private List<SqlParameter> UpdateGenericAttributesSatsangCentre_Params(Int16? attribute_id, 
		                                                                            Int32? satsang_centre_id, 
		                                                                            Int32? old_satsang_centre_id, 
		                                                                            DateTime? effective_from, 
		                                                                            DateTime? effective_till)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("attribute_id", attribute_id, SMALLINT, IN, p);
			csp("satsang_centre_id", satsang_centre_id, INT, IN, p);
			csp("old_satsang_centre_id", old_satsang_centre_id, INT, IN, p);
			csp("effective_from", effective_from, DATETIME, IN, p);
			csp("effective_till", effective_till, DATETIME, IN, p);
			return p;
		}
		
public DataSet UpdateGenericAttributesSatsangCentre(Int16? attribute_id, 
		                                                        Int32? satsang_centre_id, 
		                                                        Int32? old_satsang_centre_id, 
		                                                        DateTime? effective_from, 
		                                                        DateTime? effective_till)
		{
			List<SqlParameter> prms = UpdateGenericAttributesSatsangCentre_Params(attribute_id, satsang_centre_id, old_satsang_centre_id, effective_from, effective_till);
			DataSet dset = esp("UpdateGenericAttributesSatsangCentre", prms);

			return dset;
		}
		
public string UpdateGenericAttributesSatsangCentreAsTask(Int16? attribute_id, 
		                                                            Int32? satsang_centre_id, 
		                                                            Int32? old_satsang_centre_id, 
		                                                            DateTime? effective_from, 
		                                                            DateTime? effective_till)
		{
			List<SqlParameter> prms = UpdateGenericAttributesSatsangCentre_Params(attribute_id, satsang_centre_id, old_satsang_centre_id, effective_from, effective_till);
			return gps("UpdateGenericAttributesSatsangCentre", prms);

		}
		
		
		
private List<SqlParameter> UpdateGenericAttributesStatus_Params(Int16? attribute_id, 
		                                                                    String sewadar_status_cd, 
		                                                                    String old_sewadar_status_cd)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("attribute_id", attribute_id, SMALLINT, IN, p);
			csp("sewadar_status_cd", sewadar_status_cd, VARCHAR, IN, p);
			csp("old_sewadar_status_cd", old_sewadar_status_cd, VARCHAR, IN, p);
			return p;
		}
		
public DataSet UpdateGenericAttributesStatus(Int16? attribute_id, 
		                                                String sewadar_status_cd, 
		                                                String old_sewadar_status_cd)
		{
			List<SqlParameter> prms = UpdateGenericAttributesStatus_Params(attribute_id, sewadar_status_cd, old_sewadar_status_cd);
			DataSet dset = esp("UpdateGenericAttributesStatus", prms);

			return dset;
		}
		
public string UpdateGenericAttributesStatusAsTask(Int16? attribute_id, 
		                                                        String sewadar_status_cd, 
		                                                        String old_sewadar_status_cd)
		{
			List<SqlParameter> prms = UpdateGenericAttributesStatus_Params(attribute_id, sewadar_status_cd, old_sewadar_status_cd);
			return gps("UpdateGenericAttributesStatus", prms);

		}
		
		
		
private List<SqlParameter> UpdateGenericSewadarList_Params(Int32? sewadar_list_id, 
		                                                                Int32? satsang_centre_id, 
		                                                                String sewadar_list_nm, 
		                                                                String sewadar_list_use, 
		                                                                String sewadar_list_other_use, 
		                                                                String other_satsang_centre_sewadars, 
		                                                                String is_other_satsang_centre, 
		                                                                String is_editing_allowed, 
		                                                                String remarks, 
		                                                                DateTime? generated_dtm, 
		                                                                String report_nm, 
		                                                                String is_for_export, 
		                                                                Int32? programme_satsang_centre_id, 
		                                                                Int32? session_id, 
		                                                                Byte[] txn_ts)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("sewadar_list_id", sewadar_list_id, INT, IN, p);
			csp("satsang_centre_id", satsang_centre_id, INT, IN, p);
			csp("sewadar_list_nm", sewadar_list_nm, VARCHAR, IN, p);
			csp("sewadar_list_use", sewadar_list_use, VARCHAR, IN, p);
			csp("sewadar_list_other_use", sewadar_list_other_use, VARCHAR, IN, p);
			csp("other_satsang_centre_sewadars", other_satsang_centre_sewadars, VARCHAR, IN, p);
			csp("is_other_satsang_centre", is_other_satsang_centre, VARCHAR, IN, p);
			csp("is_editing_allowed", is_editing_allowed, VARCHAR, IN, p);
			csp("remarks", remarks, VARCHAR, IN, p);
			csp("generated_dtm", generated_dtm, SMALLDATETIME, IN, p);
			csp("report_nm", report_nm, VARCHAR, IN, p);
			csp("is_for_export", is_for_export, VARCHAR, IN, p);
			csp("programme_satsang_centre_id", programme_satsang_centre_id, INT, IN, p);
			csp("session_id", session_id, INT, IN, p);
			csp("txn_ts", txn_ts, TIMESTAMP, IN, p);
			return p;
		}
		
public DataSet UpdateGenericSewadarList(Int32? sewadar_list_id, 
		                                            Int32? satsang_centre_id, 
		                                            String sewadar_list_nm, 
		                                            String sewadar_list_use, 
		                                            String sewadar_list_other_use, 
		                                            String other_satsang_centre_sewadars, 
		                                            String is_other_satsang_centre, 
		                                            String is_editing_allowed, 
		                                            String remarks, 
		                                            DateTime? generated_dtm, 
		                                            String report_nm, 
		                                            String is_for_export, 
		                                            Int32? programme_satsang_centre_id, 
		                                            Int32? session_id, 
		                                            Byte[] txn_ts)
		{
			List<SqlParameter> prms = UpdateGenericSewadarList_Params(sewadar_list_id, satsang_centre_id, sewadar_list_nm, sewadar_list_use, sewadar_list_other_use, other_satsang_centre_sewadars, is_other_satsang_centre, is_editing_allowed, remarks, generated_dtm, report_nm, is_for_export, programme_satsang_centre_id, session_id, txn_ts);
			DataSet dset = esp("UpdateGenericSewadarList", prms);

			return dset;
		}
		
public string UpdateGenericSewadarListAsTask(Int32? sewadar_list_id, 
		                                                Int32? satsang_centre_id, 
		                                                String sewadar_list_nm, 
		                                                String sewadar_list_use, 
		                                                String sewadar_list_other_use, 
		                                                String other_satsang_centre_sewadars, 
		                                                String is_other_satsang_centre, 
		                                                String is_editing_allowed, 
		                                                String remarks, 
		                                                DateTime? generated_dtm, 
		                                                String report_nm, 
		                                                String is_for_export, 
		                                                Int32? programme_satsang_centre_id, 
		                                                Int32? session_id, 
		                                                Byte[] txn_ts)
		{
			List<SqlParameter> prms = UpdateGenericSewadarList_Params(sewadar_list_id, satsang_centre_id, sewadar_list_nm, sewadar_list_use, sewadar_list_other_use, other_satsang_centre_sewadars, is_other_satsang_centre, is_editing_allowed, remarks, generated_dtm, report_nm, is_for_export, programme_satsang_centre_id, session_id, txn_ts);
			return gps("UpdateGenericSewadarList", prms);

		}
		
		
		
private List<SqlParameter> UpdateGenericSewadarListsSewadar_Params(Int32? sewadar_list_id, 
		                                                                        Int32? satsang_centre_id, 
		                                                                        String sewadar_grno, 
		                                                                        Int32? old_satsang_centre_id, 
		                                                                        String old_sewadar_grno)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("sewadar_list_id", sewadar_list_id, INT, IN, p);
			csp("satsang_centre_id", satsang_centre_id, INT, IN, p);
			csp("sewadar_grno", sewadar_grno, CHAR, IN, p);
			csp("old_satsang_centre_id", old_satsang_centre_id, INT, IN, p);
			csp("old_sewadar_grno", old_sewadar_grno, CHAR, IN, p);
			return p;
		}
		
public DataSet UpdateGenericSewadarListsSewadar(Int32? sewadar_list_id, 
		                                                    Int32? satsang_centre_id, 
		                                                    String sewadar_grno, 
		                                                    Int32? old_satsang_centre_id, 
		                                                    String old_sewadar_grno)
		{
			List<SqlParameter> prms = UpdateGenericSewadarListsSewadar_Params(sewadar_list_id, satsang_centre_id, sewadar_grno, old_satsang_centre_id, old_sewadar_grno);
			DataSet dset = esp("UpdateGenericSewadarListsSewadar", prms);

			return dset;
		}
		
public string UpdateGenericSewadarListsSewadarAsTask(Int32? sewadar_list_id, 
		                                                        Int32? satsang_centre_id, 
		                                                        String sewadar_grno, 
		                                                        Int32? old_satsang_centre_id, 
		                                                        String old_sewadar_grno)
		{
			List<SqlParameter> prms = UpdateGenericSewadarListsSewadar_Params(sewadar_list_id, satsang_centre_id, sewadar_grno, old_satsang_centre_id, old_sewadar_grno);
			return gps("UpdateGenericSewadarListsSewadar", prms);

		}
		
		
		
private List<SqlParameter> UpdateMedicalDisabilitie_Params(Int16? medical_disability_id, 
		                                                                String medical_disability_nm, 
		                                                                String medical_disability_cd, 
		                                                                DateTime? effective_from, 
		                                                                DateTime? effective_till, 
		                                                                Byte[] txn_ts)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("medical_disability_id", medical_disability_id, SMALLINT, IN, p);
			csp("medical_disability_nm", medical_disability_nm, VARCHAR, IN, p);
			csp("medical_disability_cd", medical_disability_cd, VARCHAR, IN, p);
			csp("effective_from", effective_from, DATETIME, IN, p);
			csp("effective_till", effective_till, DATETIME, IN, p);
			csp("txn_ts", txn_ts, TIMESTAMP, IN, p);
			return p;
		}
		
public DataSet UpdateMedicalDisabilitie(Int16? medical_disability_id, 
		                                            String medical_disability_nm, 
		                                            String medical_disability_cd, 
		                                            DateTime? effective_from, 
		                                            DateTime? effective_till, 
		                                            Byte[] txn_ts)
		{
			List<SqlParameter> prms = UpdateMedicalDisabilitie_Params(medical_disability_id, medical_disability_nm, medical_disability_cd, effective_from, effective_till, txn_ts);
			DataSet dset = esp("UpdateMedicalDisabilitie", prms);

			return dset;
		}
		
public string UpdateMedicalDisabilitieAsTask(Int16? medical_disability_id, 
		                                                String medical_disability_nm, 
		                                                String medical_disability_cd, 
		                                                DateTime? effective_from, 
		                                                DateTime? effective_till, 
		                                                Byte[] txn_ts)
		{
			List<SqlParameter> prms = UpdateMedicalDisabilitie_Params(medical_disability_id, medical_disability_nm, medical_disability_cd, effective_from, effective_till, txn_ts);
			return gps("UpdateMedicalDisabilitie", prms);

		}
		
		
		
private List<SqlParameter> UpdateOrInsertIfNotExistSewadarDetail_Params(Int32? sewadar_id, 
		                                                                            String occupation)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("sewadar_id", sewadar_id, INT, IN, p);
			csp("occupation", occupation, VARCHAR, IN, p);
			return p;
		}
		
public DataSet UpdateOrInsertIfNotExistSewadarDetail(Int32? sewadar_id, 
		                                                        String occupation)
		{
			List<SqlParameter> prms = UpdateOrInsertIfNotExistSewadarDetail_Params(sewadar_id, occupation);
			DataSet dset = esp("UpdateOrInsertIfNotExistSewadarDetail", prms);

			return dset;
		}
		
public string UpdateOrInsertIfNotExistSewadarDetailAsTask(Int32? sewadar_id, 
		                                                                String occupation)
		{
			List<SqlParameter> prms = UpdateOrInsertIfNotExistSewadarDetail_Params(sewadar_id, occupation);
			return gps("UpdateOrInsertIfNotExistSewadarDetail", prms);

		}
		
		
		
private List<SqlParameter> UpdatePhoto_Params(String p_sewadar_grno, 
		                                                    Byte[] p_sewadar_photo, 
		                                                    DateTime? p_photo_dt)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_sewadar_grno", p_sewadar_grno, CHAR, IN, p);
			csp("p_sewadar_photo", p_sewadar_photo, IMAGE, IN, p);
			csp("p_photo_dt", p_photo_dt, DATETIME, IN, p);
			return p;
		}
		
public DataSet UpdatePhoto(String p_sewadar_grno, 
		                                Byte[] p_sewadar_photo, 
		                                DateTime? p_photo_dt)
		{
			List<SqlParameter> prms = UpdatePhoto_Params(p_sewadar_grno, p_sewadar_photo, p_photo_dt);
			DataSet dset = esp("UpdatePhoto", prms);

			return dset;
		}
		
public string UpdatePhotoAsTask(String p_sewadar_grno, 
		                                    Byte[] p_sewadar_photo, 
		                                    DateTime? p_photo_dt)
		{
			List<SqlParameter> prms = UpdatePhoto_Params(p_sewadar_grno, p_sewadar_photo, p_photo_dt);
			return gps("UpdatePhoto", prms);

		}

private List<SqlParameter> SelectDailyAttendanceList_Params(Int32? p_satsang_centre_id,
                                                                        Int32? p_sewa_id,
                                                                        DateTime? p_start_dt,
                                                                        DateTime? p_finish_dt,
                                                                        String p_department_ids,
                                                                        String p_sub_department_ids,
                                                                        String p_attendance)
{
    List<SqlParameter> p = new List<SqlParameter>();
    csp("p_satsang_centre_id", p_satsang_centre_id, INT, IN, p);
    csp("p_sewa_id", p_sewa_id, INT, IN, p);
    csp("p_start_dt", p_start_dt, SMALLDATETIME, IN, p);
    csp("p_finish_dt", p_finish_dt, SMALLDATETIME, IN, p);
    csp("p_department_ids", p_department_ids, VARCHAR, IN, p);
    csp("p_sub_department_ids", p_sub_department_ids, VARCHAR, IN, p);
    csp("p_attendance", p_attendance, CHAR, IN, p);
    return p;
}

public DataSet SelectDailyAttendanceList(Int32? p_satsang_centre_id,
                                                    Int32? p_sewa_id,
                                                    DateTime? p_start_dt,
                                                    DateTime? p_finish_dt,
                                                    String p_department_ids,
                                                    String p_sub_department_ids,
                                                    String p_attendance)
{
    List<SqlParameter> prms = SelectDailyAttendanceList_Params(p_satsang_centre_id, p_sewa_id, p_start_dt, p_finish_dt, p_department_ids, p_sub_department_ids, p_attendance);
    DataSet dset = esp("SelectDailyAttendanceList", prms);

    return dset;
}

public string SelectDailyAttendanceListAsTask(Int32? p_satsang_centre_id,
                                                            Int32? p_sewa_id,
                                                            DateTime? p_start_dt,
                                                            DateTime? p_finish_dt,
                                                            String p_department_ids,
                                                            String p_sub_department_ids,
                                                            String p_attendance)
{
    List<SqlParameter> prms = SelectDailyAttendanceList_Params(p_satsang_centre_id, p_sewa_id, p_start_dt, p_finish_dt, p_department_ids, p_sub_department_ids, p_attendance);
    return gps("SelectDailyAttendanceList", prms);

}
	
		
private List<SqlParameter> UpdatePostOfficesOrCitie_Params(Int32? post_office_or_city_id, 
		                                                                Int32? district_id, 
		                                                                String post_office_or_city_cd, 
		                                                                String post_office_or_city_nm, 
		                                                                String std_code, 
		                                                                DateTime? effective_from, 
		                                                                DateTime? effective_till, 
		                                                                Byte[] txn_ts)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("post_office_or_city_id", post_office_or_city_id, INT, IN, p);
			csp("district_id", district_id, INT, IN, p);
			csp("post_office_or_city_cd", post_office_or_city_cd, VARCHAR, IN, p);
			csp("post_office_or_city_nm", post_office_or_city_nm, VARCHAR, IN, p);
			csp("std_code", std_code, VARCHAR, IN, p);
			csp("effective_from", effective_from, DATETIME, IN, p);
			csp("effective_till", effective_till, DATETIME, IN, p);
			csp("txn_ts", txn_ts, TIMESTAMP, IN, p);
			return p;
		}
		
public DataSet UpdatePostOfficesOrCitie(Int32? post_office_or_city_id, 
		                                            Int32? district_id, 
		                                            String post_office_or_city_cd, 
		                                            String post_office_or_city_nm, 
		                                            String std_code, 
		                                            DateTime? effective_from, 
		                                            DateTime? effective_till, 
		                                            Byte[] txn_ts)
		{
			List<SqlParameter> prms = UpdatePostOfficesOrCitie_Params(post_office_or_city_id, district_id, post_office_or_city_cd, post_office_or_city_nm, std_code, effective_from, effective_till, txn_ts);
			DataSet dset = esp("UpdatePostOfficesOrCitie", prms);

			return dset;
		}
		
public string UpdatePostOfficesOrCitieAsTask(Int32? post_office_or_city_id, 
		                                                Int32? district_id, 
		                                                String post_office_or_city_cd, 
		                                                String post_office_or_city_nm, 
		                                                String std_code, 
		                                                DateTime? effective_from, 
		                                                DateTime? effective_till, 
		                                                Byte[] txn_ts)
		{
			List<SqlParameter> prms = UpdatePostOfficesOrCitie_Params(post_office_or_city_id, district_id, post_office_or_city_cd, post_office_or_city_nm, std_code, effective_from, effective_till, txn_ts);
			return gps("UpdatePostOfficesOrCitie", prms);

		}
		
		
		
private List<SqlParameter> UpdateSatsangCentreFunctionarie_Params(Int16? centre_functionary_id, 
		                                                                        Int32? satsang_centre_id, 
		                                                                        String centre_functionary, 
		                                                                        String functionary_nm, 
		                                                                        String is_current, 
		                                                                        String telephones, 
		                                                                        String email_addresses, 
		                                                                        DateTime? effective_from, 
		                                                                        DateTime? effective_till)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("centre_functionary_id", centre_functionary_id, SMALLINT, IN, p);
			csp("satsang_centre_id", satsang_centre_id, INT, IN, p);
			csp("centre_functionary", centre_functionary, VARCHAR, IN, p);
			csp("functionary_nm", functionary_nm, VARCHAR, IN, p);
			csp("is_current", is_current, VARCHAR, IN, p);
			csp("telephones", telephones, VARCHAR, IN, p);
			csp("email_addresses", email_addresses, VARCHAR, IN, p);
			csp("effective_from", effective_from, DATETIME, IN, p);
			csp("effective_till", effective_till, DATETIME, IN, p);
			return p;
		}
		
public DataSet UpdateSatsangCentreFunctionarie(Int16? centre_functionary_id, 
		                                                    Int32? satsang_centre_id, 
		                                                    String centre_functionary, 
		                                                    String functionary_nm, 
		                                                    String is_current, 
		                                                    String telephones, 
		                                                    String email_addresses, 
		                                                    DateTime? effective_from, 
		                                                    DateTime? effective_till)
		{
			List<SqlParameter> prms = UpdateSatsangCentreFunctionarie_Params(centre_functionary_id, satsang_centre_id, centre_functionary, functionary_nm, is_current, telephones, email_addresses, effective_from, effective_till);
			DataSet dset = esp("UpdateSatsangCentreFunctionarie", prms);

			return dset;
		}
		
public string UpdateSatsangCentreFunctionarieAsTask(Int16? centre_functionary_id, 
		                                                        Int32? satsang_centre_id, 
		                                                        String centre_functionary, 
		                                                        String functionary_nm, 
		                                                        String is_current, 
		                                                        String telephones, 
		                                                        String email_addresses, 
		                                                        DateTime? effective_from, 
		                                                        DateTime? effective_till)
		{
			List<SqlParameter> prms = UpdateSatsangCentreFunctionarie_Params(centre_functionary_id, satsang_centre_id, centre_functionary, functionary_nm, is_current, telephones, email_addresses, effective_from, effective_till);
			return gps("UpdateSatsangCentreFunctionarie", prms);

		}
		
		
		
private List<SqlParameter> UpdateSatsangCentresDetail_Params(Int32? satsang_centre_id, 
		                                                                String is_main_centre, 
		                                                                String centre_nm, 
		                                                                String centre_alphabet, 
		                                                                String centre_cd, 
		                                                                Int32? reports_to_centre_id, 
		                                                                String remarks, 
		                                                                Int16? colour_id, 
		                                                                Byte[] secretary_signature)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("satsang_centre_id", satsang_centre_id, INT, IN, p);
			csp("is_main_centre", is_main_centre, VARCHAR, IN, p);
			csp("centre_nm", centre_nm, VARCHAR, IN, p);
			csp("centre_alphabet", centre_alphabet, VARCHAR, IN, p);
			csp("centre_cd", centre_cd, CHAR, IN, p);
			csp("reports_to_centre_id", reports_to_centre_id, INT, IN, p);
			csp("remarks", remarks, VARCHAR, IN, p);
			csp("colour_id", colour_id, SMALLINT, IN, p);
			csp("secretary_signature", secretary_signature, IMAGE, IN, p);
			return p;
		}
		
public DataSet UpdateSatsangCentresDetail(Int32? satsang_centre_id, 
		                                                String is_main_centre, 
		                                                String centre_nm, 
		                                                String centre_alphabet, 
		                                                String centre_cd, 
		                                                Int32? reports_to_centre_id, 
		                                                String remarks, 
		                                                Int16? colour_id, 
		                                                Byte[] secretary_signature)
		{
			List<SqlParameter> prms = UpdateSatsangCentresDetail_Params(satsang_centre_id, is_main_centre, centre_nm, centre_alphabet, centre_cd, reports_to_centre_id, remarks, colour_id, secretary_signature);
			DataSet dset = esp("UpdateSatsangCentresDetail", prms);

			return dset;
		}
		
public string UpdateSatsangCentresDetailAsTask(Int32? satsang_centre_id, 
		                                                    String is_main_centre, 
		                                                    String centre_nm, 
		                                                    String centre_alphabet, 
		                                                    String centre_cd, 
		                                                    Int32? reports_to_centre_id, 
		                                                    String remarks, 
		                                                    Int16? colour_id, 
		                                                    Byte[] secretary_signature)
		{
			List<SqlParameter> prms = UpdateSatsangCentresDetail_Params(satsang_centre_id, is_main_centre, centre_nm, centre_alphabet, centre_cd, reports_to_centre_id, remarks, colour_id, secretary_signature);
			return gps("UpdateSatsangCentresDetail", prms);

		}
		
		
		
private List<SqlParameter> UpdateScannedBadgeFileAuditLog_Params(Int32? scanning_job_id, 
		                                                                    DateTime? controlling_dt, 
		                                                                    DateTime? process_dt, 
		                                                                    String process_username)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("scanning_job_id", scanning_job_id, INT, IN, p);
			csp("controlling_dt", controlling_dt, SMALLDATETIME, IN, p);
			csp("process_dt", process_dt, DATETIME, IN, p);
			csp("process_username", process_username, VARCHAR, IN, p);
			return p;
		}
		
public DataSet UpdateScannedBadgeFileAuditLog(Int32? scanning_job_id, 
		                                                    DateTime? controlling_dt, 
		                                                    DateTime? process_dt, 
		                                                    String process_username)
		{
			List<SqlParameter> prms = UpdateScannedBadgeFileAuditLog_Params(scanning_job_id, controlling_dt, process_dt, process_username);
			DataSet dset = esp("UpdateScannedBadgeFileAuditLog", prms);

			return dset;
		}
		
public string UpdateScannedBadgeFileAuditLogAsTask(Int32? scanning_job_id, 
		                                                        DateTime? controlling_dt, 
		                                                        DateTime? process_dt, 
		                                                        String process_username)
		{
			List<SqlParameter> prms = UpdateScannedBadgeFileAuditLog_Params(scanning_job_id, controlling_dt, process_dt, process_username);
			return gps("UpdateScannedBadgeFileAuditLog", prms);

		}
		
		
		
private List<SqlParameter> UpdateScanningJob_Params(Int16? scanning_job_id, 
		                                                        Int32? satsang_centre_id, 
		                                                        String scanning_job_nm, 
		                                                        String scanning_job_type_cd, 
		                                                        String remarks, 
		                                                        DateTime? effective_from, 
		                                                        DateTime? effective_till, 
		                                                        Int32? sewadar_list_id, 
		                                                        Int32? sewa_id, 
		                                                        String is_deleting_allowed, 
		                                                        String status_system_info_cd, 
		                                                        DateTime? last_transfer_dtm, 
		                                                        Int16? total_processed_cnt, 
		                                                        String is_closed, 
		                                                        String is_concluded, 
		                                                        Byte[] txn_ts)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("scanning_job_id", scanning_job_id, SMALLINT, IN, p);
			csp("satsang_centre_id", satsang_centre_id, INT, IN, p);
			csp("scanning_job_nm", scanning_job_nm, VARCHAR, IN, p);
			csp("scanning_job_type_cd", scanning_job_type_cd, VARCHAR, IN, p);
			csp("remarks", remarks, VARCHAR, IN, p);
			csp("effective_from", effective_from, DATETIME, IN, p);
			csp("effective_till", effective_till, DATETIME, IN, p);
			csp("sewadar_list_id", sewadar_list_id, INT, IN, p);
			csp("sewa_id", sewa_id, INT, IN, p);
			csp("is_deleting_allowed", is_deleting_allowed, VARCHAR, IN, p);
			csp("status_system_info_cd", status_system_info_cd, VARCHAR, IN, p);
			csp("last_transfer_dtm", last_transfer_dtm, DATETIME, IN, p);
			csp("total_processed_cnt", total_processed_cnt, SMALLINT, IN, p);
			csp("is_closed", is_closed, VARCHAR, IN, p);
			csp("is_concluded", is_concluded, VARCHAR, IN, p);
			csp("txn_ts", txn_ts, TIMESTAMP, IN, p);
			return p;
		}
		
public DataSet UpdateScanningJob(Int16? scanning_job_id, 
		                                    Int32? satsang_centre_id, 
		                                    String scanning_job_nm, 
		                                    String scanning_job_type_cd, 
		                                    String remarks, 
		                                    DateTime? effective_from, 
		                                    DateTime? effective_till, 
		                                    Int32? sewadar_list_id, 
		                                    Int32? sewa_id, 
		                                    String is_deleting_allowed, 
		                                    String status_system_info_cd, 
		                                    DateTime? last_transfer_dtm, 
		                                    Int16? total_processed_cnt, 
		                                    String is_closed, 
		                                    String is_concluded, 
		                                    Byte[] txn_ts)
		{
			List<SqlParameter> prms = UpdateScanningJob_Params(scanning_job_id, satsang_centre_id, scanning_job_nm, scanning_job_type_cd, remarks, effective_from, effective_till, sewadar_list_id, sewa_id, is_deleting_allowed, status_system_info_cd, last_transfer_dtm, total_processed_cnt, is_closed, is_concluded, txn_ts);
			DataSet dset = esp("UpdateScanningJob", prms);

			return dset;
		}
		
public string UpdateScanningJobAsTask(Int16? scanning_job_id, 
		                                            Int32? satsang_centre_id, 
		                                            String scanning_job_nm, 
		                                            String scanning_job_type_cd, 
		                                            String remarks, 
		                                            DateTime? effective_from, 
		                                            DateTime? effective_till, 
		                                            Int32? sewadar_list_id, 
		                                            Int32? sewa_id, 
		                                            String is_deleting_allowed, 
		                                            String status_system_info_cd, 
		                                            DateTime? last_transfer_dtm, 
		                                            Int16? total_processed_cnt, 
		                                            String is_closed, 
		                                            String is_concluded, 
		                                            Byte[] txn_ts)
		{
			List<SqlParameter> prms = UpdateScanningJob_Params(scanning_job_id, satsang_centre_id, scanning_job_nm, scanning_job_type_cd, remarks, effective_from, effective_till, sewadar_list_id, sewa_id, is_deleting_allowed, status_system_info_cd, last_transfer_dtm, total_processed_cnt, is_closed, is_concluded, txn_ts);
			return gps("UpdateScanningJob", prms);

		}
		
		
		
private List<SqlParameter> UpdateScanningJobsPeriod_Params(Int16? scanning_job_id, 
		                                                                DateTime? old_effective_from, 
		                                                                DateTime? old_effective_till, 
		                                                                DateTime? effective_from, 
		                                                                DateTime? effective_till)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("scanning_job_id", scanning_job_id, SMALLINT, IN, p);
			csp("old_effective_from", old_effective_from, DATETIME, IN, p);
			csp("old_effective_till", old_effective_till, DATETIME, IN, p);
			csp("effective_from", effective_from, DATETIME, IN, p);
			csp("effective_till", effective_till, DATETIME, IN, p);
			return p;
		}
		
public DataSet UpdateScanningJobsPeriod(Int16? scanning_job_id, 
		                                            DateTime? old_effective_from, 
		                                            DateTime? old_effective_till, 
		                                            DateTime? effective_from, 
		                                            DateTime? effective_till)
		{
			List<SqlParameter> prms = UpdateScanningJobsPeriod_Params(scanning_job_id, old_effective_from, old_effective_till, effective_from, effective_till);
			DataSet dset = esp("UpdateScanningJobsPeriod", prms);

			return dset;
		}
		
public string UpdateScanningJobsPeriodAsTask(Int16? scanning_job_id, 
		                                                DateTime? old_effective_from, 
		                                                DateTime? old_effective_till, 
		                                                DateTime? effective_from, 
		                                                DateTime? effective_till)
		{
			List<SqlParameter> prms = UpdateScanningJobsPeriod_Params(scanning_job_id, old_effective_from, old_effective_till, effective_from, effective_till);
			return gps("UpdateScanningJobsPeriod", prms);

		}
		
		
		
private List<SqlParameter> UpdateScanningJobTxnTs_Params(Int16? scanning_job_id, 
		                                                            Byte[] txn_ts)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("scanning_job_id", scanning_job_id, SMALLINT, IN, p);
			csp("txn_ts", txn_ts, TIMESTAMP, IN, p);
			return p;
		}
		
public DataSet UpdateScanningJobTxnTs(Int16? scanning_job_id, 
		                                            Byte[] txn_ts)
		{
			List<SqlParameter> prms = UpdateScanningJobTxnTs_Params(scanning_job_id, txn_ts);
			DataSet dset = esp("UpdateScanningJobTxnTs", prms);

			return dset;
		}
		
public string UpdateScanningJobTxnTsAsTask(Int16? scanning_job_id, 
		                                                Byte[] txn_ts)
		{
			List<SqlParameter> prms = UpdateScanningJobTxnTs_Params(scanning_job_id, txn_ts);
			return gps("UpdateScanningJobTxnTs", prms);

		}
		
		
		
private List<SqlParameter> UpdateScanningSubJob_Params(Int16? scanning_sub_job_id, 
		                                                            String scanning_sub_job_nm, 
		                                                            Int16? scanning_sub_job_sq)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("scanning_sub_job_id", scanning_sub_job_id, SMALLINT, IN, p);
			csp("scanning_sub_job_nm", scanning_sub_job_nm, VARCHAR, IN, p);
			csp("scanning_sub_job_sq", scanning_sub_job_sq, SMALLINT, IN, p);
			return p;
		}
		
public DataSet UpdateScanningSubJob(Int16? scanning_sub_job_id, 
		                                        String scanning_sub_job_nm, 
		                                        Int16? scanning_sub_job_sq)
		{
			List<SqlParameter> prms = UpdateScanningSubJob_Params(scanning_sub_job_id, scanning_sub_job_nm, scanning_sub_job_sq);
			DataSet dset = esp("UpdateScanningSubJob", prms);

			return dset;
		}
		
public string UpdateScanningSubJobAsTask(Int16? scanning_sub_job_id, 
		                                            String scanning_sub_job_nm, 
		                                            Int16? scanning_sub_job_sq)
		{
			List<SqlParameter> prms = UpdateScanningSubJob_Params(scanning_sub_job_id, scanning_sub_job_nm, scanning_sub_job_sq);
			return gps("UpdateScanningSubJob", prms);

		}
		
		
		
private List<SqlParameter> UpdateScanningSubJobSq_Params(Int16? scanning_sub_job_id, 
		                                                            Int16? scanning_sub_job_sq)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("scanning_sub_job_id", scanning_sub_job_id, SMALLINT, IN, p);
			csp("scanning_sub_job_sq", scanning_sub_job_sq, SMALLINT, IN, p);
			return p;
		}
		
public DataSet UpdateScanningSubJobSq(Int16? scanning_sub_job_id, 
		                                            Int16? scanning_sub_job_sq)
		{
			List<SqlParameter> prms = UpdateScanningSubJobSq_Params(scanning_sub_job_id, scanning_sub_job_sq);
			DataSet dset = esp("UpdateScanningSubJobSq", prms);

			return dset;
		}
		
public string UpdateScanningSubJobSqAsTask(Int16? scanning_sub_job_id, 
		                                                Int16? scanning_sub_job_sq)
		{
			List<SqlParameter> prms = UpdateScanningSubJobSq_Params(scanning_sub_job_id, scanning_sub_job_sq);
			return gps("UpdateScanningSubJobSq", prms);

		}
		
		
		
private List<SqlParameter> UpdateScanningSubJobsValidation_Params(Int16? recorded_sub_job_id, 
		                                                                        Int16? recording_sub_job_id, 
		                                                                        String validating_action)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("recorded_sub_job_id", recorded_sub_job_id, SMALLINT, IN, p);
			csp("recording_sub_job_id", recording_sub_job_id, SMALLINT, IN, p);
			csp("validating_action", validating_action, VARCHAR, IN, p);
			return p;
		}
		
public DataSet UpdateScanningSubJobsValidation(Int16? recorded_sub_job_id, 
		                                                    Int16? recording_sub_job_id, 
		                                                    String validating_action)
		{
			List<SqlParameter> prms = UpdateScanningSubJobsValidation_Params(recorded_sub_job_id, recording_sub_job_id, validating_action);
			DataSet dset = esp("UpdateScanningSubJobsValidation", prms);

			return dset;
		}
		
public string UpdateScanningSubJobsValidationAsTask(Int16? recorded_sub_job_id, 
		                                                        Int16? recording_sub_job_id, 
		                                                        String validating_action)
		{
			List<SqlParameter> prms = UpdateScanningSubJobsValidation_Params(recorded_sub_job_id, recording_sub_job_id, validating_action);
			return gps("UpdateScanningSubJobsValidation", prms);

		}
		
		
		
private List<SqlParameter> UpdateScanningSubJobsValidCombination_Params(Int16? scanning_job_id, 
		                                                                            Int16? scanning_job_valid_sq, 
		                                                                            String valid_combination_sub_job_ids, 
		                                                                            String old_valid_combination_sub_job_ids)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("scanning_job_id", scanning_job_id, SMALLINT, IN, p);
			csp("scanning_job_valid_sq", scanning_job_valid_sq, SMALLINT, IN, p);
			csp("valid_combination_sub_job_ids", valid_combination_sub_job_ids, VARCHAR, IN, p);
			csp("old_valid_combination_sub_job_ids", old_valid_combination_sub_job_ids, VARCHAR, IN, p);
			return p;
		}
		
public DataSet UpdateScanningSubJobsValidCombination(Int16? scanning_job_id, 
		                                                        Int16? scanning_job_valid_sq, 
		                                                        String valid_combination_sub_job_ids, 
		                                                        String old_valid_combination_sub_job_ids)
		{
			List<SqlParameter> prms = UpdateScanningSubJobsValidCombination_Params(scanning_job_id, scanning_job_valid_sq, valid_combination_sub_job_ids, old_valid_combination_sub_job_ids);
			DataSet dset = esp("UpdateScanningSubJobsValidCombination", prms);

			return dset;
		}
		
public string UpdateScanningSubJobsValidCombinationAsTask(Int16? scanning_job_id, 
		                                                                Int16? scanning_job_valid_sq, 
		                                                                String valid_combination_sub_job_ids, 
		                                                                String old_valid_combination_sub_job_ids)
		{
			List<SqlParameter> prms = UpdateScanningSubJobsValidCombination_Params(scanning_job_id, scanning_job_valid_sq, valid_combination_sub_job_ids, old_valid_combination_sub_job_ids);
			return gps("UpdateScanningSubJobsValidCombination", prms);

		}
		
		
		
private List<SqlParameter> UpdateSewa_Params(Int32? sewa_id, 
		                                                Int32? satsang_centre_id, 
		                                                String sewa_cd, 
		                                                String sewa_nm, 
		                                                DateTime? start_dt, 
		                                                DateTime? finish_dt, 
		                                                String is_satsang_programme, 
		                                                String is_scanner_used, 
		                                                String is_leave_allowed, 
		                                                String is_exemption_allowed, 
		                                                String is_default_sewa, 
		                                                String sewa_frequency, 
		                                                String attendance_unit, 
		                                                String attendance_marking, 
		                                                Int16? min_sewa_duration, 
		                                                Int16? max_sewa_duration, 
		                                                DateTime? gents_born_after, 
		                                                DateTime? ladies_born_after, 
		                                                Int32? referred_sewa_id, 
		                                                String trainee_current_seq_id, 
		                                                String open_sewadar_current_seq_id, 
		                                                Byte[] txn_ts)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("sewa_id", sewa_id, INT, IN, p);
			csp("satsang_centre_id", satsang_centre_id, INT, IN, p);
			csp("sewa_cd", sewa_cd, VARCHAR, IN, p);
			csp("sewa_nm", sewa_nm, VARCHAR, IN, p);
			csp("start_dt", start_dt, SMALLDATETIME, IN, p);
			csp("finish_dt", finish_dt, SMALLDATETIME, IN, p);
			csp("is_satsang_programme", is_satsang_programme, VARCHAR, IN, p);
			csp("is_scanner_used", is_scanner_used, VARCHAR, IN, p);
			csp("is_leave_allowed", is_leave_allowed, VARCHAR, IN, p);
			csp("is_exemption_allowed", is_exemption_allowed, VARCHAR, IN, p);
			csp("is_default_sewa", is_default_sewa, VARCHAR, IN, p);
			csp("sewa_frequency", sewa_frequency, VARCHAR, IN, p);
			csp("attendance_unit", attendance_unit, VARCHAR, IN, p);
			csp("attendance_marking", attendance_marking, VARCHAR, IN, p);
			csp("min_sewa_duration", min_sewa_duration, SMALLINT, IN, p);
			csp("max_sewa_duration", max_sewa_duration, SMALLINT, IN, p);
			csp("gents_born_after", gents_born_after, DATETIME, IN, p);
			csp("ladies_born_after", ladies_born_after, DATETIME, IN, p);
			csp("referred_sewa_id", referred_sewa_id, INT, IN, p);
			csp("trainee_current_seq_id", trainee_current_seq_id, VARCHAR, IN, p);
			csp("open_sewadar_current_seq_id", open_sewadar_current_seq_id, VARCHAR, IN, p);
			csp("txn_ts", txn_ts, TIMESTAMP, IN, p);
			return p;
		}
		
public DataSet UpdateSewa(Int32? sewa_id, 
		                                Int32? satsang_centre_id, 
		                                String sewa_cd, 
		                                String sewa_nm, 
		                                DateTime? start_dt, 
		                                DateTime? finish_dt, 
		                                String is_satsang_programme, 
		                                String is_scanner_used, 
		                                String is_leave_allowed, 
		                                String is_exemption_allowed, 
		                                String is_default_sewa, 
		                                String sewa_frequency, 
		                                String attendance_unit, 
		                                String attendance_marking, 
		                                Int16? min_sewa_duration, 
		                                Int16? max_sewa_duration, 
		                                DateTime? gents_born_after, 
		                                DateTime? ladies_born_after, 
		                                Int32? referred_sewa_id, 
		                                String trainee_current_seq_id, 
		                                String open_sewadar_current_seq_id, 
		                                Byte[] txn_ts)
		{
			List<SqlParameter> prms = UpdateSewa_Params(sewa_id, satsang_centre_id, sewa_cd, sewa_nm, start_dt, finish_dt, is_satsang_programme, is_scanner_used, is_leave_allowed, is_exemption_allowed, is_default_sewa, sewa_frequency, attendance_unit, attendance_marking, min_sewa_duration, max_sewa_duration, gents_born_after, ladies_born_after, referred_sewa_id, trainee_current_seq_id, open_sewadar_current_seq_id, txn_ts);
			DataSet dset = esp("UpdateSewa", prms);

			return dset;
		}
		
public string UpdateSewaAsTask(Int32? sewa_id, 
		                                    Int32? satsang_centre_id, 
		                                    String sewa_cd, 
		                                    String sewa_nm, 
		                                    DateTime? start_dt, 
		                                    DateTime? finish_dt, 
		                                    String is_satsang_programme, 
		                                    String is_scanner_used, 
		                                    String is_leave_allowed, 
		                                    String is_exemption_allowed, 
		                                    String is_default_sewa, 
		                                    String sewa_frequency, 
		                                    String attendance_unit, 
		                                    String attendance_marking, 
		                                    Int16? min_sewa_duration, 
		                                    Int16? max_sewa_duration, 
		                                    DateTime? gents_born_after, 
		                                    DateTime? ladies_born_after, 
		                                    Int32? referred_sewa_id, 
		                                    String trainee_current_seq_id, 
		                                    String open_sewadar_current_seq_id, 
		                                    Byte[] txn_ts)
		{
			List<SqlParameter> prms = UpdateSewa_Params(sewa_id, satsang_centre_id, sewa_cd, sewa_nm, start_dt, finish_dt, is_satsang_programme, is_scanner_used, is_leave_allowed, is_exemption_allowed, is_default_sewa, sewa_frequency, attendance_unit, attendance_marking, min_sewa_duration, max_sewa_duration, gents_born_after, ladies_born_after, referred_sewa_id, trainee_current_seq_id, open_sewadar_current_seq_id, txn_ts);
			return gps("UpdateSewa", prms);

		}
		
		
		
private List<SqlParameter> UpdateSewadar_Params(Int32? sewadar_id, 
		                                                    String first_nm, 
		                                                    String middle_nm, 
		                                                    String last_nm, 
		                                                    String gender, 
		                                                    DateTime? birth_dtm, 
		                                                    String is_married, 
		                                                    DateTime? initiation_dt, 
		                                                    Int16? initiation_place_id, 
		                                                    Byte? initiation_by, 
		                                                    Byte[] txn_ts)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("sewadar_id", sewadar_id, INT, IN, p);
			csp("first_nm", first_nm, VARCHAR, IN, p);
			csp("middle_nm", middle_nm, VARCHAR, IN, p);
			csp("last_nm", last_nm, VARCHAR, IN, p);
			csp("gender", gender, VARCHAR, IN, p);
			csp("birth_dtm", birth_dtm, SMALLDATETIME, IN, p);
			csp("is_married", is_married, VARCHAR, IN, p);
			csp("initiation_dt", initiation_dt, SMALLDATETIME, IN, p);
			csp("initiation_place_id", initiation_place_id, SMALLINT, IN, p);
			csp("initiation_by", initiation_by, TINYINT, IN, p);
			csp("txn_ts", txn_ts, TIMESTAMP, IN, p);
			return p;
		}
		
public DataSet UpdateSewadar(Int32? sewadar_id, 
		                                String first_nm, 
		                                String middle_nm, 
		                                String last_nm, 
		                                String gender, 
		                                DateTime? birth_dtm, 
		                                String is_married, 
		                                DateTime? initiation_dt, 
		                                Int16? initiation_place_id, 
		                                Byte? initiation_by, 
		                                Byte[] txn_ts)
		{
			List<SqlParameter> prms = UpdateSewadar_Params(sewadar_id, first_nm, middle_nm, last_nm, gender, birth_dtm, is_married, initiation_dt, initiation_place_id, initiation_by, txn_ts);
			DataSet dset = esp("UpdateSewadar", prms);

			return dset;
		}
		
public string UpdateSewadarAsTask(Int32? sewadar_id, 
		                                        String first_nm, 
		                                        String middle_nm, 
		                                        String last_nm, 
		                                        String gender, 
		                                        DateTime? birth_dtm, 
		                                        String is_married, 
		                                        DateTime? initiation_dt, 
		                                        Int16? initiation_place_id, 
		                                        Byte? initiation_by, 
		                                        Byte[] txn_ts)
		{
			List<SqlParameter> prms = UpdateSewadar_Params(sewadar_id, first_nm, middle_nm, last_nm, gender, birth_dtm, is_married, initiation_dt, initiation_place_id, initiation_by, txn_ts);
			return gps("UpdateSewadar", prms);

		}
		
		
		
private List<SqlParameter> UpdateSewadarApplication_Params(Int32? application_id, 
		                                                                Int32? application_centre_id, 
		                                                                DateTime? application_dt, 
		                                                                String application_status, 
		                                                                DateTime? application_status_dtm, 
		                                                                String first_nm, 
		                                                                String middle_nm, 
		                                                                String last_nm, 
		                                                                String gender, 
		                                                                DateTime? birth_dtm, 
		                                                                String is_married, 
		                                                                DateTime? initiation_dt, 
		                                                                Int16? initiation_place_id, 
		                                                                Byte? initiation_by, 
		                                                                String address_line_1, 
		                                                                String address_line_2, 
		                                                                Int32? post_office_or_city_id, 
		                                                                String pin_or_zip_code, 
		                                                                String address_proof, 
		                                                                Int16? other_address_proof_id, 
		                                                                String telephone_mobile, 
		                                                                String telephone_residence, 
		                                                                String telephone_office, 
		                                                                String occupation, 
		                                                                String attends_weekly_satsang, 
		                                                                Int32? weekly_satsang_centre_id, 
		                                                                String has_hypertension, 
		                                                                String is_diabetic, 
		                                                                String has_skin_problem, 
		                                                                String has_epillepsy, 
		                                                                String photo_id, 
		                                                                DateTime? photo_dt, 
		                                                                DateTime? appointment_dt, 
		                                                                String is_outstation_sewadar, 
		                                                                Int16? department_id, 
		                                                                Int16? sub_department_id, 
		                                                                String old_grno, 
		                                                                Int32? reference_1_sewadar_id, 
		                                                                String reference_1_grno, 
		                                                                Int16? reference_1_relationship, 
		                                                                String reference_1_nm, 
		                                                                Int32? reference_1_centre_id, 
		                                                                String reference_1_department, 
		                                                                Int32? reference_2_sewadar_id, 
		                                                                String reference_2_grno, 
		                                                                Int16? reference_2_relationship, 
		                                                                String reference_2_nm, 
		                                                                Int32? reference_2_centre_id, 
		                                                                String reference_2_department, 
		                                                                Int32? security_approver_id, 
		                                                                Int32? security_approver_centre_id, 
		                                                                String security_approver_grno, 
		                                                                String security_approver_nm, 
		                                                                Int32? sewa_samiti_approver_id, 
		                                                                Int32? sewa_samiti_approver_centre_id, 
		                                                                String sewa_samiti_approver_grno, 
		                                                                String sewa_samiti_approver_nm, 
		                                                                Int16? area_secretary_id, 
		                                                                Int32? area_secretary_centre_id, 
		                                                                String area_secretary_grno, 
		                                                                String area_secretary_nm, 
		                                                                Int16? secretary_id, 
		                                                                Int32? secretary_centre_id, 
		                                                                String secretary_grno, 
		                                                                String secretary_nm, 
		                                                                Int32? sponsorer_id, 
		                                                                Int32? sponsorer_centre_id, 
		                                                                String sponsorer_grno, 
		                                                                String sponsorer_nm, 
		                                                                String sponsorer_department, 
		                                                                String remarks, 
		                                                                String reason, 
		                                                                String registered_sewadar_grno, 
		                                                                Int32? registered_sewadar_id, 
		                                                                Byte[] txn_ts)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("application_id", application_id, INT, IN, p);
			csp("application_centre_id", application_centre_id, INT, IN, p);
			csp("application_dt", application_dt, DATE, IN, p);
			csp("application_status", application_status, VARCHAR, IN, p);
			csp("application_status_dtm", application_status_dtm, SMALLDATETIME, IN, p);
			csp("first_nm", first_nm, VARCHAR, IN, p);
			csp("middle_nm", middle_nm, VARCHAR, IN, p);
			csp("last_nm", last_nm, VARCHAR, IN, p);
			csp("gender", gender, VARCHAR, IN, p);
			csp("birth_dtm", birth_dtm, SMALLDATETIME, IN, p);
			csp("is_married", is_married, VARCHAR, IN, p);
			csp("initiation_dt", initiation_dt, SMALLDATETIME, IN, p);
			csp("initiation_place_id", initiation_place_id, SMALLINT, IN, p);
			csp("initiation_by", initiation_by, TINYINT, IN, p);
			csp("address_line_1", address_line_1, VARCHAR, IN, p);
			csp("address_line_2", address_line_2, VARCHAR, IN, p);
			csp("post_office_or_city_id", post_office_or_city_id, INT, IN, p);
			csp("pin_or_zip_code", pin_or_zip_code, VARCHAR, IN, p);
			csp("address_proof", address_proof, VARCHAR, IN, p);
			csp("other_address_proof_id", other_address_proof_id, SMALLINT, IN, p);
			csp("telephone_mobile", telephone_mobile, VARCHAR, IN, p);
			csp("telephone_residence", telephone_residence, VARCHAR, IN, p);
			csp("telephone_office", telephone_office, VARCHAR, IN, p);
			csp("occupation", occupation, VARCHAR, IN, p);
			csp("attends_weekly_satsang", attends_weekly_satsang, VARCHAR, IN, p);
			csp("weekly_satsang_centre_id", weekly_satsang_centre_id, INT, IN, p);
			csp("has_hypertension", has_hypertension, VARCHAR, IN, p);
			csp("is_diabetic", is_diabetic, VARCHAR, IN, p);
			csp("has_skin_problem", has_skin_problem, VARCHAR, IN, p);
			csp("has_epillepsy", has_epillepsy, VARCHAR, IN, p);
			csp("photo_id", photo_id, VARCHAR, IN, p);
			csp("photo_dt", photo_dt, DATE, IN, p);
			csp("appointment_dt", appointment_dt, SMALLDATETIME, IN, p);
			csp("is_outstation_sewadar", is_outstation_sewadar, VARCHAR, IN, p);
			csp("department_id", department_id, SMALLINT, IN, p);
			csp("sub_department_id", sub_department_id, SMALLINT, IN, p);
			csp("old_grno", old_grno, VARCHAR, IN, p);
			csp("reference_1_sewadar_id", reference_1_sewadar_id, INT, IN, p);
			csp("reference_1_grno", reference_1_grno, CHAR, IN, p);
			csp("reference_1_relationship", reference_1_relationship, SMALLINT, IN, p);
			csp("reference_1_nm", reference_1_nm, VARCHAR, IN, p);
			csp("reference_1_centre_id", reference_1_centre_id, INT, IN, p);
			csp("reference_1_department", reference_1_department, VARCHAR, IN, p);
			csp("reference_2_sewadar_id", reference_2_sewadar_id, INT, IN, p);
			csp("reference_2_grno", reference_2_grno, CHAR, IN, p);
			csp("reference_2_relationship", reference_2_relationship, SMALLINT, IN, p);
			csp("reference_2_nm", reference_2_nm, VARCHAR, IN, p);
			csp("reference_2_centre_id", reference_2_centre_id, INT, IN, p);
			csp("reference_2_department", reference_2_department, VARCHAR, IN, p);
			csp("security_approver_id", security_approver_id, INT, IN, p);
			csp("security_approver_centre_id", security_approver_centre_id, INT, IN, p);
			csp("security_approver_grno", security_approver_grno, CHAR, IN, p);
			csp("security_approver_nm", security_approver_nm, VARCHAR, IN, p);
			csp("sewa_samiti_approver_id", sewa_samiti_approver_id, INT, IN, p);
			csp("sewa_samiti_approver_centre_id", sewa_samiti_approver_centre_id, INT, IN, p);
			csp("sewa_samiti_approver_grno", sewa_samiti_approver_grno, CHAR, IN, p);
			csp("sewa_samiti_approver_nm", sewa_samiti_approver_nm, VARCHAR, IN, p);
			csp("area_secretary_id", area_secretary_id, SMALLINT, IN, p);
			csp("area_secretary_centre_id", area_secretary_centre_id, INT, IN, p);
			csp("area_secretary_grno", area_secretary_grno, CHAR, IN, p);
			csp("area_secretary_nm", area_secretary_nm, VARCHAR, IN, p);
			csp("secretary_id", secretary_id, SMALLINT, IN, p);
			csp("secretary_centre_id", secretary_centre_id, INT, IN, p);
			csp("secretary_grno", secretary_grno, CHAR, IN, p);
			csp("secretary_nm", secretary_nm, VARCHAR, IN, p);
			csp("sponsorer_id", sponsorer_id, INT, IN, p);
			csp("sponsorer_centre_id", sponsorer_centre_id, INT, IN, p);
			csp("sponsorer_grno", sponsorer_grno, CHAR, IN, p);
			csp("sponsorer_nm", sponsorer_nm, VARCHAR, IN, p);
			csp("sponsorer_department", sponsorer_department, VARCHAR, IN, p);
			csp("remarks", remarks, VARCHAR, IN, p);
			csp("reason", reason, VARCHAR, IN, p);
			csp("registered_sewadar_grno", registered_sewadar_grno, CHAR, IN, p);
			csp("registered_sewadar_id", registered_sewadar_id, INT, IN, p);
			csp("txn_ts", txn_ts, TIMESTAMP, IN, p);
			return p;
		}
		
public DataSet UpdateSewadarApplication(Int32? application_id, 
		                                            Int32? application_centre_id, 
		                                            DateTime? application_dt, 
		                                            String application_status, 
		                                            DateTime? application_status_dtm, 
		                                            String first_nm, 
		                                            String middle_nm, 
		                                            String last_nm, 
		                                            String gender, 
		                                            DateTime? birth_dtm, 
		                                            String is_married, 
		                                            DateTime? initiation_dt, 
		                                            Int16? initiation_place_id, 
		                                            Byte? initiation_by, 
		                                            String address_line_1, 
		                                            String address_line_2, 
		                                            Int32? post_office_or_city_id, 
		                                            String pin_or_zip_code, 
		                                            String address_proof, 
		                                            Int16? other_address_proof_id, 
		                                            String telephone_mobile, 
		                                            String telephone_residence, 
		                                            String telephone_office, 
		                                            String occupation, 
		                                            String attends_weekly_satsang, 
		                                            Int32? weekly_satsang_centre_id, 
		                                            String has_hypertension, 
		                                            String is_diabetic, 
		                                            String has_skin_problem, 
		                                            String has_epillepsy, 
		                                            String photo_id, 
		                                            DateTime? photo_dt, 
		                                            DateTime? appointment_dt, 
		                                            String is_outstation_sewadar, 
		                                            Int16? department_id, 
		                                            Int16? sub_department_id, 
		                                            String old_grno, 
		                                            Int32? reference_1_sewadar_id, 
		                                            String reference_1_grno, 
		                                            Int16? reference_1_relationship, 
		                                            String reference_1_nm, 
		                                            Int32? reference_1_centre_id, 
		                                            String reference_1_department, 
		                                            Int32? reference_2_sewadar_id, 
		                                            String reference_2_grno, 
		                                            Int16? reference_2_relationship, 
		                                            String reference_2_nm, 
		                                            Int32? reference_2_centre_id, 
		                                            String reference_2_department, 
		                                            Int32? security_approver_id, 
		                                            Int32? security_approver_centre_id, 
		                                            String security_approver_grno, 
		                                            String security_approver_nm, 
		                                            Int32? sewa_samiti_approver_id, 
		                                            Int32? sewa_samiti_approver_centre_id, 
		                                            String sewa_samiti_approver_grno, 
		                                            String sewa_samiti_approver_nm, 
		                                            Int16? area_secretary_id, 
		                                            Int32? area_secretary_centre_id, 
		                                            String area_secretary_grno, 
		                                            String area_secretary_nm, 
		                                            Int16? secretary_id, 
		                                            Int32? secretary_centre_id, 
		                                            String secretary_grno, 
		                                            String secretary_nm, 
		                                            Int32? sponsorer_id, 
		                                            Int32? sponsorer_centre_id, 
		                                            String sponsorer_grno, 
		                                            String sponsorer_nm, 
		                                            String sponsorer_department, 
		                                            String remarks, 
		                                            String reason, 
		                                            String registered_sewadar_grno, 
		                                            Int32? registered_sewadar_id, 
		                                            Byte[] txn_ts)
		{
			List<SqlParameter> prms = UpdateSewadarApplication_Params(application_id, application_centre_id, application_dt, application_status, application_status_dtm, first_nm, middle_nm, last_nm, gender, birth_dtm, is_married, initiation_dt, initiation_place_id, initiation_by, address_line_1, address_line_2, post_office_or_city_id, pin_or_zip_code, address_proof, other_address_proof_id, telephone_mobile, telephone_residence, telephone_office, occupation, attends_weekly_satsang, weekly_satsang_centre_id, has_hypertension, is_diabetic, has_skin_problem, has_epillepsy, photo_id, photo_dt, appointment_dt, is_outstation_sewadar, department_id, sub_department_id, old_grno, reference_1_sewadar_id, reference_1_grno, reference_1_relationship, reference_1_nm, reference_1_centre_id, reference_1_department, reference_2_sewadar_id, reference_2_grno, reference_2_relationship, reference_2_nm, reference_2_centre_id, reference_2_department, security_approver_id, security_approver_centre_id, security_approver_grno, security_approver_nm, sewa_samiti_approver_id, sewa_samiti_approver_centre_id, sewa_samiti_approver_grno, sewa_samiti_approver_nm, area_secretary_id, area_secretary_centre_id, area_secretary_grno, area_secretary_nm, secretary_id, secretary_centre_id, secretary_grno, secretary_nm, sponsorer_id, sponsorer_centre_id, sponsorer_grno, sponsorer_nm, sponsorer_department, remarks, reason, registered_sewadar_grno, registered_sewadar_id, txn_ts);
			DataSet dset = esp("UpdateSewadarApplication", prms);

			return dset;
		}
		
public string UpdateSewadarApplicationAsTask(Int32? application_id, 
		                                                Int32? application_centre_id, 
		                                                DateTime? application_dt, 
		                                                String application_status, 
		                                                DateTime? application_status_dtm, 
		                                                String first_nm, 
		                                                String middle_nm, 
		                                                String last_nm, 
		                                                String gender, 
		                                                DateTime? birth_dtm, 
		                                                String is_married, 
		                                                DateTime? initiation_dt, 
		                                                Int16? initiation_place_id, 
		                                                Byte? initiation_by, 
		                                                String address_line_1, 
		                                                String address_line_2, 
		                                                Int32? post_office_or_city_id, 
		                                                String pin_or_zip_code, 
		                                                String address_proof, 
		                                                Int16? other_address_proof_id, 
		                                                String telephone_mobile, 
		                                                String telephone_residence, 
		                                                String telephone_office, 
		                                                String occupation, 
		                                                String attends_weekly_satsang, 
		                                                Int32? weekly_satsang_centre_id, 
		                                                String has_hypertension, 
		                                                String is_diabetic, 
		                                                String has_skin_problem, 
		                                                String has_epillepsy, 
		                                                String photo_id, 
		                                                DateTime? photo_dt, 
		                                                DateTime? appointment_dt, 
		                                                String is_outstation_sewadar, 
		                                                Int16? department_id, 
		                                                Int16? sub_department_id, 
		                                                String old_grno, 
		                                                Int32? reference_1_sewadar_id, 
		                                                String reference_1_grno, 
		                                                Int16? reference_1_relationship, 
		                                                String reference_1_nm, 
		                                                Int32? reference_1_centre_id, 
		                                                String reference_1_department, 
		                                                Int32? reference_2_sewadar_id, 
		                                                String reference_2_grno, 
		                                                Int16? reference_2_relationship, 
		                                                String reference_2_nm, 
		                                                Int32? reference_2_centre_id, 
		                                                String reference_2_department, 
		                                                Int32? security_approver_id, 
		                                                Int32? security_approver_centre_id, 
		                                                String security_approver_grno, 
		                                                String security_approver_nm, 
		                                                Int32? sewa_samiti_approver_id, 
		                                                Int32? sewa_samiti_approver_centre_id, 
		                                                String sewa_samiti_approver_grno, 
		                                                String sewa_samiti_approver_nm, 
		                                                Int16? area_secretary_id, 
		                                                Int32? area_secretary_centre_id, 
		                                                String area_secretary_grno, 
		                                                String area_secretary_nm, 
		                                                Int16? secretary_id, 
		                                                Int32? secretary_centre_id, 
		                                                String secretary_grno, 
		                                                String secretary_nm, 
		                                                Int32? sponsorer_id, 
		                                                Int32? sponsorer_centre_id, 
		                                                String sponsorer_grno, 
		                                                String sponsorer_nm, 
		                                                String sponsorer_department, 
		                                                String remarks, 
		                                                String reason, 
		                                                String registered_sewadar_grno, 
		                                                Int32? registered_sewadar_id, 
		                                                Byte[] txn_ts)
		{
			List<SqlParameter> prms = UpdateSewadarApplication_Params(application_id, application_centre_id, application_dt, application_status, application_status_dtm, first_nm, middle_nm, last_nm, gender, birth_dtm, is_married, initiation_dt, initiation_place_id, initiation_by, address_line_1, address_line_2, post_office_or_city_id, pin_or_zip_code, address_proof, other_address_proof_id, telephone_mobile, telephone_residence, telephone_office, occupation, attends_weekly_satsang, weekly_satsang_centre_id, has_hypertension, is_diabetic, has_skin_problem, has_epillepsy, photo_id, photo_dt, appointment_dt, is_outstation_sewadar, department_id, sub_department_id, old_grno, reference_1_sewadar_id, reference_1_grno, reference_1_relationship, reference_1_nm, reference_1_centre_id, reference_1_department, reference_2_sewadar_id, reference_2_grno, reference_2_relationship, reference_2_nm, reference_2_centre_id, reference_2_department, security_approver_id, security_approver_centre_id, security_approver_grno, security_approver_nm, sewa_samiti_approver_id, sewa_samiti_approver_centre_id, sewa_samiti_approver_grno, sewa_samiti_approver_nm, area_secretary_id, area_secretary_centre_id, area_secretary_grno, area_secretary_nm, secretary_id, secretary_centre_id, secretary_grno, secretary_nm, sponsorer_id, sponsorer_centre_id, sponsorer_grno, sponsorer_nm, sponsorer_department, remarks, reason, registered_sewadar_grno, registered_sewadar_id, txn_ts);
			return gps("UpdateSewadarApplication", prms);

		}
		
		
		
private List<SqlParameter> UpdateSewadarApplicationOtherDisabilitie_Params(Int32? sewadar_application_id, 
		                                                                                Int16? medical_disability_id, 
		                                                                                Int16? old_medical_disability_id, 
		                                                                                Int16? medical_disability_sq)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("sewadar_application_id", sewadar_application_id, INT, IN, p);
			csp("medical_disability_id", medical_disability_id, SMALLINT, IN, p);
			csp("old_medical_disability_id", old_medical_disability_id, SMALLINT, IN, p);
			csp("medical_disability_sq", medical_disability_sq, SMALLINT, IN, p);
			return p;
		}
		
public DataSet UpdateSewadarApplicationOtherDisabilitie(Int32? sewadar_application_id, 
		                                                            Int16? medical_disability_id, 
		                                                            Int16? old_medical_disability_id, 
		                                                            Int16? medical_disability_sq)
		{
			List<SqlParameter> prms = UpdateSewadarApplicationOtherDisabilitie_Params(sewadar_application_id, medical_disability_id, old_medical_disability_id, medical_disability_sq);
			DataSet dset = esp("UpdateSewadarApplicationOtherDisabilitie", prms);

			return dset;
		}
		
public string UpdateSewadarApplicationOtherDisabilitieAsTask(Int32? sewadar_application_id, 
		                                                                Int16? medical_disability_id, 
		                                                                Int16? old_medical_disability_id, 
		                                                                Int16? medical_disability_sq)
		{
			List<SqlParameter> prms = UpdateSewadarApplicationOtherDisabilitie_Params(sewadar_application_id, medical_disability_id, old_medical_disability_id, medical_disability_sq);
			return gps("UpdateSewadarApplicationOtherDisabilitie", prms);

		}
		
		
		
private List<SqlParameter> UpdateSewadarApplicationQualification_Params(Int32? sewadar_application_id, 
		                                                                            Int16? qualification_sq, 
		                                                                            Int16? old_qualification_sq, 
		                                                                            Int16? qualification_id, 
		                                                                            Int16? qlfctn_subject_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("sewadar_application_id", sewadar_application_id, INT, IN, p);
			csp("qualification_sq", qualification_sq, SMALLINT, IN, p);
			csp("old_qualification_sq", old_qualification_sq, SMALLINT, IN, p);
			csp("qualification_id", qualification_id, SMALLINT, IN, p);
			csp("qlfctn_subject_id", qlfctn_subject_id, SMALLINT, IN, p);
			return p;
		}
		
public DataSet UpdateSewadarApplicationQualification(Int32? sewadar_application_id, 
		                                                        Int16? qualification_sq, 
		                                                        Int16? old_qualification_sq, 
		                                                        Int16? qualification_id, 
		                                                        Int16? qlfctn_subject_id)
		{
			List<SqlParameter> prms = UpdateSewadarApplicationQualification_Params(sewadar_application_id, qualification_sq, old_qualification_sq, qualification_id, qlfctn_subject_id);
			DataSet dset = esp("UpdateSewadarApplicationQualification", prms);

			return dset;
		}
		
public string UpdateSewadarApplicationQualificationAsTask(Int32? sewadar_application_id, 
		                                                                Int16? qualification_sq, 
		                                                                Int16? old_qualification_sq, 
		                                                                Int16? qualification_id, 
		                                                                Int16? qlfctn_subject_id)
		{
			List<SqlParameter> prms = UpdateSewadarApplicationQualification_Params(sewadar_application_id, qualification_sq, old_qualification_sq, qualification_id, qlfctn_subject_id);
			return gps("UpdateSewadarApplicationQualification", prms);

		}
		
		
		
private List<SqlParameter> UpdateSewadarApplicationSkill_Params(Int32? sewadar_application_id, 
		                                                                    Int16? skill_id, 
		                                                                    Int16? old_skill_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("sewadar_application_id", sewadar_application_id, INT, IN, p);
			csp("skill_id", skill_id, SMALLINT, IN, p);
			csp("old_skill_id", old_skill_id, SMALLINT, IN, p);
			return p;
		}
		
public DataSet UpdateSewadarApplicationSkill(Int32? sewadar_application_id, 
		                                                Int16? skill_id, 
		                                                Int16? old_skill_id)
		{
			List<SqlParameter> prms = UpdateSewadarApplicationSkill_Params(sewadar_application_id, skill_id, old_skill_id);
			DataSet dset = esp("UpdateSewadarApplicationSkill", prms);

			return dset;
		}
		
public string UpdateSewadarApplicationSkillAsTask(Int32? sewadar_application_id, 
		                                                        Int16? skill_id, 
		                                                        Int16? old_skill_id)
		{
			List<SqlParameter> prms = UpdateSewadarApplicationSkill_Params(sewadar_application_id, skill_id, old_skill_id);
			return gps("UpdateSewadarApplicationSkill", prms);

		}
		
		
		
private List<SqlParameter> UpdateSewadarApplicationStatus_Params(Int32? application_id, 
		                                                                    String application_status, 
		                                                                    String reason, 
		                                                                    Byte[] txn_ts)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("application_id", application_id, INT, IN, p);
			csp("application_status", application_status, VARCHAR, IN, p);
			csp("reason", reason, VARCHAR, IN, p);
			csp("txn_ts", txn_ts, TIMESTAMP, IN, p);
			return p;
		}
		
public DataSet UpdateSewadarApplicationStatus(Int32? application_id, 
		                                                    String application_status, 
		                                                    String reason, 
		                                                    Byte[] txn_ts)
		{
			List<SqlParameter> prms = UpdateSewadarApplicationStatus_Params(application_id, application_status, reason, txn_ts);
			DataSet dset = esp("UpdateSewadarApplicationStatus", prms);

			return dset;
		}
		
public string UpdateSewadarApplicationStatusAsTask(Int32? application_id, 
		                                                        String application_status, 
		                                                        String reason, 
		                                                        Byte[] txn_ts)
		{
			List<SqlParameter> prms = UpdateSewadarApplicationStatus_Params(application_id, application_status, reason, txn_ts);
			return gps("UpdateSewadarApplicationStatus", prms);

		}
		
		
		
private List<SqlParameter> UpdateSewadarGlobalStatus_Params(Int32? sewadar_id, 
		                                                                String global_sewadar_status_cd, 
		                                                                DateTime? global_sewadar_status_dt, 
		                                                                Byte[] txn_ts)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("sewadar_id", sewadar_id, INT, IN, p);
			csp("global_sewadar_status_cd", global_sewadar_status_cd, VARCHAR, IN, p);
			csp("global_sewadar_status_dt", global_sewadar_status_dt, SMALLDATETIME, IN, p);
			csp("txn_ts", txn_ts, TIMESTAMP, IN, p);
			return p;
		}
		
public DataSet UpdateSewadarGlobalStatus(Int32? sewadar_id, 
		                                            String global_sewadar_status_cd, 
		                                            DateTime? global_sewadar_status_dt, 
		                                            Byte[] txn_ts)
		{
			List<SqlParameter> prms = UpdateSewadarGlobalStatus_Params(sewadar_id, global_sewadar_status_cd, global_sewadar_status_dt, txn_ts);
			DataSet dset = esp("UpdateSewadarGlobalStatus", prms);

			return dset;
		}
		
public string UpdateSewadarGlobalStatusAsTask(Int32? sewadar_id, 
		                                                    String global_sewadar_status_cd, 
		                                                    DateTime? global_sewadar_status_dt, 
		                                                    Byte[] txn_ts)
		{
			List<SqlParameter> prms = UpdateSewadarGlobalStatus_Params(sewadar_id, global_sewadar_status_cd, global_sewadar_status_dt, txn_ts);
			return gps("UpdateSewadarGlobalStatus", prms);

		}
		
		
		
private List<SqlParameter> UpdateSewadarReferences_Params(Int32? satsang_centre_id, 
		                                                                String sewadar_grno, 
		                                                                Int32? reference_1_sewadar_id, 
		                                                                Int16? reference_1_relationship, 
		                                                                String reference_1_nm, 
		                                                                Int32? reference_1_centre_id, 
		                                                                String reference_1_department, 
		                                                                Int32? reference_2_sewadar_id, 
		                                                                Int16? reference_2_relationship, 
		                                                                String reference_2_nm, 
		                                                                Int32? reference_2_centre_id, 
		                                                                String reference_2_department, 
		                                                                Byte[] txn_ts)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("satsang_centre_id", satsang_centre_id, INT, IN, p);
			csp("sewadar_grno", sewadar_grno, CHAR, IN, p);
			csp("reference_1_sewadar_id", reference_1_sewadar_id, INT, IN, p);
			csp("reference_1_relationship", reference_1_relationship, SMALLINT, IN, p);
			csp("reference_1_nm", reference_1_nm, VARCHAR, IN, p);
			csp("reference_1_centre_id", reference_1_centre_id, INT, IN, p);
			csp("reference_1_department", reference_1_department, VARCHAR, IN, p);
			csp("reference_2_sewadar_id", reference_2_sewadar_id, INT, IN, p);
			csp("reference_2_relationship", reference_2_relationship, SMALLINT, IN, p);
			csp("reference_2_nm", reference_2_nm, VARCHAR, IN, p);
			csp("reference_2_centre_id", reference_2_centre_id, INT, IN, p);
			csp("reference_2_department", reference_2_department, VARCHAR, IN, p);
			csp("txn_ts", txn_ts, TIMESTAMP, IN, p);
			return p;
		}
		
public DataSet UpdateSewadarReferences(Int32? satsang_centre_id, 
		                                            String sewadar_grno, 
		                                            Int32? reference_1_sewadar_id, 
		                                            Int16? reference_1_relationship, 
		                                            String reference_1_nm, 
		                                            Int32? reference_1_centre_id, 
		                                            String reference_1_department, 
		                                            Int32? reference_2_sewadar_id, 
		                                            Int16? reference_2_relationship, 
		                                            String reference_2_nm, 
		                                            Int32? reference_2_centre_id, 
		                                            String reference_2_department, 
		                                            Byte[] txn_ts)
		{
			List<SqlParameter> prms = UpdateSewadarReferences_Params(satsang_centre_id, sewadar_grno, reference_1_sewadar_id, reference_1_relationship, reference_1_nm, reference_1_centre_id, reference_1_department, reference_2_sewadar_id, reference_2_relationship, reference_2_nm, reference_2_centre_id, reference_2_department, txn_ts);
			DataSet dset = esp("UpdateSewadarReferences", prms);

			return dset;
		}
		
public string UpdateSewadarReferencesAsTask(Int32? satsang_centre_id, 
		                                                String sewadar_grno, 
		                                                Int32? reference_1_sewadar_id, 
		                                                Int16? reference_1_relationship, 
		                                                String reference_1_nm, 
		                                                Int32? reference_1_centre_id, 
		                                                String reference_1_department, 
		                                                Int32? reference_2_sewadar_id, 
		                                                Int16? reference_2_relationship, 
		                                                String reference_2_nm, 
		                                                Int32? reference_2_centre_id, 
		                                                String reference_2_department, 
		                                                Byte[] txn_ts)
		{
			List<SqlParameter> prms = UpdateSewadarReferences_Params(satsang_centre_id, sewadar_grno, reference_1_sewadar_id, reference_1_relationship, reference_1_nm, reference_1_centre_id, reference_1_department, reference_2_sewadar_id, reference_2_relationship, reference_2_nm, reference_2_centre_id, reference_2_department, txn_ts);
			return gps("UpdateSewadarReferences", prms);

		}
		
		
		
private List<SqlParameter> UpdateSewadarsAddresse_Params(Int32? sewadar_id, 
		                                                            String address_type, 
		                                                            String address_line_1, 
		                                                            String address_line_2, 
		                                                            Int32? post_office_or_city_id, 
		                                                            String pin_or_zip_code)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("sewadar_id", sewadar_id, INT, IN, p);
			csp("address_type", address_type, VARCHAR, IN, p);
			csp("address_line_1", address_line_1, VARCHAR, IN, p);
			csp("address_line_2", address_line_2, VARCHAR, IN, p);
			csp("post_office_or_city_id", post_office_or_city_id, INT, IN, p);
			csp("pin_or_zip_code", pin_or_zip_code, VARCHAR, IN, p);
			return p;
		}
		
public DataSet UpdateSewadarsAddresse(Int32? sewadar_id, 
		                                            String address_type, 
		                                            String address_line_1, 
		                                            String address_line_2, 
		                                            Int32? post_office_or_city_id, 
		                                            String pin_or_zip_code)
		{
			List<SqlParameter> prms = UpdateSewadarsAddresse_Params(sewadar_id, address_type, address_line_1, address_line_2, post_office_or_city_id, pin_or_zip_code);
			DataSet dset = esp("UpdateSewadarsAddresse", prms);

			return dset;
		}
		
public string UpdateSewadarsAddresseAsTask(Int32? sewadar_id, 
		                                                String address_type, 
		                                                String address_line_1, 
		                                                String address_line_2, 
		                                                Int32? post_office_or_city_id, 
		                                                String pin_or_zip_code)
		{
			List<SqlParameter> prms = UpdateSewadarsAddresse_Params(sewadar_id, address_type, address_line_1, address_line_2, post_office_or_city_id, pin_or_zip_code);
			return gps("UpdateSewadarsAddresse", prms);

		}
		
		
		
private List<SqlParameter> UpdateSewadarsDetail_Params(Int32? sewadar_id, 
		                                                            String address_proof, 
		                                                            Int16? other_address_proof_id, 
		                                                            String telephone_mobile, 
		                                                            String telephone_residence, 
		                                                            String telephone_office, 
		                                                            String occupation, 
		                                                            String attends_weekly_satsang, 
		                                                            Int32? weekly_satsang_centre_id, 
		                                                            String has_hypertension, 
		                                                            String is_diabetic, 
		                                                            String has_skin_problem, 
		                                                            String has_epillepsy, 
		                                                            Byte[] txn_ts)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("sewadar_id", sewadar_id, INT, IN, p);
			csp("address_proof", address_proof, VARCHAR, IN, p);
			csp("other_address_proof_id", other_address_proof_id, SMALLINT, IN, p);
			csp("telephone_mobile", telephone_mobile, VARCHAR, IN, p);
			csp("telephone_residence", telephone_residence, VARCHAR, IN, p);
			csp("telephone_office", telephone_office, VARCHAR, IN, p);
			csp("occupation", occupation, VARCHAR, IN, p);
			csp("attends_weekly_satsang", attends_weekly_satsang, VARCHAR, IN, p);
			csp("weekly_satsang_centre_id", weekly_satsang_centre_id, INT, IN, p);
			csp("has_hypertension", has_hypertension, VARCHAR, IN, p);
			csp("is_diabetic", is_diabetic, VARCHAR, IN, p);
			csp("has_skin_problem", has_skin_problem, VARCHAR, IN, p);
			csp("has_epillepsy", has_epillepsy, VARCHAR, IN, p);
			csp("txn_ts", txn_ts, TIMESTAMP, IN, p);
			return p;
		}
		
public DataSet UpdateSewadarsDetail(Int32? sewadar_id, 
		                                        String address_proof, 
		                                        Int16? other_address_proof_id, 
		                                        String telephone_mobile, 
		                                        String telephone_residence, 
		                                        String telephone_office, 
		                                        String occupation, 
		                                        String attends_weekly_satsang, 
		                                        Int32? weekly_satsang_centre_id, 
		                                        String has_hypertension, 
		                                        String is_diabetic, 
		                                        String has_skin_problem, 
		                                        String has_epillepsy, 
		                                        Byte[] txn_ts)
		{
			List<SqlParameter> prms = UpdateSewadarsDetail_Params(sewadar_id, address_proof, other_address_proof_id, telephone_mobile, telephone_residence, telephone_office, occupation, attends_weekly_satsang, weekly_satsang_centre_id, has_hypertension, is_diabetic, has_skin_problem, has_epillepsy, txn_ts);
			DataSet dset = esp("UpdateSewadarsDetail", prms);

			return dset;
		}
		
public string UpdateSewadarsDetailAsTask(Int32? sewadar_id, 
		                                            String address_proof, 
		                                            Int16? other_address_proof_id, 
		                                            String telephone_mobile, 
		                                            String telephone_residence, 
		                                            String telephone_office, 
		                                            String occupation, 
		                                            String attends_weekly_satsang, 
		                                            Int32? weekly_satsang_centre_id, 
		                                            String has_hypertension, 
		                                            String is_diabetic, 
		                                            String has_skin_problem, 
		                                            String has_epillepsy, 
		                                            Byte[] txn_ts)
		{
			List<SqlParameter> prms = UpdateSewadarsDetail_Params(sewadar_id, address_proof, other_address_proof_id, telephone_mobile, telephone_residence, telephone_office, occupation, attends_weekly_satsang, weekly_satsang_centre_id, has_hypertension, is_diabetic, has_skin_problem, has_epillepsy, txn_ts);
			return gps("UpdateSewadarsDetail", prms);

		}
		
		
		
private List<SqlParameter> UpdateSewadarsOtherDisabilities_Params(Int32? sewadar_id, 
		                                                                        Int16? medical_disability_id, 
		                                                                        Int16? old_medical_disability_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("sewadar_id", sewadar_id, INT, IN, p);
			csp("medical_disability_id", medical_disability_id, SMALLINT, IN, p);
			csp("old_medical_disability_id", old_medical_disability_id, SMALLINT, IN, p);
			return p;
		}
		
public DataSet UpdateSewadarsOtherDisabilities(Int32? sewadar_id, 
		                                                    Int16? medical_disability_id, 
		                                                    Int16? old_medical_disability_id)
		{
			List<SqlParameter> prms = UpdateSewadarsOtherDisabilities_Params(sewadar_id, medical_disability_id, old_medical_disability_id);
			DataSet dset = esp("UpdateSewadarsOtherDisabilities", prms);

			return dset;
		}
		
public string UpdateSewadarsOtherDisabilitiesAsTask(Int32? sewadar_id, 
		                                                        Int16? medical_disability_id, 
		                                                        Int16? old_medical_disability_id)
		{
			List<SqlParameter> prms = UpdateSewadarsOtherDisabilities_Params(sewadar_id, medical_disability_id, old_medical_disability_id);
			return gps("UpdateSewadarsOtherDisabilities", prms);

		}
		
		
		
private List<SqlParameter> UpdateSewadarsParticular_Params(Int32? satsang_centre_id, 
		                                                                String sewadar_grno, 
		                                                                Byte[] txn_ts)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("satsang_centre_id", satsang_centre_id, INT, IN, p);
			csp("sewadar_grno", sewadar_grno, CHAR, IN, p);
			csp("txn_ts", txn_ts, TIMESTAMP, IN, p);
			return p;
		}
		
public DataSet UpdateSewadarsParticular(Int32? satsang_centre_id, 
		                                            String sewadar_grno, 
		                                            Byte[] txn_ts)
		{
			List<SqlParameter> prms = UpdateSewadarsParticular_Params(satsang_centre_id, sewadar_grno, txn_ts);
			DataSet dset = esp("UpdateSewadarsParticular", prms);

			return dset;
		}
		
public string UpdateSewadarsParticularAsTask(Int32? satsang_centre_id, 
		                                                String sewadar_grno, 
		                                                Byte[] txn_ts)
		{
			List<SqlParameter> prms = UpdateSewadarsParticular_Params(satsang_centre_id, sewadar_grno, txn_ts);
			return gps("UpdateSewadarsParticular", prms);

		}
		
		
		
private List<SqlParameter> UpdateSewadarsQualification_Params(Int32? sewadar_id, 
		                                                                    Int16? qualification_sq, 
		                                                                    Int16? qualification_id, 
		                                                                    Int16? qlfctn_subject_id, 
		                                                                    Int16? old_qualification_id, 
		                                                                    Int16? old_qualification_sq)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("sewadar_id", sewadar_id, INT, IN, p);
			csp("qualification_sq", qualification_sq, SMALLINT, IN, p);
			csp("qualification_id", qualification_id, SMALLINT, IN, p);
			csp("qlfctn_subject_id", qlfctn_subject_id, SMALLINT, IN, p);
			csp("old_qualification_id", old_qualification_id, SMALLINT, IN, p);
			csp("old_qualification_sq", old_qualification_sq, SMALLINT, IN, p);
			return p;
		}
		
public DataSet UpdateSewadarsQualification(Int32? sewadar_id, 
		                                                Int16? qualification_sq, 
		                                                Int16? qualification_id, 
		                                                Int16? qlfctn_subject_id, 
		                                                Int16? old_qualification_id, 
		                                                Int16? old_qualification_sq)
		{
			List<SqlParameter> prms = UpdateSewadarsQualification_Params(sewadar_id, qualification_sq, qualification_id, qlfctn_subject_id, old_qualification_id, old_qualification_sq);
			DataSet dset = esp("UpdateSewadarsQualification", prms);

			return dset;
		}
		
public string UpdateSewadarsQualificationAsTask(Int32? sewadar_id, 
		                                                    Int16? qualification_sq, 
		                                                    Int16? qualification_id, 
		                                                    Int16? qlfctn_subject_id, 
		                                                    Int16? old_qualification_id, 
		                                                    Int16? old_qualification_sq)
		{
			List<SqlParameter> prms = UpdateSewadarsQualification_Params(sewadar_id, qualification_sq, qualification_id, qlfctn_subject_id, old_qualification_id, old_qualification_sq);
			return gps("UpdateSewadarsQualification", prms);

		}
		
		
		
private List<SqlParameter> UpdateSewadarsQualificationSq_Params(Int32? sewadar_id, 
		                                                                    Int16? qualification_sq, 
		                                                                    Int16? old_qualification_id, 
		                                                                    Int16? old_qualification_sq)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("sewadar_id", sewadar_id, INT, IN, p);
			csp("qualification_sq", qualification_sq, SMALLINT, IN, p);
			csp("old_qualification_id", old_qualification_id, SMALLINT, IN, p);
			csp("old_qualification_sq", old_qualification_sq, SMALLINT, IN, p);
			return p;
		}
		
public DataSet UpdateSewadarsQualificationSq(Int32? sewadar_id, 
		                                                Int16? qualification_sq, 
		                                                Int16? old_qualification_id, 
		                                                Int16? old_qualification_sq)
		{
			List<SqlParameter> prms = UpdateSewadarsQualificationSq_Params(sewadar_id, qualification_sq, old_qualification_id, old_qualification_sq);
			DataSet dset = esp("UpdateSewadarsQualificationSq", prms);

			return dset;
		}
		
public string UpdateSewadarsQualificationSqAsTask(Int32? sewadar_id, 
		                                                        Int16? qualification_sq, 
		                                                        Int16? old_qualification_id, 
		                                                        Int16? old_qualification_sq)
		{
			List<SqlParameter> prms = UpdateSewadarsQualificationSq_Params(sewadar_id, qualification_sq, old_qualification_id, old_qualification_sq);
			return gps("UpdateSewadarsQualificationSq", prms);

		}
		
		
		
private List<SqlParameter> UpdateSewadarsRegistration_Params(Int32? satsang_centre_id, 
		                                                                String sewadar_grno, 
		                                                                Int32? sewadar_id, 
		                                                                DateTime? appointment_dt, 
		                                                                String is_outstation_sewadar, 
		                                                                Int16? department_id, 
		                                                                Int16? sub_department_id, 
		                                                                DateTime? department_dt, 
		                                                                String sewadar_status_cd, 
		                                                                DateTime? sewadar_status_dtm, 
		                                                                String responsibility, 
		                                                                DateTime? responsibility_dtm, 
		                                                                Int32? reference_1_sewadar_id, 
		                                                                Int16? reference_1_relationship, 
		                                                                String reference_1_nm, 
		                                                                Int32? reference_1_centre_id, 
		                                                                String reference_1_department, 
		                                                                Int32? reference_2_sewadar_id, 
		                                                                Int16? reference_2_relationship, 
		                                                                String reference_2_nm, 
		                                                                Int32? reference_2_centre_id, 
		                                                                String reference_2_department, 
		                                                                Int32? sponsorer_id, 
		                                                                Int16? area_secretary_id, 
		                                                                Int16? secretary_id, 
		                                                                Int32? security_approver_id, 
		                                                                Int32? sewa_samiti_approver_id, 
		                                                                Int32? weekly_sewa_location_id, 
		                                                                Int16? weekly_department_id, 
		                                                                String sewadar_type, 
		                                                                Int32? sewa_id, 
		                                                                Int32? location_district_id, 
		                                                                Byte[] txn_ts)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("satsang_centre_id", satsang_centre_id, INT, IN, p);
			csp("sewadar_grno", sewadar_grno, CHAR, IN, p);
			csp("sewadar_id", sewadar_id, INT, IN, p);
			csp("appointment_dt", appointment_dt, SMALLDATETIME, IN, p);
			csp("is_outstation_sewadar", is_outstation_sewadar, VARCHAR, IN, p);
			csp("department_id", department_id, SMALLINT, IN, p);
			csp("sub_department_id", sub_department_id, SMALLINT, IN, p);
			csp("department_dt", department_dt, SMALLDATETIME, IN, p);
			csp("sewadar_status_cd", sewadar_status_cd, VARCHAR, IN, p);
			csp("sewadar_status_dtm", sewadar_status_dtm, SMALLDATETIME, IN, p);
			csp("responsibility", responsibility, VARCHAR, IN, p);
			csp("responsibility_dtm", responsibility_dtm, SMALLDATETIME, IN, p);
			csp("reference_1_sewadar_id", reference_1_sewadar_id, INT, IN, p);
			csp("reference_1_relationship", reference_1_relationship, SMALLINT, IN, p);
			csp("reference_1_nm", reference_1_nm, VARCHAR, IN, p);
			csp("reference_1_centre_id", reference_1_centre_id, INT, IN, p);
			csp("reference_1_department", reference_1_department, VARCHAR, IN, p);
			csp("reference_2_sewadar_id", reference_2_sewadar_id, INT, IN, p);
			csp("reference_2_relationship", reference_2_relationship, SMALLINT, IN, p);
			csp("reference_2_nm", reference_2_nm, VARCHAR, IN, p);
			csp("reference_2_centre_id", reference_2_centre_id, INT, IN, p);
			csp("reference_2_department", reference_2_department, VARCHAR, IN, p);
			csp("sponsorer_id", sponsorer_id, INT, IN, p);
			csp("area_secretary_id", area_secretary_id, SMALLINT, IN, p);
			csp("secretary_id", secretary_id, SMALLINT, IN, p);
			csp("security_approver_id", security_approver_id, INT, IN, p);
			csp("sewa_samiti_approver_id", sewa_samiti_approver_id, INT, IN, p);
			csp("weekly_sewa_location_id", weekly_sewa_location_id, INT, IN, p);
			csp("weekly_department_id", weekly_department_id, SMALLINT, IN, p);
			csp("sewadar_type", sewadar_type, CHAR, IN, p);
			csp("sewa_id", sewa_id, INT, IN, p);
			csp("location_district_id", location_district_id, INT, IN, p);
			csp("txn_ts", txn_ts, TIMESTAMP, IN, p);
			return p;
		}
		
public DataSet UpdateSewadarsRegistration(Int32? satsang_centre_id, 
		                                                String sewadar_grno, 
		                                                Int32? sewadar_id, 
		                                                DateTime? appointment_dt, 
		                                                String is_outstation_sewadar, 
		                                                Int16? department_id, 
		                                                Int16? sub_department_id, 
		                                                DateTime? department_dt, 
		                                                String sewadar_status_cd, 
		                                                DateTime? sewadar_status_dtm, 
		                                                String responsibility, 
		                                                DateTime? responsibility_dtm, 
		                                                Int32? reference_1_sewadar_id, 
		                                                Int16? reference_1_relationship, 
		                                                String reference_1_nm, 
		                                                Int32? reference_1_centre_id, 
		                                                String reference_1_department, 
		                                                Int32? reference_2_sewadar_id, 
		                                                Int16? reference_2_relationship, 
		                                                String reference_2_nm, 
		                                                Int32? reference_2_centre_id, 
		                                                String reference_2_department, 
		                                                Int32? sponsorer_id, 
		                                                Int16? area_secretary_id, 
		                                                Int16? secretary_id, 
		                                                Int32? security_approver_id, 
		                                                Int32? sewa_samiti_approver_id, 
		                                                Int32? weekly_sewa_location_id, 
		                                                Int16? weekly_department_id, 
		                                                String sewadar_type, 
		                                                Int32? sewa_id, 
		                                                Int32? location_district_id, 
		                                                Byte[] txn_ts)
		{
			List<SqlParameter> prms = UpdateSewadarsRegistration_Params(satsang_centre_id, sewadar_grno, sewadar_id, appointment_dt, is_outstation_sewadar, department_id, sub_department_id, department_dt, sewadar_status_cd, sewadar_status_dtm, responsibility, responsibility_dtm, reference_1_sewadar_id, reference_1_relationship, reference_1_nm, reference_1_centre_id, reference_1_department, reference_2_sewadar_id, reference_2_relationship, reference_2_nm, reference_2_centre_id, reference_2_department, sponsorer_id, area_secretary_id, secretary_id, security_approver_id, sewa_samiti_approver_id, weekly_sewa_location_id, weekly_department_id, sewadar_type, sewa_id, location_district_id, txn_ts);
			DataSet dset = esp("UpdateSewadarsRegistration", prms);

			return dset;
		}
		
public string UpdateSewadarsRegistrationAsTask(Int32? satsang_centre_id, 
		                                                    String sewadar_grno, 
		                                                    Int32? sewadar_id, 
		                                                    DateTime? appointment_dt, 
		                                                    String is_outstation_sewadar, 
		                                                    Int16? department_id, 
		                                                    Int16? sub_department_id, 
		                                                    DateTime? department_dt, 
		                                                    String sewadar_status_cd, 
		                                                    DateTime? sewadar_status_dtm, 
		                                                    String responsibility, 
		                                                    DateTime? responsibility_dtm, 
		                                                    Int32? reference_1_sewadar_id, 
		                                                    Int16? reference_1_relationship, 
		                                                    String reference_1_nm, 
		                                                    Int32? reference_1_centre_id, 
		                                                    String reference_1_department, 
		                                                    Int32? reference_2_sewadar_id, 
		                                                    Int16? reference_2_relationship, 
		                                                    String reference_2_nm, 
		                                                    Int32? reference_2_centre_id, 
		                                                    String reference_2_department, 
		                                                    Int32? sponsorer_id, 
		                                                    Int16? area_secretary_id, 
		                                                    Int16? secretary_id, 
		                                                    Int32? security_approver_id, 
		                                                    Int32? sewa_samiti_approver_id, 
		                                                    Int32? weekly_sewa_location_id, 
		                                                    Int16? weekly_department_id, 
		                                                    String sewadar_type, 
		                                                    Int32? sewa_id, 
		                                                    Int32? location_district_id, 
		                                                    Byte[] txn_ts)
		{
			List<SqlParameter> prms = UpdateSewadarsRegistration_Params(satsang_centre_id, sewadar_grno, sewadar_id, appointment_dt, is_outstation_sewadar, department_id, sub_department_id, department_dt, sewadar_status_cd, sewadar_status_dtm, responsibility, responsibility_dtm, reference_1_sewadar_id, reference_1_relationship, reference_1_nm, reference_1_centre_id, reference_1_department, reference_2_sewadar_id, reference_2_relationship, reference_2_nm, reference_2_centre_id, reference_2_department, sponsorer_id, area_secretary_id, secretary_id, security_approver_id, sewa_samiti_approver_id, weekly_sewa_location_id, weekly_department_id, sewadar_type, sewa_id, location_district_id, txn_ts);
			return gps("UpdateSewadarsRegistration", prms);

		}
		
		
		
private List<SqlParameter> UpdateSewadarsRemark_Params(Int32? sewadar_id, 
		                                                            String remarks_type, 
		                                                            Int16? remarks_sq, 
		                                                            String old_remarks_type, 
		                                                            Int16? old_remarks_sq, 
		                                                            String remarks)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("sewadar_id", sewadar_id, INT, IN, p);
			csp("remarks_type", remarks_type, VARCHAR, IN, p);
			csp("remarks_sq", remarks_sq, SMALLINT, IN, p);
			csp("old_remarks_type", old_remarks_type, VARCHAR, IN, p);
			csp("old_remarks_sq", old_remarks_sq, SMALLINT, IN, p);
			csp("remarks", remarks, VARCHAR, IN, p);
			return p;
		}
		
public DataSet UpdateSewadarsRemark(Int32? sewadar_id, 
		                                        String remarks_type, 
		                                        Int16? remarks_sq, 
		                                        String old_remarks_type, 
		                                        Int16? old_remarks_sq, 
		                                        String remarks)
		{
			List<SqlParameter> prms = UpdateSewadarsRemark_Params(sewadar_id, remarks_type, remarks_sq, old_remarks_type, old_remarks_sq, remarks);
			DataSet dset = esp("UpdateSewadarsRemark", prms);

			return dset;
		}
		
public string UpdateSewadarsRemarkAsTask(Int32? sewadar_id, 
		                                            String remarks_type, 
		                                            Int16? remarks_sq, 
		                                            String old_remarks_type, 
		                                            Int16? old_remarks_sq, 
		                                            String remarks)
		{
			List<SqlParameter> prms = UpdateSewadarsRemark_Params(sewadar_id, remarks_type, remarks_sq, old_remarks_type, old_remarks_sq, remarks);
			return gps("UpdateSewadarsRemark", prms);

		}
		
		
		
private List<SqlParameter> UpdateSewadarsRemarkSq_Params(Int32? sewadar_id, 
		                                                            Int16? remarks_sq, 
		                                                            String old_remarks_type, 
		                                                            Int16? old_remarks_sq)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("sewadar_id", sewadar_id, INT, IN, p);
			csp("remarks_sq", remarks_sq, SMALLINT, IN, p);
			csp("old_remarks_type", old_remarks_type, VARCHAR, IN, p);
			csp("old_remarks_sq", old_remarks_sq, SMALLINT, IN, p);
			return p;
		}
		
public DataSet UpdateSewadarsRemarkSq(Int32? sewadar_id, 
		                                            Int16? remarks_sq, 
		                                            String old_remarks_type, 
		                                            Int16? old_remarks_sq)
		{
			List<SqlParameter> prms = UpdateSewadarsRemarkSq_Params(sewadar_id, remarks_sq, old_remarks_type, old_remarks_sq);
			DataSet dset = esp("UpdateSewadarsRemarkSq", prms);

			return dset;
		}
		
public string UpdateSewadarsRemarkSqAsTask(Int32? sewadar_id, 
		                                                Int16? remarks_sq, 
		                                                String old_remarks_type, 
		                                                Int16? old_remarks_sq)
		{
			List<SqlParameter> prms = UpdateSewadarsRemarkSq_Params(sewadar_id, remarks_sq, old_remarks_type, old_remarks_sq);
			return gps("UpdateSewadarsRemarkSq", prms);

		}
		
		
		
private List<SqlParameter> UpdateSewadarsSkill_Params(Int32? sewadar_id, 
		                                                            Int16? skill_id, 
		                                                            Int16? old_skill_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("sewadar_id", sewadar_id, INT, IN, p);
			csp("skill_id", skill_id, SMALLINT, IN, p);
			csp("old_skill_id", old_skill_id, SMALLINT, IN, p);
			return p;
		}
		
public DataSet UpdateSewadarsSkill(Int32? sewadar_id, 
		                                        Int16? skill_id, 
		                                        Int16? old_skill_id)
		{
			List<SqlParameter> prms = UpdateSewadarsSkill_Params(sewadar_id, skill_id, old_skill_id);
			DataSet dset = esp("UpdateSewadarsSkill", prms);

			return dset;
		}
		
public string UpdateSewadarsSkillAsTask(Int32? sewadar_id, 
		                                            Int16? skill_id, 
		                                            Int16? old_skill_id)
		{
			List<SqlParameter> prms = UpdateSewadarsSkill_Params(sewadar_id, skill_id, old_skill_id);
			return gps("UpdateSewadarsSkill", prms);

		}
		
		
		
private List<SqlParameter> UpdateSewadarsTransfer_Params(Int32? satsang_centre_id, 
		                                                            String sewadar_grno, 
		                                                            DateTime? effective_dt, 
		                                                            Int16? old_department_id, 
		                                                            Int16? old_sub_department_id, 
		                                                            Int16? department_id, 
		                                                            Int16? sub_department_id, 
		                                                            String remarks, 
		                                                            Byte[] txn_ts)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("satsang_centre_id", satsang_centre_id, INT, IN, p);
			csp("sewadar_grno", sewadar_grno, CHAR, IN, p);
			csp("effective_dt", effective_dt, SMALLDATETIME, IN, p);
			csp("old_department_id", old_department_id, SMALLINT, IN, p);
			csp("old_sub_department_id", old_sub_department_id, SMALLINT, IN, p);
			csp("department_id", department_id, SMALLINT, IN, p);
			csp("sub_department_id", sub_department_id, SMALLINT, IN, p);
			csp("remarks", remarks, VARCHAR, IN, p);
			csp("txn_ts", txn_ts, TIMESTAMP, IN, p);
			return p;
		}
		
public DataSet UpdateSewadarsTransfer(Int32? satsang_centre_id, 
		                                            String sewadar_grno, 
		                                            DateTime? effective_dt, 
		                                            Int16? old_department_id, 
		                                            Int16? old_sub_department_id, 
		                                            Int16? department_id, 
		                                            Int16? sub_department_id, 
		                                            String remarks, 
		                                            Byte[] txn_ts)
		{
			List<SqlParameter> prms = UpdateSewadarsTransfer_Params(satsang_centre_id, sewadar_grno, effective_dt, old_department_id, old_sub_department_id, department_id, sub_department_id, remarks, txn_ts);
			DataSet dset = esp("UpdateSewadarsTransfer", prms);

			return dset;
		}
		
public string UpdateSewadarsTransferAsTask(Int32? satsang_centre_id, 
		                                                String sewadar_grno, 
		                                                DateTime? effective_dt, 
		                                                Int16? old_department_id, 
		                                                Int16? old_sub_department_id, 
		                                                Int16? department_id, 
		                                                Int16? sub_department_id, 
		                                                String remarks, 
		                                                Byte[] txn_ts)
		{
			List<SqlParameter> prms = UpdateSewadarsTransfer_Params(satsang_centre_id, sewadar_grno, effective_dt, old_department_id, old_sub_department_id, department_id, sub_department_id, remarks, txn_ts);
			return gps("UpdateSewadarsTransfer", prms);

		}
		
		
		
private List<SqlParameter> UpdateSewadarWiseSewaSummarie_Params(Int32? sewa_id, 
		                                                                    Int32? satsang_centre_id, 
		                                                                    String sewadar_grno, 
		                                                                    Decimal? present_cnt, 
		                                                                    Decimal? exempt_cnt, 
		                                                                    Decimal? leave_cnt, 
		                                                                    Decimal? absent_cnt, 
		                                                                    String is_system_recorded, 
		                                                                    Int32? old_sewa_id, 
		                                                                    Int32? old_satsang_centre_id, 
		                                                                    String old_sewadar_grno)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("sewa_id", sewa_id, INT, IN, p);
			csp("satsang_centre_id", satsang_centre_id, INT, IN, p);
			csp("sewadar_grno", sewadar_grno, CHAR, IN, p);
			csp("present_cnt", present_cnt, DECIMAL, IN, p);
			csp("exempt_cnt", exempt_cnt, DECIMAL, IN, p);
			csp("leave_cnt", leave_cnt, DECIMAL, IN, p);
			csp("absent_cnt", absent_cnt, DECIMAL, IN, p);
			csp("is_system_recorded", is_system_recorded, VARCHAR, IN, p);
			csp("old_sewa_id", old_sewa_id, INT, IN, p);
			csp("old_satsang_centre_id", old_satsang_centre_id, INT, IN, p);
			csp("old_sewadar_grno", old_sewadar_grno, CHAR, IN, p);
			return p;
		}
		
public DataSet UpdateSewadarWiseSewaSummarie(Int32? sewa_id, 
		                                                Int32? satsang_centre_id, 
		                                                String sewadar_grno, 
		                                                Decimal? present_cnt, 
		                                                Decimal? exempt_cnt, 
		                                                Decimal? leave_cnt, 
		                                                Decimal? absent_cnt, 
		                                                String is_system_recorded, 
		                                                Int32? old_sewa_id, 
		                                                Int32? old_satsang_centre_id, 
		                                                String old_sewadar_grno)
		{
			List<SqlParameter> prms = UpdateSewadarWiseSewaSummarie_Params(sewa_id, satsang_centre_id, sewadar_grno, present_cnt, exempt_cnt, leave_cnt, absent_cnt, is_system_recorded, old_sewa_id, old_satsang_centre_id, old_sewadar_grno);
			DataSet dset = esp("UpdateSewadarWiseSewaSummarie", prms);

			return dset;
		}
		
public string UpdateSewadarWiseSewaSummarieAsTask(Int32? sewa_id, 
		                                                        Int32? satsang_centre_id, 
		                                                        String sewadar_grno, 
		                                                        Decimal? present_cnt, 
		                                                        Decimal? exempt_cnt, 
		                                                        Decimal? leave_cnt, 
		                                                        Decimal? absent_cnt, 
		                                                        String is_system_recorded, 
		                                                        Int32? old_sewa_id, 
		                                                        Int32? old_satsang_centre_id, 
		                                                        String old_sewadar_grno)
		{
			List<SqlParameter> prms = UpdateSewadarWiseSewaSummarie_Params(sewa_id, satsang_centre_id, sewadar_grno, present_cnt, exempt_cnt, leave_cnt, absent_cnt, is_system_recorded, old_sewa_id, old_satsang_centre_id, old_sewadar_grno);
			return gps("UpdateSewadarWiseSewaSummarie", prms);

		}
		
		
		
private List<SqlParameter> UpdateSewaExemption_Params(Int16? sewa_exemption_id, 
		                                                            String sewa_exemption_nm, 
		                                                            String sewa_exemption_type, 
		                                                            String sewa_applicability, 
		                                                            String is_computed, 
		                                                            DateTime? effective_from, 
		                                                            DateTime? effective_till, 
		                                                            Byte[] txn_ts)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("sewa_exemption_id", sewa_exemption_id, SMALLINT, IN, p);
			csp("sewa_exemption_nm", sewa_exemption_nm, VARCHAR, IN, p);
			csp("sewa_exemption_type", sewa_exemption_type, VARCHAR, IN, p);
			csp("sewa_applicability", sewa_applicability, VARCHAR, IN, p);
			csp("is_computed", is_computed, VARCHAR, IN, p);
			csp("effective_from", effective_from, DATETIME, IN, p);
			csp("effective_till", effective_till, DATETIME, IN, p);
			csp("txn_ts", txn_ts, TIMESTAMP, IN, p);
			return p;
		}
		
public DataSet UpdateSewaExemption(Int16? sewa_exemption_id, 
		                                        String sewa_exemption_nm, 
		                                        String sewa_exemption_type, 
		                                        String sewa_applicability, 
		                                        String is_computed, 
		                                        DateTime? effective_from, 
		                                        DateTime? effective_till, 
		                                        Byte[] txn_ts)
		{
			List<SqlParameter> prms = UpdateSewaExemption_Params(sewa_exemption_id, sewa_exemption_nm, sewa_exemption_type, sewa_applicability, is_computed, effective_from, effective_till, txn_ts);
			DataSet dset = esp("UpdateSewaExemption", prms);

			return dset;
		}
		
public string UpdateSewaExemptionAsTask(Int16? sewa_exemption_id, 
		                                            String sewa_exemption_nm, 
		                                            String sewa_exemption_type, 
		                                            String sewa_applicability, 
		                                            String is_computed, 
		                                            DateTime? effective_from, 
		                                            DateTime? effective_till, 
		                                            Byte[] txn_ts)
		{
			List<SqlParameter> prms = UpdateSewaExemption_Params(sewa_exemption_id, sewa_exemption_nm, sewa_exemption_type, sewa_applicability, is_computed, effective_from, effective_till, txn_ts);
			return gps("UpdateSewaExemption", prms);

		}
		
		
		
private List<SqlParameter> UpdateSewaExemptionsApplicableSewa_Params(Int16? sewa_exemption_id, 
		                                                                        Int32? sewa_id, 
		                                                                        Int32? old_sewa_id, 
		                                                                        Decimal? exemption_days)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("sewa_exemption_id", sewa_exemption_id, SMALLINT, IN, p);
			csp("sewa_id", sewa_id, INT, IN, p);
			csp("old_sewa_id", old_sewa_id, INT, IN, p);
			csp("exemption_days", exemption_days, DECIMAL, IN, p);
			return p;
		}
		
public DataSet UpdateSewaExemptionsApplicableSewa(Int16? sewa_exemption_id, 
		                                                        Int32? sewa_id, 
		                                                        Int32? old_sewa_id, 
		                                                        Decimal? exemption_days)
		{
			List<SqlParameter> prms = UpdateSewaExemptionsApplicableSewa_Params(sewa_exemption_id, sewa_id, old_sewa_id, exemption_days);
			DataSet dset = esp("UpdateSewaExemptionsApplicableSewa", prms);

			return dset;
		}
		
public string UpdateSewaExemptionsApplicableSewaAsTask(Int16? sewa_exemption_id, 
		                                                            Int32? sewa_id, 
		                                                            Int32? old_sewa_id, 
		                                                            Decimal? exemption_days)
		{
			List<SqlParameter> prms = UpdateSewaExemptionsApplicableSewa_Params(sewa_exemption_id, sewa_id, old_sewa_id, exemption_days);
			return gps("UpdateSewaExemptionsApplicableSewa", prms);

		}
		
		
		
private List<SqlParameter> UpdateSewasPeriod_Params(Int32? sewa_id, 
		                                                        DateTime? start_dt, 
		                                                        DateTime? finish_dt, 
		                                                        DateTime? old_start_dt, 
		                                                        DateTime? old_finish_dt)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("sewa_id", sewa_id, INT, IN, p);
			csp("start_dt", start_dt, SMALLDATETIME, IN, p);
			csp("finish_dt", finish_dt, SMALLDATETIME, IN, p);
			csp("old_start_dt", old_start_dt, SMALLDATETIME, IN, p);
			csp("old_finish_dt", old_finish_dt, SMALLDATETIME, IN, p);
			return p;
		}
		
public DataSet UpdateSewasPeriod(Int32? sewa_id, 
		                                    DateTime? start_dt, 
		                                    DateTime? finish_dt, 
		                                    DateTime? old_start_dt, 
		                                    DateTime? old_finish_dt)
		{
			List<SqlParameter> prms = UpdateSewasPeriod_Params(sewa_id, start_dt, finish_dt, old_start_dt, old_finish_dt);
			DataSet dset = esp("UpdateSewasPeriod", prms);

			return dset;
		}
		
public string UpdateSewasPeriodAsTask(Int32? sewa_id, 
		                                            DateTime? start_dt, 
		                                            DateTime? finish_dt, 
		                                            DateTime? old_start_dt, 
		                                            DateTime? old_finish_dt)
		{
			List<SqlParameter> prms = UpdateSewasPeriod_Params(sewa_id, start_dt, finish_dt, old_start_dt, old_finish_dt);
			return gps("UpdateSewasPeriod", prms);

		}
		
		
		
private List<SqlParameter> UpdateSewasSatsangCentre_Params(Int32? sewa_id, 
		                                                                Int32? satsang_centre_id, 
		                                                                Int32? old_satsang_centre_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("sewa_id", sewa_id, INT, IN, p);
			csp("satsang_centre_id", satsang_centre_id, INT, IN, p);
			csp("old_satsang_centre_id", old_satsang_centre_id, INT, IN, p);
			return p;
		}
		
public DataSet UpdateSewasSatsangCentre(Int32? sewa_id, 
		                                            Int32? satsang_centre_id, 
		                                            Int32? old_satsang_centre_id)
		{
			List<SqlParameter> prms = UpdateSewasSatsangCentre_Params(sewa_id, satsang_centre_id, old_satsang_centre_id);
			DataSet dset = esp("UpdateSewasSatsangCentre", prms);

			return dset;
		}
		
public string UpdateSewasSatsangCentreAsTask(Int32? sewa_id, 
		                                                Int32? satsang_centre_id, 
		                                                Int32? old_satsang_centre_id)
		{
			List<SqlParameter> prms = UpdateSewasSatsangCentre_Params(sewa_id, satsang_centre_id, old_satsang_centre_id);
			return gps("UpdateSewasSatsangCentre", prms);

		}
		
		
		
private List<SqlParameter> UpdateSewasSewaShift_Params(Int32? sewa_id, 
		                                                            String sewa_shift, 
		                                                            String old_sewa_shift, 
		                                                            Int16? sewa_shift_sq, 
		                                                            Int16? credit_cnt, 
		                                                            Int16? unit_cnt)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("sewa_id", sewa_id, INT, IN, p);
			csp("sewa_shift", sewa_shift, VARCHAR, IN, p);
			csp("old_sewa_shift", old_sewa_shift, VARCHAR, IN, p);
			csp("sewa_shift_sq", sewa_shift_sq, SMALLINT, IN, p);
			csp("credit_cnt", credit_cnt, SMALLINT, IN, p);
			csp("unit_cnt", unit_cnt, SMALLINT, IN, p);
			return p;
		}
		
public DataSet UpdateSewasSewaShift(Int32? sewa_id, 
		                                        String sewa_shift, 
		                                        String old_sewa_shift, 
		                                        Int16? sewa_shift_sq, 
		                                        Int16? credit_cnt, 
		                                        Int16? unit_cnt)
		{
			List<SqlParameter> prms = UpdateSewasSewaShift_Params(sewa_id, sewa_shift, old_sewa_shift, sewa_shift_sq, credit_cnt, unit_cnt);
			DataSet dset = esp("UpdateSewasSewaShift", prms);

			return dset;
		}
		
public string UpdateSewasSewaShiftAsTask(Int32? sewa_id, 
		                                            String sewa_shift, 
		                                            String old_sewa_shift, 
		                                            Int16? sewa_shift_sq, 
		                                            Int16? credit_cnt, 
		                                            Int16? unit_cnt)
		{
			List<SqlParameter> prms = UpdateSewasSewaShift_Params(sewa_id, sewa_shift, old_sewa_shift, sewa_shift_sq, credit_cnt, unit_cnt);
			return gps("UpdateSewasSewaShift", prms);

		}
		
		
		
private List<SqlParameter> UpdateSewasSewaShiftSq_Params(Int32? sewa_id, 
		                                                            String old_sewa_shift, 
		                                                            Int16? sewa_shift_sq)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("sewa_id", sewa_id, INT, IN, p);
			csp("old_sewa_shift", old_sewa_shift, VARCHAR, IN, p);
			csp("sewa_shift_sq", sewa_shift_sq, SMALLINT, IN, p);
			return p;
		}
		
public DataSet UpdateSewasSewaShiftSq(Int32? sewa_id, 
		                                            String old_sewa_shift, 
		                                            Int16? sewa_shift_sq)
		{
			List<SqlParameter> prms = UpdateSewasSewaShiftSq_Params(sewa_id, old_sewa_shift, sewa_shift_sq);
			DataSet dset = esp("UpdateSewasSewaShiftSq", prms);

			return dset;
		}
		
public string UpdateSewasSewaShiftSqAsTask(Int32? sewa_id, 
		                                                String old_sewa_shift, 
		                                                Int16? sewa_shift_sq)
		{
			List<SqlParameter> prms = UpdateSewasSewaShiftSq_Params(sewa_id, old_sewa_shift, sewa_shift_sq);
			return gps("UpdateSewasSewaShiftSq", prms);

		}
		
		
		
private List<SqlParameter> UpdateSewaTeam_Params(Int32? sewa_team_id, 
		                                                    String sewa_team_nm, 
		                                                    String team_description, 
		                                                    Byte[] txn_ts)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("sewa_team_id", sewa_team_id, INT, IN, p);
			csp("sewa_team_nm", sewa_team_nm, VARCHAR, IN, p);
			csp("team_description", team_description, VARCHAR, IN, p);
			csp("txn_ts", txn_ts, TIMESTAMP, IN, p);
			return p;
		}
		
public DataSet UpdateSewaTeam(Int32? sewa_team_id, 
		                                    String sewa_team_nm, 
		                                    String team_description, 
		                                    Byte[] txn_ts)
		{
			List<SqlParameter> prms = UpdateSewaTeam_Params(sewa_team_id, sewa_team_nm, team_description, txn_ts);
			DataSet dset = esp("UpdateSewaTeam", prms);

			return dset;
		}
		
public string UpdateSewaTeamAsTask(Int32? sewa_team_id, 
		                                        String sewa_team_nm, 
		                                        String team_description, 
		                                        Byte[] txn_ts)
		{
			List<SqlParameter> prms = UpdateSewaTeam_Params(sewa_team_id, sewa_team_nm, team_description, txn_ts);
			return gps("UpdateSewaTeam", prms);

		}
		
		
		
private List<SqlParameter> UpdateSewaTeamsTxnT_Params(Int32? sewa_team_id, 
		                                                            DateTime? attendance_dt, 
		                                                            Byte[] txn_ts)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("sewa_team_id", sewa_team_id, INT, IN, p);
			csp("attendance_dt", attendance_dt, SMALLDATETIME, IN, p);
			csp("txn_ts", txn_ts, TIMESTAMP, IN, p);
			return p;
		}
		
public DataSet UpdateSewaTeamsTxnT(Int32? sewa_team_id, 
		                                        DateTime? attendance_dt, 
		                                        Byte[] txn_ts)
		{
			List<SqlParameter> prms = UpdateSewaTeamsTxnT_Params(sewa_team_id, attendance_dt, txn_ts);
			DataSet dset = esp("UpdateSewaTeamsTxnT", prms);

			return dset;
		}
		
public string UpdateSewaTeamsTxnTAsTask(Int32? sewa_team_id, 
		                                            DateTime? attendance_dt, 
		                                            Byte[] txn_ts)
		{
			List<SqlParameter> prms = UpdateSewaTeamsTxnT_Params(sewa_team_id, attendance_dt, txn_ts);
			return gps("UpdateSewaTeamsTxnT", prms);

		}
		
		
		
private List<SqlParameter> UpdateSewaTeamWiseSewadar_Params(Int32? sewa_team_id, 
		                                                                Int32? serial_id, 
		                                                                Int32? old_serial_id, 
		                                                                Int32? satsang_centre_id, 
		                                                                String sewadar_grno, 
		                                                                DateTime? transfer_in_dt, 
		                                                                DateTime? transfer_out_dt)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("sewa_team_id", sewa_team_id, INT, IN, p);
			csp("serial_id", serial_id, INT, IN, p);
			csp("old_serial_id", old_serial_id, INT, IN, p);
			csp("satsang_centre_id", satsang_centre_id, INT, IN, p);
			csp("sewadar_grno", sewadar_grno, CHAR, IN, p);
			csp("transfer_in_dt", transfer_in_dt, SMALLDATETIME, IN, p);
			csp("transfer_out_dt", transfer_out_dt, SMALLDATETIME, IN, p);
			return p;
		}
		
public DataSet UpdateSewaTeamWiseSewadar(Int32? sewa_team_id, 
		                                            Int32? serial_id, 
		                                            Int32? old_serial_id, 
		                                            Int32? satsang_centre_id, 
		                                            String sewadar_grno, 
		                                            DateTime? transfer_in_dt, 
		                                            DateTime? transfer_out_dt)
		{
			List<SqlParameter> prms = UpdateSewaTeamWiseSewadar_Params(sewa_team_id, serial_id, old_serial_id, satsang_centre_id, sewadar_grno, transfer_in_dt, transfer_out_dt);
			DataSet dset = esp("UpdateSewaTeamWiseSewadar", prms);

			return dset;
		}
		
public string UpdateSewaTeamWiseSewadarAsTask(Int32? sewa_team_id, 
		                                                    Int32? serial_id, 
		                                                    Int32? old_serial_id, 
		                                                    Int32? satsang_centre_id, 
		                                                    String sewadar_grno, 
		                                                    DateTime? transfer_in_dt, 
		                                                    DateTime? transfer_out_dt)
		{
			List<SqlParameter> prms = UpdateSewaTeamWiseSewadar_Params(sewa_team_id, serial_id, old_serial_id, satsang_centre_id, sewadar_grno, transfer_in_dt, transfer_out_dt);
			return gps("UpdateSewaTeamWiseSewadar", prms);

		}
		
		
		
private List<SqlParameter> UpdateSewaTeamWiseSewadarSq_Params(Int32? sewa_team_id, 
		                                                                    Int32? old_serial_id, 
		                                                                    Int32? serial_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("sewa_team_id", sewa_team_id, INT, IN, p);
			csp("old_serial_id", old_serial_id, INT, IN, p);
			csp("serial_id", serial_id, INT, IN, p);
			return p;
		}
		
public DataSet UpdateSewaTeamWiseSewadarSq(Int32? sewa_team_id, 
		                                                Int32? old_serial_id, 
		                                                Int32? serial_id)
		{
			List<SqlParameter> prms = UpdateSewaTeamWiseSewadarSq_Params(sewa_team_id, old_serial_id, serial_id);
			DataSet dset = esp("UpdateSewaTeamWiseSewadarSq", prms);

			return dset;
		}
		
public string UpdateSewaTeamWiseSewadarSqAsTask(Int32? sewa_team_id, 
		                                                    Int32? old_serial_id, 
		                                                    Int32? serial_id)
		{
			List<SqlParameter> prms = UpdateSewaTeamWiseSewadarSq_Params(sewa_team_id, old_serial_id, serial_id);
			return gps("UpdateSewaTeamWiseSewadarSq", prms);

		}
		
		
		
private List<SqlParameter> UpdateSpeakers_Params(Int32? speaker_id, 
		                                                    String speaker_type, 
		                                                    Int32? satsang_centre_id, 
		                                                    String speaker_status, 
		                                                    DateTime? speaker_status_dtm, 
		                                                    Byte[] txn_ts)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("speaker_id", speaker_id, INT, IN, p);
			csp("speaker_type", speaker_type, VARCHAR, IN, p);
			csp("satsang_centre_id", satsang_centre_id, INT, IN, p);
			csp("speaker_status", speaker_status, VARCHAR, IN, p);
			csp("speaker_status_dtm", speaker_status_dtm, SMALLDATETIME, IN, p);
			csp("txn_ts", txn_ts, TIMESTAMP, IN, p);
			return p;
		}
		
public DataSet UpdateSpeakers(Int32? speaker_id, 
		                                    String speaker_type, 
		                                    Int32? satsang_centre_id, 
		                                    String speaker_status, 
		                                    DateTime? speaker_status_dtm, 
		                                    Byte[] txn_ts)
		{
			List<SqlParameter> prms = UpdateSpeakers_Params(speaker_id, speaker_type, satsang_centre_id, speaker_status, speaker_status_dtm, txn_ts);
			DataSet dset = esp("UpdateSpeakers", prms);

			return dset;
		}
		
public string UpdateSpeakersAsTask(Int32? speaker_id, 
		                                        String speaker_type, 
		                                        Int32? satsang_centre_id, 
		                                        String speaker_status, 
		                                        DateTime? speaker_status_dtm, 
		                                        Byte[] txn_ts)
		{
			List<SqlParameter> prms = UpdateSpeakers_Params(speaker_id, speaker_type, satsang_centre_id, speaker_status, speaker_status_dtm, txn_ts);
			return gps("UpdateSpeakers", prms);

		}
		
		
		
private List<SqlParameter> UpdateSpeakersApprovalsRenewals_Params(Int32? speaker_id, 
		                                                                        String request_for_speaker_type, 
		                                                                        Boolean? is_approval, 
		                                                                        DateTime? approval_dt, 
		                                                                        DateTime? request_dt, 
		                                                                        String reference_no, 
		                                                                        DateTime? reference_dt, 
		                                                                        String audition_remarks, 
		                                                                        String review_remarks, 
		                                                                        Int32? review_sewadar_id, 
		                                                                        String review_non_sewadar_nm, 
		                                                                        String remarks, 
		                                                                        Byte[] txn_ts)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("speaker_id", speaker_id, INT, IN, p);
			csp("request_for_speaker_type", request_for_speaker_type, VARCHAR, IN, p);
			csp("is_approval", is_approval, BIT, IN, p);
			csp("approval_dt", approval_dt, DATE, IN, p);
			csp("request_dt", request_dt, DATE, IN, p);
			csp("reference_no", reference_no, VARCHAR, IN, p);
			csp("reference_dt", reference_dt, DATE, IN, p);
			csp("audition_remarks", audition_remarks, VARCHAR, IN, p);
			csp("review_remarks", review_remarks, VARCHAR, IN, p);
			csp("review_sewadar_id", review_sewadar_id, INT, IN, p);
			csp("review_non_sewadar_nm", review_non_sewadar_nm, VARCHAR, IN, p);
			csp("remarks", remarks, VARCHAR, IN, p);
			csp("txn_ts", txn_ts, TIMESTAMP, IN, p);
			return p;
		}
		
public DataSet UpdateSpeakersApprovalsRenewals(Int32? speaker_id, 
		                                                    String request_for_speaker_type, 
		                                                    Boolean? is_approval, 
		                                                    DateTime? approval_dt, 
		                                                    DateTime? request_dt, 
		                                                    String reference_no, 
		                                                    DateTime? reference_dt, 
		                                                    String audition_remarks, 
		                                                    String review_remarks, 
		                                                    Int32? review_sewadar_id, 
		                                                    String review_non_sewadar_nm, 
		                                                    String remarks, 
		                                                    Byte[] txn_ts)
		{
			List<SqlParameter> prms = UpdateSpeakersApprovalsRenewals_Params(speaker_id, request_for_speaker_type, is_approval, approval_dt, request_dt, reference_no, reference_dt, audition_remarks, review_remarks, review_sewadar_id, review_non_sewadar_nm, remarks, txn_ts);
			DataSet dset = esp("UpdateSpeakersApprovalsRenewals", prms);

			return dset;
		}
		
public string UpdateSpeakersApprovalsRenewalsAsTask(Int32? speaker_id, 
		                                                        String request_for_speaker_type, 
		                                                        Boolean? is_approval, 
		                                                        DateTime? approval_dt, 
		                                                        DateTime? request_dt, 
		                                                        String reference_no, 
		                                                        DateTime? reference_dt, 
		                                                        String audition_remarks, 
		                                                        String review_remarks, 
		                                                        Int32? review_sewadar_id, 
		                                                        String review_non_sewadar_nm, 
		                                                        String remarks, 
		                                                        Byte[] txn_ts)
		{
			List<SqlParameter> prms = UpdateSpeakersApprovalsRenewals_Params(speaker_id, request_for_speaker_type, is_approval, approval_dt, request_dt, reference_no, reference_dt, audition_remarks, review_remarks, review_sewadar_id, review_non_sewadar_nm, remarks, txn_ts);
			return gps("UpdateSpeakersApprovalsRenewals", prms);

		}
		
		
		
private List<SqlParameter> UpdateSpeakersTrainings_Params(Int32? speaker_id, 
		                                                                String training_for_speaker_type, 
		                                                                DateTime? training_dt, 
		                                                                Boolean? is_attended, 
		                                                                DateTime? request_dt, 
		                                                                String reference_no, 
		                                                                DateTime? reference_dt, 
		                                                                String remarks, 
		                                                                Byte[] txn_ts)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("speaker_id", speaker_id, INT, IN, p);
			csp("training_for_speaker_type", training_for_speaker_type, VARCHAR, IN, p);
			csp("training_dt", training_dt, DATE, IN, p);
			csp("is_attended", is_attended, BIT, IN, p);
			csp("request_dt", request_dt, DATE, IN, p);
			csp("reference_no", reference_no, VARCHAR, IN, p);
			csp("reference_dt", reference_dt, DATE, IN, p);
			csp("remarks", remarks, VARCHAR, IN, p);
			csp("txn_ts", txn_ts, TIMESTAMP, IN, p);
			return p;
		}
		
public DataSet UpdateSpeakersTrainings(Int32? speaker_id, 
		                                            String training_for_speaker_type, 
		                                            DateTime? training_dt, 
		                                            Boolean? is_attended, 
		                                            DateTime? request_dt, 
		                                            String reference_no, 
		                                            DateTime? reference_dt, 
		                                            String remarks, 
		                                            Byte[] txn_ts)
		{
			List<SqlParameter> prms = UpdateSpeakersTrainings_Params(speaker_id, training_for_speaker_type, training_dt, is_attended, request_dt, reference_no, reference_dt, remarks, txn_ts);
			DataSet dset = esp("UpdateSpeakersTrainings", prms);

			return dset;
		}
		
public string UpdateSpeakersTrainingsAsTask(Int32? speaker_id, 
		                                                String training_for_speaker_type, 
		                                                DateTime? training_dt, 
		                                                Boolean? is_attended, 
		                                                DateTime? request_dt, 
		                                                String reference_no, 
		                                                DateTime? reference_dt, 
		                                                String remarks, 
		                                                Byte[] txn_ts)
		{
			List<SqlParameter> prms = UpdateSpeakersTrainings_Params(speaker_id, training_for_speaker_type, training_dt, is_attended, request_dt, reference_no, reference_dt, remarks, txn_ts);
			return gps("UpdateSpeakersTrainings", prms);

		}
		
		
		
private List<SqlParameter> UpdateSubDepartment_Params(Int16? sub_department_id, 
		                                                            Int16? department_id, 
		                                                            String sub_department_cd, 
		                                                            String sub_department_nm, 
		                                                            String sub_remarks)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("sub_department_id", sub_department_id, SMALLINT, IN, p);
			csp("department_id", department_id, SMALLINT, IN, p);
			csp("sub_department_cd", sub_department_cd, VARCHAR, IN, p);
			csp("sub_department_nm", sub_department_nm, VARCHAR, IN, p);
			csp("sub_remarks", sub_remarks, VARCHAR, IN, p);
			return p;
		}
		
public DataSet UpdateSubDepartment(Int16? sub_department_id, 
		                                        Int16? department_id, 
		                                        String sub_department_cd, 
		                                        String sub_department_nm, 
		                                        String sub_remarks)
		{
			List<SqlParameter> prms = UpdateSubDepartment_Params(sub_department_id, department_id, sub_department_cd, sub_department_nm, sub_remarks);
			DataSet dset = esp("UpdateSubDepartment", prms);

			return dset;
		}
		
public string UpdateSubDepartmentAsTask(Int16? sub_department_id, 
		                                            Int16? department_id, 
		                                            String sub_department_cd, 
		                                            String sub_department_nm, 
		                                            String sub_remarks)
		{
			List<SqlParameter> prms = UpdateSubDepartment_Params(sub_department_id, department_id, sub_department_cd, sub_department_nm, sub_remarks);
			return gps("UpdateSubDepartment", prms);

		}
		
		
		
private List<SqlParameter> UpdateSubJobsValidCombinationSq_Params(Int16? scanning_job_id, 
		                                                                        String old_valid_combination_sub_job_ids, 
		                                                                        Int16? scanning_job_valid_sq)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("scanning_job_id", scanning_job_id, SMALLINT, IN, p);
			csp("old_valid_combination_sub_job_ids", old_valid_combination_sub_job_ids, VARCHAR, IN, p);
			csp("scanning_job_valid_sq", scanning_job_valid_sq, SMALLINT, IN, p);
			return p;
		}
		
public DataSet UpdateSubJobsValidCombinationSq(Int16? scanning_job_id, 
		                                                    String old_valid_combination_sub_job_ids, 
		                                                    Int16? scanning_job_valid_sq)
		{
			List<SqlParameter> prms = UpdateSubJobsValidCombinationSq_Params(scanning_job_id, old_valid_combination_sub_job_ids, scanning_job_valid_sq);
			DataSet dset = esp("UpdateSubJobsValidCombinationSq", prms);

			return dset;
		}
		
public string UpdateSubJobsValidCombinationSqAsTask(Int16? scanning_job_id, 
		                                                        String old_valid_combination_sub_job_ids, 
		                                                        Int16? scanning_job_valid_sq)
		{
			List<SqlParameter> prms = UpdateSubJobsValidCombinationSq_Params(scanning_job_id, old_valid_combination_sub_job_ids, scanning_job_valid_sq);
			return gps("UpdateSubJobsValidCombinationSq", prms);

		}
		
		
		
private List<SqlParameter> UpdateSystemInformationCodes_Params(String system_info_cd, 
		                                                                    String old_system_info_cd, 
		                                                                    String system_info_nm, 
		                                                                    String remarks)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("system_info_cd", system_info_cd, VARCHAR, IN, p);
			csp("old_system_info_cd", old_system_info_cd, VARCHAR, IN, p);
			csp("system_info_nm", system_info_nm, VARCHAR, IN, p);
			csp("remarks", remarks, VARCHAR, IN, p);
			return p;
		}
		
public DataSet UpdateSystemInformationCodes(String system_info_cd, 
		                                                String old_system_info_cd, 
		                                                String system_info_nm, 
		                                                String remarks)
		{
			List<SqlParameter> prms = UpdateSystemInformationCodes_Params(system_info_cd, old_system_info_cd, system_info_nm, remarks);
			DataSet dset = esp("UpdateSystemInformationCodes", prms);

			return dset;
		}
		
public string UpdateSystemInformationCodesAsTask(String system_info_cd, 
		                                                    String old_system_info_cd, 
		                                                    String system_info_nm, 
		                                                    String remarks)
		{
			List<SqlParameter> prms = UpdateSystemInformationCodes_Params(system_info_cd, old_system_info_cd, system_info_nm, remarks);
			return gps("UpdateSystemInformationCodes", prms);

		}
		
		
		
private List<SqlParameter> UpdateSystemInformationValues_Params(String system_info_cd, 
		                                                                    Int32? value_int, 
		                                                                    String value_varchar, 
		                                                                    DateTime? value_dt, 
		                                                                    DateTime? value_dtm, 
		                                                                    String old_system_info_cd, 
		                                                                    String system_info_value)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("system_info_cd", system_info_cd, VARCHAR, IN, p);
			csp("value_int", value_int, INT, IN, p);
			csp("value_varchar", value_varchar, VARCHAR, IN, p);
			csp("value_dt", value_dt, DATETIME, IN, p);
			csp("value_dtm", value_dtm, DATETIME, IN, p);
			csp("old_system_info_cd", old_system_info_cd, VARCHAR, IN, p);
			csp("system_info_value", system_info_value, VARCHAR, IN, p);
			return p;
		}
		
public DataSet UpdateSystemInformationValues(String system_info_cd, 
		                                                Int32? value_int, 
		                                                String value_varchar, 
		                                                DateTime? value_dt, 
		                                                DateTime? value_dtm, 
		                                                String old_system_info_cd, 
		                                                String system_info_value)
		{
			List<SqlParameter> prms = UpdateSystemInformationValues_Params(system_info_cd, value_int, value_varchar, value_dt, value_dtm, old_system_info_cd, system_info_value);
			DataSet dset = esp("UpdateSystemInformationValues", prms);

			return dset;
		}
		
public string UpdateSystemInformationValuesAsTask(String system_info_cd, 
		                                                        Int32? value_int, 
		                                                        String value_varchar, 
		                                                        DateTime? value_dt, 
		                                                        DateTime? value_dtm, 
		                                                        String old_system_info_cd, 
		                                                        String system_info_value)
		{
			List<SqlParameter> prms = UpdateSystemInformationValues_Params(system_info_cd, value_int, value_varchar, value_dt, value_dtm, old_system_info_cd, system_info_value);
			return gps("UpdateSystemInformationValues", prms);

		}
		
		
		
private List<SqlParameter> UpdateTeamWiseDailyAttendance_Params(Int32? sewa_team_id, 
		                                                                    Int32? serial_id, 
		                                                                    DateTime? attendance_dt, 
		                                                                    Int32? old_serial_id, 
		                                                                    DateTime? old_attendance_dt, 
		                                                                    String is_p, 
		                                                                    String is_e, 
		                                                                    String is_l, 
		                                                                    String is_a, 
		                                                                    Int16? sewa_exemption_id, 
		                                                                    String is_scanned)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("sewa_team_id", sewa_team_id, INT, IN, p);
			csp("serial_id", serial_id, INT, IN, p);
			csp("attendance_dt", attendance_dt, SMALLDATETIME, IN, p);
			csp("old_serial_id", old_serial_id, INT, IN, p);
			csp("old_attendance_dt", old_attendance_dt, SMALLDATETIME, IN, p);
			csp("is_p", is_p, VARCHAR, IN, p);
			csp("is_e", is_e, VARCHAR, IN, p);
			csp("is_l", is_l, VARCHAR, IN, p);
			csp("is_a", is_a, VARCHAR, IN, p);
			csp("sewa_exemption_id", sewa_exemption_id, SMALLINT, IN, p);
			csp("is_scanned", is_scanned, VARCHAR, IN, p);
			return p;
		}
		
public DataSet UpdateTeamWiseDailyAttendance(Int32? sewa_team_id, 
		                                                Int32? serial_id, 
		                                                DateTime? attendance_dt, 
		                                                Int32? old_serial_id, 
		                                                DateTime? old_attendance_dt, 
		                                                String is_p, 
		                                                String is_e, 
		                                                String is_l, 
		                                                String is_a, 
		                                                Int16? sewa_exemption_id, 
		                                                String is_scanned)
		{
			List<SqlParameter> prms = UpdateTeamWiseDailyAttendance_Params(sewa_team_id, serial_id, attendance_dt, old_serial_id, old_attendance_dt, is_p, is_e, is_l, is_a, sewa_exemption_id, is_scanned);
			DataSet dset = esp("UpdateTeamWiseDailyAttendance", prms);

			return dset;
		}
		
public string UpdateTeamWiseDailyAttendanceAsTask(Int32? sewa_team_id, 
		                                                        Int32? serial_id, 
		                                                        DateTime? attendance_dt, 
		                                                        Int32? old_serial_id, 
		                                                        DateTime? old_attendance_dt, 
		                                                        String is_p, 
		                                                        String is_e, 
		                                                        String is_l, 
		                                                        String is_a, 
		                                                        Int16? sewa_exemption_id, 
		                                                        String is_scanned)
		{
			List<SqlParameter> prms = UpdateTeamWiseDailyAttendance_Params(sewa_team_id, serial_id, attendance_dt, old_serial_id, old_attendance_dt, is_p, is_e, is_l, is_a, sewa_exemption_id, is_scanned);
			return gps("UpdateTeamWiseDailyAttendance", prms);

		}
		
		
		
private List<SqlParameter> UpdateUsersApplication_Params(String user_id, 
		                                                            String application_id, 
		                                                            String user_role_id, 
		                                                            String old_application_id, 
		                                                            String old_user_role_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("user_id", user_id, VARCHAR, IN, p);
			csp("application_id", application_id, CHAR, IN, p);
			csp("user_role_id", user_role_id, VARCHAR, IN, p);
			csp("old_application_id", old_application_id, CHAR, IN, p);
			csp("old_user_role_id", old_user_role_id, VARCHAR, IN, p);
			return p;
		}
		
public DataSet UpdateUsersApplication(String user_id, 
		                                            String application_id, 
		                                            String user_role_id, 
		                                            String old_application_id, 
		                                            String old_user_role_id)
		{
			List<SqlParameter> prms = UpdateUsersApplication_Params(user_id, application_id, user_role_id, old_application_id, old_user_role_id);
			DataSet dset = esp("UpdateUsersApplication", prms);

			return dset;
		}
		
public string UpdateUsersApplicationAsTask(String user_id, 
		                                                String application_id, 
		                                                String user_role_id, 
		                                                String old_application_id, 
		                                                String old_user_role_id)
		{
			List<SqlParameter> prms = UpdateUsersApplication_Params(user_id, application_id, user_role_id, old_application_id, old_user_role_id);
			return gps("UpdateUsersApplication", prms);

		}
		
		
		
private List<SqlParameter> UpdateWeeklySewaLocation_Params(Int32? weekly_sewa_location_id, 
		                                                                String weekly_sewa_location_nm, 
		                                                                Int32? satsang_centre_id, 
		                                                                String remarks, 
		                                                                DateTime? effective_from, 
		                                                                DateTime? effective_till, 
		                                                                Byte[] txn_ts)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("weekly_sewa_location_id", weekly_sewa_location_id, INT, IN, p);
			csp("weekly_sewa_location_nm", weekly_sewa_location_nm, VARCHAR, IN, p);
			csp("satsang_centre_id", satsang_centre_id, INT, IN, p);
			csp("remarks", remarks, VARCHAR, IN, p);
			csp("effective_from", effective_from, DATETIME, IN, p);
			csp("effective_till", effective_till, DATETIME, IN, p);
			csp("txn_ts", txn_ts, TIMESTAMP, IN, p);
			return p;
		}
		
public DataSet UpdateWeeklySewaLocation(Int32? weekly_sewa_location_id, 
		                                            String weekly_sewa_location_nm, 
		                                            Int32? satsang_centre_id, 
		                                            String remarks, 
		                                            DateTime? effective_from, 
		                                            DateTime? effective_till, 
		                                            Byte[] txn_ts)
		{
			List<SqlParameter> prms = UpdateWeeklySewaLocation_Params(weekly_sewa_location_id, weekly_sewa_location_nm, satsang_centre_id, remarks, effective_from, effective_till, txn_ts);
			DataSet dset = esp("UpdateWeeklySewaLocation", prms);

			return dset;
		}
		
public string UpdateWeeklySewaLocationAsTask(Int32? weekly_sewa_location_id, 
		                                                String weekly_sewa_location_nm, 
		                                                Int32? satsang_centre_id, 
		                                                String remarks, 
		                                                DateTime? effective_from, 
		                                                DateTime? effective_till, 
		                                                Byte[] txn_ts)
		{
			List<SqlParameter> prms = UpdateWeeklySewaLocation_Params(weekly_sewa_location_id, weekly_sewa_location_nm, satsang_centre_id, remarks, effective_from, effective_till, txn_ts);
			return gps("UpdateWeeklySewaLocation", prms);

		}
		
		
		
private List<SqlParameter> UploadData_Params(String p_filepath, 
		                                                Int32? p_satsang_centre_id, 
		                                                String p_is_upload_data, 
		                                                ref Int32 p_return_code, 
		                                                ref Int32 p_record_cnt)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_filepath", p_filepath, VARCHAR, IN, p);
			csp("p_satsang_centre_id", p_satsang_centre_id, INT, IN, p);
			csp("p_is_upload_data", p_is_upload_data, VARCHAR, IN, p);
			csp("p_return_code", p_return_code, INT, INOUT, p);
			csp("p_record_cnt", p_record_cnt, INT, INOUT, p);
			return p;
		}
		
public DataSet UploadData(String p_filepath, 
		                                Int32? p_satsang_centre_id, 
		                                String p_is_upload_data, 
		                                ref Int32 p_return_code, 
		                                ref Int32 p_record_cnt)
		{
			List<SqlParameter> prms = UploadData_Params(p_filepath, p_satsang_centre_id, p_is_upload_data, ref p_return_code, ref p_record_cnt);
			DataSet dset = esp("UploadData", prms);
			p_return_code = (System.Int32)prms.FirstOrDefault(p => p.ParameterName == "p_return_code").Value;
			p_record_cnt = (System.Int32)prms.FirstOrDefault(p => p.ParameterName == "p_record_cnt").Value;

			return dset;
		}
		
public string UploadDataAsTask(String p_filepath, 
		                                    Int32? p_satsang_centre_id, 
		                                    String p_is_upload_data, 
		                                    ref Int32 p_return_code, 
		                                    ref Int32 p_record_cnt)
		{
			List<SqlParameter> prms = UploadData_Params(p_filepath, p_satsang_centre_id, p_is_upload_data, ref p_return_code, ref p_record_cnt);
			return gps("UploadData", prms);

		}
		
		
		
		
		
private List<SqlParameter> ValidateDepartmentTransfer_Params(Int32? p_satsang_centre_id, 
		                                                                String p_sewadar_grno, 
		                                                                DateTime? p_effective_dt, 
		                                                                ref String p_is_team_transfer)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_satsang_centre_id", p_satsang_centre_id, INT, IN, p);
			csp("p_sewadar_grno", p_sewadar_grno, CHAR, IN, p);
			csp("p_effective_dt", p_effective_dt, SMALLDATETIME, IN, p);
			csp("p_is_team_transfer", p_is_team_transfer, VARCHAR, INOUT, p);
			return p;
		}
		
public DataSet ValidateDepartmentTransfer(Int32? p_satsang_centre_id, 
		                                                String p_sewadar_grno, 
		                                                DateTime? p_effective_dt, 
		                                                ref String p_is_team_transfer)
		{
			List<SqlParameter> prms = ValidateDepartmentTransfer_Params(p_satsang_centre_id, p_sewadar_grno, p_effective_dt, ref p_is_team_transfer);
			DataSet dset = esp("ValidateDepartmentTransfer", prms);
			p_is_team_transfer = (System.String)prms.FirstOrDefault(p => p.ParameterName == "p_is_team_transfer").Value;

			return dset;
		}
		
public string ValidateDepartmentTransferAsTask(Int32? p_satsang_centre_id, 
		                                                    String p_sewadar_grno, 
		                                                    DateTime? p_effective_dt, 
		                                                    ref String p_is_team_transfer)
		{
			List<SqlParameter> prms = ValidateDepartmentTransfer_Params(p_satsang_centre_id, p_sewadar_grno, p_effective_dt, ref p_is_team_transfer);
			return gps("ValidateDepartmentTransfer", prms);

		}
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	}
	
	
	public class _data_operationsSQLSelectQuery : SQLSelectQuery
	{
		public Cndn data_operation_id = new Cndn("data_operation_id", typeof(Int16));
		public Cndn data_operation_cd = new Cndn("data_operation_cd", typeof(String));
		public Cndn satsang_centre_cd = new Cndn("satsang_centre_cd", typeof(String));
		public Cndn before_count_start_dtm = new Cndn("before_count_start_dtm", typeof(DateTime));
		public Cndn before_count_finish_dtm = new Cndn("before_count_finish_dtm", typeof(DateTime));
		public Cndn after_count_start_dtm = new Cndn("after_count_start_dtm", typeof(DateTime));
		public Cndn after_count_finish_dtm = new Cndn("after_count_finish_dtm", typeof(DateTime));
		public Cndn remarks = new Cndn("remarks", typeof(String));
		public _data_operationsSQLSelectQuery()
		{
			SqlObjectName = "_data_operations";

			lst.Add(data_operation_id);
			lst.Add(data_operation_cd);
			lst.Add(satsang_centre_cd);
			lst.Add(before_count_start_dtm);
			lst.Add(before_count_finish_dtm);
			lst.Add(after_count_start_dtm);
			lst.Add(after_count_finish_dtm);
			lst.Add(remarks);
		}
	}
	
	
	public class _data_operations_tablesSQLSelectQuery : SQLSelectQuery
	{
		public Cndn data_operation_id = new Cndn("data_operation_id", typeof(Int16));
		public Cndn zsm_table_nm = new Cndn("zsm_table_nm", typeof(String));
		public Cndn is_audit_table = new Cndn("is_audit_table", typeof(String));
		public Cndn row_cnt_zone_before_opn = new Cndn("row_cnt_zone_before_opn", typeof(Int32));
		public Cndn row_cnt_centre_before_opn = new Cndn("row_cnt_centre_before_opn", typeof(Int32));
		public Cndn row_cnt_zone_after_opn = new Cndn("row_cnt_zone_after_opn", typeof(Int32));
		public Cndn row_cnt_centre_after_opn = new Cndn("row_cnt_centre_after_opn", typeof(Int32));
		public _data_operations_tablesSQLSelectQuery()
		{
			SqlObjectName = "_data_operations_tables";

			lst.Add(data_operation_id);
			lst.Add(zsm_table_nm);
			lst.Add(is_audit_table);
			lst.Add(row_cnt_zone_before_opn);
			lst.Add(row_cnt_centre_before_opn);
			lst.Add(row_cnt_zone_after_opn);
			lst.Add(row_cnt_centre_after_opn);
		}
	}
	
	
	public class _sample_imagesSQLSelectQuery : SQLSelectQuery
	{
		public Cndn sample_id = new Cndn("sample_id", typeof(String));
		public Cndn sample_image = new Cndn("sample_image", typeof(Byte[]));
		public _sample_imagesSQLSelectQuery()
		{
			SqlObjectName = "_sample_images";

			lst.Add(sample_id);
			lst.Add(sample_image);
		}
	}
	
	
	public class Additionally_exported_sewadarsSQLSelectQuery : SQLSelectQuery
	{
		public Cndn exported_to_centre_id = new Cndn("exported_to_centre_id", typeof(Int32));
		public Cndn sewadar_id = new Cndn("sewadar_id", typeof(Int32));
		public Cndn satsang_centre_id = new Cndn("satsang_centre_id", typeof(Int32));
		public Cndn sewadar_grno = new Cndn("sewadar_grno", typeof(String));
		public Additionally_exported_sewadarsSQLSelectQuery()
		{
			SqlObjectName = "Additionally_exported_sewadars";

			lst.Add(exported_to_centre_id);
			lst.Add(sewadar_id);
			lst.Add(satsang_centre_id);
			lst.Add(sewadar_grno);
		}
	}
	
	
	
	public class Arbitrary_daily_presencesSQLSelectQuery : SQLSelectQuery
	{
		public Cndn sewa_id = new Cndn("sewa_id", typeof(Int32));
		public Cndn satsang_centre_id = new Cndn("satsang_centre_id", typeof(Int32));
		public Cndn sewadar_grno = new Cndn("sewadar_grno", typeof(String));
		public Cndn presence_dt = new Cndn("presence_dt", typeof(DateTime));
		public Cndn is_scanned = new Cndn("is_scanned", typeof(String));
		public Arbitrary_daily_presencesSQLSelectQuery()
		{
			SqlObjectName = "Arbitrary_daily_presences";

			lst.Add(sewa_id);
			lst.Add(satsang_centre_id);
			lst.Add(sewadar_grno);
			lst.Add(presence_dt);
			lst.Add(is_scanned);
		}
	}
	
	
	public class Arbitrary_shift_presencesSQLSelectQuery : SQLSelectQuery
	{
		public Cndn sewa_id = new Cndn("sewa_id", typeof(Int32));
		public Cndn satsang_centre_id = new Cndn("satsang_centre_id", typeof(Int32));
		public Cndn sewadar_grno = new Cndn("sewadar_grno", typeof(String));
		public Cndn presence_dt = new Cndn("presence_dt", typeof(DateTime));
		public Cndn sewa_shift = new Cndn("sewa_shift", typeof(String));
		public Cndn is_scanned = new Cndn("is_scanned", typeof(String));
		public Arbitrary_shift_presencesSQLSelectQuery()
		{
			SqlObjectName = "Arbitrary_shift_presences";

			lst.Add(sewa_id);
			lst.Add(satsang_centre_id);
			lst.Add(sewadar_grno);
			lst.Add(presence_dt);
			lst.Add(sewa_shift);
			lst.Add(is_scanned);
		}
	}
	
	
	public class Arbitrary_summarised_exemptionsSQLSelectQuery : SQLSelectQuery
	{
		public Cndn sewa_id = new Cndn("sewa_id", typeof(Int32));
		public Cndn satsang_centre_id = new Cndn("satsang_centre_id", typeof(Int32));
		public Cndn sewadar_grno = new Cndn("sewadar_grno", typeof(String));
		public Cndn sewa_exemption_id = new Cndn("sewa_exemption_id", typeof(Int16));
		public Cndn exemption_days = new Cndn("exemption_days", typeof(Decimal));
		public Arbitrary_summarised_exemptionsSQLSelectQuery()
		{
			SqlObjectName = "Arbitrary_summarised_exemptions";

			lst.Add(sewa_id);
			lst.Add(satsang_centre_id);
			lst.Add(sewadar_grno);
			lst.Add(sewa_exemption_id);
			lst.Add(exemption_days);
		}
	}
	
	
	public class Attendance_unitsSQLSelectQuery : SQLSelectQuery
	{
		public Cndn attendance_unit = new Cndn("attendance_unit", typeof(String));
		public Cndn remarks = new Cndn("remarks", typeof(String));
		public Cndn effective_from = new Cndn("effective_from", typeof(DateTime));
		public Cndn effective_till = new Cndn("effective_till", typeof(DateTime));
		public Attendance_unitsSQLSelectQuery()
		{
			SqlObjectName = "Attendance_units";

			lst.Add(attendance_unit);
			lst.Add(remarks);
			lst.Add(effective_from);
			lst.Add(effective_till);
		}
	}
	
	
	public class Badge_part_typesSQLSelectQuery : SQLSelectQuery
	{
		public Cndn badge_part_type = new Cndn("badge_part_type", typeof(String));
		public Cndn remarks = new Cndn("remarks", typeof(String));
		public Cndn effective_from = new Cndn("effective_from", typeof(DateTime));
		public Cndn effective_till = new Cndn("effective_till", typeof(DateTime));
		public Badge_part_typesSQLSelectQuery()
		{
			SqlObjectName = "Badge_part_types";

			lst.Add(badge_part_type);
			lst.Add(remarks);
			lst.Add(effective_from);
			lst.Add(effective_till);
		}
	}
	
	
	public class Badge_templatesSQLSelectQuery : SQLSelectQuery
	{
		public Cndn badge_template_id = new Cndn("badge_template_id", typeof(String));
		public Cndn badge_template_nm = new Cndn("badge_template_nm", typeof(String));
		public Cndn badge_shape = new Cndn("badge_shape", typeof(String));
		public Cndn information_type = new Cndn("information_type", typeof(String));
		public Cndn foreground_colour_control = new Cndn("foreground_colour_control", typeof(String));
		public Cndn foreground_colour_id = new Cndn("foreground_colour_id", typeof(Int16));
		public Cndn background_colour_control = new Cndn("background_colour_control", typeof(String));
		public Cndn background_colour_id = new Cndn("background_colour_id", typeof(Int16));
		public Cndn top_line_font_size = new Cndn("top_line_font_size", typeof(Byte));
		public Cndn top_line_part_1_type = new Cndn("top_line_part_1_type", typeof(String));
		public Cndn top_line_part_1_text = new Cndn("top_line_part_1_text", typeof(String));
		public Cndn top_line_parts_separator = new Cndn("top_line_parts_separator", typeof(String));
		public Cndn top_line_part_2_type = new Cndn("top_line_part_2_type", typeof(String));
		public Cndn top_line_part_2_text = new Cndn("top_line_part_2_text", typeof(String));
		public Cndn middle_line_font_size = new Cndn("middle_line_font_size", typeof(Byte));
		public Cndn middle_line_part_1_type = new Cndn("middle_line_part_1_type", typeof(String));
		public Cndn middle_line_part_1_text = new Cndn("middle_line_part_1_text", typeof(String));
		public Cndn middle_line_parts_separator = new Cndn("middle_line_parts_separator", typeof(String));
		public Cndn middle_line_part_2_type = new Cndn("middle_line_part_2_type", typeof(String));
		public Cndn middle_line_part_2_text = new Cndn("middle_line_part_2_text", typeof(String));
		public Cndn bottom_line_font_size = new Cndn("bottom_line_font_size", typeof(Byte));
		public Cndn bottom_line_part_1_type = new Cndn("bottom_line_part_1_type", typeof(String));
		public Cndn bottom_line_part_1_text = new Cndn("bottom_line_part_1_text", typeof(String));
		public Cndn bottom_line_parts_separator = new Cndn("bottom_line_parts_separator", typeof(String));
		public Cndn bottom_line_part_2_type = new Cndn("bottom_line_part_2_type", typeof(String));
		public Cndn bottom_line_part_2_text = new Cndn("bottom_line_part_2_text", typeof(String));
		public Cndn expiry_year = new Cndn("expiry_year", typeof(String));
		public Cndn is_expiry_year_check = new Cndn("is_expiry_year_check", typeof(String));
		public Cndn are_outstation_sewadars_allowed = new Cndn("are_outstation_sewadars_allowed", typeof(String));
		public Cndn report_file_nm_front = new Cndn("report_file_nm_front", typeof(String));
		public Cndn report_file_nm_back = new Cndn("report_file_nm_back", typeof(String));
		public Cndn procedure_nm_front = new Cndn("procedure_nm_front", typeof(String));
		public Cndn procedure_nm_back = new Cndn("procedure_nm_back", typeof(String));
		public Cndn txn_ts = new Cndn("txn_ts", typeof(Byte[]));
		public Badge_templatesSQLSelectQuery()
		{
			SqlObjectName = "Badge_templates";

			lst.Add(badge_template_id);
			lst.Add(badge_template_nm);
			lst.Add(badge_shape);
			lst.Add(information_type);
			lst.Add(foreground_colour_control);
			lst.Add(foreground_colour_id);
			lst.Add(background_colour_control);
			lst.Add(background_colour_id);
			lst.Add(top_line_font_size);
			lst.Add(top_line_part_1_type);
			lst.Add(top_line_part_1_text);
			lst.Add(top_line_parts_separator);
			lst.Add(top_line_part_2_type);
			lst.Add(top_line_part_2_text);
			lst.Add(middle_line_font_size);
			lst.Add(middle_line_part_1_type);
			lst.Add(middle_line_part_1_text);
			lst.Add(middle_line_parts_separator);
			lst.Add(middle_line_part_2_type);
			lst.Add(middle_line_part_2_text);
			lst.Add(bottom_line_font_size);
			lst.Add(bottom_line_part_1_type);
			lst.Add(bottom_line_part_1_text);
			lst.Add(bottom_line_parts_separator);
			lst.Add(bottom_line_part_2_type);
			lst.Add(bottom_line_part_2_text);
			lst.Add(expiry_year);
			lst.Add(is_expiry_year_check);
			lst.Add(are_outstation_sewadars_allowed);
			lst.Add(report_file_nm_front);
			lst.Add(report_file_nm_back);
			lst.Add(procedure_nm_front);
			lst.Add(procedure_nm_back);
			lst.Add(txn_ts);
		}
	}
	
	
	public class Badge_templates_sewadar_statusSQLSelectQuery : SQLSelectQuery
	{
		public Cndn badge_template_id = new Cndn("badge_template_id", typeof(String));
		public Cndn sewadar_status_cd = new Cndn("sewadar_status_cd", typeof(String));
		public Badge_templates_sewadar_statusSQLSelectQuery()
		{
			SqlObjectName = "Badge_templates_sewadar_status";

			lst.Add(badge_template_id);
			lst.Add(sewadar_status_cd);
		}
	}
	
	
	public class Centre_functionariesSQLSelectQuery : SQLSelectQuery
	{
		public Cndn centre_functionary = new Cndn("centre_functionary", typeof(String));
		public Cndn remarks = new Cndn("remarks", typeof(String));
		public Cndn effective_from = new Cndn("effective_from", typeof(DateTime));
		public Cndn effective_till = new Cndn("effective_till", typeof(DateTime));
		public Centre_functionariesSQLSelectQuery()
		{
			SqlObjectName = "Centre_functionaries";

			lst.Add(centre_functionary);
			lst.Add(remarks);
			lst.Add(effective_from);
			lst.Add(effective_till);
		}
	}
	
	
	public class Centres_tables_id_changesSQLSelectQuery : SQLSelectQuery
	{
		public Cndn satsang_centre_id = new Cndn("satsang_centre_id", typeof(Int32));
		public Cndn object_id = new Cndn("object_id", typeof(String));
		public Cndn changed_on = new Cndn("changed_on", typeof(DateTime));
		public Cndn imported_id = new Cndn("imported_id", typeof(Int32));
		public Cndn exported_id = new Cndn("exported_id", typeof(Int32));
		public Centres_tables_id_changesSQLSelectQuery()
		{
			SqlObjectName = "Centres_tables_id_changes";

			lst.Add(satsang_centre_id);
			lst.Add(object_id);
			lst.Add(changed_on);
			lst.Add(imported_id);
			lst.Add(exported_id);
		}
	}
	
	
	public class ColoursSQLSelectQuery : SQLSelectQuery
	{
		public Cndn colour_id = new Cndn("colour_id", typeof(Int16));
		public Cndn colour_nm = new Cndn("colour_nm", typeof(String));
		public Cndn red_component = new Cndn("red_component", typeof(Byte));
		public Cndn green_component = new Cndn("green_component", typeof(Byte));
		public Cndn blue_component = new Cndn("blue_component", typeof(Byte));
		public Cndn remarks = new Cndn("remarks", typeof(String));
		public Cndn effective_from = new Cndn("effective_from", typeof(DateTime));
		public Cndn effective_till = new Cndn("effective_till", typeof(DateTime));
		public Cndn txn_ts = new Cndn("txn_ts", typeof(Byte[]));
		public ColoursSQLSelectQuery()
		{
			SqlObjectName = "Colours";

			lst.Add(colour_id);
			lst.Add(colour_nm);
			lst.Add(red_component);
			lst.Add(green_component);
			lst.Add(blue_component);
			lst.Add(remarks);
			lst.Add(effective_from);
			lst.Add(effective_till);
			lst.Add(txn_ts);
		}
	}
	
	
	public class Credit_specificationsSQLSelectQuery : SQLSelectQuery
	{
		public Cndn credit_specification_id = new Cndn("credit_specification_id", typeof(Int16));
		public Cndn credit_specification_nm = new Cndn("credit_specification_nm", typeof(String));
		public Cndn credit_specification_dt = new Cndn("credit_specification_dt", typeof(DateTime));
		public Cndn satsang_centre_id = new Cndn("satsang_centre_id", typeof(Int32));
		public Cndn last_appointment_dt = new Cndn("last_appointment_dt", typeof(DateTime));
		public Cndn credit_group_nm = new Cndn("credit_group_nm", typeof(String));
		public Cndn is_uniform_specification = new Cndn("is_uniform_specification", typeof(String));
		public Cndn is_outstation_sewadar = new Cndn("is_outstation_sewadar", typeof(String));
		public Cndn credit_cnt = new Cndn("credit_cnt", typeof(Int16));
		public Cndn unit_cnt = new Cndn("unit_cnt", typeof(Int16));
		public Cndn is_exemption_considered = new Cndn("is_exemption_considered", typeof(String));
		public Cndn presence_sewa_id = new Cndn("presence_sewa_id", typeof(Int32));
		public Cndn min_credit_cnt = new Cndn("min_credit_cnt", typeof(Int16));
		public Cndn specification_ts = new Cndn("specification_ts", typeof(DateTime));
		public Cndn computation_ts = new Cndn("computation_ts", typeof(DateTime));
		public Cndn is_finally_used = new Cndn("is_finally_used", typeof(String));
		public Cndn txn_ts = new Cndn("txn_ts", typeof(Byte[]));
		public Credit_specificationsSQLSelectQuery()
		{
			SqlObjectName = "Credit_specifications";

			lst.Add(credit_specification_id);
			lst.Add(credit_specification_nm);
			lst.Add(credit_specification_dt);
			lst.Add(satsang_centre_id);
			lst.Add(last_appointment_dt);
			lst.Add(credit_group_nm);
			lst.Add(is_uniform_specification);
			lst.Add(is_outstation_sewadar);
			lst.Add(credit_cnt);
			lst.Add(unit_cnt);
			lst.Add(is_exemption_considered);
			lst.Add(presence_sewa_id);
			lst.Add(min_credit_cnt);
			lst.Add(specification_ts);
			lst.Add(computation_ts);
			lst.Add(is_finally_used);
			lst.Add(txn_ts);
		}
	}
	
	
	public class Credit_specifications_sewadarsSQLSelectQuery : SQLSelectQuery
	{
		public Cndn credit_specification_id = new Cndn("credit_specification_id", typeof(Int16));
		public Cndn satsang_centre_id = new Cndn("satsang_centre_id", typeof(Int32));
		public Cndn sewadar_grno = new Cndn("sewadar_grno", typeof(String));
		public Cndn credit_cnt = new Cndn("credit_cnt", typeof(Decimal));
		public Credit_specifications_sewadarsSQLSelectQuery()
		{
			SqlObjectName = "Credit_specifications_sewadars";

			lst.Add(credit_specification_id);
			lst.Add(satsang_centre_id);
			lst.Add(sewadar_grno);
			lst.Add(credit_cnt);
		}
	}
	
	
	public class Credit_specifications_sewasSQLSelectQuery : SQLSelectQuery
	{
		public Cndn credit_specification_id = new Cndn("credit_specification_id", typeof(Int16));
		public Cndn sewa_id = new Cndn("sewa_id", typeof(Int32));
		public Cndn credit_cnt = new Cndn("credit_cnt", typeof(Int16));
		public Cndn unit_cnt = new Cndn("unit_cnt", typeof(Int16));
		public Cndn is_exemption_considered = new Cndn("is_exemption_considered", typeof(String));
		public Cndn min_credit_cnt = new Cndn("min_credit_cnt", typeof(Int16));
		public Cndn max_credit_cnt = new Cndn("max_credit_cnt", typeof(Decimal));
		public Credit_specifications_sewasSQLSelectQuery()
		{
			SqlObjectName = "Credit_specifications_sewas";

			lst.Add(credit_specification_id);
			lst.Add(sewa_id);
			lst.Add(credit_cnt);
			lst.Add(unit_cnt);
			lst.Add(is_exemption_considered);
			lst.Add(min_credit_cnt);
			lst.Add(max_credit_cnt);
		}
	}
	
	
	public class Departments_satsang_centresSQLSelectQuery : SQLSelectQuery
	{
		public Cndn department_id = new Cndn("department_id", typeof(Int16));
		public Cndn satsang_centre_id = new Cndn("satsang_centre_id", typeof(Int32));
		public Cndn genders_allowed = new Cndn("genders_allowed", typeof(String));
		public Cndn is_common_roster = new Cndn("is_common_roster", typeof(String));
		public Cndn is_generic = new Cndn("is_generic", typeof(String));
		public Cndn is_weekly = new Cndn("is_weekly", typeof(String));
		public Cndn sub_department_mandatory = new Cndn("sub_department_mandatory", typeof(String));
		public Cndn effective_from = new Cndn("effective_from", typeof(DateTime));
		public Cndn effective_till = new Cndn("effective_till", typeof(DateTime));
		public Departments_satsang_centresSQLSelectQuery()
		{
			SqlObjectName = "Departments_satsang_centres";

			lst.Add(department_id);
			lst.Add(satsang_centre_id);
			lst.Add(genders_allowed);
			lst.Add(is_common_roster);
			lst.Add(is_generic);
			lst.Add(is_weekly);
			lst.Add(sub_department_mandatory);
			lst.Add(effective_from);
			lst.Add(effective_till);
		}
	}
	
	
	public class Generic_attributesSQLSelectQuery : SQLSelectQuery
	{
		public Cndn attribute_id = new Cndn("attribute_id", typeof(Int16));
		public Cndn attribute_nm = new Cndn("attribute_nm", typeof(String));
		public Cndn attribute_group = new Cndn("attribute_group", typeof(String));
		public Cndn attribute_sq = new Cndn("attribute_sq", typeof(Int16));
		public Cndn attribute_type = new Cndn("attribute_type", typeof(String));
		public Cndn attribute_length = new Cndn("attribute_length", typeof(Byte));
		public Cndn attribute_scale = new Cndn("attribute_scale", typeof(Byte));
		public Cndn is_temporal = new Cndn("is_temporal", typeof(String));
		public Cndn is_mandatory = new Cndn("is_mandatory", typeof(String));
		public Cndn is_status_applicable = new Cndn("is_status_applicable", typeof(String));
		public Cndn remarks = new Cndn("remarks", typeof(String));
		public Cndn txn_ts = new Cndn("txn_ts", typeof(Byte[]));
		public Generic_attributesSQLSelectQuery()
		{
			SqlObjectName = "Generic_attributes";

			lst.Add(attribute_id);
			lst.Add(attribute_nm);
			lst.Add(attribute_group);
			lst.Add(attribute_sq);
			lst.Add(attribute_type);
			lst.Add(attribute_length);
			lst.Add(attribute_scale);
			lst.Add(is_temporal);
			lst.Add(is_mandatory);
			lst.Add(is_status_applicable);
			lst.Add(remarks);
			lst.Add(txn_ts);
		}
	}
	
	
	public class Generic_attributes_list_valuesSQLSelectQuery : SQLSelectQuery
	{
		public Cndn attribute_id = new Cndn("attribute_id", typeof(Int16));
		public Cndn attribute_value = new Cndn("attribute_value", typeof(String));
		public Cndn attribute_value_sq = new Cndn("attribute_value_sq", typeof(Int16));
		public Generic_attributes_list_valuesSQLSelectQuery()
		{
			SqlObjectName = "Generic_attributes_list_values";

			lst.Add(attribute_id);
			lst.Add(attribute_value);
			lst.Add(attribute_value_sq);
		}
	}
	
	
	public class Generic_attributes_satsang_centresSQLSelectQuery : SQLSelectQuery
	{
		public Cndn attribute_id = new Cndn("attribute_id", typeof(Int16));
		public Cndn satsang_centre_id = new Cndn("satsang_centre_id", typeof(Int32));
		public Cndn effective_from = new Cndn("effective_from", typeof(DateTime));
		public Cndn effective_till = new Cndn("effective_till", typeof(DateTime));
		public Generic_attributes_satsang_centresSQLSelectQuery()
		{
			SqlObjectName = "Generic_attributes_satsang_centres";

			lst.Add(attribute_id);
			lst.Add(satsang_centre_id);
			lst.Add(effective_from);
			lst.Add(effective_till);
		}
	}
	
	
	public class Generic_attributes_statusSQLSelectQuery : SQLSelectQuery
	{
		public Cndn attribute_id = new Cndn("attribute_id", typeof(Int16));
		public Cndn sewadar_status_cd = new Cndn("sewadar_status_cd", typeof(String));
		public Generic_attributes_statusSQLSelectQuery()
		{
			SqlObjectName = "Generic_attributes_status";

			lst.Add(attribute_id);
			lst.Add(sewadar_status_cd);
		}
	}
	
	
	public class Generic_list_report_detailsSQLSelectQuery : SQLSelectQuery
	{
		public Cndn session_id = new Cndn("session_id", typeof(Int32));
		public Cndn header_serial_id = new Cndn("header_serial_id", typeof(Int32));
		public Cndn column1_serial_id = new Cndn("column1_serial_id", typeof(Int32));
		public Cndn column1_satsang_centre_id = new Cndn("column1_satsang_centre_id", typeof(Int32));
		public Cndn column1_sewadar_grno = new Cndn("column1_sewadar_grno", typeof(String));
		public Cndn column1_sewadar_nm = new Cndn("column1_sewadar_nm", typeof(String));
		public Cndn column2_serial_id = new Cndn("column2_serial_id", typeof(Int32));
		public Cndn column2_satsang_centre_id = new Cndn("column2_satsang_centre_id", typeof(Int32));
		public Cndn column2_sewadar_grno = new Cndn("column2_sewadar_grno", typeof(String));
		public Cndn column2_sewadar_nm = new Cndn("column2_sewadar_nm", typeof(String));
		public Generic_list_report_detailsSQLSelectQuery()
		{
			SqlObjectName = "Generic_list_report_details";

			lst.Add(session_id);
			lst.Add(header_serial_id);
			lst.Add(column1_serial_id);
			lst.Add(column1_satsang_centre_id);
			lst.Add(column1_sewadar_grno);
			lst.Add(column1_sewadar_nm);
			lst.Add(column2_serial_id);
			lst.Add(column2_satsang_centre_id);
			lst.Add(column2_sewadar_grno);
			lst.Add(column2_sewadar_nm);
		}
	}
	
	
	public class Generic_list_report_headersSQLSelectQuery : SQLSelectQuery
	{
		public Cndn session_id = new Cndn("session_id", typeof(Int32));
		public Cndn header_serial_id = new Cndn("header_serial_id", typeof(Int32));
		public Cndn sub_header_information = new Cndn("sub_header_information", typeof(String));
		public Cndn is_eject_page = new Cndn("is_eject_page", typeof(String));
		public Generic_list_report_headersSQLSelectQuery()
		{
			SqlObjectName = "Generic_list_report_headers";

			lst.Add(session_id);
			lst.Add(header_serial_id);
			lst.Add(sub_header_information);
			lst.Add(is_eject_page);
		}
	}
	
	
	public class Generic_report_detailsSQLSelectQuery : SQLSelectQuery
	{
		public Cndn session_id = new Cndn("session_id", typeof(Int32));
		public Cndn satsang_centre_id = new Cndn("satsang_centre_id", typeof(Int32));
		public Cndn sewadar_grno = new Cndn("sewadar_grno", typeof(String));
		public Cndn extra_information = new Cndn("extra_information", typeof(String));
		public Cndn grouping_1 = new Cndn("grouping_1", typeof(String));
		public Cndn grouping_2 = new Cndn("grouping_2", typeof(String));
		public Cndn grouping_3 = new Cndn("grouping_3", typeof(String));
		public Generic_report_detailsSQLSelectQuery()
		{
			SqlObjectName = "Generic_report_details";

			lst.Add(session_id);
			lst.Add(satsang_centre_id);
			lst.Add(sewadar_grno);
			lst.Add(extra_information);
			lst.Add(grouping_1);
			lst.Add(grouping_2);
			lst.Add(grouping_3);
		}
	}
	
	
	public class Generic_report_headersSQLSelectQuery : SQLSelectQuery
	{
		public Cndn session_id = new Cndn("session_id", typeof(Int32));
		public Cndn report_nm = new Cndn("report_nm", typeof(String));
		public Cndn is_summary = new Cndn("is_summary", typeof(String));
		public Cndn report_header = new Cndn("report_header", typeof(String));
		public Cndn extra_information_header = new Cndn("extra_information_header", typeof(String));
		public Cndn major_information_header = new Cndn("major_information_header", typeof(String));
		public Cndn prepare_dtm = new Cndn("prepare_dtm", typeof(DateTime));
		public Cndn grouping_1_ascending = new Cndn("grouping_1_ascending", typeof(String));
		public Cndn grouping_1_rendered = new Cndn("grouping_1_rendered", typeof(String));
		public Generic_report_headersSQLSelectQuery()
		{
			SqlObjectName = "Generic_report_headers";

			lst.Add(session_id);
			lst.Add(report_nm);
			lst.Add(is_summary);
			lst.Add(report_header);
			lst.Add(extra_information_header);
			lst.Add(major_information_header);
			lst.Add(prepare_dtm);
			lst.Add(grouping_1_ascending);
			lst.Add(grouping_1_rendered);
		}
	}
	
	
	public class Generic_report_summariesSQLSelectQuery : SQLSelectQuery
	{
		public Cndn session_id = new Cndn("session_id", typeof(Int32));
		public Cndn serial_id = new Cndn("serial_id", typeof(Int32));
		public Cndn major_information = new Cndn("major_information", typeof(String));
		public Cndn minor_information = new Cndn("minor_information", typeof(String));
		public Cndn gents_cnt = new Cndn("gents_cnt", typeof(Int32));
		public Cndn ladies_cnt = new Cndn("ladies_cnt", typeof(Int32));
		public Generic_report_summariesSQLSelectQuery()
		{
			SqlObjectName = "Generic_report_summaries";

			lst.Add(session_id);
			lst.Add(serial_id);
			lst.Add(major_information);
			lst.Add(minor_information);
			lst.Add(gents_cnt);
			lst.Add(ladies_cnt);
		}
	}
	
	
	public class Generic_report_synopsisSQLSelectQuery : SQLSelectQuery
	{
		public Cndn session_id = new Cndn("session_id", typeof(Int32));
		public Cndn serial_id = new Cndn("serial_id", typeof(Int32));
		public Cndn major_information = new Cndn("major_information", typeof(String));
		public Cndn minor_information = new Cndn("minor_information", typeof(String));
		public Cndn extra_information = new Cndn("extra_information", typeof(String));
		public Generic_report_synopsisSQLSelectQuery()
		{
			SqlObjectName = "Generic_report_synopsis";

			lst.Add(session_id);
			lst.Add(serial_id);
			lst.Add(major_information);
			lst.Add(minor_information);
			lst.Add(extra_information);
		}
	}
	
	
	public class Generic_reportsSQLSelectQuery : SQLSelectQuery
	{
		public Cndn report_nm = new Cndn("report_nm", typeof(String));
		public Cndn report_group = new Cndn("report_group", typeof(Byte));
		public Cndn report_type = new Cndn("report_type", typeof(String));
		public Cndn is_total_line = new Cndn("is_total_line", typeof(String));
		public Cndn sewadar_list_nm = new Cndn("sewadar_list_nm", typeof(String));
		public Cndn is_sewadar_list_ticked = new Cndn("is_sewadar_list_ticked", typeof(String));
		public Cndn is_satsang_centre = new Cndn("is_satsang_centre", typeof(String));
		public Cndn is_satsang_centre_multi_select = new Cndn("is_satsang_centre_multi_select", typeof(String));
		public Cndn is_sewa = new Cndn("is_sewa", typeof(String));
		public Cndn is_default_sewa = new Cndn("is_default_sewa", typeof(String));
		public Cndn is_start_dt = new Cndn("is_start_dt", typeof(String));
		public Cndn is_finish_dt = new Cndn("is_finish_dt", typeof(String));
		public Cndn default_period_source = new Cndn("default_period_source", typeof(String));
		public Cndn is_department = new Cndn("is_department", typeof(String));
		public Cndn is_department_multi_select = new Cndn("is_department_multi_select", typeof(String));
		public Cndn is_sub_department = new Cndn("is_sub_department", typeof(String));
		public Cndn is_status = new Cndn("is_status", typeof(String));
		public Cndn is_status_multi_select = new Cndn("is_status_multi_select", typeof(String));
		public Cndn status_system_info_cd = new Cndn("status_system_info_cd", typeof(String));
		public Cndn is_global_status = new Cndn("is_global_status", typeof(String));
		public Cndn is_weekly_sewa_location = new Cndn("is_weekly_sewa_location", typeof(String));
		public Cndn is_country = new Cndn("is_country", typeof(String));
		public Cndn default_country_id = new Cndn("default_country_id", typeof(Int32));
		public Cndn is_state = new Cndn("is_state", typeof(String));
		public Cndn is_district = new Cndn("is_district", typeof(String));
		public Cndn is_po_or_city = new Cndn("is_po_or_city", typeof(String));
		public Cndn is_gender = new Cndn("is_gender", typeof(String));
		public Cndn is_outstation_sewadar = new Cndn("is_outstation_sewadar", typeof(String));
		public Cndn default_outstation_sewadar = new Cndn("default_outstation_sewadar", typeof(String));
		public Cndn is_cnt_1 = new Cndn("is_cnt_1", typeof(String));
		public Cndn cnt_1_label = new Cndn("cnt_1_label", typeof(String));
		public Cndn cnt_1_min_value = new Cndn("cnt_1_min_value", typeof(Int32));
		public Cndn cnt_1_max_value = new Cndn("cnt_1_max_value", typeof(Int32));
		public Cndn cnt_1_default_value = new Cndn("cnt_1_default_value", typeof(Int32));
		public Cndn is_cnt_2 = new Cndn("is_cnt_2", typeof(String));
		public Cndn cnt_2_label = new Cndn("cnt_2_label", typeof(String));
		public Cndn cnt_2_min_value = new Cndn("cnt_2_min_value", typeof(Int32));
		public Cndn cnt_2_max_value = new Cndn("cnt_2_max_value", typeof(Int32));
		public Cndn cnt_2_default_value = new Cndn("cnt_2_default_value", typeof(Int32));
		public Cndn is_team = new Cndn("is_team", typeof(String));
		public Cndn is_credit_specification = new Cndn("is_credit_specification", typeof(String));
		public Cndn is_default_credit_specification = new Cndn("is_default_credit_specification", typeof(String));
		public Cndn is_gnc_dt1 = new Cndn("is_gnc_dt1", typeof(String));
		public Cndn gnc_dt1_label = new Cndn("gnc_dt1_label", typeof(String));
		public Cndn is_gnc_dt1_default_current_date = new Cndn("is_gnc_dt1_default_current_date", typeof(String));
		public Cndn is_gnc_dt1_show_difference = new Cndn("is_gnc_dt1_show_difference", typeof(String));
		public Cndn is_gnc_dt2 = new Cndn("is_gnc_dt2", typeof(String));
		public Cndn gnc_dt2_label = new Cndn("gnc_dt2_label", typeof(String));
		public Cndn is_gnc_dt2_default_current_date = new Cndn("is_gnc_dt2_default_current_date", typeof(String));
		public Cndn is_gnc_dt2_show_difference = new Cndn("is_gnc_dt2_show_difference", typeof(String));
		public Cndn is_skill = new Cndn("is_skill", typeof(String));
		public Cndn is_qualification_type = new Cndn("is_qualification_type", typeof(String));
		public Cndn is_gnc_boolean = new Cndn("is_gnc_boolean", typeof(String));
		public Cndn gnc_boolean_label = new Cndn("gnc_boolean_label", typeof(String));
		public Cndn default_gnc_boolean = new Cndn("default_gnc_boolean", typeof(String));
		public Cndn is_attribute = new Cndn("is_attribute", typeof(String));
		public Cndn attribute_system_info_cd = new Cndn("attribute_system_info_cd", typeof(String));
		public Cndn is_sewadar_list = new Cndn("is_sewadar_list", typeof(String));
		public Cndn is_sewa_shift = new Cndn("is_sewa_shift", typeof(String));
		public Cndn is_badge_template = new Cndn("is_badge_template", typeof(String));
		public Cndn is_remarks_type = new Cndn("is_remarks_type", typeof(String));
		public Cndn is_sewadar_type = new Cndn("is_sewadar_type", typeof(String));
		public Cndn is_area = new Cndn("is_area", typeof(String));
		public Cndn is_eject_page = new Cndn("is_eject_page", typeof(String));
		public Cndn audit_type = new Cndn("audit_type", typeof(String));
		public Cndn report_main_ordering = new Cndn("report_main_ordering", typeof(String));
		public Cndn is_main_ascending_order = new Cndn("is_main_ascending_order", typeof(String));
		public Cndn report_ordering = new Cndn("report_ordering", typeof(String));
		public Cndn is_ascending_order = new Cndn("is_ascending_order", typeof(String));
		public Cndn procedure_nm = new Cndn("procedure_nm", typeof(String));
		public Cndn sewa_id_prm = new Cndn("sewa_id_prm", typeof(Byte));
		public Cndn sewa_nm_prm = new Cndn("sewa_nm_prm", typeof(Byte));
		public Cndn start_dt_prm = new Cndn("start_dt_prm", typeof(Byte));
		public Cndn finish_dt_prm = new Cndn("finish_dt_prm", typeof(Byte));
		public Cndn department_id_prm = new Cndn("department_id_prm", typeof(Byte));
		public Cndn department_nm_prm = new Cndn("department_nm_prm", typeof(Byte));
		public Cndn sub_department_id_prm = new Cndn("sub_department_id_prm", typeof(Byte));
		public Cndn sub_department_nm_prm = new Cndn("sub_department_nm_prm", typeof(Byte));
		public Cndn status_prm = new Cndn("status_prm", typeof(Byte));
		public Cndn weekly_sewa_location_id_prm = new Cndn("weekly_sewa_location_id_prm", typeof(Byte));
		public Cndn weekly_sewa_location_nm_prm = new Cndn("weekly_sewa_location_nm_prm", typeof(Byte));
		public Cndn country_id_prm = new Cndn("country_id_prm", typeof(Byte));
		public Cndn state_id_prm = new Cndn("state_id_prm", typeof(Byte));
		public Cndn district_id_prm = new Cndn("district_id_prm", typeof(Byte));
		public Cndn po_or_city_id_prm = new Cndn("po_or_city_id_prm", typeof(Byte));
		public Cndn gender_prm = new Cndn("gender_prm", typeof(Byte));
		public Cndn outstation_sewadar_prm = new Cndn("outstation_sewadar_prm", typeof(Byte));
		public Cndn cnt_1_prm = new Cndn("cnt_1_prm", typeof(Byte));
		public Cndn cnt_2_prm = new Cndn("cnt_2_prm", typeof(Byte));
		public Cndn team_id_prm = new Cndn("team_id_prm", typeof(Byte));
		public Cndn team_nm_prm = new Cndn("team_nm_prm", typeof(Byte));
		public Cndn credit_specification_id_prm = new Cndn("credit_specification_id_prm", typeof(Byte));
		public Cndn credit_specification_nm_prm = new Cndn("credit_specification_nm_prm", typeof(Byte));
		public Cndn gnc_dt1_prm = new Cndn("gnc_dt1_prm", typeof(Byte));
		public Cndn gnc_dt2_prm = new Cndn("gnc_dt2_prm", typeof(Byte));
		public Cndn skill_id_prm = new Cndn("skill_id_prm", typeof(Byte));
		public Cndn skill_nm_prm = new Cndn("skill_nm_prm", typeof(Byte));
		public Cndn qualification_type_prm = new Cndn("qualification_type_prm", typeof(Byte));
		public Cndn gnc_boolean_prm = new Cndn("gnc_boolean_prm", typeof(Byte));
		public Cndn satsang_centre_id_prm = new Cndn("satsang_centre_id_prm", typeof(Byte));
		public Cndn satsang_centre_nm_prm = new Cndn("satsang_centre_nm_prm", typeof(Byte));
		public Cndn attribute_id_prm = new Cndn("attribute_id_prm", typeof(Byte));
		public Cndn attribute_nm_prm = new Cndn("attribute_nm_prm", typeof(Byte));
		public Cndn sewadar_list_id_prm = new Cndn("sewadar_list_id_prm", typeof(Byte));
		public Cndn sewa_shift_prm = new Cndn("sewa_shift_prm", typeof(Byte));
		public Cndn badge_template_id_prm = new Cndn("badge_template_id_prm", typeof(Byte));
		public Cndn badge_template_nm_prm = new Cndn("badge_template_nm_prm", typeof(Byte));
		public Cndn remarks_type_prm = new Cndn("remarks_type_prm", typeof(Byte));
		public Cndn sewadar_type_nm_prm = new Cndn("sewadar_type_nm_prm", typeof(Byte));
		public Cndn area_id_prm = new Cndn("area_id_prm", typeof(Byte));
		public Cndn area_nm_prm = new Cndn("area_nm_prm", typeof(Byte));
		public Cndn details_report_file_nm = new Cndn("details_report_file_nm", typeof(String));
		public Cndn summary_report_file_nm = new Cndn("summary_report_file_nm", typeof(String));
		public Cndn detail_report_footnote = new Cndn("detail_report_footnote", typeof(String));
		public Cndn summary_report_footnote = new Cndn("summary_report_footnote", typeof(String));
		public Generic_reportsSQLSelectQuery()
		{
			SqlObjectName = "Generic_reports";

			lst.Add(report_nm);
			lst.Add(report_group);
			lst.Add(report_type);
			lst.Add(is_total_line);
			lst.Add(sewadar_list_nm);
			lst.Add(is_sewadar_list_ticked);
			lst.Add(is_satsang_centre);
			lst.Add(is_satsang_centre_multi_select);
			lst.Add(is_sewa);
			lst.Add(is_default_sewa);
			lst.Add(is_start_dt);
			lst.Add(is_finish_dt);
			lst.Add(default_period_source);
			lst.Add(is_department);
			lst.Add(is_department_multi_select);
			lst.Add(is_sub_department);
			lst.Add(is_status);
			lst.Add(is_status_multi_select);
			lst.Add(status_system_info_cd);
			lst.Add(is_global_status);
			lst.Add(is_weekly_sewa_location);
			lst.Add(is_country);
			lst.Add(default_country_id);
			lst.Add(is_state);
			lst.Add(is_district);
			lst.Add(is_po_or_city);
			lst.Add(is_gender);
			lst.Add(is_outstation_sewadar);
			lst.Add(default_outstation_sewadar);
			lst.Add(is_cnt_1);
			lst.Add(cnt_1_label);
			lst.Add(cnt_1_min_value);
			lst.Add(cnt_1_max_value);
			lst.Add(cnt_1_default_value);
			lst.Add(is_cnt_2);
			lst.Add(cnt_2_label);
			lst.Add(cnt_2_min_value);
			lst.Add(cnt_2_max_value);
			lst.Add(cnt_2_default_value);
			lst.Add(is_team);
			lst.Add(is_credit_specification);
			lst.Add(is_default_credit_specification);
			lst.Add(is_gnc_dt1);
			lst.Add(gnc_dt1_label);
			lst.Add(is_gnc_dt1_default_current_date);
			lst.Add(is_gnc_dt1_show_difference);
			lst.Add(is_gnc_dt2);
			lst.Add(gnc_dt2_label);
			lst.Add(is_gnc_dt2_default_current_date);
			lst.Add(is_gnc_dt2_show_difference);
			lst.Add(is_skill);
			lst.Add(is_qualification_type);
			lst.Add(is_gnc_boolean);
			lst.Add(gnc_boolean_label);
			lst.Add(default_gnc_boolean);
			lst.Add(is_attribute);
			lst.Add(attribute_system_info_cd);
			lst.Add(is_sewadar_list);
			lst.Add(is_sewa_shift);
			lst.Add(is_badge_template);
			lst.Add(is_remarks_type);
			lst.Add(is_sewadar_type);
			lst.Add(is_area);
			lst.Add(is_eject_page);
			lst.Add(audit_type);
			lst.Add(report_main_ordering);
			lst.Add(is_main_ascending_order);
			lst.Add(report_ordering);
			lst.Add(is_ascending_order);
			lst.Add(procedure_nm);
			lst.Add(sewa_id_prm);
			lst.Add(sewa_nm_prm);
			lst.Add(start_dt_prm);
			lst.Add(finish_dt_prm);
			lst.Add(department_id_prm);
			lst.Add(department_nm_prm);
			lst.Add(sub_department_id_prm);
			lst.Add(sub_department_nm_prm);
			lst.Add(status_prm);
			lst.Add(weekly_sewa_location_id_prm);
			lst.Add(weekly_sewa_location_nm_prm);
			lst.Add(country_id_prm);
			lst.Add(state_id_prm);
			lst.Add(district_id_prm);
			lst.Add(po_or_city_id_prm);
			lst.Add(gender_prm);
			lst.Add(outstation_sewadar_prm);
			lst.Add(cnt_1_prm);
			lst.Add(cnt_2_prm);
			lst.Add(team_id_prm);
			lst.Add(team_nm_prm);
			lst.Add(credit_specification_id_prm);
			lst.Add(credit_specification_nm_prm);
			lst.Add(gnc_dt1_prm);
			lst.Add(gnc_dt2_prm);
			lst.Add(skill_id_prm);
			lst.Add(skill_nm_prm);
			lst.Add(qualification_type_prm);
			lst.Add(gnc_boolean_prm);
			lst.Add(satsang_centre_id_prm);
			lst.Add(satsang_centre_nm_prm);
			lst.Add(attribute_id_prm);
			lst.Add(attribute_nm_prm);
			lst.Add(sewadar_list_id_prm);
			lst.Add(sewa_shift_prm);
			lst.Add(badge_template_id_prm);
			lst.Add(badge_template_nm_prm);
			lst.Add(remarks_type_prm);
			lst.Add(sewadar_type_nm_prm);
			lst.Add(area_id_prm);
			lst.Add(area_nm_prm);
			lst.Add(details_report_file_nm);
			lst.Add(summary_report_file_nm);
			lst.Add(detail_report_footnote);
			lst.Add(summary_report_footnote);
		}
	}
	
	
	public class Generic_sewadar_listsSQLSelectQuery : SQLSelectQuery
	{
		public Cndn sewadar_list_id = new Cndn("sewadar_list_id", typeof(Int32));
		public Cndn satsang_centre_id = new Cndn("satsang_centre_id", typeof(Int32));
		public Cndn sewadar_list_nm = new Cndn("sewadar_list_nm", typeof(String));
		public Cndn sewadar_list_use = new Cndn("sewadar_list_use", typeof(String));
		public Cndn sewadar_list_other_use = new Cndn("sewadar_list_other_use", typeof(String));
		public Cndn other_satsang_centre_sewadars = new Cndn("other_satsang_centre_sewadars", typeof(String));
		public Cndn is_other_satsang_centre = new Cndn("is_other_satsang_centre", typeof(String));
		public Cndn is_editing_allowed = new Cndn("is_editing_allowed", typeof(String));
		public Cndn is_for_export = new Cndn("is_for_export", typeof(String));
		public Cndn exported_dtm = new Cndn("exported_dtm", typeof(DateTime));
		public Cndn programme_satsang_centre_id = new Cndn("programme_satsang_centre_id", typeof(Int32));
		public Cndn remarks = new Cndn("remarks", typeof(String));
		public Cndn generated_dtm = new Cndn("generated_dtm", typeof(DateTime));
		public Cndn report_nm = new Cndn("report_nm", typeof(String));
		public Cndn session_id = new Cndn("session_id", typeof(Int32));
		public Cndn txn_ts = new Cndn("txn_ts", typeof(Byte[]));
		public Generic_sewadar_listsSQLSelectQuery()
		{
			SqlObjectName = "Generic_sewadar_lists";

			lst.Add(sewadar_list_id);
			lst.Add(satsang_centre_id);
			lst.Add(sewadar_list_nm);
			lst.Add(sewadar_list_use);
			lst.Add(sewadar_list_other_use);
			lst.Add(other_satsang_centre_sewadars);
			lst.Add(is_other_satsang_centre);
			lst.Add(is_editing_allowed);
			lst.Add(is_for_export);
			lst.Add(exported_dtm);
			lst.Add(programme_satsang_centre_id);
			lst.Add(remarks);
			lst.Add(generated_dtm);
			lst.Add(report_nm);
			lst.Add(session_id);
			lst.Add(txn_ts);
		}
	}
	
	
	public class Generic_sewadar_lists_sewadarsSQLSelectQuery : SQLSelectQuery
	{
		public Cndn sewadar_list_id = new Cndn("sewadar_list_id", typeof(Int32));
		public Cndn satsang_centre_id = new Cndn("satsang_centre_id", typeof(Int32));
		public Cndn sewadar_grno = new Cndn("sewadar_grno", typeof(String));
		public Generic_sewadar_lists_sewadarsSQLSelectQuery()
		{
			SqlObjectName = "Generic_sewadar_lists_sewadars";

			lst.Add(sewadar_list_id);
			lst.Add(satsang_centre_id);
			lst.Add(sewadar_grno);
		}
	}
	
	
	public class Manually_exported_sewadarsSQLSelectQuery : SQLSelectQuery
	{
		public Cndn exported_to_centre_id = new Cndn("exported_to_centre_id", typeof(Int32));
		public Cndn sewadar_id = new Cndn("sewadar_id", typeof(Int32));
		public Cndn satsang_centre_id = new Cndn("satsang_centre_id", typeof(Int32));
		public Cndn sewadar_grno = new Cndn("sewadar_grno", typeof(String));
		public Manually_exported_sewadarsSQLSelectQuery()
		{
			SqlObjectName = "Manually_exported_sewadars";

			lst.Add(exported_to_centre_id);
			lst.Add(sewadar_id);
			lst.Add(satsang_centre_id);
			lst.Add(sewadar_grno);
		}
	}
	
	
	public class Medical_disabilitiesSQLSelectQuery : SQLSelectQuery
	{
		public Cndn medical_disability_id = new Cndn("medical_disability_id", typeof(Int16));
		public Cndn medical_disability_nm = new Cndn("medical_disability_nm", typeof(String));
		public Cndn medical_disability_cd = new Cndn("medical_disability_cd", typeof(String));
		public Cndn effective_from = new Cndn("effective_from", typeof(DateTime));
		public Cndn effective_till = new Cndn("effective_till", typeof(DateTime));
		public Cndn txn_ts = new Cndn("txn_ts", typeof(Byte[]));
		public Medical_disabilitiesSQLSelectQuery()
		{
			SqlObjectName = "Medical_disabilities";

			lst.Add(medical_disability_id);
			lst.Add(medical_disability_nm);
			lst.Add(medical_disability_cd);
			lst.Add(effective_from);
			lst.Add(effective_till);
			lst.Add(txn_ts);
		}
	}
	
	
	public class Mgr_centre_sewadarsSQLSelectQuery : SQLSelectQuery
	{
		public Cndn centre_grno = new Cndn("centre_grno", typeof(String));
		public Cndn satsang_centre_id = new Cndn("satsang_centre_id", typeof(Int32));
		public Cndn sewadar_id = new Cndn("sewadar_id", typeof(Int32));
		public Cndn first_name = new Cndn("first_name", typeof(String));
		public Cndn middle_name = new Cndn("middle_name", typeof(String));
		public Cndn surname = new Cndn("surname", typeof(String));
		public Cndn gender = new Cndn("gender", typeof(String));
		public Cndn is_married = new Cndn("is_married", typeof(String));
		public Cndn birth_dtm = new Cndn("birth_dtm", typeof(DateTime));
		public Cndn is_initiated = new Cndn("is_initiated", typeof(String));
		public Cndn initiation_dt = new Cndn("initiation_dt", typeof(DateTime));
		public Cndn initiation_by = new Cndn("initiation_by", typeof(Int32));
		public Cndn initiation_place = new Cndn("initiation_place", typeof(String));
		public Cndn initiation_place_id = new Cndn("initiation_place_id", typeof(Int32));
		public Cndn address_line_1 = new Cndn("address_line_1", typeof(String));
		public Cndn address_line_2 = new Cndn("address_line_2", typeof(String));
		public Cndn state_nm = new Cndn("state_nm", typeof(String));
		public Cndn district_nm = new Cndn("district_nm", typeof(String));
		public Cndn post_office_or_city_nm = new Cndn("post_office_or_city_nm", typeof(String));
		public Cndn post_office_or_city_id = new Cndn("post_office_or_city_id", typeof(Int32));
		public Cndn pin_or_zip_code = new Cndn("pin_or_zip_code", typeof(String));
		public Cndn telephone_mobile = new Cndn("telephone_mobile", typeof(String));
		public Cndn telephone_residence = new Cndn("telephone_residence", typeof(String));
		public Cndn telephone_office = new Cndn("telephone_office", typeof(String));
		public Cndn occupation1 = new Cndn("occupation1", typeof(String));
		public Cndn occupation2 = new Cndn("occupation2", typeof(String));
		public Cndn occupation3 = new Cndn("occupation3", typeof(String));
		public Cndn occupation = new Cndn("occupation", typeof(String));
		public Cndn skill1_id = new Cndn("skill1_id", typeof(Int32));
		public Cndn skill2_id = new Cndn("skill2_id", typeof(Int32));
		public Cndn skill3_id = new Cndn("skill3_id", typeof(Int32));
		public Cndn qualification_nm = new Cndn("qualification_nm", typeof(String));
		public Cndn qualification1_id = new Cndn("qualification1_id", typeof(Int32));
		public Cndn qlfctn_subject1_id = new Cndn("qlfctn_subject1_id", typeof(Int32));
		public Cndn qualification2_id = new Cndn("qualification2_id", typeof(Int32));
		public Cndn qlfctn_subject2_id = new Cndn("qlfctn_subject2_id", typeof(Int32));
		public Cndn attends_weekly_satsang = new Cndn("attends_weekly_satsang", typeof(String));
		public Cndn weekly_satsang_centre_nm = new Cndn("weekly_satsang_centre_nm", typeof(String));
		public Cndn weekly_satsang_centre_id = new Cndn("weekly_satsang_centre_id", typeof(Int32));
		public Cndn status = new Cndn("status", typeof(String));
		public Cndn status_id = new Cndn("status_id", typeof(Int32));
		public Cndn appointment_dt = new Cndn("appointment_dt", typeof(DateTime));
		public Cndn department_nm = new Cndn("department_nm", typeof(String));
		public Cndn department_id = new Cndn("department_id", typeof(Int32));
		public Cndn sub_department_nm = new Cndn("sub_department_nm", typeof(String));
		public Cndn sub_department_id = new Cndn("sub_department_id", typeof(Int32));
		public Cndn attendance_97 = new Cndn("attendance_97", typeof(String));
		public Cndn attendance_98 = new Cndn("attendance_98", typeof(String));
		public Cndn attendance_99 = new Cndn("attendance_99", typeof(String));
		public Cndn attendance_2k = new Cndn("attendance_2k", typeof(String));
		public Cndn attendance_01 = new Cndn("attendance_01", typeof(String));
		public Cndn attendance_02 = new Cndn("attendance_02", typeof(String));
		public Cndn attendance_03 = new Cndn("attendance_03", typeof(String));
		public Cndn attendance_04 = new Cndn("attendance_04", typeof(String));
		public Cndn attendance_05 = new Cndn("attendance_05", typeof(String));
		public Cndn attendance_06 = new Cndn("attendance_06", typeof(String));
		public Cndn attendance_07 = new Cndn("attendance_07", typeof(String));
		public Cndn attendance_08 = new Cndn("attendance_08", typeof(String));
		public Cndn attendance_09 = new Cndn("attendance_09", typeof(String));
		public Cndn attendance_10 = new Cndn("attendance_10", typeof(String));
		public Cndn attendance_11 = new Cndn("attendance_11", typeof(String));
		public Cndn attendance_12 = new Cndn("attendance_12", typeof(String));
		public Cndn migration_note_fhname = new Cndn("migration_note_fhname", typeof(String));
		public Cndn migration_note_skill = new Cndn("migration_note_skill", typeof(String));
		public Cndn migration_note_tehsil = new Cndn("migration_note_tehsil", typeof(String));
		public Cndn is_migrated = new Cndn("is_migrated", typeof(String));
		public Cndn migration_remark2 = new Cndn("migration_remark2", typeof(String));
		public Cndn migration_remark3 = new Cndn("migration_remark3", typeof(String));
		public Cndn issues = new Cndn("issues", typeof(String));
		public Mgr_centre_sewadarsSQLSelectQuery()
		{
			SqlObjectName = "Mgr_centre_sewadars";

			lst.Add(centre_grno);
			lst.Add(satsang_centre_id);
			lst.Add(sewadar_id);
			lst.Add(first_name);
			lst.Add(middle_name);
			lst.Add(surname);
			lst.Add(gender);
			lst.Add(is_married);
			lst.Add(birth_dtm);
			lst.Add(is_initiated);
			lst.Add(initiation_dt);
			lst.Add(initiation_by);
			lst.Add(initiation_place);
			lst.Add(initiation_place_id);
			lst.Add(address_line_1);
			lst.Add(address_line_2);
			lst.Add(state_nm);
			lst.Add(district_nm);
			lst.Add(post_office_or_city_nm);
			lst.Add(post_office_or_city_id);
			lst.Add(pin_or_zip_code);
			lst.Add(telephone_mobile);
			lst.Add(telephone_residence);
			lst.Add(telephone_office);
			lst.Add(occupation1);
			lst.Add(occupation2);
			lst.Add(occupation3);
			lst.Add(occupation);
			lst.Add(skill1_id);
			lst.Add(skill2_id);
			lst.Add(skill3_id);
			lst.Add(qualification_nm);
			lst.Add(qualification1_id);
			lst.Add(qlfctn_subject1_id);
			lst.Add(qualification2_id);
			lst.Add(qlfctn_subject2_id);
			lst.Add(attends_weekly_satsang);
			lst.Add(weekly_satsang_centre_nm);
			lst.Add(weekly_satsang_centre_id);
			lst.Add(status);
			lst.Add(status_id);
			lst.Add(appointment_dt);
			lst.Add(department_nm);
			lst.Add(department_id);
			lst.Add(sub_department_nm);
			lst.Add(sub_department_id);
			lst.Add(attendance_97);
			lst.Add(attendance_98);
			lst.Add(attendance_99);
			lst.Add(attendance_2k);
			lst.Add(attendance_01);
			lst.Add(attendance_02);
			lst.Add(attendance_03);
			lst.Add(attendance_04);
			lst.Add(attendance_05);
			lst.Add(attendance_06);
			lst.Add(attendance_07);
			lst.Add(attendance_08);
			lst.Add(attendance_09);
			lst.Add(attendance_10);
			lst.Add(attendance_11);
			lst.Add(attendance_12);
			lst.Add(migration_note_fhname);
			lst.Add(migration_note_skill);
			lst.Add(migration_note_tehsil);
			lst.Add(is_migrated);
			lst.Add(migration_remark2);
			lst.Add(migration_remark3);
			lst.Add(issues);
		}
	}
	
	
	public class Mgr_tmp_sewadarsSQLSelectQuery : SQLSelectQuery
	{
		public Cndn centre_grno = new Cndn("centre_grno", typeof(String));
		public Cndn name = new Cndn("name", typeof(String));
		public Cndn gender = new Cndn("gender", typeof(String));
		public Cndn is_local_sewadar = new Cndn("is_local_sewadar", typeof(String));
		public Cndn department_nm = new Cndn("department_nm", typeof(String));
		public Cndn sub_department_nm = new Cndn("sub_department_nm", typeof(String));
		public Cndn department_id = new Cndn("department_id", typeof(Int32));
		public Cndn sub_department_id = new Cndn("sub_department_id", typeof(Int32));
		public Cndn telephone_no = new Cndn("telephone_no", typeof(String));
		public Cndn photo_id = new Cndn("photo_id", typeof(String));
		public Cndn to_be_migrated = new Cndn("to_be_migrated", typeof(String));
		public Cndn is_name_overridden = new Cndn("is_name_overridden", typeof(String));
		public Mgr_tmp_sewadarsSQLSelectQuery()
		{
			SqlObjectName = "Mgr_tmp_sewadars";

			lst.Add(centre_grno);
			lst.Add(name);
			lst.Add(gender);
			lst.Add(is_local_sewadar);
			lst.Add(department_nm);
			lst.Add(sub_department_nm);
			lst.Add(department_id);
			lst.Add(sub_department_id);
			lst.Add(telephone_no);
			lst.Add(photo_id);
			lst.Add(to_be_migrated);
			lst.Add(is_name_overridden);
		}
	}
	
	
	
	public class Other_address_proofsSQLSelectQuery : SQLSelectQuery
	{
		public Cndn address_proof_id = new Cndn("address_proof_id", typeof(Int16));
		public Cndn address_proof_nm = new Cndn("address_proof_nm", typeof(String));
		public Cndn address_proof_cd = new Cndn("address_proof_cd", typeof(String));
		public Cndn effective_from = new Cndn("effective_from", typeof(DateTime));
		public Cndn effective_till = new Cndn("effective_till", typeof(DateTime));
		public Other_address_proofsSQLSelectQuery()
		{
			SqlObjectName = "Other_address_proofs";

			lst.Add(address_proof_id);
			lst.Add(address_proof_nm);
			lst.Add(address_proof_cd);
			lst.Add(effective_from);
			lst.Add(effective_till);
		}
	}
	
	
	public class Post_offices_or_citiesSQLSelectQuery : SQLSelectQuery
	{
		public Cndn post_office_or_city_id = new Cndn("post_office_or_city_id", typeof(Int32));
		public Cndn district_id = new Cndn("district_id", typeof(Int32));
		public Cndn post_office_or_city_cd = new Cndn("post_office_or_city_cd", typeof(String));
		public Cndn post_office_or_city_nm = new Cndn("post_office_or_city_nm", typeof(String));
		public Cndn std_code = new Cndn("std_code", typeof(String));
		public Cndn effective_from = new Cndn("effective_from", typeof(DateTime));
		public Cndn effective_till = new Cndn("effective_till", typeof(DateTime));
		public Cndn txn_ts = new Cndn("txn_ts", typeof(Byte[]));
		public Post_offices_or_citiesSQLSelectQuery()
		{
			SqlObjectName = "Post_offices_or_cities";

			lst.Add(post_office_or_city_id);
			lst.Add(district_id);
			lst.Add(post_office_or_city_cd);
			lst.Add(post_office_or_city_nm);
			lst.Add(std_code);
			lst.Add(effective_from);
			lst.Add(effective_till);
			lst.Add(txn_ts);
		}
	}
	
	
	public class Remarks_typesSQLSelectQuery : SQLSelectQuery
	{
		public Cndn remarks_type = new Cndn("remarks_type", typeof(String));
		public Cndn remarks_type_sq = new Cndn("remarks_type_sq", typeof(Int16));
		public Cndn remarks = new Cndn("remarks", typeof(String));
		public Cndn effective_from = new Cndn("effective_from", typeof(DateTime));
		public Cndn effective_till = new Cndn("effective_till", typeof(DateTime));
		public Remarks_typesSQLSelectQuery()
		{
			SqlObjectName = "Remarks_types";

			lst.Add(remarks_type);
			lst.Add(remarks_type_sq);
			lst.Add(remarks);
			lst.Add(effective_from);
			lst.Add(effective_till);
		}
	}
	
	
	public class ResponsibilitiesSQLSelectQuery : SQLSelectQuery
	{
		public Cndn responsibility = new Cndn("responsibility", typeof(String));
		public Cndn responsibility_sq = new Cndn("responsibility_sq", typeof(Int16));
		public Cndn remarks = new Cndn("remarks", typeof(String));
		public Cndn effective_from = new Cndn("effective_from", typeof(DateTime));
		public Cndn effective_till = new Cndn("effective_till", typeof(DateTime));
		public Cndn txn_ts = new Cndn("txn_ts", typeof(Byte[]));
		public ResponsibilitiesSQLSelectQuery()
		{
			SqlObjectName = "Responsibilities";

			lst.Add(responsibility);
			lst.Add(responsibility_sq);
			lst.Add(remarks);
			lst.Add(effective_from);
			lst.Add(effective_till);
			lst.Add(txn_ts);
		}
	}
	
	
	public class Satsang_centre_functionariesSQLSelectQuery : SQLSelectQuery
	{
		public Cndn centre_functionary_id = new Cndn("centre_functionary_id", typeof(Int16));
		public Cndn satsang_centre_id = new Cndn("satsang_centre_id", typeof(Int32));
		public Cndn centre_functionary = new Cndn("centre_functionary", typeof(String));
		public Cndn functionary_nm = new Cndn("functionary_nm", typeof(String));
		public Cndn is_current = new Cndn("is_current", typeof(String));
		public Cndn telephones = new Cndn("telephones", typeof(String));
		public Cndn email_addresses = new Cndn("email_addresses", typeof(String));
		public Cndn effective_from = new Cndn("effective_from", typeof(DateTime));
		public Cndn effective_till = new Cndn("effective_till", typeof(DateTime));
		public Satsang_centre_functionariesSQLSelectQuery()
		{
			SqlObjectName = "Satsang_centre_functionaries";

			lst.Add(centre_functionary_id);
			lst.Add(satsang_centre_id);
			lst.Add(centre_functionary);
			lst.Add(functionary_nm);
			lst.Add(is_current);
			lst.Add(telephones);
			lst.Add(email_addresses);
			lst.Add(effective_from);
			lst.Add(effective_till);
		}
	}
	
	
	public class Satsang_centres_detailsSQLSelectQuery : SQLSelectQuery
	{
		public Cndn satsang_centre_id = new Cndn("satsang_centre_id", typeof(Int32));
		public Cndn is_main_centre = new Cndn("is_main_centre", typeof(String));
		public Cndn centre_nm = new Cndn("centre_nm", typeof(String));
		public Cndn centre_alphabet = new Cndn("centre_alphabet", typeof(String));
		public Cndn centre_cd = new Cndn("centre_cd", typeof(String));
		public Cndn reports_to_centre_id = new Cndn("reports_to_centre_id", typeof(Int32));
		public Cndn colour_id = new Cndn("colour_id", typeof(Int16));
		public Cndn remarks = new Cndn("remarks", typeof(String));
		public Cndn secretary_signature = new Cndn("secretary_signature", typeof(Byte[]));
		public Satsang_centres_detailsSQLSelectQuery()
		{
			SqlObjectName = "Satsang_centres_details";

			lst.Add(satsang_centre_id);
			lst.Add(is_main_centre);
			lst.Add(centre_nm);
			lst.Add(centre_alphabet);
			lst.Add(centre_cd);
			lst.Add(reports_to_centre_id);
			lst.Add(colour_id);
			lst.Add(remarks);
			lst.Add(secretary_signature);
		}
	}
	
	
	public class Satsang_centres_seedsSQLSelectQuery : SQLSelectQuery
	{
		public Cndn satsang_centre_id = new Cndn("satsang_centre_id", typeof(Int32));
		public Cndn object_id = new Cndn("object_id", typeof(String));
		public Cndn min_value = new Cndn("min_value", typeof(Int32));
		public Cndn max_value = new Cndn("max_value", typeof(Int32));
		public Cndn seed_value = new Cndn("seed_value", typeof(Int32));
		public Cndn is_zone = new Cndn("is_zone", typeof(String));
		public Satsang_centres_seedsSQLSelectQuery()
		{
			SqlObjectName = "Satsang_centres_seeds";

			lst.Add(satsang_centre_id);
			lst.Add(object_id);
			lst.Add(min_value);
			lst.Add(max_value);
			lst.Add(seed_value);
			lst.Add(is_zone);
		}
	}
	
	
	public class Scanned_badge_file_audit_logsSQLSelectQuery : SQLSelectQuery
	{
		public Cndn scanning_job_id = new Cndn("scanning_job_id", typeof(Int32));
		public Cndn filepath = new Cndn("filepath", typeof(String));
		public Cndn controlling_dt = new Cndn("controlling_dt", typeof(DateTime));
		public Cndn import_username = new Cndn("import_username", typeof(String));
		public Cndn process_dt = new Cndn("process_dt", typeof(DateTime));
		public Cndn process_username = new Cndn("process_username", typeof(String));
		public Scanned_badge_file_audit_logsSQLSelectQuery()
		{
			SqlObjectName = "Scanned_badge_file_audit_logs";

			lst.Add(scanning_job_id);
			lst.Add(filepath);
			lst.Add(controlling_dt);
			lst.Add(import_username);
			lst.Add(process_dt);
			lst.Add(process_username);
		}
	}
	
	
	public class Scanned_badgesSQLSelectQuery : SQLSelectQuery
	{
		public Cndn scanning_sub_job_id = new Cndn("scanning_sub_job_id", typeof(Int16));
		public Cndn controlling_dt = new Cndn("controlling_dt", typeof(DateTime));
		public Cndn satsang_centre_id = new Cndn("satsang_centre_id", typeof(Int32));
		public Cndn sewadar_grno = new Cndn("sewadar_grno", typeof(String));
		public Cndn scanned_dtm = new Cndn("scanned_dtm", typeof(DateTime));
		public Scanned_badgesSQLSelectQuery()
		{
			SqlObjectName = "Scanned_badges";

			lst.Add(scanning_sub_job_id);
			lst.Add(controlling_dt);
			lst.Add(satsang_centre_id);
			lst.Add(sewadar_grno);
			lst.Add(scanned_dtm);
		}
	}
	
	
	public class Scanned_badges_storeSQLSelectQuery : SQLSelectQuery
	{
		public Cndn scanning_sub_job_id = new Cndn("scanning_sub_job_id", typeof(Int16));
		public Cndn controlling_dt = new Cndn("controlling_dt", typeof(DateTime));
		public Cndn satsang_centre_id = new Cndn("satsang_centre_id", typeof(Int32));
		public Cndn sewadar_grno = new Cndn("sewadar_grno", typeof(String));
		public Cndn scanned_dtm = new Cndn("scanned_dtm", typeof(DateTime));
		public Cndn Remarks = new Cndn("Remarks", typeof(String));
		public Scanned_badges_storeSQLSelectQuery()
		{
			SqlObjectName = "Scanned_badges_store";

			lst.Add(scanning_sub_job_id);
			lst.Add(controlling_dt);
			lst.Add(satsang_centre_id);
			lst.Add(sewadar_grno);
			lst.Add(scanned_dtm);
			lst.Add(Remarks);
		}
	}
	
	
	public class Scanned_fingerprintsSQLSelectQuery : SQLSelectQuery
	{
		public Cndn controlling_id = new Cndn("controlling_id", typeof(Int32));
		public Cndn sewadar_id = new Cndn("sewadar_id", typeof(Int32));
		public Cndn scanned_dtm = new Cndn("scanned_dtm", typeof(DateTime));
		public Cndn satsang_centre_id = new Cndn("satsang_centre_id", typeof(Int32));
		public Cndn sewadar_grno = new Cndn("sewadar_grno", typeof(String));
		public Cndn remarks = new Cndn("remarks", typeof(String));
		public Scanned_fingerprintsSQLSelectQuery()
		{
			SqlObjectName = "Scanned_fingerprints";

			lst.Add(controlling_id);
			lst.Add(sewadar_id);
			lst.Add(scanned_dtm);
			lst.Add(satsang_centre_id);
			lst.Add(sewadar_grno);
			lst.Add(remarks);
		}
	}
	
	
	public class Scanned_fingerprints_storeSQLSelectQuery : SQLSelectQuery
	{
		public Cndn controlling_id = new Cndn("controlling_id", typeof(Int32));
		public Cndn sewadar_id = new Cndn("sewadar_id", typeof(Int32));
		public Cndn scanned_dtm = new Cndn("scanned_dtm", typeof(DateTime));
		public Cndn satsang_centre_id = new Cndn("satsang_centre_id", typeof(Int32));
		public Cndn sewadar_grno = new Cndn("sewadar_grno", typeof(String));
		public Cndn sewa_shift = new Cndn("sewa_shift", typeof(String));
		public Cndn is_start = new Cndn("is_start", typeof(Boolean));
		public Scanned_fingerprints_storeSQLSelectQuery()
		{
			SqlObjectName = "Scanned_fingerprints_store";

			lst.Add(controlling_id);
			lst.Add(sewadar_id);
			lst.Add(scanned_dtm);
			lst.Add(satsang_centre_id);
			lst.Add(sewadar_grno);
			lst.Add(sewa_shift);
			lst.Add(is_start);
		}
	}
	
	
	public class Scanning_job_typesSQLSelectQuery : SQLSelectQuery
	{
		public Cndn scanning_job_type_cd = new Cndn("scanning_job_type_cd", typeof(String));
		public Cndn remarks = new Cndn("remarks", typeof(String));
		public Cndn is_date_wise = new Cndn("is_date_wise", typeof(String));
		public Cndn has_sub_jobs = new Cndn("has_sub_jobs", typeof(String));
		public Cndn status_system_info_cd = new Cndn("status_system_info_cd", typeof(String));
		public Cndn procedure_nm = new Cndn("procedure_nm", typeof(String));
		public Cndn cnt_procedure_nm = new Cndn("cnt_procedure_nm", typeof(String));
		public Cndn effective_from = new Cndn("effective_from", typeof(DateTime));
		public Cndn effective_till = new Cndn("effective_till", typeof(DateTime));
		public Cndn check_in_sewadar_list = new Cndn("check_in_sewadar_list", typeof(String));
		public Scanning_job_typesSQLSelectQuery()
		{
			SqlObjectName = "Scanning_job_types";

			lst.Add(scanning_job_type_cd);
			lst.Add(remarks);
			lst.Add(is_date_wise);
			lst.Add(has_sub_jobs);
			lst.Add(status_system_info_cd);
			lst.Add(procedure_nm);
			lst.Add(cnt_procedure_nm);
			lst.Add(effective_from);
			lst.Add(effective_till);
			lst.Add(check_in_sewadar_list);
		}
	}
	
	
	public class Scanning_jobsSQLSelectQuery : SQLSelectQuery
	{
		public Cndn scanning_job_id = new Cndn("scanning_job_id", typeof(Int16));
		public Cndn satsang_centre_id = new Cndn("satsang_centre_id", typeof(Int32));
		public Cndn scanning_job_nm = new Cndn("scanning_job_nm", typeof(String));
		public Cndn scanning_job_type_cd = new Cndn("scanning_job_type_cd", typeof(String));
		public Cndn remarks = new Cndn("remarks", typeof(String));
		public Cndn effective_from = new Cndn("effective_from", typeof(DateTime));
		public Cndn effective_till = new Cndn("effective_till", typeof(DateTime));
		public Cndn sewadar_list_id = new Cndn("sewadar_list_id", typeof(Int32));
		public Cndn sewa_id = new Cndn("sewa_id", typeof(Int32));
		public Cndn is_deleting_allowed = new Cndn("is_deleting_allowed", typeof(String));
		public Cndn status_system_info_cd = new Cndn("status_system_info_cd", typeof(String));
		public Cndn last_transfer_dtm = new Cndn("last_transfer_dtm", typeof(DateTime));
		public Cndn total_processed_cnt = new Cndn("total_processed_cnt", typeof(Int32));
		public Cndn is_closed = new Cndn("is_closed", typeof(String));
		public Cndn is_concluded = new Cndn("is_concluded", typeof(String));
		public Cndn txn_ts = new Cndn("txn_ts", typeof(Byte[]));
		public Scanning_jobsSQLSelectQuery()
		{
			SqlObjectName = "Scanning_jobs";

			lst.Add(scanning_job_id);
			lst.Add(satsang_centre_id);
			lst.Add(scanning_job_nm);
			lst.Add(scanning_job_type_cd);
			lst.Add(remarks);
			lst.Add(effective_from);
			lst.Add(effective_till);
			lst.Add(sewadar_list_id);
			lst.Add(sewa_id);
			lst.Add(is_deleting_allowed);
			lst.Add(status_system_info_cd);
			lst.Add(last_transfer_dtm);
			lst.Add(total_processed_cnt);
			lst.Add(is_closed);
			lst.Add(is_concluded);
			lst.Add(txn_ts);
		}
	}
	
	
	public class Scanning_jobs_controlling_datesSQLSelectQuery : SQLSelectQuery
	{
		public Cndn scanning_job_id = new Cndn("scanning_job_id", typeof(Int16));
		public Cndn controlling_dt = new Cndn("controlling_dt", typeof(DateTime));
		public Cndn last_transfer_dtm = new Cndn("last_transfer_dtm", typeof(DateTime));
		public Cndn total_processed_cnt = new Cndn("total_processed_cnt", typeof(Int16));
		public Cndn is_closed = new Cndn("is_closed", typeof(String));
		public Cndn txn_ts = new Cndn("txn_ts", typeof(Byte[]));
		public Scanning_jobs_controlling_datesSQLSelectQuery()
		{
			SqlObjectName = "Scanning_jobs_controlling_dates";

			lst.Add(scanning_job_id);
			lst.Add(controlling_dt);
			lst.Add(last_transfer_dtm);
			lst.Add(total_processed_cnt);
			lst.Add(is_closed);
			lst.Add(txn_ts);
		}
	}
	
	
	public class Scanning_jobs_periodsSQLSelectQuery : SQLSelectQuery
	{
		public Cndn scanning_job_id = new Cndn("scanning_job_id", typeof(Int16));
		public Cndn effective_from = new Cndn("effective_from", typeof(DateTime));
		public Cndn effective_till = new Cndn("effective_till", typeof(DateTime));
		public Scanning_jobs_periodsSQLSelectQuery()
		{
			SqlObjectName = "Scanning_jobs_periods";

			lst.Add(scanning_job_id);
			lst.Add(effective_from);
			lst.Add(effective_till);
		}
	}
	
	
	public class Scanning_jobs_sewa_teamsSQLSelectQuery : SQLSelectQuery
	{
		public Cndn scanning_job_id = new Cndn("scanning_job_id", typeof(Int16));
		public Cndn satsang_centre_id = new Cndn("satsang_centre_id", typeof(Int32));
		public Cndn sewa_team_id = new Cndn("sewa_team_id", typeof(Int32));
		public Scanning_jobs_sewa_teamsSQLSelectQuery()
		{
			SqlObjectName = "Scanning_jobs_sewa_teams";

			lst.Add(scanning_job_id);
			lst.Add(satsang_centre_id);
			lst.Add(sewa_team_id);
		}
	}
	
	
	public class Scanning_sub_jobsSQLSelectQuery : SQLSelectQuery
	{
		public Cndn scanning_sub_job_id = new Cndn("scanning_sub_job_id", typeof(Int16));
		public Cndn scanning_job_id = new Cndn("scanning_job_id", typeof(Int16));
		public Cndn scanning_sub_job_nm = new Cndn("scanning_sub_job_nm", typeof(String));
		public Cndn scanning_sub_job_sq = new Cndn("scanning_sub_job_sq", typeof(Int16));
		public Scanning_sub_jobsSQLSelectQuery()
		{
			SqlObjectName = "Scanning_sub_jobs";

			lst.Add(scanning_sub_job_id);
			lst.Add(scanning_job_id);
			lst.Add(scanning_sub_job_nm);
			lst.Add(scanning_sub_job_sq);
		}
	}
	
	
	public class Scanning_sub_jobs_valid_combinationsSQLSelectQuery : SQLSelectQuery
	{
		public Cndn scanning_job_id = new Cndn("scanning_job_id", typeof(Int16));
		public Cndn scanning_job_valid_sq = new Cndn("scanning_job_valid_sq", typeof(Int16));
		public Cndn valid_combination_sub_job_ids = new Cndn("valid_combination_sub_job_ids", typeof(String));
		public Scanning_sub_jobs_valid_combinationsSQLSelectQuery()
		{
			SqlObjectName = "Scanning_sub_jobs_valid_combinations";

			lst.Add(scanning_job_id);
			lst.Add(scanning_job_valid_sq);
			lst.Add(valid_combination_sub_job_ids);
		}
	}
	
	
	public class Scanning_sub_jobs_validationsSQLSelectQuery : SQLSelectQuery
	{
		public Cndn recorded_sub_job_id = new Cndn("recorded_sub_job_id", typeof(Int16));
		public Cndn recording_sub_job_id = new Cndn("recording_sub_job_id", typeof(Int16));
		public Cndn validating_action = new Cndn("validating_action", typeof(String));
		public Scanning_sub_jobs_validationsSQLSelectQuery()
		{
			SqlObjectName = "Scanning_sub_jobs_validations";

			lst.Add(recorded_sub_job_id);
			lst.Add(recording_sub_job_id);
			lst.Add(validating_action);
		}
	}
	
	
	public class Scanning_validating_actionsSQLSelectQuery : SQLSelectQuery
	{
		public Cndn scanning_validating_action = new Cndn("scanning_validating_action", typeof(String));
		public Cndn remarks = new Cndn("remarks", typeof(String));
		public Cndn effective_from = new Cndn("effective_from", typeof(DateTime));
		public Cndn effective_till = new Cndn("effective_till", typeof(DateTime));
		public Scanning_validating_actionsSQLSelectQuery()
		{
			SqlObjectName = "Scanning_validating_actions";

			lst.Add(scanning_validating_action);
			lst.Add(remarks);
			lst.Add(effective_from);
			lst.Add(effective_till);
		}
	}
	
	
	public class Sequence_controlling_informationSQLSelectQuery : SQLSelectQuery
	{
		public Cndn satsang_centre_id = new Cndn("satsang_centre_id", typeof(Int32));
		public Cndn sequence_id = new Cndn("sequence_id", typeof(String));
		public Cndn sewa_id = new Cndn("sewa_id", typeof(Int32));
		public Cndn last_no = new Cndn("last_no", typeof(Int32));
		public Sequence_controlling_informationSQLSelectQuery()
		{
			SqlObjectName = "Sequence_controlling_information";

			lst.Add(satsang_centre_id);
			lst.Add(sequence_id);
			lst.Add(sewa_id);
			lst.Add(last_no);
		}
	}
	
	
	public class Sewa_exemptionsSQLSelectQuery : SQLSelectQuery
	{
		public Cndn sewa_exemption_id = new Cndn("sewa_exemption_id", typeof(Int16));
		public Cndn sewa_exemption_nm = new Cndn("sewa_exemption_nm", typeof(String));
		public Cndn sewa_exemption_description = new Cndn("sewa_exemption_description", typeof(String));
		public Cndn sewa_exemption_type = new Cndn("sewa_exemption_type", typeof(String));
		public Cndn sewa_applicability = new Cndn("sewa_applicability", typeof(String));
		public Cndn is_computed = new Cndn("is_computed", typeof(String));
		public Cndn effective_from = new Cndn("effective_from", typeof(DateTime));
		public Cndn effective_till = new Cndn("effective_till", typeof(DateTime));
		public Cndn txn_ts = new Cndn("txn_ts", typeof(Byte[]));
		public Sewa_exemptionsSQLSelectQuery()
		{
			SqlObjectName = "Sewa_exemptions";

			lst.Add(sewa_exemption_id);
			lst.Add(sewa_exemption_nm);
			lst.Add(sewa_exemption_description);
			lst.Add(sewa_exemption_type);
			lst.Add(sewa_applicability);
			lst.Add(is_computed);
			lst.Add(effective_from);
			lst.Add(effective_till);
			lst.Add(txn_ts);
		}
	}
	
	
	public class Sewa_exemptions_applicable_sewasSQLSelectQuery : SQLSelectQuery
	{
		public Cndn sewa_exemption_id = new Cndn("sewa_exemption_id", typeof(Int16));
		public Cndn sewa_id = new Cndn("sewa_id", typeof(Int32));
		public Cndn exemption_days = new Cndn("exemption_days", typeof(Decimal));
		public Sewa_exemptions_applicable_sewasSQLSelectQuery()
		{
			SqlObjectName = "Sewa_exemptions_applicable_sewas";

			lst.Add(sewa_exemption_id);
			lst.Add(sewa_id);
			lst.Add(exemption_days);
		}
	}
	
	
	public class Sewa_frequenciesSQLSelectQuery : SQLSelectQuery
	{
		public Cndn sewa_frequency = new Cndn("sewa_frequency", typeof(String));
		public Cndn remarks = new Cndn("remarks", typeof(String));
		public Cndn effective_from = new Cndn("effective_from", typeof(DateTime));
		public Cndn effective_till = new Cndn("effective_till", typeof(DateTime));
		public Sewa_frequenciesSQLSelectQuery()
		{
			SqlObjectName = "Sewa_frequencies";

			lst.Add(sewa_frequency);
			lst.Add(remarks);
			lst.Add(effective_from);
			lst.Add(effective_till);
		}
	}
	
	
	public class Sewa_shiftsSQLSelectQuery : SQLSelectQuery
	{
		public Cndn sewa_shift = new Cndn("sewa_shift", typeof(String));
		public Cndn sewa_shift_sq = new Cndn("sewa_shift_sq", typeof(Int16));
		public Cndn remarks = new Cndn("remarks", typeof(String));
		public Cndn effective_from = new Cndn("effective_from", typeof(DateTime));
		public Cndn effective_till = new Cndn("effective_till", typeof(DateTime));
		public Sewa_shiftsSQLSelectQuery()
		{
			SqlObjectName = "Sewa_shifts";

			lst.Add(sewa_shift);
			lst.Add(sewa_shift_sq);
			lst.Add(remarks);
			lst.Add(effective_from);
			lst.Add(effective_till);
		}
	}
	
	
	public class Sewa_shifts_valid_combinationsSQLSelectQuery : SQLSelectQuery
	{
		public Cndn sewa_id = new Cndn("sewa_id", typeof(Int32));
		public Cndn recorded_sewa_shift = new Cndn("recorded_sewa_shift", typeof(String));
		public Cndn recording_sewa_shift = new Cndn("recording_sewa_shift", typeof(String));
		public Sewa_shifts_valid_combinationsSQLSelectQuery()
		{
			SqlObjectName = "Sewa_shifts_valid_combinations";

			lst.Add(sewa_id);
			lst.Add(recorded_sewa_shift);
			lst.Add(recording_sewa_shift);
		}
	}
	
	
	public class Sewa_team_wise_sewadarsSQLSelectQuery : SQLSelectQuery
	{
		public Cndn sewa_team_id = new Cndn("sewa_team_id", typeof(Int32));
		public Cndn serial_id = new Cndn("serial_id", typeof(Int32));
		public Cndn satsang_centre_id = new Cndn("satsang_centre_id", typeof(Int32));
		public Cndn sewadar_grno = new Cndn("sewadar_grno", typeof(String));
		public Cndn transfer_in_dt = new Cndn("transfer_in_dt", typeof(DateTime));
		public Cndn transfer_out_dt = new Cndn("transfer_out_dt", typeof(DateTime));
		public Sewa_team_wise_sewadarsSQLSelectQuery()
		{
			SqlObjectName = "Sewa_team_wise_sewadars";

			lst.Add(sewa_team_id);
			lst.Add(serial_id);
			lst.Add(satsang_centre_id);
			lst.Add(sewadar_grno);
			lst.Add(transfer_in_dt);
			lst.Add(transfer_out_dt);
		}
	}
	
	
	public class Sewa_teamsSQLSelectQuery : SQLSelectQuery
	{
		public Cndn sewa_team_id = new Cndn("sewa_team_id", typeof(Int32));
		public Cndn sewa_team_nm = new Cndn("sewa_team_nm", typeof(String));
		public Cndn team_description = new Cndn("team_description", typeof(String));
		public Cndn sewa_id = new Cndn("sewa_id", typeof(Int32));
		public Cndn acceptance_ts = new Cndn("acceptance_ts", typeof(DateTime));
		public Cndn txn_ts = new Cndn("txn_ts", typeof(Byte[]));
		public Sewa_teamsSQLSelectQuery()
		{
			SqlObjectName = "Sewa_teams";

			lst.Add(sewa_team_id);
			lst.Add(sewa_team_nm);
			lst.Add(team_description);
			lst.Add(sewa_id);
			lst.Add(acceptance_ts);
			lst.Add(txn_ts);
		}
	}
	
	
	public class Sewa_teams_txn_tsSQLSelectQuery : SQLSelectQuery
	{
		public Cndn sewa_team_id = new Cndn("sewa_team_id", typeof(Int32));
		public Cndn attendance_dt = new Cndn("attendance_dt", typeof(DateTime));
		public Cndn txn_ts = new Cndn("txn_ts", typeof(Byte[]));
		public Sewa_teams_txn_tsSQLSelectQuery()
		{
			SqlObjectName = "Sewa_teams_txn_ts";

			lst.Add(sewa_team_id);
			lst.Add(attendance_dt);
			lst.Add(txn_ts);
		}
	}
	
	
	public class Sewadar_application_other_disabilitiesSQLSelectQuery : SQLSelectQuery
	{
		public Cndn sewadar_application_id = new Cndn("sewadar_application_id", typeof(Int32));
		public Cndn medical_disability_id = new Cndn("medical_disability_id", typeof(Int16));
		public Cndn medical_disability_sq = new Cndn("medical_disability_sq", typeof(Int16));
		public Sewadar_application_other_disabilitiesSQLSelectQuery()
		{
			SqlObjectName = "Sewadar_application_other_disabilities";

			lst.Add(sewadar_application_id);
			lst.Add(medical_disability_id);
			lst.Add(medical_disability_sq);
		}
	}
	
	
	public class Sewadar_application_qualificationsSQLSelectQuery : SQLSelectQuery
	{
		public Cndn sewadar_application_id = new Cndn("sewadar_application_id", typeof(Int32));
		public Cndn qualification_sq = new Cndn("qualification_sq", typeof(Int16));
		public Cndn qualification_id = new Cndn("qualification_id", typeof(Int16));
		public Cndn qlfctn_subject_id = new Cndn("qlfctn_subject_id", typeof(Int16));
		public Sewadar_application_qualificationsSQLSelectQuery()
		{
			SqlObjectName = "Sewadar_application_qualifications";

			lst.Add(sewadar_application_id);
			lst.Add(qualification_sq);
			lst.Add(qualification_id);
			lst.Add(qlfctn_subject_id);
		}
	}
	
	
	public class Sewadar_application_skillsSQLSelectQuery : SQLSelectQuery
	{
		public Cndn sewadar_application_id = new Cndn("sewadar_application_id", typeof(Int32));
		public Cndn skill_id = new Cndn("skill_id", typeof(Int16));
		public Cndn skill_sq = new Cndn("skill_sq", typeof(Int16));
		public Sewadar_application_skillsSQLSelectQuery()
		{
			SqlObjectName = "Sewadar_application_skills";

			lst.Add(sewadar_application_id);
			lst.Add(skill_id);
			lst.Add(skill_sq);
		}
	}
	
	
	public class Sewadar_applicationsSQLSelectQuery : SQLSelectQuery
	{
		public Cndn application_id = new Cndn("application_id", typeof(Int32));
		public Cndn application_centre_id = new Cndn("application_centre_id", typeof(Int32));
		public Cndn application_dt = new Cndn("application_dt", typeof(DateTime));
		public Cndn application_status = new Cndn("application_status", typeof(String));
		public Cndn application_status_dtm = new Cndn("application_status_dtm", typeof(DateTime));
		public Cndn first_nm = new Cndn("first_nm", typeof(String));
		public Cndn middle_nm = new Cndn("middle_nm", typeof(String));
		public Cndn last_nm = new Cndn("last_nm", typeof(String));
		public Cndn gender = new Cndn("gender", typeof(String));
		public Cndn birth_dtm = new Cndn("birth_dtm", typeof(DateTime));
		public Cndn is_married = new Cndn("is_married", typeof(String));
		public Cndn initiation_dt = new Cndn("initiation_dt", typeof(DateTime));
		public Cndn initiation_place_id = new Cndn("initiation_place_id", typeof(Int16));
		public Cndn initiation_by = new Cndn("initiation_by", typeof(Byte));
		public Cndn address_line_1 = new Cndn("address_line_1", typeof(String));
		public Cndn address_line_2 = new Cndn("address_line_2", typeof(String));
		public Cndn post_office_or_city_id = new Cndn("post_office_or_city_id", typeof(Int32));
		public Cndn pin_or_zip_code = new Cndn("pin_or_zip_code", typeof(String));
		public Cndn address_proof = new Cndn("address_proof", typeof(String));
		public Cndn other_address_proof_id = new Cndn("other_address_proof_id", typeof(Int16));
		public Cndn telephone_mobile = new Cndn("telephone_mobile", typeof(String));
		public Cndn telephone_residence = new Cndn("telephone_residence", typeof(String));
		public Cndn telephone_office = new Cndn("telephone_office", typeof(String));
		public Cndn occupation = new Cndn("occupation", typeof(String));
		public Cndn attends_weekly_satsang = new Cndn("attends_weekly_satsang", typeof(String));
		public Cndn weekly_satsang_centre_id = new Cndn("weekly_satsang_centre_id", typeof(Int32));
		public Cndn has_hypertension = new Cndn("has_hypertension", typeof(String));
		public Cndn is_diabetic = new Cndn("is_diabetic", typeof(String));
		public Cndn has_skin_problem = new Cndn("has_skin_problem", typeof(String));
		public Cndn has_epillepsy = new Cndn("has_epillepsy", typeof(String));
		public Cndn photo_id = new Cndn("photo_id", typeof(String));
		public Cndn photo_dt = new Cndn("photo_dt", typeof(DateTime));
		public Cndn appointment_dt = new Cndn("appointment_dt", typeof(DateTime));
		public Cndn is_outstation_sewadar = new Cndn("is_outstation_sewadar", typeof(String));
		public Cndn department_id = new Cndn("department_id", typeof(Int16));
		public Cndn sub_department_id = new Cndn("sub_department_id", typeof(Int16));
		public Cndn old_grno = new Cndn("old_grno", typeof(String));
		public Cndn reference_1_sewadar_id = new Cndn("reference_1_sewadar_id", typeof(Int32));
		public Cndn reference_1_grno = new Cndn("reference_1_grno", typeof(String));
		public Cndn reference_1_relationship = new Cndn("reference_1_relationship", typeof(Int16));
		public Cndn reference_1_nm = new Cndn("reference_1_nm", typeof(String));
		public Cndn reference_1_centre_id = new Cndn("reference_1_centre_id", typeof(Int32));
		public Cndn reference_1_department = new Cndn("reference_1_department", typeof(String));
		public Cndn reference_2_sewadar_id = new Cndn("reference_2_sewadar_id", typeof(Int32));
		public Cndn reference_2_grno = new Cndn("reference_2_grno", typeof(String));
		public Cndn reference_2_relationship = new Cndn("reference_2_relationship", typeof(Int16));
		public Cndn reference_2_nm = new Cndn("reference_2_nm", typeof(String));
		public Cndn reference_2_centre_id = new Cndn("reference_2_centre_id", typeof(Int32));
		public Cndn reference_2_department = new Cndn("reference_2_department", typeof(String));
		public Cndn security_approver_id = new Cndn("security_approver_id", typeof(Int32));
		public Cndn security_approver_centre_id = new Cndn("security_approver_centre_id", typeof(Int32));
		public Cndn security_approver_grno = new Cndn("security_approver_grno", typeof(String));
		public Cndn security_approver_nm = new Cndn("security_approver_nm", typeof(String));
		public Cndn sewa_samiti_approver_id = new Cndn("sewa_samiti_approver_id", typeof(Int32));
		public Cndn sewa_samiti_approver_centre_id = new Cndn("sewa_samiti_approver_centre_id", typeof(Int32));
		public Cndn sewa_samiti_approver_grno = new Cndn("sewa_samiti_approver_grno", typeof(String));
		public Cndn sewa_samiti_approver_nm = new Cndn("sewa_samiti_approver_nm", typeof(String));
		public Cndn area_secretary_id = new Cndn("area_secretary_id", typeof(Int16));
		public Cndn area_secretary_centre_id = new Cndn("area_secretary_centre_id", typeof(Int32));
		public Cndn area_secretary_grno = new Cndn("area_secretary_grno", typeof(String));
		public Cndn area_secretary_nm = new Cndn("area_secretary_nm", typeof(String));
		public Cndn secretary_id = new Cndn("secretary_id", typeof(Int16));
		public Cndn secretary_centre_id = new Cndn("secretary_centre_id", typeof(Int32));
		public Cndn secretary_grno = new Cndn("secretary_grno", typeof(String));
		public Cndn secretary_nm = new Cndn("secretary_nm", typeof(String));
		public Cndn sponsorer_id = new Cndn("sponsorer_id", typeof(Int32));
		public Cndn sponsorer_centre_id = new Cndn("sponsorer_centre_id", typeof(Int32));
		public Cndn sponsorer_grno = new Cndn("sponsorer_grno", typeof(String));
		public Cndn sponsorer_nm = new Cndn("sponsorer_nm", typeof(String));
		public Cndn sponsorer_department = new Cndn("sponsorer_department", typeof(String));
		public Cndn remarks = new Cndn("remarks", typeof(String));
		public Cndn reason = new Cndn("reason", typeof(String));
		public Cndn registered_sewadar_grno = new Cndn("registered_sewadar_grno", typeof(String));
		public Cndn registered_sewadar_id = new Cndn("registered_sewadar_id", typeof(Int32));
		public Cndn txn_ts = new Cndn("txn_ts", typeof(Byte[]));
		public Sewadar_applicationsSQLSelectQuery()
		{
			SqlObjectName = "Sewadar_applications";

			lst.Add(application_id);
			lst.Add(application_centre_id);
			lst.Add(application_dt);
			lst.Add(application_status);
			lst.Add(application_status_dtm);
			lst.Add(first_nm);
			lst.Add(middle_nm);
			lst.Add(last_nm);
			lst.Add(gender);
			lst.Add(birth_dtm);
			lst.Add(is_married);
			lst.Add(initiation_dt);
			lst.Add(initiation_place_id);
			lst.Add(initiation_by);
			lst.Add(address_line_1);
			lst.Add(address_line_2);
			lst.Add(post_office_or_city_id);
			lst.Add(pin_or_zip_code);
			lst.Add(address_proof);
			lst.Add(other_address_proof_id);
			lst.Add(telephone_mobile);
			lst.Add(telephone_residence);
			lst.Add(telephone_office);
			lst.Add(occupation);
			lst.Add(attends_weekly_satsang);
			lst.Add(weekly_satsang_centre_id);
			lst.Add(has_hypertension);
			lst.Add(is_diabetic);
			lst.Add(has_skin_problem);
			lst.Add(has_epillepsy);
			lst.Add(photo_id);
			lst.Add(photo_dt);
			lst.Add(appointment_dt);
			lst.Add(is_outstation_sewadar);
			lst.Add(department_id);
			lst.Add(sub_department_id);
			lst.Add(old_grno);
			lst.Add(reference_1_sewadar_id);
			lst.Add(reference_1_grno);
			lst.Add(reference_1_relationship);
			lst.Add(reference_1_nm);
			lst.Add(reference_1_centre_id);
			lst.Add(reference_1_department);
			lst.Add(reference_2_sewadar_id);
			lst.Add(reference_2_grno);
			lst.Add(reference_2_relationship);
			lst.Add(reference_2_nm);
			lst.Add(reference_2_centre_id);
			lst.Add(reference_2_department);
			lst.Add(security_approver_id);
			lst.Add(security_approver_centre_id);
			lst.Add(security_approver_grno);
			lst.Add(security_approver_nm);
			lst.Add(sewa_samiti_approver_id);
			lst.Add(sewa_samiti_approver_centre_id);
			lst.Add(sewa_samiti_approver_grno);
			lst.Add(sewa_samiti_approver_nm);
			lst.Add(area_secretary_id);
			lst.Add(area_secretary_centre_id);
			lst.Add(area_secretary_grno);
			lst.Add(area_secretary_nm);
			lst.Add(secretary_id);
			lst.Add(secretary_centre_id);
			lst.Add(secretary_grno);
			lst.Add(secretary_nm);
			lst.Add(sponsorer_id);
			lst.Add(sponsorer_centre_id);
			lst.Add(sponsorer_grno);
			lst.Add(sponsorer_nm);
			lst.Add(sponsorer_department);
			lst.Add(remarks);
			lst.Add(reason);
			lst.Add(registered_sewadar_grno);
			lst.Add(registered_sewadar_id);
			lst.Add(txn_ts);
		}
	}
	
	
	public class Sewadar_list_usesSQLSelectQuery : SQLSelectQuery
	{
		public Cndn sewadar_list_use = new Cndn("sewadar_list_use", typeof(String));
		public Cndn sewadar_list_use_sq = new Cndn("sewadar_list_use_sq", typeof(Int16));
		public Cndn remarks = new Cndn("remarks", typeof(String));
		public Cndn effective_from = new Cndn("effective_from", typeof(DateTime));
		public Cndn effective_till = new Cndn("effective_till", typeof(DateTime));
		public Sewadar_list_usesSQLSelectQuery()
		{
			SqlObjectName = "Sewadar_list_uses";

			lst.Add(sewadar_list_use);
			lst.Add(sewadar_list_use_sq);
			lst.Add(remarks);
			lst.Add(effective_from);
			lst.Add(effective_till);
		}
	}
	
	
	public class Sewadar_statusSQLSelectQuery : SQLSelectQuery
	{
		public Cndn sewadar_status_cd = new Cndn("sewadar_status_cd", typeof(String));
		public Cndn sewadar_status_nm = new Cndn("sewadar_status_nm", typeof(String));
		public Cndn is_global = new Cndn("is_global", typeof(String));
		public Cndn is_multiple = new Cndn("is_multiple", typeof(String));
		public Cndn remarks = new Cndn("remarks", typeof(String));
		public Cndn effective_from = new Cndn("effective_from", typeof(DateTime));
		public Cndn effective_till = new Cndn("effective_till", typeof(DateTime));
		public Sewadar_statusSQLSelectQuery()
		{
			SqlObjectName = "Sewadar_status";

			lst.Add(sewadar_status_cd);
			lst.Add(sewadar_status_nm);
			lst.Add(is_global);
			lst.Add(is_multiple);
			lst.Add(remarks);
			lst.Add(effective_from);
			lst.Add(effective_till);
		}
	}
	
	
	public class Sewadar_status_valid_transitionsSQLSelectQuery : SQLSelectQuery
	{
		public Cndn old_sewadar_status_cd = new Cndn("old_sewadar_status_cd", typeof(String));
		public Cndn new_sewadar_status_cd = new Cndn("new_sewadar_status_cd", typeof(String));
		public Sewadar_status_valid_transitionsSQLSelectQuery()
		{
			SqlObjectName = "Sewadar_status_valid_transitions";

			lst.Add(old_sewadar_status_cd);
			lst.Add(new_sewadar_status_cd);
		}
	}
	
	
	public class Sewadar_wise_sewa_summariesSQLSelectQuery : SQLSelectQuery
	{
		public Cndn sewa_id = new Cndn("sewa_id", typeof(Int32));
		public Cndn satsang_centre_id = new Cndn("satsang_centre_id", typeof(Int32));
		public Cndn sewadar_grno = new Cndn("sewadar_grno", typeof(String));
		public Cndn present_cnt = new Cndn("present_cnt", typeof(Decimal));
		public Cndn exempt_cnt = new Cndn("exempt_cnt", typeof(Decimal));
		public Cndn leave_cnt = new Cndn("leave_cnt", typeof(Decimal));
		public Cndn absent_cnt = new Cndn("absent_cnt", typeof(Decimal));
		public Cndn is_system_recorded = new Cndn("is_system_recorded", typeof(String));
		public Sewadar_wise_sewa_summariesSQLSelectQuery()
		{
			SqlObjectName = "Sewadar_wise_sewa_summaries";

			lst.Add(sewa_id);
			lst.Add(satsang_centre_id);
			lst.Add(sewadar_grno);
			lst.Add(present_cnt);
			lst.Add(exempt_cnt);
			lst.Add(leave_cnt);
			lst.Add(absent_cnt);
			lst.Add(is_system_recorded);
		}
	}
	
	
	public class SewadarsSQLSelectQuery : SQLSelectQuery
	{
		public Cndn sewadar_id = new Cndn("sewadar_id", typeof(Int32));
		public Cndn first_nm = new Cndn("first_nm", typeof(String));
		public Cndn middle_nm = new Cndn("middle_nm", typeof(String));
		public Cndn last_nm = new Cndn("last_nm", typeof(String));
		public Cndn gender = new Cndn("gender", typeof(String));
		public Cndn birth_dtm = new Cndn("birth_dtm", typeof(DateTime));
		public Cndn is_married = new Cndn("is_married", typeof(String));
		public Cndn initiation_dt = new Cndn("initiation_dt", typeof(DateTime));
		public Cndn initiation_place_id = new Cndn("initiation_place_id", typeof(Int16));
		public Cndn initiation_by = new Cndn("initiation_by", typeof(Byte));
		public Cndn current_satsang_centre_id = new Cndn("current_satsang_centre_id", typeof(Int32));
		public Cndn current_sewadar_grno = new Cndn("current_sewadar_grno", typeof(String));
		public Cndn global_sewadar_status_cd = new Cndn("global_sewadar_status_cd", typeof(String));
		public Cndn global_sewadar_status_dt = new Cndn("global_sewadar_status_dt", typeof(DateTime));
		public Cndn txn_ts = new Cndn("txn_ts", typeof(Byte[]));
		public SewadarsSQLSelectQuery()
		{
			SqlObjectName = "Sewadars";

			lst.Add(sewadar_id);
			lst.Add(first_nm);
			lst.Add(middle_nm);
			lst.Add(last_nm);
			lst.Add(gender);
			lst.Add(birth_dtm);
			lst.Add(is_married);
			lst.Add(initiation_dt);
			lst.Add(initiation_place_id);
			lst.Add(initiation_by);
			lst.Add(current_satsang_centre_id);
			lst.Add(current_sewadar_grno);
			lst.Add(global_sewadar_status_cd);
			lst.Add(global_sewadar_status_dt);
			lst.Add(txn_ts);
		}
	}
	
	
	public class Sewadars_addressesSQLSelectQuery : SQLSelectQuery
	{
		public Cndn sewadar_id = new Cndn("sewadar_id", typeof(Int32));
		public Cndn address_type = new Cndn("address_type", typeof(String));
		public Cndn address_line_1 = new Cndn("address_line_1", typeof(String));
		public Cndn address_line_2 = new Cndn("address_line_2", typeof(String));
		public Cndn post_office_or_city_id = new Cndn("post_office_or_city_id", typeof(Int32));
		public Cndn pin_or_zip_code = new Cndn("pin_or_zip_code", typeof(String));
		public Sewadars_addressesSQLSelectQuery()
		{
			SqlObjectName = "Sewadars_addresses";

			lst.Add(sewadar_id);
			lst.Add(address_type);
			lst.Add(address_line_1);
			lst.Add(address_line_2);
			lst.Add(post_office_or_city_id);
			lst.Add(pin_or_zip_code);
		}
	}
	
	
	public class Sewadars_attributesSQLSelectQuery : SQLSelectQuery
	{
		public Cndn satsang_centre_id = new Cndn("satsang_centre_id", typeof(Int32));
		public Cndn sewadar_grno = new Cndn("sewadar_grno", typeof(String));
		public Cndn attribute_id = new Cndn("attribute_id", typeof(Int16));
		public Cndn boolean_value = new Cndn("boolean_value", typeof(String));
		public Cndn date_value = new Cndn("date_value", typeof(DateTime));
		public Cndn int_value = new Cndn("int_value", typeof(Int32));
		public Cndn number_value = new Cndn("number_value", typeof(Decimal));
		public Cndn list_value = new Cndn("list_value", typeof(String));
		public Cndn string_value = new Cndn("string_value", typeof(String));
		public Cndn remarks = new Cndn("remarks", typeof(String));
		public Cndn effective_from = new Cndn("effective_from", typeof(DateTime));
		public Cndn effective_till = new Cndn("effective_till", typeof(DateTime));
		public Sewadars_attributesSQLSelectQuery()
		{
			SqlObjectName = "Sewadars_attributes";

			lst.Add(satsang_centre_id);
			lst.Add(sewadar_grno);
			lst.Add(attribute_id);
			lst.Add(boolean_value);
			lst.Add(date_value);
			lst.Add(int_value);
			lst.Add(number_value);
			lst.Add(list_value);
			lst.Add(string_value);
			lst.Add(remarks);
			lst.Add(effective_from);
			lst.Add(effective_till);
		}
	}
	
	
	public class Sewadars_badge_issues_and_returnsSQLSelectQuery : SQLSelectQuery
	{
		public Cndn satsang_centre_id = new Cndn("satsang_centre_id", typeof(Int32));
		public Cndn sewadar_grno = new Cndn("sewadar_grno", typeof(String));
		public Cndn sewa_id = new Cndn("sewa_id", typeof(Int32));
		public Cndn issue_dtm = new Cndn("issue_dtm", typeof(DateTime));
		public Cndn return_dtm = new Cndn("return_dtm", typeof(DateTime));
		public Cndn is_system_recorded = new Cndn("is_system_recorded", typeof(String));
		public Sewadars_badge_issues_and_returnsSQLSelectQuery()
		{
			SqlObjectName = "Sewadars_badge_issues_and_returns";

			lst.Add(satsang_centre_id);
			lst.Add(sewadar_grno);
			lst.Add(sewa_id);
			lst.Add(issue_dtm);
			lst.Add(return_dtm);
			lst.Add(is_system_recorded);
		}
	}
	
	
	public class Sewadars_badgesSQLSelectQuery : SQLSelectQuery
	{
		public Cndn badge_id = new Cndn("badge_id", typeof(Int32));
		public Cndn satsang_centre_id = new Cndn("satsang_centre_id", typeof(Int32));
		public Cndn sewadar_grno = new Cndn("sewadar_grno", typeof(String));
		public Cndn badge_template_id = new Cndn("badge_template_id", typeof(String));
		public Cndn department_id = new Cndn("department_id", typeof(Int16));
		public Cndn weekly_sewa_location_id = new Cndn("weekly_sewa_location_id", typeof(Int32));
		public Cndn is_front_printed = new Cndn("is_front_printed", typeof(String));
		public Cndn is_back_printed = new Cndn("is_back_printed", typeof(String));
		public Cndn expiry_dt = new Cndn("expiry_dt", typeof(DateTime));
		public Cndn printing_dtm = new Cndn("printing_dtm", typeof(DateTime));
		public Cndn remarks = new Cndn("remarks", typeof(String));
		public Sewadars_badgesSQLSelectQuery()
		{
			SqlObjectName = "Sewadars_badges";

			lst.Add(badge_id);
			lst.Add(satsang_centre_id);
			lst.Add(sewadar_grno);
			lst.Add(badge_template_id);
			lst.Add(department_id);
			lst.Add(weekly_sewa_location_id);
			lst.Add(is_front_printed);
			lst.Add(is_back_printed);
			lst.Add(expiry_dt);
			lst.Add(printing_dtm);
			lst.Add(remarks);
		}
	}
	
	
	public class Sewadars_detailsSQLSelectQuery : SQLSelectQuery
	{
		public Cndn sewadar_id = new Cndn("sewadar_id", typeof(Int32));
		public Cndn address_proof = new Cndn("address_proof", typeof(String));
		public Cndn other_address_proof_id = new Cndn("other_address_proof_id", typeof(Int16));
		public Cndn telephone_mobile = new Cndn("telephone_mobile", typeof(String));
		public Cndn telephone_residence = new Cndn("telephone_residence", typeof(String));
		public Cndn telephone_office = new Cndn("telephone_office", typeof(String));
		public Cndn occupation = new Cndn("occupation", typeof(String));
		public Cndn attends_weekly_satsang = new Cndn("attends_weekly_satsang", typeof(String));
		public Cndn weekly_satsang_centre_id = new Cndn("weekly_satsang_centre_id", typeof(Int32));
		public Cndn has_hypertension = new Cndn("has_hypertension", typeof(String));
		public Cndn is_diabetic = new Cndn("is_diabetic", typeof(String));
		public Cndn has_skin_problem = new Cndn("has_skin_problem", typeof(String));
		public Cndn has_epillepsy = new Cndn("has_epillepsy", typeof(String));
		public Cndn txn_ts = new Cndn("txn_ts", typeof(Byte[]));
		public Sewadars_detailsSQLSelectQuery()
		{
			SqlObjectName = "Sewadars_details";

			lst.Add(sewadar_id);
			lst.Add(address_proof);
			lst.Add(other_address_proof_id);
			lst.Add(telephone_mobile);
			lst.Add(telephone_residence);
			lst.Add(telephone_office);
			lst.Add(occupation);
			lst.Add(attends_weekly_satsang);
			lst.Add(weekly_satsang_centre_id);
			lst.Add(has_hypertension);
			lst.Add(is_diabetic);
			lst.Add(has_skin_problem);
			lst.Add(has_epillepsy);
			lst.Add(txn_ts);
		}
	}
	
	
	public class Sewadars_mergedSQLSelectQuery : SQLSelectQuery
	{
		public Cndn src_sewadar_id = new Cndn("src_sewadar_id", typeof(Int32));
		public Cndn dst_sewadar_id = new Cndn("dst_sewadar_id", typeof(Int32));
		public Cndn merged_dtm = new Cndn("merged_dtm", typeof(DateTime));
		public Sewadars_mergedSQLSelectQuery()
		{
			SqlObjectName = "Sewadars_merged";

			lst.Add(src_sewadar_id);
			lst.Add(dst_sewadar_id);
			lst.Add(merged_dtm);
		}
	}
	
	
	public class Sewadars_other_disabilitiesSQLSelectQuery : SQLSelectQuery
	{
		public Cndn sewadar_id = new Cndn("sewadar_id", typeof(Int32));
		public Cndn medical_disability_id = new Cndn("medical_disability_id", typeof(Int16));
		public Cndn medical_disability_sq = new Cndn("medical_disability_sq", typeof(Int16));
		public Sewadars_other_disabilitiesSQLSelectQuery()
		{
			SqlObjectName = "Sewadars_other_disabilities";

			lst.Add(sewadar_id);
			lst.Add(medical_disability_id);
			lst.Add(medical_disability_sq);
		}
	}
	
	
	public class Sewadars_particularsSQLSelectQuery : SQLSelectQuery
	{
		public Cndn satsang_centre_id = new Cndn("satsang_centre_id", typeof(Int32));
		public Cndn sewadar_grno = new Cndn("sewadar_grno", typeof(String));
		public Cndn txn_ts = new Cndn("txn_ts", typeof(Byte[]));
		public Sewadars_particularsSQLSelectQuery()
		{
			SqlObjectName = "Sewadars_particulars";

			lst.Add(satsang_centre_id);
			lst.Add(sewadar_grno);
			lst.Add(txn_ts);
		}
	}
	
	
	public class Sewadars_qualificationsSQLSelectQuery : SQLSelectQuery
	{
		public Cndn sewadar_id = new Cndn("sewadar_id", typeof(Int32));
		public Cndn qualification_sq = new Cndn("qualification_sq", typeof(Int16));
		public Cndn qualification_id = new Cndn("qualification_id", typeof(Int16));
		public Cndn qlfctn_subject_id = new Cndn("qlfctn_subject_id", typeof(Int16));
		public Sewadars_qualificationsSQLSelectQuery()
		{
			SqlObjectName = "Sewadars_qualifications";

			lst.Add(sewadar_id);
			lst.Add(qualification_sq);
			lst.Add(qualification_id);
			lst.Add(qlfctn_subject_id);
		}
	}
	
	
	public class Sewadars_registrationsSQLSelectQuery : SQLSelectQuery
	{
		public Cndn satsang_centre_id = new Cndn("satsang_centre_id", typeof(Int32));
		public Cndn sewadar_grno = new Cndn("sewadar_grno", typeof(String));
		public Cndn sewadar_id = new Cndn("sewadar_id", typeof(Int32));
		public Cndn appointment_dt = new Cndn("appointment_dt", typeof(DateTime));
		public Cndn is_outstation_sewadar = new Cndn("is_outstation_sewadar", typeof(String));
		public Cndn department_id = new Cndn("department_id", typeof(Int16));
		public Cndn sub_department_id = new Cndn("sub_department_id", typeof(Int16));
		public Cndn department_dt = new Cndn("department_dt", typeof(DateTime));
		public Cndn sewadar_status_cd = new Cndn("sewadar_status_cd", typeof(String));
		public Cndn sewadar_status_dtm = new Cndn("sewadar_status_dtm", typeof(DateTime));
		public Cndn responsibility = new Cndn("responsibility", typeof(String));
		public Cndn responsibility_dtm = new Cndn("responsibility_dtm", typeof(DateTime));
		public Cndn reference_1_sewadar_id = new Cndn("reference_1_sewadar_id", typeof(Int32));
		public Cndn reference_1_relationship = new Cndn("reference_1_relationship", typeof(Int16));
		public Cndn reference_1_nm = new Cndn("reference_1_nm", typeof(String));
		public Cndn reference_1_centre_id = new Cndn("reference_1_centre_id", typeof(Int32));
		public Cndn reference_1_department = new Cndn("reference_1_department", typeof(String));
		public Cndn reference_2_sewadar_id = new Cndn("reference_2_sewadar_id", typeof(Int32));
		public Cndn reference_2_relationship = new Cndn("reference_2_relationship", typeof(Int16));
		public Cndn reference_2_nm = new Cndn("reference_2_nm", typeof(String));
		public Cndn reference_2_centre_id = new Cndn("reference_2_centre_id", typeof(Int32));
		public Cndn reference_2_department = new Cndn("reference_2_department", typeof(String));
		public Cndn sponsorer_id = new Cndn("sponsorer_id", typeof(Int32));
		public Cndn area_secretary_id = new Cndn("area_secretary_id", typeof(Int16));
		public Cndn secretary_id = new Cndn("secretary_id", typeof(Int16));
		public Cndn security_approver_id = new Cndn("security_approver_id", typeof(Int32));
		public Cndn sewa_samiti_approver_id = new Cndn("sewa_samiti_approver_id", typeof(Int32));
		public Cndn weekly_sewa_location_id = new Cndn("weekly_sewa_location_id", typeof(Int32));
		public Cndn weekly_department_id = new Cndn("weekly_department_id", typeof(Int16));
		public Cndn sewadar_type = new Cndn("sewadar_type", typeof(String));
		public Cndn sewa_id = new Cndn("sewa_id", typeof(Int32));
		public Cndn location_district_id = new Cndn("location_district_id", typeof(Int32));
		public Cndn txn_ts = new Cndn("txn_ts", typeof(Byte[]));
		public Sewadars_registrationsSQLSelectQuery()
		{
			SqlObjectName = "Sewadars_registrations";

			lst.Add(satsang_centre_id);
			lst.Add(sewadar_grno);
			lst.Add(sewadar_id);
			lst.Add(appointment_dt);
			lst.Add(is_outstation_sewadar);
			lst.Add(department_id);
			lst.Add(sub_department_id);
			lst.Add(department_dt);
			lst.Add(sewadar_status_cd);
			lst.Add(sewadar_status_dtm);
			lst.Add(responsibility);
			lst.Add(responsibility_dtm);
			lst.Add(reference_1_sewadar_id);
			lst.Add(reference_1_relationship);
			lst.Add(reference_1_nm);
			lst.Add(reference_1_centre_id);
			lst.Add(reference_1_department);
			lst.Add(reference_2_sewadar_id);
			lst.Add(reference_2_relationship);
			lst.Add(reference_2_nm);
			lst.Add(reference_2_centre_id);
			lst.Add(reference_2_department);
			lst.Add(sponsorer_id);
			lst.Add(area_secretary_id);
			lst.Add(secretary_id);
			lst.Add(security_approver_id);
			lst.Add(sewa_samiti_approver_id);
			lst.Add(weekly_sewa_location_id);
			lst.Add(weekly_department_id);
			lst.Add(sewadar_type);
			lst.Add(sewa_id);
			lst.Add(location_district_id);
			lst.Add(txn_ts);
		}
	}
	
	
	public class Sewadars_remarksSQLSelectQuery : SQLSelectQuery
	{
		public Cndn sewadar_id = new Cndn("sewadar_id", typeof(Int32));
		public Cndn remarks_type = new Cndn("remarks_type", typeof(String));
		public Cndn remarks_sq = new Cndn("remarks_sq", typeof(Int16));
		public Cndn remarks = new Cndn("remarks", typeof(String));
		public Sewadars_remarksSQLSelectQuery()
		{
			SqlObjectName = "Sewadars_remarks";

			lst.Add(sewadar_id);
			lst.Add(remarks_type);
			lst.Add(remarks_sq);
			lst.Add(remarks);
		}
	}
	
	
	public class Sewadars_responsibility_changesSQLSelectQuery : SQLSelectQuery
	{
		public Cndn satsang_centre_id = new Cndn("satsang_centre_id", typeof(Int32));
		public Cndn sewadar_grno = new Cndn("sewadar_grno", typeof(String));
		public Cndn effective_dtm = new Cndn("effective_dtm", typeof(DateTime));
		public Cndn old_responsibility = new Cndn("old_responsibility", typeof(String));
		public Cndn responsibility = new Cndn("responsibility", typeof(String));
		public Sewadars_responsibility_changesSQLSelectQuery()
		{
			SqlObjectName = "Sewadars_responsibility_changes";

			lst.Add(satsang_centre_id);
			lst.Add(sewadar_grno);
			lst.Add(effective_dtm);
			lst.Add(old_responsibility);
			lst.Add(responsibility);
		}
	}
	
	
	public class Sewadars_satsang_centre_transfersSQLSelectQuery : SQLSelectQuery
	{
		public Cndn old_satsang_centre_id = new Cndn("old_satsang_centre_id", typeof(Int32));
		public Cndn old_sewadar_grno = new Cndn("old_sewadar_grno", typeof(String));
		public Cndn satsang_centre_id = new Cndn("satsang_centre_id", typeof(Int32));
		public Cndn sewadar_grno = new Cndn("sewadar_grno", typeof(String));
		public Cndn effective_dt = new Cndn("effective_dt", typeof(DateTime));
		public Cndn remarks = new Cndn("remarks", typeof(String));
		public Sewadars_satsang_centre_transfersSQLSelectQuery()
		{
			SqlObjectName = "Sewadars_satsang_centre_transfers";

			lst.Add(old_satsang_centre_id);
			lst.Add(old_sewadar_grno);
			lst.Add(satsang_centre_id);
			lst.Add(sewadar_grno);
			lst.Add(effective_dt);
			lst.Add(remarks);
		}
	}
	
	
	public class Sewadars_skillsSQLSelectQuery : SQLSelectQuery
	{
		public Cndn sewadar_id = new Cndn("sewadar_id", typeof(Int32));
		public Cndn skill_id = new Cndn("skill_id", typeof(Int16));
		public Cndn skill_sq = new Cndn("skill_sq", typeof(Int16));
		public Sewadars_skillsSQLSelectQuery()
		{
			SqlObjectName = "Sewadars_skills";

			lst.Add(sewadar_id);
			lst.Add(skill_id);
			lst.Add(skill_sq);
		}
	}
	
	
	public class Sewadars_status_changesSQLSelectQuery : SQLSelectQuery
	{
		public Cndn satsang_centre_id = new Cndn("satsang_centre_id", typeof(Int32));
		public Cndn sewadar_grno = new Cndn("sewadar_grno", typeof(String));
		public Cndn effective_dtm = new Cndn("effective_dtm", typeof(DateTime));
		public Cndn old_sewadar_status_cd = new Cndn("old_sewadar_status_cd", typeof(String));
		public Cndn sewadar_status_cd = new Cndn("sewadar_status_cd", typeof(String));
		public Sewadars_status_changesSQLSelectQuery()
		{
			SqlObjectName = "Sewadars_status_changes";

			lst.Add(satsang_centre_id);
			lst.Add(sewadar_grno);
			lst.Add(effective_dtm);
			lst.Add(old_sewadar_status_cd);
			lst.Add(sewadar_status_cd);
		}
	}
	
	
	public class Sewadars_transfersSQLSelectQuery : SQLSelectQuery
	{
		public Cndn satsang_centre_id = new Cndn("satsang_centre_id", typeof(Int32));
		public Cndn sewadar_grno = new Cndn("sewadar_grno", typeof(String));
		public Cndn effective_dt = new Cndn("effective_dt", typeof(DateTime));
		public Cndn old_department_id = new Cndn("old_department_id", typeof(Int16));
		public Cndn old_sub_department_id = new Cndn("old_sub_department_id", typeof(Int16));
		public Cndn department_id = new Cndn("department_id", typeof(Int16));
		public Cndn sub_department_id = new Cndn("sub_department_id", typeof(Int16));
		public Cndn remarks = new Cndn("remarks", typeof(String));
		public Cndn txn_ts = new Cndn("txn_ts", typeof(Byte[]));
		public Sewadars_transfersSQLSelectQuery()
		{
			SqlObjectName = "Sewadars_transfers";

			lst.Add(satsang_centre_id);
			lst.Add(sewadar_grno);
			lst.Add(effective_dt);
			lst.Add(old_department_id);
			lst.Add(old_sub_department_id);
			lst.Add(department_id);
			lst.Add(sub_department_id);
			lst.Add(remarks);
			lst.Add(txn_ts);
		}
	}
	
	
	public class Sewadars_txn_tsSQLSelectQuery : SQLSelectQuery
	{
		public Cndn satsang_centre_id = new Cndn("satsang_centre_id", typeof(Int32));
		public Cndn sewadar_grno = new Cndn("sewadar_grno", typeof(String));
		public Cndn sewa_id = new Cndn("sewa_id", typeof(Int32));
		public Cndn screen_id = new Cndn("screen_id", typeof(String));
		public Cndn txn_ts = new Cndn("txn_ts", typeof(Byte[]));
		public Sewadars_txn_tsSQLSelectQuery()
		{
			SqlObjectName = "Sewadars_txn_ts";

			lst.Add(satsang_centre_id);
			lst.Add(sewadar_grno);
			lst.Add(sewa_id);
			lst.Add(screen_id);
			lst.Add(txn_ts);
		}
	}
	
	
	public class SewasSQLSelectQuery : SQLSelectQuery
	{
		public Cndn sewa_id = new Cndn("sewa_id", typeof(Int32));
		public Cndn satsang_centre_id = new Cndn("satsang_centre_id", typeof(Int32));
		public Cndn sewa_cd = new Cndn("sewa_cd", typeof(String));
		public Cndn sewa_nm = new Cndn("sewa_nm", typeof(String));
		public Cndn start_dt = new Cndn("start_dt", typeof(DateTime));
		public Cndn finish_dt = new Cndn("finish_dt", typeof(DateTime));
		public Cndn is_satsang_programme = new Cndn("is_satsang_programme", typeof(String));
		public Cndn is_scanner_used = new Cndn("is_scanner_used", typeof(String));
		public Cndn is_leave_allowed = new Cndn("is_leave_allowed", typeof(String));
		public Cndn is_exemption_allowed = new Cndn("is_exemption_allowed", typeof(String));
		public Cndn is_default_sewa = new Cndn("is_default_sewa", typeof(String));
		public Cndn sewa_frequency = new Cndn("sewa_frequency", typeof(String));
		public Cndn attendance_unit = new Cndn("attendance_unit", typeof(String));
		public Cndn attendance_marking = new Cndn("attendance_marking", typeof(String));
		public Cndn min_sewa_duration = new Cndn("min_sewa_duration", typeof(Int16));
		public Cndn max_sewa_duration = new Cndn("max_sewa_duration", typeof(Int16));
		public Cndn gents_born_after = new Cndn("gents_born_after", typeof(DateTime));
		public Cndn ladies_born_after = new Cndn("ladies_born_after", typeof(DateTime));
		public Cndn referred_sewa_id = new Cndn("referred_sewa_id", typeof(Int32));
		public Cndn trainee_current_seq_id = new Cndn("trainee_current_seq_id", typeof(String));
		public Cndn open_sewadar_current_seq_id = new Cndn("open_sewadar_current_seq_id", typeof(String));
		public Cndn attendance_ts = new Cndn("attendance_ts", typeof(DateTime));
		public Cndn summary_ts = new Cndn("summary_ts", typeof(DateTime));
		public Cndn deleted_ts = new Cndn("deleted_ts", typeof(DateTime));
		public Cndn locked_dtm = new Cndn("locked_dtm", typeof(DateTime));
		public Cndn txn_ts = new Cndn("txn_ts", typeof(Byte[]));
		public SewasSQLSelectQuery()
		{
			SqlObjectName = "Sewas";

			lst.Add(sewa_id);
			lst.Add(satsang_centre_id);
			lst.Add(sewa_cd);
			lst.Add(sewa_nm);
			lst.Add(start_dt);
			lst.Add(finish_dt);
			lst.Add(is_satsang_programme);
			lst.Add(is_scanner_used);
			lst.Add(is_leave_allowed);
			lst.Add(is_exemption_allowed);
			lst.Add(is_default_sewa);
			lst.Add(sewa_frequency);
			lst.Add(attendance_unit);
			lst.Add(attendance_marking);
			lst.Add(min_sewa_duration);
			lst.Add(max_sewa_duration);
			lst.Add(gents_born_after);
			lst.Add(ladies_born_after);
			lst.Add(referred_sewa_id);
			lst.Add(trainee_current_seq_id);
			lst.Add(open_sewadar_current_seq_id);
			lst.Add(attendance_ts);
			lst.Add(summary_ts);
			lst.Add(deleted_ts);
			lst.Add(locked_dtm);
			lst.Add(txn_ts);
		}
	}
	
	
	public class Sewas_fp_controlling_datesSQLSelectQuery : SQLSelectQuery
	{
		public Cndn controlling_id = new Cndn("controlling_id", typeof(Int32));
		public Cndn sewa_id = new Cndn("sewa_id", typeof(Int32));
		public Cndn start_dt = new Cndn("start_dt", typeof(DateTime));
		public Cndn end_dt = new Cndn("end_dt", typeof(DateTime));
		public Cndn processing_dtm = new Cndn("processing_dtm", typeof(DateTime));
		public Cndn shift_1_cnt = new Cndn("shift_1_cnt", typeof(Int16));
		public Cndn shift_2_cnt = new Cndn("shift_2_cnt", typeof(Int16));
		public Cndn shift_3_cnt = new Cndn("shift_3_cnt", typeof(Int16));
		public Sewas_fp_controlling_datesSQLSelectQuery()
		{
			SqlObjectName = "Sewas_fp_controlling_dates";

			lst.Add(controlling_id);
			lst.Add(sewa_id);
			lst.Add(start_dt);
			lst.Add(end_dt);
			lst.Add(processing_dtm);
			lst.Add(shift_1_cnt);
			lst.Add(shift_2_cnt);
			lst.Add(shift_3_cnt);
		}
	}
	
	
	public class Sewas_periodsSQLSelectQuery : SQLSelectQuery
	{
		public Cndn sewa_id = new Cndn("sewa_id", typeof(Int32));
		public Cndn start_dt = new Cndn("start_dt", typeof(DateTime));
		public Cndn finish_dt = new Cndn("finish_dt", typeof(DateTime));
		public Sewas_periodsSQLSelectQuery()
		{
			SqlObjectName = "Sewas_periods";

			lst.Add(sewa_id);
			lst.Add(start_dt);
			lst.Add(finish_dt);
		}
	}
	
	
	public class Sewas_satsang_centresSQLSelectQuery : SQLSelectQuery
	{
		public Cndn sewa_id = new Cndn("sewa_id", typeof(Int32));
		public Cndn satsang_centre_id = new Cndn("satsang_centre_id", typeof(Int32));
		public Sewas_satsang_centresSQLSelectQuery()
		{
			SqlObjectName = "Sewas_satsang_centres";

			lst.Add(sewa_id);
			lst.Add(satsang_centre_id);
		}
	}
	
	
	public class Sewas_sewa_shiftsSQLSelectQuery : SQLSelectQuery
	{
		public Cndn sewa_id = new Cndn("sewa_id", typeof(Int32));
		public Cndn sewa_shift = new Cndn("sewa_shift", typeof(String));
		public Cndn sewa_shift_sq = new Cndn("sewa_shift_sq", typeof(Int16));
		public Cndn credit_cnt = new Cndn("credit_cnt", typeof(Int16));
		public Cndn unit_cnt = new Cndn("unit_cnt", typeof(Int16));
		public Sewas_sewa_shiftsSQLSelectQuery()
		{
			SqlObjectName = "Sewas_sewa_shifts";

			lst.Add(sewa_id);
			lst.Add(sewa_shift);
			lst.Add(sewa_shift_sq);
			lst.Add(credit_cnt);
			lst.Add(unit_cnt);
		}
	}
	
	
	public class SpeakersSQLSelectQuery : SQLSelectQuery
	{
		public Cndn speaker_id = new Cndn("speaker_id", typeof(Int32));
		public Cndn speaker_type = new Cndn("speaker_type", typeof(String));
		public Cndn satsang_centre_id = new Cndn("satsang_centre_id", typeof(Int32));
		public Cndn speaker_status = new Cndn("speaker_status", typeof(String));
		public Cndn speaker_status_dtm = new Cndn("speaker_status_dtm", typeof(DateTime));
		public Cndn txn_ts = new Cndn("txn_ts", typeof(Byte[]));
		public SpeakersSQLSelectQuery()
		{
			SqlObjectName = "Speakers";

			lst.Add(speaker_id);
			lst.Add(speaker_type);
			lst.Add(satsang_centre_id);
			lst.Add(speaker_status);
			lst.Add(speaker_status_dtm);
			lst.Add(txn_ts);
		}
	}
	
	
	public class Speakers_approvals_renewalsSQLSelectQuery : SQLSelectQuery
	{
		public Cndn speaker_id = new Cndn("speaker_id", typeof(Int32));
		public Cndn request_for_speaker_type = new Cndn("request_for_speaker_type", typeof(String));
		public Cndn is_approval = new Cndn("is_approval", typeof(Boolean));
		public Cndn approval_dt = new Cndn("approval_dt", typeof(DateTime));
		public Cndn request_dt = new Cndn("request_dt", typeof(DateTime));
		public Cndn reference_no = new Cndn("reference_no", typeof(String));
		public Cndn reference_dt = new Cndn("reference_dt", typeof(DateTime));
		public Cndn audition_remarks = new Cndn("audition_remarks", typeof(String));
		public Cndn review_remarks = new Cndn("review_remarks", typeof(String));
		public Cndn review_sewadar_id = new Cndn("review_sewadar_id", typeof(Int32));
		public Cndn review_non_sewadar_nm = new Cndn("review_non_sewadar_nm", typeof(String));
		public Cndn remarks = new Cndn("remarks", typeof(String));
		public Cndn txn_ts = new Cndn("txn_ts", typeof(Byte[]));
		public Speakers_approvals_renewalsSQLSelectQuery()
		{
			SqlObjectName = "Speakers_approvals_renewals";

			lst.Add(speaker_id);
			lst.Add(request_for_speaker_type);
			lst.Add(is_approval);
			lst.Add(approval_dt);
			lst.Add(request_dt);
			lst.Add(reference_no);
			lst.Add(reference_dt);
			lst.Add(audition_remarks);
			lst.Add(review_remarks);
			lst.Add(review_sewadar_id);
			lst.Add(review_non_sewadar_nm);
			lst.Add(remarks);
			lst.Add(txn_ts);
		}
	}
	
	
	public class Speakers_trainingsSQLSelectQuery : SQLSelectQuery
	{
		public Cndn speaker_id = new Cndn("speaker_id", typeof(Int32));
		public Cndn training_for_speaker_type = new Cndn("training_for_speaker_type", typeof(String));
		public Cndn training_dt = new Cndn("training_dt", typeof(DateTime));
		public Cndn is_attended = new Cndn("is_attended", typeof(Boolean));
		public Cndn request_dt = new Cndn("request_dt", typeof(DateTime));
		public Cndn reference_no = new Cndn("reference_no", typeof(String));
		public Cndn reference_dt = new Cndn("reference_dt", typeof(DateTime));
		public Cndn remarks = new Cndn("remarks", typeof(String));
		public Cndn txn_ts = new Cndn("txn_ts", typeof(Byte[]));
		public Speakers_trainingsSQLSelectQuery()
		{
			SqlObjectName = "Speakers_trainings";

			lst.Add(speaker_id);
			lst.Add(training_for_speaker_type);
			lst.Add(training_dt);
			lst.Add(is_attended);
			lst.Add(request_dt);
			lst.Add(reference_no);
			lst.Add(reference_dt);
			lst.Add(remarks);
			lst.Add(txn_ts);
		}
	}
	
	
	public class Sub_departmentsSQLSelectQuery : SQLSelectQuery
	{
		public Cndn sub_department_id = new Cndn("sub_department_id", typeof(Int16));
		public Cndn department_id = new Cndn("department_id", typeof(Int16));
		public Cndn sub_department_cd = new Cndn("sub_department_cd", typeof(String));
		public Cndn sub_department_nm = new Cndn("sub_department_nm", typeof(String));
		public Cndn remarks = new Cndn("remarks", typeof(String));
		public Sub_departmentsSQLSelectQuery()
		{
			SqlObjectName = "Sub_departments";

			lst.Add(sub_department_id);
			lst.Add(department_id);
			lst.Add(sub_department_cd);
			lst.Add(sub_department_nm);
			lst.Add(remarks);
		}
	}
	
	
	public class Sub_departments_satsang_centresSQLSelectQuery : SQLSelectQuery
	{
		public Cndn sub_department_id = new Cndn("sub_department_id", typeof(Int16));
		public Cndn satsang_centre_id = new Cndn("satsang_centre_id", typeof(Int32));
		public Cndn effective_from = new Cndn("effective_from", typeof(DateTime));
		public Cndn effective_till = new Cndn("effective_till", typeof(DateTime));
		public Sub_departments_satsang_centresSQLSelectQuery()
		{
			SqlObjectName = "Sub_departments_satsang_centres";

			lst.Add(sub_department_id);
			lst.Add(satsang_centre_id);
			lst.Add(effective_from);
			lst.Add(effective_till);
		}
	}
	
	
	public class System_information_codesSQLSelectQuery : SQLSelectQuery
	{
		public Cndn system_info_cd = new Cndn("system_info_cd", typeof(String));
		public Cndn system_info_nm = new Cndn("system_info_nm", typeof(String));
		public Cndn remarks = new Cndn("remarks", typeof(String));
		public System_information_codesSQLSelectQuery()
		{
			SqlObjectName = "System_information_codes";

			lst.Add(system_info_cd);
			lst.Add(system_info_nm);
			lst.Add(remarks);
		}
	}
	
	
	public class System_information_valuesSQLSelectQuery : SQLSelectQuery
	{
		public Cndn system_info_cd = new Cndn("system_info_cd", typeof(String));
		public Cndn system_info_value = new Cndn("system_info_value", typeof(String));
		public Cndn value_int = new Cndn("value_int", typeof(Int32));
		public Cndn value_varchar = new Cndn("value_varchar", typeof(String));
		public Cndn value_dt = new Cndn("value_dt", typeof(DateTime));
		public Cndn value_dtm = new Cndn("value_dtm", typeof(DateTime));
		public System_information_valuesSQLSelectQuery()
		{
			SqlObjectName = "System_information_values";

			lst.Add(system_info_cd);
			lst.Add(system_info_value);
			lst.Add(value_int);
			lst.Add(value_varchar);
			lst.Add(value_dt);
			lst.Add(value_dtm);
		}
	}
	
	
	public class Team_wise_daily_attendanceSQLSelectQuery : SQLSelectQuery
	{
		public Cndn sewa_team_id = new Cndn("sewa_team_id", typeof(Int32));
		public Cndn serial_id = new Cndn("serial_id", typeof(Int32));
		public Cndn attendance_dt = new Cndn("attendance_dt", typeof(DateTime));
		public Cndn attendance = new Cndn("attendance", typeof(String));
		public Cndn sewa_exemption_id = new Cndn("sewa_exemption_id", typeof(Int16));
		public Cndn is_scanned = new Cndn("is_scanned", typeof(String));
		public Team_wise_daily_attendanceSQLSelectQuery()
		{
			SqlObjectName = "Team_wise_daily_attendance";

			lst.Add(sewa_team_id);
			lst.Add(serial_id);
			lst.Add(attendance_dt);
			lst.Add(attendance);
			lst.Add(sewa_exemption_id);
			lst.Add(is_scanned);
		}
	}
	
	
	public class Tmp_bulk_registrationsSQLSelectQuery : SQLSelectQuery
	{
		public Cndn name = new Cndn("name", typeof(String));
		public Cndn gender = new Cndn("gender", typeof(String));
		public Cndn is_local_sewadar = new Cndn("is_local_sewadar", typeof(String));
		public Cndn photo_id = new Cndn("photo_id", typeof(String));
		public Cndn department_nm = new Cndn("department_nm", typeof(String));
		public Cndn sub_department_nm = new Cndn("sub_department_nm", typeof(String));
		public Cndn telephone_mobile = new Cndn("telephone_mobile", typeof(String));
		public Cndn birth_dtm = new Cndn("birth_dtm", typeof(DateTime));
		public Cndn occupation = new Cndn("occupation", typeof(String));
		public Cndn appointment_year = new Cndn("appointment_year", typeof(Int16));
		public Cndn old_grno = new Cndn("old_grno", typeof(String));
		public Cndn is_married = new Cndn("is_married", typeof(String));
		public Cndn is_initiated = new Cndn("is_initiated", typeof(String));
		public Cndn initiated_on = new Cndn("initiated_on", typeof(DateTime));
		public Cndn initiated_by = new Cndn("initiated_by", typeof(String));
		public Cndn initiation_place = new Cndn("initiation_place", typeof(String));
		public Cndn address_line_1 = new Cndn("address_line_1", typeof(String));
		public Cndn address_line_2 = new Cndn("address_line_2", typeof(String));
		public Cndn country_nm = new Cndn("country_nm", typeof(String));
		public Cndn state_nm = new Cndn("state_nm", typeof(String));
		public Cndn district_nm = new Cndn("district_nm", typeof(String));
		public Cndn post_office_nm = new Cndn("post_office_nm", typeof(String));
		public Cndn pin_or_zip_code = new Cndn("pin_or_zip_code", typeof(String));
		public Cndn telephone_residence = new Cndn("telephone_residence", typeof(String));
		public Cndn telephone_office = new Cndn("telephone_office", typeof(String));
		public Cndn skill = new Cndn("skill", typeof(String));
		public Cndn qualification = new Cndn("qualification", typeof(String));
		public Cndn qualification_subject = new Cndn("qualification_subject", typeof(String));
		public Cndn attends_weekly_satsang = new Cndn("attends_weekly_satsang", typeof(String));
		public Cndn weekly_satsang_centre = new Cndn("weekly_satsang_centre", typeof(String));
		public Cndn address_proof = new Cndn("address_proof", typeof(String));
		public Cndn other_address_proof = new Cndn("other_address_proof", typeof(String));
		public Cndn has_hypertension = new Cndn("has_hypertension", typeof(String));
		public Cndn is_diabetic = new Cndn("is_diabetic", typeof(String));
		public Cndn has_skin_problem = new Cndn("has_skin_problem", typeof(String));
		public Cndn has_epillepsy = new Cndn("has_epillepsy", typeof(String));
		public Cndn medical_disability = new Cndn("medical_disability", typeof(String));
		public Cndn reference_1_centre = new Cndn("reference_1_centre", typeof(String));
		public Cndn reference_1_grno = new Cndn("reference_1_grno", typeof(String));
		public Cndn reference_1_nm = new Cndn("reference_1_nm", typeof(String));
		public Cndn reference_1_relation = new Cndn("reference_1_relation", typeof(String));
		public Cndn reference_1_department = new Cndn("reference_1_department", typeof(String));
		public Cndn reference_2_centre = new Cndn("reference_2_centre", typeof(String));
		public Cndn reference_2_grno = new Cndn("reference_2_grno", typeof(String));
		public Cndn reference_2_nm = new Cndn("reference_2_nm", typeof(String));
		public Cndn reference_2_relation = new Cndn("reference_2_relation", typeof(String));
		public Cndn reference_2_department = new Cndn("reference_2_department", typeof(String));
		public Cndn sponsorer_centre = new Cndn("sponsorer_centre", typeof(String));
		public Cndn sponsorer_grno = new Cndn("sponsorer_grno", typeof(String));
		public Cndn security_centre = new Cndn("security_centre", typeof(String));
		public Cndn security_grno = new Cndn("security_grno", typeof(String));
		public Cndn area_secretary_centre = new Cndn("area_secretary_centre", typeof(String));
		public Cndn secretary_centre = new Cndn("secretary_centre", typeof(String));
		public Cndn first_nm = new Cndn("first_nm", typeof(String));
		public Cndn middle_nm = new Cndn("middle_nm", typeof(String));
		public Cndn last_nm = new Cndn("last_nm", typeof(String));
		public Cndn department_id = new Cndn("department_id", typeof(Int16));
		public Cndn sub_department_id = new Cndn("sub_department_id", typeof(Int16));
		public Cndn sewadar_id = new Cndn("sewadar_id", typeof(Int32));
		public Cndn initiated_by_id = new Cndn("initiated_by_id", typeof(Byte));
		public Cndn initiation_place_id = new Cndn("initiation_place_id", typeof(Int16));
		public Cndn post_office_or_city_id = new Cndn("post_office_or_city_id", typeof(Int32));
		public Cndn weekly_satsang_centre_id = new Cndn("weekly_satsang_centre_id", typeof(Int32));
		public Cndn other_address_proof_id = new Cndn("other_address_proof_id", typeof(Int16));
		public Cndn skill_id = new Cndn("skill_id", typeof(Int16));
		public Cndn qualification_id = new Cndn("qualification_id", typeof(Int16));
		public Cndn qualification_subject_id = new Cndn("qualification_subject_id", typeof(Int16));
		public Cndn medical_disability_id = new Cndn("medical_disability_id", typeof(Int16));
		public Cndn reference_1_sewadar_id = new Cndn("reference_1_sewadar_id", typeof(Int32));
		public Cndn reference_1_centre_id = new Cndn("reference_1_centre_id", typeof(Int32));
		public Cndn reference_1_relation_id = new Cndn("reference_1_relation_id", typeof(Int16));
		public Cndn reference_2_sewadar_id = new Cndn("reference_2_sewadar_id", typeof(Int32));
		public Cndn reference_2_centre_id = new Cndn("reference_2_centre_id", typeof(Int32));
		public Cndn reference_2_relation_id = new Cndn("reference_2_relation_id", typeof(Int16));
		public Cndn sponsorer_sewadar_id = new Cndn("sponsorer_sewadar_id", typeof(Int32));
		public Cndn security_sewadar_id = new Cndn("security_sewadar_id", typeof(Int32));
		public Cndn area_secretary_id = new Cndn("area_secretary_id", typeof(Int16));
		public Cndn secretary_id = new Cndn("secretary_id", typeof(Int16));
		public Tmp_bulk_registrationsSQLSelectQuery()
		{
			SqlObjectName = "Tmp_bulk_registrations";

			lst.Add(name);
			lst.Add(gender);
			lst.Add(is_local_sewadar);
			lst.Add(photo_id);
			lst.Add(department_nm);
			lst.Add(sub_department_nm);
			lst.Add(telephone_mobile);
			lst.Add(birth_dtm);
			lst.Add(occupation);
			lst.Add(appointment_year);
			lst.Add(old_grno);
			lst.Add(is_married);
			lst.Add(is_initiated);
			lst.Add(initiated_on);
			lst.Add(initiated_by);
			lst.Add(initiation_place);
			lst.Add(address_line_1);
			lst.Add(address_line_2);
			lst.Add(country_nm);
			lst.Add(state_nm);
			lst.Add(district_nm);
			lst.Add(post_office_nm);
			lst.Add(pin_or_zip_code);
			lst.Add(telephone_residence);
			lst.Add(telephone_office);
			lst.Add(skill);
			lst.Add(qualification);
			lst.Add(qualification_subject);
			lst.Add(attends_weekly_satsang);
			lst.Add(weekly_satsang_centre);
			lst.Add(address_proof);
			lst.Add(other_address_proof);
			lst.Add(has_hypertension);
			lst.Add(is_diabetic);
			lst.Add(has_skin_problem);
			lst.Add(has_epillepsy);
			lst.Add(medical_disability);
			lst.Add(reference_1_centre);
			lst.Add(reference_1_grno);
			lst.Add(reference_1_nm);
			lst.Add(reference_1_relation);
			lst.Add(reference_1_department);
			lst.Add(reference_2_centre);
			lst.Add(reference_2_grno);
			lst.Add(reference_2_nm);
			lst.Add(reference_2_relation);
			lst.Add(reference_2_department);
			lst.Add(sponsorer_centre);
			lst.Add(sponsorer_grno);
			lst.Add(security_centre);
			lst.Add(security_grno);
			lst.Add(area_secretary_centre);
			lst.Add(secretary_centre);
			lst.Add(first_nm);
			lst.Add(middle_nm);
			lst.Add(last_nm);
			lst.Add(department_id);
			lst.Add(sub_department_id);
			lst.Add(sewadar_id);
			lst.Add(initiated_by_id);
			lst.Add(initiation_place_id);
			lst.Add(post_office_or_city_id);
			lst.Add(weekly_satsang_centre_id);
			lst.Add(other_address_proof_id);
			lst.Add(skill_id);
			lst.Add(qualification_id);
			lst.Add(qualification_subject_id);
			lst.Add(medical_disability_id);
			lst.Add(reference_1_sewadar_id);
			lst.Add(reference_1_centre_id);
			lst.Add(reference_1_relation_id);
			lst.Add(reference_2_sewadar_id);
			lst.Add(reference_2_centre_id);
			lst.Add(reference_2_relation_id);
			lst.Add(sponsorer_sewadar_id);
			lst.Add(security_sewadar_id);
			lst.Add(area_secretary_id);
			lst.Add(secretary_id);
		}
	}
	
	
	public class Tmp_mgr_dept_sub_dept_mappingSQLSelectQuery : SQLSelectQuery
	{
		public Cndn sms_dept_name = new Cndn("sms_dept_name", typeof(String));
		public Cndn sms_sub_dept_name = new Cndn("sms_sub_dept_name", typeof(String));
		public Cndn zsm_dept_name = new Cndn("zsm_dept_name", typeof(String));
		public Cndn zsm_sub_dept_name = new Cndn("zsm_sub_dept_name", typeof(String));
		public Tmp_mgr_dept_sub_dept_mappingSQLSelectQuery()
		{
			SqlObjectName = "Tmp_mgr_dept_sub_dept_mapping";

			lst.Add(sms_dept_name);
			lst.Add(sms_sub_dept_name);
			lst.Add(zsm_dept_name);
			lst.Add(zsm_sub_dept_name);
		}
	}
	
	
	public class Tmp_mgr_district_mappingSQLSelectQuery : SQLSelectQuery
	{
		public Cndn country_id = new Cndn("country_id", typeof(String));
		public Cndn state_id = new Cndn("state_id", typeof(String));
		public Cndn district_id = new Cndn("district_id", typeof(String));
		public Cndn cdb_district_id = new Cndn("cdb_district_id", typeof(Int32));
		public Cndn cdb_district_nm = new Cndn("cdb_district_nm", typeof(String));
		public Tmp_mgr_district_mappingSQLSelectQuery()
		{
			SqlObjectName = "Tmp_mgr_district_mapping";

			lst.Add(country_id);
			lst.Add(state_id);
			lst.Add(district_id);
			lst.Add(cdb_district_id);
			lst.Add(cdb_district_nm);
		}
	}
	
	
	public class Tmp_mgr_dsd_mappingSQLSelectQuery : SQLSelectQuery
	{
		public Cndn sms_dept_id = new Cndn("sms_dept_id", typeof(String));
		public Cndn sms_sub_dept_id = new Cndn("sms_sub_dept_id", typeof(String));
		public Cndn zsm_dept_id = new Cndn("zsm_dept_id", typeof(Int32));
		public Cndn zsm_sub_dept_id = new Cndn("zsm_sub_dept_id", typeof(Int32));
		public Tmp_mgr_dsd_mappingSQLSelectQuery()
		{
			SqlObjectName = "Tmp_mgr_dsd_mapping";

			lst.Add(sms_dept_id);
			lst.Add(sms_sub_dept_id);
			lst.Add(zsm_dept_id);
			lst.Add(zsm_sub_dept_id);
		}
	}
	
	
	public class Tmp_mgr_exist_swdsSQLSelectQuery : SQLSelectQuery
	{
		public Cndn sms_grno = new Cndn("sms_grno", typeof(String));
		public Cndn zsm_grno = new Cndn("zsm_grno", typeof(String));
		public Cndn zsm_centre = new Cndn("zsm_centre", typeof(Int32));
		public Cndn zsm_swd_id = new Cndn("zsm_swd_id", typeof(Int32));
		public Cndn active = new Cndn("active", typeof(Boolean));
		public Tmp_mgr_exist_swdsSQLSelectQuery()
		{
			SqlObjectName = "Tmp_mgr_exist_swds";

			lst.Add(sms_grno);
			lst.Add(zsm_grno);
			lst.Add(zsm_centre);
			lst.Add(zsm_swd_id);
			lst.Add(active);
		}
	}
	
	
	public class Tmp_mgr_gender_mappingSQLSelectQuery : SQLSelectQuery
	{
		public Cndn sms_gender = new Cndn("sms_gender", typeof(String));
		public Cndn zsm_gender = new Cndn("zsm_gender", typeof(String));
		public Tmp_mgr_gender_mappingSQLSelectQuery()
		{
			SqlObjectName = "Tmp_mgr_gender_mapping";

			lst.Add(sms_gender);
			lst.Add(zsm_gender);
		}
	}
	
	
	public class Tmp_mgr_initiation_place_mappingSQLSelectQuery : SQLSelectQuery
	{
		public Cndn sms_initiation_place = new Cndn("sms_initiation_place", typeof(String));
		public Cndn cdb_initiation_place_nm = new Cndn("cdb_initiation_place_nm", typeof(String));
		public Tmp_mgr_initiation_place_mappingSQLSelectQuery()
		{
			SqlObjectName = "Tmp_mgr_initiation_place_mapping";

			lst.Add(sms_initiation_place);
			lst.Add(cdb_initiation_place_nm);
		}
	}
	
	
	public class Tmp_mgr_occupation_mappingSQLSelectQuery : SQLSelectQuery
	{
		public Cndn sms_occupation = new Cndn("sms_occupation", typeof(String));
		public Cndn zsm_occupation = new Cndn("zsm_occupation", typeof(String));
		public Tmp_mgr_occupation_mappingSQLSelectQuery()
		{
			SqlObjectName = "Tmp_mgr_occupation_mapping";

			lst.Add(sms_occupation);
			lst.Add(zsm_occupation);
		}
	}
	
	
	public class Tmp_mgr_po_mappingSQLSelectQuery : SQLSelectQuery
	{
		public Cndn country_id = new Cndn("country_id", typeof(String));
		public Cndn state_id = new Cndn("state_id", typeof(String));
		public Cndn district_id = new Cndn("district_id", typeof(String));
		public Cndn po_or_city_id = new Cndn("po_or_city_id", typeof(String));
		public Cndn zsm_post_office_or_city_id = new Cndn("zsm_post_office_or_city_id", typeof(Int32));
		public Tmp_mgr_po_mappingSQLSelectQuery()
		{
			SqlObjectName = "Tmp_mgr_po_mapping";

			lst.Add(country_id);
			lst.Add(state_id);
			lst.Add(district_id);
			lst.Add(po_or_city_id);
			lst.Add(zsm_post_office_or_city_id);
		}
	}
	
	
	public class Tmp_mgr_qualificationsSQLSelectQuery : SQLSelectQuery
	{
		public Cndn sms_qualification_nm = new Cndn("sms_qualification_nm", typeof(String));
		public Cndn cdb_qualification_nm = new Cndn("cdb_qualification_nm", typeof(String));
		public Tmp_mgr_qualificationsSQLSelectQuery()
		{
			SqlObjectName = "Tmp_mgr_qualifications";

			lst.Add(sms_qualification_nm);
			lst.Add(cdb_qualification_nm);
		}
	}
	
	
	public class Tmp_mgr_relation_mappingSQLSelectQuery : SQLSelectQuery
	{
		public Cndn sms_id = new Cndn("sms_id", typeof(String));
		public Cndn sms_nm = new Cndn("sms_nm", typeof(String));
		public Cndn cdb_nm = new Cndn("cdb_nm", typeof(String));
		public Tmp_mgr_relation_mappingSQLSelectQuery()
		{
			SqlObjectName = "Tmp_mgr_relation_mapping";

			lst.Add(sms_id);
			lst.Add(sms_nm);
			lst.Add(cdb_nm);
		}
	}
	
	
	public class Tmp_mgr_sewadar_status_mappingSQLSelectQuery : SQLSelectQuery
	{
		public Cndn sms_status = new Cndn("sms_status", typeof(String));
		public Cndn zsm_global_sewadar_status_nm = new Cndn("zsm_global_sewadar_status_nm", typeof(String));
		public Cndn zsm_sewadar_status_nm = new Cndn("zsm_sewadar_status_nm", typeof(String));
		public Tmp_mgr_sewadar_status_mappingSQLSelectQuery()
		{
			SqlObjectName = "Tmp_mgr_sewadar_status_mapping";

			lst.Add(sms_status);
			lst.Add(zsm_global_sewadar_status_nm);
			lst.Add(zsm_sewadar_status_nm);
		}
	}
	
	
	public class Tmp_mgr_sewadarsSQLSelectQuery : SQLSelectQuery
	{
		public Cndn id = new Cndn("id", typeof(Int32));
		public Cndn gender = new Cndn("gender", typeof(String));
		public Cndn first_nm = new Cndn("first_nm", typeof(String));
		public Cndn last_nm = new Cndn("last_nm", typeof(String));
		public Cndn birth_dt = new Cndn("birth_dt", typeof(DateTime));
		public Cndn sewadar_grno = new Cndn("sewadar_grno", typeof(String));
		public Cndn new_grno = new Cndn("new_grno", typeof(String));
		public Cndn status = new Cndn("status", typeof(String));
		public Cndn duplicate_type = new Cndn("duplicate_type", typeof(String));
		public Cndn duplicate_cnt = new Cndn("duplicate_cnt", typeof(Int32));
		public Cndn latest_status_dt = new Cndn("latest_status_dt", typeof(DateTime));
		public Tmp_mgr_sewadarsSQLSelectQuery()
		{
			SqlObjectName = "Tmp_mgr_sewadars";

			lst.Add(id);
			lst.Add(gender);
			lst.Add(first_nm);
			lst.Add(last_nm);
			lst.Add(birth_dt);
			lst.Add(sewadar_grno);
			lst.Add(new_grno);
			lst.Add(status);
			lst.Add(duplicate_type);
			lst.Add(duplicate_cnt);
			lst.Add(latest_status_dt);
		}
	}
	
	
	public class Tmp_mgr_specialisationsSQLSelectQuery : SQLSelectQuery
	{
		public Cndn sms_id = new Cndn("sms_id", typeof(String));
		public Cndn cdb_id = new Cndn("cdb_id", typeof(Int32));
		public Tmp_mgr_specialisationsSQLSelectQuery()
		{
			SqlObjectName = "Tmp_mgr_specialisations";

			lst.Add(sms_id);
			lst.Add(cdb_id);
		}
	}
	
	
	public class Tmp_sewasSQLSelectQuery : SQLSelectQuery
	{
		public Cndn system_sewa_id = new Cndn("system_sewa_id", typeof(Int32));
		public Cndn sewa_id = new Cndn("sewa_id", typeof(String));
		public Tmp_sewasSQLSelectQuery()
		{
			SqlObjectName = "Tmp_sewas";

			lst.Add(system_sewa_id);
			lst.Add(sewa_id);
		}
	}
	
	
	public class V_sewadarsSQLSelectQuery : SQLSelectQuery
	{
		public Cndn sewadar_id = new Cndn("sewadar_id", typeof(Int32));
		public Cndn first_nm = new Cndn("first_nm", typeof(String));
		public Cndn middle_nm = new Cndn("middle_nm", typeof(String));
		public Cndn last_nm = new Cndn("last_nm", typeof(String));
		public Cndn gender = new Cndn("gender", typeof(String));
		public Cndn birth_dtm = new Cndn("birth_dtm", typeof(DateTime));
		public Cndn initiation_dt = new Cndn("initiation_dt", typeof(DateTime));
		public Cndn global_sewadar_status_cd = new Cndn("global_sewadar_status_cd", typeof(String));
		public Cndn satsang_centre_id = new Cndn("satsang_centre_id", typeof(Int32));
		public Cndn sewadar_grno = new Cndn("sewadar_grno", typeof(String));
		public Cndn sewadar_type = new Cndn("sewadar_type", typeof(String));
		public Cndn appointment_dt = new Cndn("appointment_dt", typeof(DateTime));
		public Cndn is_outstation_sewadar = new Cndn("is_outstation_sewadar", typeof(String));
		public Cndn department_id = new Cndn("department_id", typeof(Int16));
		public Cndn sub_department_id = new Cndn("sub_department_id", typeof(Int16));
		public Cndn department_dt = new Cndn("department_dt", typeof(DateTime));
		public Cndn sewadar_status_cd = new Cndn("sewadar_status_cd", typeof(String));
		public Cndn sewadar_status_dtm = new Cndn("sewadar_status_dtm", typeof(DateTime));
		public Cndn department_nm = new Cndn("department_nm", typeof(String));
		public Cndn sub_department_nm = new Cndn("sub_department_nm", typeof(String));
		public V_sewadarsSQLSelectQuery()
		{
			SqlObjectName = "V_sewadars";
			SQLObjectType = SQLObjectTypes.View;

			lst.Add(sewadar_id);
			lst.Add(first_nm);
			lst.Add(middle_nm);
			lst.Add(last_nm);
			lst.Add(gender);
			lst.Add(birth_dtm);
			lst.Add(initiation_dt);
			lst.Add(global_sewadar_status_cd);
			lst.Add(satsang_centre_id);
			lst.Add(sewadar_grno);
			lst.Add(sewadar_type);
			lst.Add(appointment_dt);
			lst.Add(is_outstation_sewadar);
			lst.Add(department_id);
			lst.Add(sub_department_id);
			lst.Add(department_dt);
			lst.Add(sewadar_status_cd);
			lst.Add(sewadar_status_dtm);
			lst.Add(department_nm);
			lst.Add(sub_department_nm);
		}
	}
	
	
	public class ViewArbitraryDailyPresenceSQLSelectQuery : SQLSelectQuery
	{
		public Cndn sewa_id = new Cndn("sewa_id", typeof(Int32));
		public Cndn sewa_nm = new Cndn("sewa_nm", typeof(String));
		public Cndn satsang_centre_id = new Cndn("satsang_centre_id", typeof(Int32));
		public Cndn sewadar_grno = new Cndn("sewadar_grno", typeof(String));
		public Cndn presence_dt = new Cndn("presence_dt", typeof(DateTime));
		public Cndn is_scanned = new Cndn("is_scanned", typeof(String));
		public Cndn old_sewa_id = new Cndn("old_sewa_id", typeof(Int32));
		public Cndn old_satsang_centre_id = new Cndn("old_satsang_centre_id", typeof(Int32));
		public Cndn old_sewadar_grno = new Cndn("old_sewadar_grno", typeof(String));
		public Cndn old_presence_dt = new Cndn("old_presence_dt", typeof(DateTime));
		public Cndn centre_nm = new Cndn("centre_nm", typeof(String));
		public Cndn full_nm = new Cndn("full_nm", typeof(String));
		public Cndn sewadar_id = new Cndn("sewadar_id", typeof(Int32));
		public Cndn age = new Cndn("age", typeof(Int32));
		public Cndn gender = new Cndn("gender", typeof(String));
		public Cndn sewadar_status_nm = new Cndn("sewadar_status_nm", typeof(String));
		public Cndn sewadar_status_dtm = new Cndn("sewadar_status_dtm", typeof(DateTime));
		public Cndn department_nm = new Cndn("department_nm", typeof(String));
		public Cndn sub_department_nm = new Cndn("sub_department_nm", typeof(String));
		public Cndn department_dt = new Cndn("department_dt", typeof(DateTime));
		public Cndn finish_dt = new Cndn("finish_dt", typeof(DateTime));
		public Cndn start_dt = new Cndn("start_dt", typeof(DateTime));
		public Cndn screen_id = new Cndn("screen_id", typeof(String));
		public Cndn sewadar_txn_ts = new Cndn("sewadar_txn_ts", typeof(Byte[]));
		public ViewArbitraryDailyPresenceSQLSelectQuery()
		{
			SqlObjectName = "ViewArbitraryDailyPresence";
			SQLObjectType = SQLObjectTypes.View;

			lst.Add(sewa_id);
			lst.Add(sewa_nm);
			lst.Add(satsang_centre_id);
			lst.Add(sewadar_grno);
			lst.Add(presence_dt);
			lst.Add(is_scanned);
			lst.Add(old_sewa_id);
			lst.Add(old_satsang_centre_id);
			lst.Add(old_sewadar_grno);
			lst.Add(old_presence_dt);
			lst.Add(centre_nm);
			lst.Add(full_nm);
			lst.Add(sewadar_id);
			lst.Add(age);
			lst.Add(gender);
			lst.Add(sewadar_status_nm);
			lst.Add(sewadar_status_dtm);
			lst.Add(department_nm);
			lst.Add(sub_department_nm);
			lst.Add(department_dt);
			lst.Add(finish_dt);
			lst.Add(start_dt);
			lst.Add(screen_id);
			lst.Add(sewadar_txn_ts);
		}
	}
	
	
	public class ViewArbitraryShiftPresenceSQLSelectQuery : SQLSelectQuery
	{
		public Cndn sewa_id = new Cndn("sewa_id", typeof(Int32));
		public Cndn sewa_nm = new Cndn("sewa_nm", typeof(String));
		public Cndn satsang_centre_id = new Cndn("satsang_centre_id", typeof(Int32));
		public Cndn sewadar_grno = new Cndn("sewadar_grno", typeof(String));
		public Cndn presence_dt = new Cndn("presence_dt", typeof(DateTime));
		public Cndn is_scanned = new Cndn("is_scanned", typeof(String));
		public Cndn old_sewa_id = new Cndn("old_sewa_id", typeof(Int32));
		public Cndn old_satsang_centre_id = new Cndn("old_satsang_centre_id", typeof(Int32));
		public Cndn old_sewadar_grno = new Cndn("old_sewadar_grno", typeof(String));
		public Cndn sewa_shift = new Cndn("sewa_shift", typeof(String));
		public Cndn old_sewa_shift = new Cndn("old_sewa_shift", typeof(String));
		public Cndn old_presence_dt = new Cndn("old_presence_dt", typeof(DateTime));
		public Cndn centre_nm = new Cndn("centre_nm", typeof(String));
		public Cndn full_nm = new Cndn("full_nm", typeof(String));
		public Cndn sewadar_id = new Cndn("sewadar_id", typeof(Int32));
		public Cndn age = new Cndn("age", typeof(Int32));
		public Cndn gender = new Cndn("gender", typeof(String));
		public Cndn sewadar_status_nm = new Cndn("sewadar_status_nm", typeof(String));
		public Cndn sewadar_status_dtm = new Cndn("sewadar_status_dtm", typeof(DateTime));
		public Cndn department_nm = new Cndn("department_nm", typeof(String));
		public Cndn sub_department_nm = new Cndn("sub_department_nm", typeof(String));
		public Cndn department_dt = new Cndn("department_dt", typeof(DateTime));
		public Cndn finish_dt = new Cndn("finish_dt", typeof(DateTime));
		public Cndn start_dt = new Cndn("start_dt", typeof(DateTime));
		public Cndn screen_id = new Cndn("screen_id", typeof(String));
		public Cndn sewadar_txn_ts = new Cndn("sewadar_txn_ts", typeof(Byte[]));
		public ViewArbitraryShiftPresenceSQLSelectQuery()
		{
			SqlObjectName = "ViewArbitraryShiftPresence";
			SQLObjectType = SQLObjectTypes.View;

			lst.Add(sewa_id);
			lst.Add(sewa_nm);
			lst.Add(satsang_centre_id);
			lst.Add(sewadar_grno);
			lst.Add(presence_dt);
			lst.Add(is_scanned);
			lst.Add(old_sewa_id);
			lst.Add(old_satsang_centre_id);
			lst.Add(old_sewadar_grno);
			lst.Add(sewa_shift);
			lst.Add(old_sewa_shift);
			lst.Add(old_presence_dt);
			lst.Add(centre_nm);
			lst.Add(full_nm);
			lst.Add(sewadar_id);
			lst.Add(age);
			lst.Add(gender);
			lst.Add(sewadar_status_nm);
			lst.Add(sewadar_status_dtm);
			lst.Add(department_nm);
			lst.Add(sub_department_nm);
			lst.Add(department_dt);
			lst.Add(finish_dt);
			lst.Add(start_dt);
			lst.Add(screen_id);
			lst.Add(sewadar_txn_ts);
		}
	}
	
	
	public class ViewArbitrarySummarisedExemptionSQLSelectQuery : SQLSelectQuery
	{
		public Cndn sewa_id = new Cndn("sewa_id", typeof(Int32));
		public Cndn satsang_centre_id = new Cndn("satsang_centre_id", typeof(Int32));
		public Cndn sewadar_grno = new Cndn("sewadar_grno", typeof(String));
		public Cndn sewa_nm = new Cndn("sewa_nm", typeof(String));
		public Cndn sewa_exemption_id = new Cndn("sewa_exemption_id", typeof(Int16));
		public Cndn sewa_exemption_nm = new Cndn("sewa_exemption_nm", typeof(String));
		public Cndn exemption_days = new Cndn("exemption_days", typeof(Decimal));
		public Cndn old_sewa_id = new Cndn("old_sewa_id", typeof(Int32));
		public Cndn old_satsang_centre_id = new Cndn("old_satsang_centre_id", typeof(Int32));
		public Cndn old_sewadar_grno = new Cndn("old_sewadar_grno", typeof(String));
		public Cndn centre_nm = new Cndn("centre_nm", typeof(String));
		public Cndn full_nm = new Cndn("full_nm", typeof(String));
		public Cndn sewadar_id = new Cndn("sewadar_id", typeof(Int32));
		public Cndn age = new Cndn("age", typeof(Int32));
		public Cndn gender = new Cndn("gender", typeof(String));
		public Cndn sewadar_status_nm = new Cndn("sewadar_status_nm", typeof(String));
		public Cndn sewadar_status_dtm = new Cndn("sewadar_status_dtm", typeof(DateTime));
		public Cndn department_nm = new Cndn("department_nm", typeof(String));
		public Cndn sub_department_nm = new Cndn("sub_department_nm", typeof(String));
		public Cndn department_dt = new Cndn("department_dt", typeof(DateTime));
		public Cndn finish_dt = new Cndn("finish_dt", typeof(DateTime));
		public Cndn start_dt = new Cndn("start_dt", typeof(DateTime));
		public Cndn screen_id = new Cndn("screen_id", typeof(String));
		public Cndn sewadar_txn_ts = new Cndn("sewadar_txn_ts", typeof(Byte[]));
		public ViewArbitrarySummarisedExemptionSQLSelectQuery()
		{
			SqlObjectName = "ViewArbitrarySummarisedExemption";
			SQLObjectType = SQLObjectTypes.View;

			lst.Add(sewa_id);
			lst.Add(satsang_centre_id);
			lst.Add(sewadar_grno);
			lst.Add(sewa_nm);
			lst.Add(sewa_exemption_id);
			lst.Add(sewa_exemption_nm);
			lst.Add(exemption_days);
			lst.Add(old_sewa_id);
			lst.Add(old_satsang_centre_id);
			lst.Add(old_sewadar_grno);
			lst.Add(centre_nm);
			lst.Add(full_nm);
			lst.Add(sewadar_id);
			lst.Add(age);
			lst.Add(gender);
			lst.Add(sewadar_status_nm);
			lst.Add(sewadar_status_dtm);
			lst.Add(department_nm);
			lst.Add(sub_department_nm);
			lst.Add(department_dt);
			lst.Add(finish_dt);
			lst.Add(start_dt);
			lst.Add(screen_id);
			lst.Add(sewadar_txn_ts);
		}
	}
	
	
	public class ViewBadgeTemplatesSQLSelectQuery : SQLSelectQuery
	{
		public Cndn badge_template_id = new Cndn("badge_template_id", typeof(String));
		public Cndn badge_template_nm = new Cndn("badge_template_nm", typeof(String));
		public Cndn badge_shape = new Cndn("badge_shape", typeof(String));
		public Cndn information_type = new Cndn("information_type", typeof(String));
		public Cndn foreground_colour_control = new Cndn("foreground_colour_control", typeof(String));
		public Cndn foreground_colour_id = new Cndn("foreground_colour_id", typeof(Int16));
		public Cndn foreground_colour_nm = new Cndn("foreground_colour_nm", typeof(String));
		public Cndn background_colour_control = new Cndn("background_colour_control", typeof(String));
		public Cndn background_colour_id = new Cndn("background_colour_id", typeof(Int16));
		public Cndn background_colour_nm = new Cndn("background_colour_nm", typeof(String));
		public Cndn top_line_font_size = new Cndn("top_line_font_size", typeof(Byte));
		public Cndn top_line_part_1_type = new Cndn("top_line_part_1_type", typeof(String));
		public Cndn top_line_part_1_text = new Cndn("top_line_part_1_text", typeof(String));
		public Cndn top_line_parts_separator = new Cndn("top_line_parts_separator", typeof(String));
		public Cndn top_line_part_2_type = new Cndn("top_line_part_2_type", typeof(String));
		public Cndn top_line_part_2_text = new Cndn("top_line_part_2_text", typeof(String));
		public Cndn middle_line_font_size = new Cndn("middle_line_font_size", typeof(Byte));
		public Cndn middle_line_part_1_type = new Cndn("middle_line_part_1_type", typeof(String));
		public Cndn middle_line_part_1_text = new Cndn("middle_line_part_1_text", typeof(String));
		public Cndn middle_line_parts_separator = new Cndn("middle_line_parts_separator", typeof(String));
		public Cndn middle_line_part_2_type = new Cndn("middle_line_part_2_type", typeof(String));
		public Cndn middle_line_part_2_text = new Cndn("middle_line_part_2_text", typeof(String));
		public Cndn bottom_line_font_size = new Cndn("bottom_line_font_size", typeof(Byte));
		public Cndn bottom_line_part_1_type = new Cndn("bottom_line_part_1_type", typeof(String));
		public Cndn bottom_line_part_1_text = new Cndn("bottom_line_part_1_text", typeof(String));
		public Cndn bottom_line_parts_separator = new Cndn("bottom_line_parts_separator", typeof(String));
		public Cndn bottom_line_part_2_type = new Cndn("bottom_line_part_2_type", typeof(String));
		public Cndn bottom_line_part_2_text = new Cndn("bottom_line_part_2_text", typeof(String));
		public Cndn expiry_year = new Cndn("expiry_year", typeof(String));
		public Cndn report_file_nm_front = new Cndn("report_file_nm_front", typeof(String));
		public Cndn report_file_nm_back = new Cndn("report_file_nm_back", typeof(String));
		public Cndn procedure_nm_front = new Cndn("procedure_nm_front", typeof(String));
		public Cndn procedure_nm_back = new Cndn("procedure_nm_back", typeof(String));
		public Cndn are_outstation_sewadars_allowed = new Cndn("are_outstation_sewadars_allowed", typeof(String));
		public Cndn txn_ts = new Cndn("txn_ts", typeof(Byte[]));
		public ViewBadgeTemplatesSQLSelectQuery()
		{
			SqlObjectName = "ViewBadgeTemplates";
			SQLObjectType = SQLObjectTypes.View;

			lst.Add(badge_template_id);
			lst.Add(badge_template_nm);
			lst.Add(badge_shape);
			lst.Add(information_type);
			lst.Add(foreground_colour_control);
			lst.Add(foreground_colour_id);
			lst.Add(foreground_colour_nm);
			lst.Add(background_colour_control);
			lst.Add(background_colour_id);
			lst.Add(background_colour_nm);
			lst.Add(top_line_font_size);
			lst.Add(top_line_part_1_type);
			lst.Add(top_line_part_1_text);
			lst.Add(top_line_parts_separator);
			lst.Add(top_line_part_2_type);
			lst.Add(top_line_part_2_text);
			lst.Add(middle_line_font_size);
			lst.Add(middle_line_part_1_type);
			lst.Add(middle_line_part_1_text);
			lst.Add(middle_line_parts_separator);
			lst.Add(middle_line_part_2_type);
			lst.Add(middle_line_part_2_text);
			lst.Add(bottom_line_font_size);
			lst.Add(bottom_line_part_1_type);
			lst.Add(bottom_line_part_1_text);
			lst.Add(bottom_line_parts_separator);
			lst.Add(bottom_line_part_2_type);
			lst.Add(bottom_line_part_2_text);
			lst.Add(expiry_year);
			lst.Add(report_file_nm_front);
			lst.Add(report_file_nm_back);
			lst.Add(procedure_nm_front);
			lst.Add(procedure_nm_back);
			lst.Add(are_outstation_sewadars_allowed);
			lst.Add(txn_ts);
		}
	}
	
	
	public class ViewBasicSatsangCentreDetailsSQLSelectQuery : SQLSelectQuery
	{
		public Cndn satsang_centre_id = new Cndn("satsang_centre_id", typeof(Int32));
		public Cndn centre_cd = new Cndn("centre_cd", typeof(String));
		public Cndn centre_nm = new Cndn("centre_nm", typeof(String));
		public ViewBasicSatsangCentreDetailsSQLSelectQuery()
		{
			SqlObjectName = "ViewBasicSatsangCentreDetails";
			SQLObjectType = SQLObjectTypes.View;

			lst.Add(satsang_centre_id);
			lst.Add(centre_cd);
			lst.Add(centre_nm);
		}
	}
	
	
	public class ViewBasicSewadarsRegistrationInfoSQLSelectQuery : SQLSelectQuery
	{
		public Cndn sewadar_id = new Cndn("sewadar_id", typeof(Int32));
		public Cndn satsang_centre_id = new Cndn("satsang_centre_id", typeof(Int32));
		public Cndn centre_nm = new Cndn("centre_nm", typeof(String));
		public Cndn centre_cd = new Cndn("centre_cd", typeof(String));
		public Cndn weekly_sewa_location_id = new Cndn("weekly_sewa_location_id", typeof(Int32));
		public Cndn department_id = new Cndn("department_id", typeof(Int16));
		public Cndn department_nm = new Cndn("department_nm", typeof(String));
		public Cndn weekly_department_id = new Cndn("weekly_department_id", typeof(Int16));
		public Cndn sub_department_id = new Cndn("sub_department_id", typeof(Int16));
		public Cndn sub_department_nm = new Cndn("sub_department_nm", typeof(String));
		public Cndn department_dt = new Cndn("department_dt", typeof(DateTime));
		public Cndn appointment_dt = new Cndn("appointment_dt", typeof(DateTime));
		public Cndn sewadar_grno = new Cndn("sewadar_grno", typeof(String));
		public Cndn sewadar_status_dtm = new Cndn("sewadar_status_dtm", typeof(DateTime));
		public Cndn sewadar_status_cd = new Cndn("sewadar_status_cd", typeof(String));
		public Cndn sewadar_status_nm = new Cndn("sewadar_status_nm", typeof(String));
		public Cndn responsibility_dtm = new Cndn("responsibility_dtm", typeof(DateTime));
		public Cndn responsibility = new Cndn("responsibility", typeof(String));
		public Cndn sewadar_type = new Cndn("sewadar_type", typeof(String));
		public ViewBasicSewadarsRegistrationInfoSQLSelectQuery()
		{
			SqlObjectName = "ViewBasicSewadarsRegistrationInfo";
			SQLObjectType = SQLObjectTypes.View;

			lst.Add(sewadar_id);
			lst.Add(satsang_centre_id);
			lst.Add(centre_nm);
			lst.Add(centre_cd);
			lst.Add(weekly_sewa_location_id);
			lst.Add(department_id);
			lst.Add(department_nm);
			lst.Add(weekly_department_id);
			lst.Add(sub_department_id);
			lst.Add(sub_department_nm);
			lst.Add(department_dt);
			lst.Add(appointment_dt);
			lst.Add(sewadar_grno);
			lst.Add(sewadar_status_dtm);
			lst.Add(sewadar_status_cd);
			lst.Add(sewadar_status_nm);
			lst.Add(responsibility_dtm);
			lst.Add(responsibility);
			lst.Add(sewadar_type);
		}
	}
	
	
	public class ViewColourSQLSelectQuery : SQLSelectQuery
	{
		public Cndn colour_id = new Cndn("colour_id", typeof(Int16));
		public Cndn colour_nm = new Cndn("colour_nm", typeof(String));
		public Cndn red_component = new Cndn("red_component", typeof(Byte));
		public Cndn green_component = new Cndn("green_component", typeof(Byte));
		public Cndn blue_component = new Cndn("blue_component", typeof(Byte));
		public Cndn remarks = new Cndn("remarks", typeof(String));
		public Cndn effective_from = new Cndn("effective_from", typeof(DateTime));
		public Cndn effective_till = new Cndn("effective_till", typeof(DateTime));
		public Cndn txn_ts = new Cndn("txn_ts", typeof(Byte[]));
		public Cndn old_colour_id = new Cndn("old_colour_id", typeof(Int16));
		public ViewColourSQLSelectQuery()
		{
			SqlObjectName = "ViewColour";
			SQLObjectType = SQLObjectTypes.View;

			lst.Add(colour_id);
			lst.Add(colour_nm);
			lst.Add(red_component);
			lst.Add(green_component);
			lst.Add(blue_component);
			lst.Add(remarks);
			lst.Add(effective_from);
			lst.Add(effective_till);
			lst.Add(txn_ts);
			lst.Add(old_colour_id);
		}
	}
	
	
	public class ViewCreditSpecificationsSQLSelectQuery : SQLSelectQuery
	{
		public Cndn credit_specification_id = new Cndn("credit_specification_id", typeof(Int16));
		public Cndn credit_specification_nm = new Cndn("credit_specification_nm", typeof(String));
		public Cndn credit_specification_dt = new Cndn("credit_specification_dt", typeof(DateTime));
		public Cndn satsang_centre_id = new Cndn("satsang_centre_id", typeof(Int32));
		public Cndn credit_group_nm = new Cndn("credit_group_nm", typeof(String));
		public Cndn is_uniform_specification = new Cndn("is_uniform_specification", typeof(String));
		public Cndn is_outstation_sewadar = new Cndn("is_outstation_sewadar", typeof(String));
		public Cndn credit_cnt = new Cndn("credit_cnt", typeof(Int16));
		public Cndn unit_cnt = new Cndn("unit_cnt", typeof(Int16));
		public Cndn is_exemption_considered = new Cndn("is_exemption_considered", typeof(String));
		public Cndn presence_sewa_id = new Cndn("presence_sewa_id", typeof(Int32));
		public Cndn sewa_nm = new Cndn("sewa_nm", typeof(String));
		public Cndn min_credit_cnt = new Cndn("min_credit_cnt", typeof(Int16));
		public Cndn specification_ts = new Cndn("specification_ts", typeof(DateTime));
		public Cndn computation_ts = new Cndn("computation_ts", typeof(DateTime));
		public Cndn is_finally_used = new Cndn("is_finally_used", typeof(String));
		public Cndn last_appointment_dt = new Cndn("last_appointment_dt", typeof(DateTime));
		public Cndn txn_ts = new Cndn("txn_ts", typeof(Byte[]));
		public ViewCreditSpecificationsSQLSelectQuery()
		{
			SqlObjectName = "ViewCreditSpecifications";
			SQLObjectType = SQLObjectTypes.View;

			lst.Add(credit_specification_id);
			lst.Add(credit_specification_nm);
			lst.Add(credit_specification_dt);
			lst.Add(satsang_centre_id);
			lst.Add(credit_group_nm);
			lst.Add(is_uniform_specification);
			lst.Add(is_outstation_sewadar);
			lst.Add(credit_cnt);
			lst.Add(unit_cnt);
			lst.Add(is_exemption_considered);
			lst.Add(presence_sewa_id);
			lst.Add(sewa_nm);
			lst.Add(min_credit_cnt);
			lst.Add(specification_ts);
			lst.Add(computation_ts);
			lst.Add(is_finally_used);
			lst.Add(last_appointment_dt);
			lst.Add(txn_ts);
		}
	}
	
	
	public class ViewCurrentDateSQLSelectQuery : SQLSelectQuery
	{
		public Cndn CurrentDate = new Cndn("CurrentDate", typeof(DateTime));
		public ViewCurrentDateSQLSelectQuery()
		{
			SqlObjectName = "ViewCurrentDate";
			SQLObjectType = SQLObjectTypes.View;

			lst.Add(CurrentDate);
		}
	}
	
	
	public class ViewDepartmentSQLSelectQuery : SQLSelectQuery
	{
		public Cndn department_id = new Cndn("department_id", typeof(Int16));
		public Cndn department_cd = new Cndn("department_cd", typeof(String));
		public Cndn department_nm = new Cndn("department_nm", typeof(String));
		public Cndn colour_id = new Cndn("colour_id", typeof(Int16));
		public Cndn has_sub_departments = new Cndn("has_sub_departments", typeof(String));
		public Cndn remarks = new Cndn("remarks", typeof(String));
		public Cndn txn_ts = new Cndn("txn_ts", typeof(Byte[]));
		public ViewDepartmentSQLSelectQuery()
		{
			SqlObjectName = "ViewDepartment";
			SQLObjectType = SQLObjectTypes.View;

			lst.Add(department_id);
			lst.Add(department_cd);
			lst.Add(department_nm);
			lst.Add(colour_id);
			lst.Add(has_sub_departments);
			lst.Add(remarks);
			lst.Add(txn_ts);
		}
	}
	
	
	public class ViewFingerprintControllingDateSQLSelectQuery : SQLSelectQuery
	{
		public Cndn controlling_id = new Cndn("controlling_id", typeof(Int32));
		public Cndn sewa_id = new Cndn("sewa_id", typeof(Int32));
		public Cndn sewa_nm = new Cndn("sewa_nm", typeof(String));
		public Cndn start_dt = new Cndn("start_dt", typeof(DateTime));
		public Cndn end_dt = new Cndn("end_dt", typeof(DateTime));
		public Cndn processing_dtm = new Cndn("processing_dtm", typeof(String));
		public Cndn shift_1_cnt = new Cndn("shift_1_cnt", typeof(Int16));
		public Cndn shift_2_cnt = new Cndn("shift_2_cnt", typeof(Int16));
		public Cndn shift_3_cnt = new Cndn("shift_3_cnt", typeof(Int16));
		public ViewFingerprintControllingDateSQLSelectQuery()
		{
			SqlObjectName = "ViewFingerprintControllingDate";
			SQLObjectType = SQLObjectTypes.View;

			lst.Add(controlling_id);
			lst.Add(sewa_id);
			lst.Add(sewa_nm);
			lst.Add(start_dt);
			lst.Add(end_dt);
			lst.Add(processing_dtm);
			lst.Add(shift_1_cnt);
			lst.Add(shift_2_cnt);
			lst.Add(shift_3_cnt);
		}
	}
	
	
	public class ViewGenericAttributeSQLSelectQuery : SQLSelectQuery
	{
		public Cndn attribute_id = new Cndn("attribute_id", typeof(Int16));
		public Cndn attribute_nm = new Cndn("attribute_nm", typeof(String));
		public Cndn attribute_group = new Cndn("attribute_group", typeof(String));
		public Cndn attribute_sq = new Cndn("attribute_sq", typeof(Int16));
		public Cndn attribute_type = new Cndn("attribute_type", typeof(String));
		public Cndn attribute_length = new Cndn("attribute_length", typeof(Byte));
		public Cndn attribute_scale = new Cndn("attribute_scale", typeof(Byte));
		public Cndn is_temporal = new Cndn("is_temporal", typeof(String));
		public Cndn is_mandatory = new Cndn("is_mandatory", typeof(String));
		public Cndn is_status_applicable = new Cndn("is_status_applicable", typeof(String));
		public Cndn remarks = new Cndn("remarks", typeof(String));
		public Cndn txn_ts = new Cndn("txn_ts", typeof(Byte[]));
		public ViewGenericAttributeSQLSelectQuery()
		{
			SqlObjectName = "ViewGenericAttribute";
			SQLObjectType = SQLObjectTypes.View;

			lst.Add(attribute_id);
			lst.Add(attribute_nm);
			lst.Add(attribute_group);
			lst.Add(attribute_sq);
			lst.Add(attribute_type);
			lst.Add(attribute_length);
			lst.Add(attribute_scale);
			lst.Add(is_temporal);
			lst.Add(is_mandatory);
			lst.Add(is_status_applicable);
			lst.Add(remarks);
			lst.Add(txn_ts);
		}
	}
	
	
	public class ViewGenericSewadarListSQLSelectQuery : SQLSelectQuery
	{
		public Cndn centre_nm = new Cndn("centre_nm", typeof(String));
		public Cndn sewadar_list_id = new Cndn("sewadar_list_id", typeof(Int32));
		public Cndn satsang_centre_id = new Cndn("satsang_centre_id", typeof(Int32));
		public Cndn sewadar_list_nm = new Cndn("sewadar_list_nm", typeof(String));
		public Cndn sewadar_list_use = new Cndn("sewadar_list_use", typeof(String));
		public Cndn sewadar_list_other_use = new Cndn("sewadar_list_other_use", typeof(String));
		public Cndn other_satsang_centre_sewadars = new Cndn("other_satsang_centre_sewadars", typeof(String));
		public Cndn is_other_satsang_centre = new Cndn("is_other_satsang_centre", typeof(String));
		public Cndn is_editing_allowed = new Cndn("is_editing_allowed", typeof(String));
		public Cndn remarks = new Cndn("remarks", typeof(String));
		public Cndn generated_dtm = new Cndn("generated_dtm", typeof(DateTime));
		public Cndn report_nm = new Cndn("report_nm", typeof(String));
		public Cndn exported_dtm = new Cndn("exported_dtm", typeof(DateTime));
		public Cndn is_for_export = new Cndn("is_for_export", typeof(String));
		public Cndn programme_satsang_centre_id = new Cndn("programme_satsang_centre_id", typeof(Int32));
		public Cndn programme_satsang_centre_nm = new Cndn("programme_satsang_centre_nm", typeof(String));
		public Cndn session_id = new Cndn("session_id", typeof(Int32));
		public Cndn txn_ts = new Cndn("txn_ts", typeof(Byte[]));
		public ViewGenericSewadarListSQLSelectQuery()
		{
			SqlObjectName = "ViewGenericSewadarList";
			SQLObjectType = SQLObjectTypes.View;

			lst.Add(centre_nm);
			lst.Add(sewadar_list_id);
			lst.Add(satsang_centre_id);
			lst.Add(sewadar_list_nm);
			lst.Add(sewadar_list_use);
			lst.Add(sewadar_list_other_use);
			lst.Add(other_satsang_centre_sewadars);
			lst.Add(is_other_satsang_centre);
			lst.Add(is_editing_allowed);
			lst.Add(remarks);
			lst.Add(generated_dtm);
			lst.Add(report_nm);
			lst.Add(exported_dtm);
			lst.Add(is_for_export);
			lst.Add(programme_satsang_centre_id);
			lst.Add(programme_satsang_centre_nm);
			lst.Add(session_id);
			lst.Add(txn_ts);
		}
	}
	
	
	public class ViewMedicalDisabilitieSQLSelectQuery : SQLSelectQuery
	{
		public Cndn medical_disability_id = new Cndn("medical_disability_id", typeof(Int16));
		public Cndn medical_disability_nm = new Cndn("medical_disability_nm", typeof(String));
		public Cndn medical_disability_cd = new Cndn("medical_disability_cd", typeof(String));
		public Cndn effective_from = new Cndn("effective_from", typeof(DateTime));
		public Cndn effective_till = new Cndn("effective_till", typeof(DateTime));
		public Cndn txn_ts = new Cndn("txn_ts", typeof(Byte[]));
		public ViewMedicalDisabilitieSQLSelectQuery()
		{
			SqlObjectName = "ViewMedicalDisabilitie";
			SQLObjectType = SQLObjectTypes.View;

			lst.Add(medical_disability_id);
			lst.Add(medical_disability_nm);
			lst.Add(medical_disability_cd);
			lst.Add(effective_from);
			lst.Add(effective_till);
			lst.Add(txn_ts);
		}
	}
	
	
	public class ViewMergeSewadarInformationSQLSelectQuery : SQLSelectQuery
	{
		public Cndn src_sewadar_id = new Cndn("src_sewadar_id", typeof(Int32));
		public Cndn dst_sewadar_id = new Cndn("dst_sewadar_id", typeof(Int32));
		public Cndn merged_dtm = new Cndn("merged_dtm", typeof(DateTime));
		public Cndn dst_full_nm = new Cndn("dst_full_nm", typeof(String));
		public Cndn src_full_nm = new Cndn("src_full_nm", typeof(String));
		public ViewMergeSewadarInformationSQLSelectQuery()
		{
			SqlObjectName = "ViewMergeSewadarInformation";
			SQLObjectType = SQLObjectTypes.View;

			lst.Add(src_sewadar_id);
			lst.Add(dst_sewadar_id);
			lst.Add(merged_dtm);
			lst.Add(dst_full_nm);
			lst.Add(src_full_nm);
		}
	}
	
	
	public class ViewPostOfficesOrCitieSQLSelectQuery : SQLSelectQuery
	{
		public Cndn post_office_or_city_id = new Cndn("post_office_or_city_id", typeof(Int32));
		public Cndn district_or_city_id = new Cndn("district_or_city_id", typeof(Int32));
		public Cndn post_office_or_city_cd = new Cndn("post_office_or_city_cd", typeof(String));
		public Cndn post_office_or_city_nm = new Cndn("post_office_or_city_nm", typeof(String));
		public Cndn std_code = new Cndn("std_code", typeof(String));
		public Cndn effective_from = new Cndn("effective_from", typeof(DateTime));
		public Cndn effective_till = new Cndn("effective_till", typeof(DateTime));
		public Cndn txn_ts = new Cndn("txn_ts", typeof(Byte[]));
		public Cndn district_nm = new Cndn("district_nm", typeof(String));
		public Cndn state_id = new Cndn("state_id", typeof(Int32));
		public Cndn state_nm = new Cndn("state_nm", typeof(String));
		public Cndn country_id = new Cndn("country_id", typeof(Int16));
		public Cndn country_nm = new Cndn("country_nm", typeof(String));
		public ViewPostOfficesOrCitieSQLSelectQuery()
		{
			SqlObjectName = "ViewPostOfficesOrCitie";
			SQLObjectType = SQLObjectTypes.View;

			lst.Add(post_office_or_city_id);
			lst.Add(district_or_city_id);
			lst.Add(post_office_or_city_cd);
			lst.Add(post_office_or_city_nm);
			lst.Add(std_code);
			lst.Add(effective_from);
			lst.Add(effective_till);
			lst.Add(txn_ts);
			lst.Add(district_nm);
			lst.Add(state_id);
			lst.Add(state_nm);
			lst.Add(country_id);
			lst.Add(country_nm);
		}
	}
	
	
	public class ViewSatsangCentreDetailsSQLSelectQuery : SQLSelectQuery
	{
		public Cndn satsang_centre_id = new Cndn("satsang_centre_id", typeof(Int32));
		public Cndn satsang_centre_cd = new Cndn("satsang_centre_cd", typeof(String));
		public Cndn satsang_centre_type = new Cndn("satsang_centre_type", typeof(String));
		public Cndn address_line_1 = new Cndn("address_line_1", typeof(String));
		public Cndn address_line_2 = new Cndn("address_line_2", typeof(String));
		public Cndn post_office_or_city_id = new Cndn("post_office_or_city_id", typeof(Int32));
		public Cndn post_office_or_city_nm = new Cndn("post_office_or_city_nm", typeof(Int32));
		public Cndn district_nm = new Cndn("district_nm", typeof(String));
		public Cndn district_or_city_id = new Cndn("district_or_city_id", typeof(Int32));
		public Cndn pin_or_zip_code = new Cndn("pin_or_zip_code", typeof(String));
		public Cndn state_nm = new Cndn("state_nm", typeof(String));
		public Cndn state_id = new Cndn("state_id", typeof(Int32));
		public Cndn country_nm = new Cndn("country_nm", typeof(String));
		public Cndn country_id = new Cndn("country_id", typeof(Int16));
		public Cndn secretary = new Cndn("secretary", typeof(Int32));
		public Cndn telephones = new Cndn("telephones", typeof(String));
		public Cndn email_addresses = new Cndn("email_addresses", typeof(String));
		public Cndn fax_lines = new Cndn("fax_lines", typeof(String));
		public Cndn txn_ts = new Cndn("txn_ts", typeof(Byte[]));
		public Cndn effective_from = new Cndn("effective_from", typeof(DateTime));
		public Cndn effective_till = new Cndn("effective_till", typeof(DateTime));
		public Cndn is_main_centre = new Cndn("is_main_centre", typeof(String));
		public Cndn centre_cd = new Cndn("centre_cd", typeof(String));
		public Cndn remarks = new Cndn("remarks", typeof(String));
		public Cndn reports_to_centre_id = new Cndn("reports_to_centre_id", typeof(Int32));
		public Cndn centre_alphabet = new Cndn("centre_alphabet", typeof(String));
		public Cndn colour_id = new Cndn("colour_id", typeof(Int16));
		public Cndn colour_nm = new Cndn("colour_nm", typeof(String));
		public Cndn centre_nm = new Cndn("centre_nm", typeof(String));
		public Cndn reporting_centre_nm = new Cndn("reporting_centre_nm", typeof(String));
		public ViewSatsangCentreDetailsSQLSelectQuery()
		{
			SqlObjectName = "ViewSatsangCentreDetails";
			SQLObjectType = SQLObjectTypes.View;

			lst.Add(satsang_centre_id);
			lst.Add(satsang_centre_cd);
			lst.Add(satsang_centre_type);
			lst.Add(address_line_1);
			lst.Add(address_line_2);
			lst.Add(post_office_or_city_id);
			lst.Add(post_office_or_city_nm);
			lst.Add(district_nm);
			lst.Add(district_or_city_id);
			lst.Add(pin_or_zip_code);
			lst.Add(state_nm);
			lst.Add(state_id);
			lst.Add(country_nm);
			lst.Add(country_id);
			lst.Add(secretary);
			lst.Add(telephones);
			lst.Add(email_addresses);
			lst.Add(fax_lines);
			lst.Add(txn_ts);
			lst.Add(effective_from);
			lst.Add(effective_till);
			lst.Add(is_main_centre);
			lst.Add(centre_cd);
			lst.Add(remarks);
			lst.Add(reports_to_centre_id);
			lst.Add(centre_alphabet);
			lst.Add(colour_id);
			lst.Add(colour_nm);
			lst.Add(centre_nm);
			lst.Add(reporting_centre_nm);
		}
	}
	
	
	public class ViewSatsangCentresSQLSelectQuery : SQLSelectQuery
	{
		public Cndn satsang_centre_id = new Cndn("satsang_centre_id", typeof(Int32));
		public Cndn satsang_centre_cd = new Cndn("satsang_centre_cd", typeof(String));
		public Cndn satsang_centre_nm = new Cndn("satsang_centre_nm", typeof(String));
		public Cndn satsang_centre_type = new Cndn("satsang_centre_type", typeof(String));
		public Cndn address_line_1 = new Cndn("address_line_1", typeof(String));
		public Cndn address_line_2 = new Cndn("address_line_2", typeof(String));
		public Cndn post_office_or_city_id = new Cndn("post_office_or_city_id", typeof(Int32));
		public Cndn post_office_or_city_nm = new Cndn("post_office_or_city_nm", typeof(Int32));
		public Cndn district_nm = new Cndn("district_nm", typeof(String));
		public Cndn district_or_city_id = new Cndn("district_or_city_id", typeof(Int32));
		public Cndn pin_or_zip_code = new Cndn("pin_or_zip_code", typeof(String));
		public Cndn StateName = new Cndn("StateName", typeof(String));
		public Cndn StateId = new Cndn("StateId", typeof(Int32));
		public Cndn CoutryName = new Cndn("CoutryName", typeof(String));
		public Cndn CoutryId = new Cndn("CoutryId", typeof(Int16));
		public Cndn colour_id = new Cndn("colour_id", typeof(Int16));
		public Cndn colour_nm = new Cndn("colour_nm", typeof(String));
		public Cndn secretary = new Cndn("secretary", typeof(Int32));
		public Cndn telephones = new Cndn("telephones", typeof(String));
		public Cndn email_addresses = new Cndn("email_addresses", typeof(String));
		public Cndn fax_lines = new Cndn("fax_lines", typeof(String));
		public Cndn txn_ts = new Cndn("txn_ts", typeof(Byte[]));
		public Cndn effective_from = new Cndn("effective_from", typeof(DateTime));
		public Cndn effective_till = new Cndn("effective_till", typeof(DateTime));
		public Cndn is_main_centre = new Cndn("is_main_centre", typeof(String));
		public Cndn centre_cd = new Cndn("centre_cd", typeof(String));
		public Cndn remarks = new Cndn("remarks", typeof(String));
		public Cndn reports_to_centre_id = new Cndn("reports_to_centre_id", typeof(Int32));
		public Cndn centre_alphabet = new Cndn("centre_alphabet", typeof(String));
		public Cndn centre_nm = new Cndn("centre_nm", typeof(String));
		public Cndn reporting_centre_nm = new Cndn("reporting_centre_nm", typeof(String));
		public ViewSatsangCentresSQLSelectQuery()
		{
			SqlObjectName = "ViewSatsangCentres";
			SQLObjectType = SQLObjectTypes.View;

			lst.Add(satsang_centre_id);
			lst.Add(satsang_centre_cd);
			lst.Add(satsang_centre_nm);
			lst.Add(satsang_centre_type);
			lst.Add(address_line_1);
			lst.Add(address_line_2);
			lst.Add(post_office_or_city_id);
			lst.Add(post_office_or_city_nm);
			lst.Add(district_nm);
			lst.Add(district_or_city_id);
			lst.Add(pin_or_zip_code);
			lst.Add(StateName);
			lst.Add(StateId);
			lst.Add(CoutryName);
			lst.Add(CoutryId);
			lst.Add(colour_id);
			lst.Add(colour_nm);
			lst.Add(secretary);
			lst.Add(telephones);
			lst.Add(email_addresses);
			lst.Add(fax_lines);
			lst.Add(txn_ts);
			lst.Add(effective_from);
			lst.Add(effective_till);
			lst.Add(is_main_centre);
			lst.Add(centre_cd);
			lst.Add(remarks);
			lst.Add(reports_to_centre_id);
			lst.Add(centre_alphabet);
			lst.Add(centre_nm);
			lst.Add(reporting_centre_nm);
		}
	}
	
	
	public class ViewSatsangCentreTransfersSQLSelectQuery : SQLSelectQuery
	{
		public Cndn old_satsang_centre_id = new Cndn("old_satsang_centre_id", typeof(Int32));
		public Cndn old_satsang_centre_nm = new Cndn("old_satsang_centre_nm", typeof(String));
		public Cndn old_sewadar_grno = new Cndn("old_sewadar_grno", typeof(String));
		public Cndn satsang_centre_id = new Cndn("satsang_centre_id", typeof(Int32));
		public Cndn satsang_centre_nm = new Cndn("satsang_centre_nm", typeof(String));
		public Cndn sewadar_grno = new Cndn("sewadar_grno", typeof(String));
		public Cndn effective_dt = new Cndn("effective_dt", typeof(DateTime));
		public Cndn department_id = new Cndn("department_id", typeof(Int16));
		public Cndn department_nm = new Cndn("department_nm", typeof(String));
		public Cndn sub_department_nm = new Cndn("sub_department_nm", typeof(String));
		public Cndn sub_department_id = new Cndn("sub_department_id", typeof(Int16));
		public Cndn is_outstation_sewadar = new Cndn("is_outstation_sewadar", typeof(String));
		public Cndn sp_centre_id = new Cndn("sp_centre_id", typeof(Int32));
		public Cndn sp_centre_nm = new Cndn("sp_centre_nm", typeof(String));
		public Cndn sp_full_nm = new Cndn("sp_full_nm", typeof(String));
		public Cndn sp_sewadar_grno = new Cndn("sp_sewadar_grno", typeof(String));
		public Cndn sp_sewadar_id = new Cndn("sp_sewadar_id", typeof(Int32));
		public Cndn sp_sewadar_status = new Cndn("sp_sewadar_status", typeof(String));
		public Cndn sp_sponsorer_id = new Cndn("sp_sponsorer_id", typeof(Int32));
		public Cndn sp_years_in_sewa = new Cndn("sp_years_in_sewa", typeof(Int32));
		public Cndn area_secretary_id = new Cndn("area_secretary_id", typeof(Int16));
		public Cndn as_centre_id = new Cndn("as_centre_id", typeof(Int32));
		public Cndn as_centre_nm = new Cndn("as_centre_nm", typeof(String));
		public Cndn as_full_nm = new Cndn("as_full_nm", typeof(String));
		public Cndn secretary_id = new Cndn("secretary_id", typeof(Int16));
		public Cndn s_centre_id = new Cndn("s_centre_id", typeof(Int32));
		public Cndn s_centre_nm = new Cndn("s_centre_nm", typeof(String));
		public Cndn s_full_nm = new Cndn("s_full_nm", typeof(String));
		public Cndn remarks = new Cndn("remarks", typeof(String));
		public ViewSatsangCentreTransfersSQLSelectQuery()
		{
			SqlObjectName = "ViewSatsangCentreTransfers";
			SQLObjectType = SQLObjectTypes.View;

			lst.Add(old_satsang_centre_id);
			lst.Add(old_satsang_centre_nm);
			lst.Add(old_sewadar_grno);
			lst.Add(satsang_centre_id);
			lst.Add(satsang_centre_nm);
			lst.Add(sewadar_grno);
			lst.Add(effective_dt);
			lst.Add(department_id);
			lst.Add(department_nm);
			lst.Add(sub_department_nm);
			lst.Add(sub_department_id);
			lst.Add(is_outstation_sewadar);
			lst.Add(sp_centre_id);
			lst.Add(sp_centre_nm);
			lst.Add(sp_full_nm);
			lst.Add(sp_sewadar_grno);
			lst.Add(sp_sewadar_id);
			lst.Add(sp_sewadar_status);
			lst.Add(sp_sponsorer_id);
			lst.Add(sp_years_in_sewa);
			lst.Add(area_secretary_id);
			lst.Add(as_centre_id);
			lst.Add(as_centre_nm);
			lst.Add(as_full_nm);
			lst.Add(secretary_id);
			lst.Add(s_centre_id);
			lst.Add(s_centre_nm);
			lst.Add(s_full_nm);
			lst.Add(remarks);
		}
	}
	
	
	public class ViewScanningJobSQLSelectQuery : SQLSelectQuery
	{
		public Cndn scanning_job_id = new Cndn("scanning_job_id", typeof(Int16));
		public Cndn satsang_centre_id = new Cndn("satsang_centre_id", typeof(Int32));
		public Cndn scanning_job_nm = new Cndn("scanning_job_nm", typeof(String));
		public Cndn scanning_job_type_cd = new Cndn("scanning_job_type_cd", typeof(String));
		public Cndn remarks = new Cndn("remarks", typeof(String));
		public Cndn effective_from = new Cndn("effective_from", typeof(DateTime));
		public Cndn effective_till = new Cndn("effective_till", typeof(DateTime));
		public Cndn sewadar_list_id = new Cndn("sewadar_list_id", typeof(Int32));
		public Cndn sewa_id = new Cndn("sewa_id", typeof(Int32));
		public Cndn sewa_nm = new Cndn("sewa_nm", typeof(String));
		public Cndn sewa_cd = new Cndn("sewa_cd", typeof(String));
		public Cndn is_deleting_allowed = new Cndn("is_deleting_allowed", typeof(String));
		public Cndn status_system_info_cd = new Cndn("status_system_info_cd", typeof(String));
		public Cndn status_system_info_nm = new Cndn("status_system_info_nm", typeof(String));
		public Cndn last_transfer_dtm = new Cndn("last_transfer_dtm", typeof(DateTime));
		public Cndn total_processed_cnt = new Cndn("total_processed_cnt", typeof(Int32));
		public Cndn is_closed = new Cndn("is_closed", typeof(String));
		public Cndn is_concluded = new Cndn("is_concluded", typeof(String));
		public Cndn txn_ts = new Cndn("txn_ts", typeof(Byte[]));
		public Cndn sewadar_list_nm = new Cndn("sewadar_list_nm", typeof(String));
		public ViewScanningJobSQLSelectQuery()
		{
			SqlObjectName = "ViewScanningJob";
			SQLObjectType = SQLObjectTypes.View;

			lst.Add(scanning_job_id);
			lst.Add(satsang_centre_id);
			lst.Add(scanning_job_nm);
			lst.Add(scanning_job_type_cd);
			lst.Add(remarks);
			lst.Add(effective_from);
			lst.Add(effective_till);
			lst.Add(sewadar_list_id);
			lst.Add(sewa_id);
			lst.Add(sewa_nm);
			lst.Add(sewa_cd);
			lst.Add(is_deleting_allowed);
			lst.Add(status_system_info_cd);
			lst.Add(status_system_info_nm);
			lst.Add(last_transfer_dtm);
			lst.Add(total_processed_cnt);
			lst.Add(is_closed);
			lst.Add(is_concluded);
			lst.Add(txn_ts);
			lst.Add(sewadar_list_nm);
		}
	}
	
	
	public class ViewScanningJobsControllingDateSQLSelectQuery : SQLSelectQuery
	{
		public Cndn scanning_job_id = new Cndn("scanning_job_id", typeof(Int16));
		public Cndn scanning_job_nm = new Cndn("scanning_job_nm", typeof(String));
		public Cndn satsang_centre_id = new Cndn("satsang_centre_id", typeof(Int32));
		public Cndn scanning_job_type_cd = new Cndn("scanning_job_type_cd", typeof(String));
		public Cndn controlling_dt = new Cndn("controlling_dt", typeof(DateTime));
		public Cndn last_transfer_dtm = new Cndn("last_transfer_dtm", typeof(DateTime));
		public Cndn total_processed_cnt = new Cndn("total_processed_cnt", typeof(Int16));
		public Cndn is_closed = new Cndn("is_closed", typeof(String));
		public Cndn txn_ts = new Cndn("txn_ts", typeof(Byte[]));
		public ViewScanningJobsControllingDateSQLSelectQuery()
		{
			SqlObjectName = "ViewScanningJobsControllingDate";
			SQLObjectType = SQLObjectTypes.View;

			lst.Add(scanning_job_id);
			lst.Add(scanning_job_nm);
			lst.Add(satsang_centre_id);
			lst.Add(scanning_job_type_cd);
			lst.Add(controlling_dt);
			lst.Add(last_transfer_dtm);
			lst.Add(total_processed_cnt);
			lst.Add(is_closed);
			lst.Add(txn_ts);
		}
	}
	
	
	public class ViewSewadarSQLSelectQuery : SQLSelectQuery
	{
		public Cndn sewadar_id = new Cndn("sewadar_id", typeof(Int32));
		public Cndn first_nm = new Cndn("first_nm", typeof(String));
		public Cndn middle_nm = new Cndn("middle_nm", typeof(String));
		public Cndn last_nm = new Cndn("last_nm", typeof(String));
		public Cndn gender = new Cndn("gender", typeof(String));
		public Cndn birth_dtm = new Cndn("birth_dtm", typeof(DateTime));
		public Cndn age = new Cndn("age", typeof(Int32));
		public Cndn is_married = new Cndn("is_married", typeof(String));
		public Cndn initiation_dt = new Cndn("initiation_dt", typeof(DateTime));
		public Cndn initiation_place_id = new Cndn("initiation_place_id", typeof(Int16));
		public Cndn place_nm = new Cndn("place_nm", typeof(String));
		public Cndn initiation_by = new Cndn("initiation_by", typeof(Byte));
		public Cndn satsang_centre_id = new Cndn("satsang_centre_id", typeof(Int32));
		public Cndn global_sewadar_status_cd = new Cndn("global_sewadar_status_cd", typeof(String));
		public Cndn global_sewadar_status_dt = new Cndn("global_sewadar_status_dt", typeof(DateTime));
		public Cndn sewadar_grno = new Cndn("sewadar_grno", typeof(String));
		public Cndn sewadar_status_nm = new Cndn("sewadar_status_nm", typeof(String));
		public Cndn sewadar_status_dtm = new Cndn("sewadar_status_dtm", typeof(DateTime));
		public Cndn centre_nm = new Cndn("centre_nm", typeof(String));
		public Cndn department_dt = new Cndn("department_dt", typeof(DateTime));
		public Cndn appointment_dt = new Cndn("appointment_dt", typeof(DateTime));
		public Cndn photo_dt = new Cndn("photo_dt", typeof(DateTime));
		public Cndn department_nm = new Cndn("department_nm", typeof(String));
		public Cndn txn_ts = new Cndn("txn_ts", typeof(Byte[]));
		public ViewSewadarSQLSelectQuery()
		{
			SqlObjectName = "ViewSewadar";
			SQLObjectType = SQLObjectTypes.View;

			lst.Add(sewadar_id);
			lst.Add(first_nm);
			lst.Add(middle_nm);
			lst.Add(last_nm);
			lst.Add(gender);
			lst.Add(birth_dtm);
			lst.Add(age);
			lst.Add(is_married);
			lst.Add(initiation_dt);
			lst.Add(initiation_place_id);
			lst.Add(place_nm);
			lst.Add(initiation_by);
			lst.Add(satsang_centre_id);
			lst.Add(global_sewadar_status_cd);
			lst.Add(global_sewadar_status_dt);
			lst.Add(sewadar_grno);
			lst.Add(sewadar_status_nm);
			lst.Add(sewadar_status_dtm);
			lst.Add(centre_nm);
			lst.Add(department_dt);
			lst.Add(appointment_dt);
			lst.Add(photo_dt);
			lst.Add(department_nm);
			lst.Add(txn_ts);
		}
	}
	
	
	public class ViewSewadarApplicationSQLSelectQuery : SQLSelectQuery
	{
		public Cndn application_id = new Cndn("application_id", typeof(Int32));
		public Cndn application_centre_id = new Cndn("application_centre_id", typeof(Int32));
		public Cndn application_centre_nm = new Cndn("application_centre_nm", typeof(String));
		public Cndn application_dt = new Cndn("application_dt", typeof(DateTime));
		public Cndn application_status = new Cndn("application_status", typeof(String));
		public Cndn application_status_dtm = new Cndn("application_status_dtm", typeof(DateTime));
		public Cndn first_nm = new Cndn("first_nm", typeof(String));
		public Cndn middle_nm = new Cndn("middle_nm", typeof(String));
		public Cndn last_nm = new Cndn("last_nm", typeof(String));
		public Cndn gender = new Cndn("gender", typeof(String));
		public Cndn birth_dtm = new Cndn("birth_dtm", typeof(DateTime));
		public Cndn is_married = new Cndn("is_married", typeof(String));
		public Cndn initiation_dt = new Cndn("initiation_dt", typeof(DateTime));
		public Cndn initiation_place_id = new Cndn("initiation_place_id", typeof(Int16));
		public Cndn place_nm = new Cndn("place_nm", typeof(String));
		public Cndn initiation_by = new Cndn("initiation_by", typeof(Byte));
		public Cndn address_line_1 = new Cndn("address_line_1", typeof(String));
		public Cndn address_line_2 = new Cndn("address_line_2", typeof(String));
		public Cndn post_office_or_city_id = new Cndn("post_office_or_city_id", typeof(Int32));
		public Cndn post_office_or_city_nm = new Cndn("post_office_or_city_nm", typeof(String));
		public Cndn district_or_city_id = new Cndn("district_or_city_id", typeof(Int32));
		public Cndn district_nm = new Cndn("district_nm", typeof(String));
		public Cndn state_nm = new Cndn("state_nm", typeof(String));
		public Cndn state_id = new Cndn("state_id", typeof(Int32));
		public Cndn country_nm = new Cndn("country_nm", typeof(String));
		public Cndn country_id = new Cndn("country_id", typeof(Int16));
		public Cndn pin_or_zip_code = new Cndn("pin_or_zip_code", typeof(String));
		public Cndn address_proof = new Cndn("address_proof", typeof(String));
		public Cndn other_address_proof_id = new Cndn("other_address_proof_id", typeof(Int16));
		public Cndn other_address_proof_nm = new Cndn("other_address_proof_nm", typeof(String));
		public Cndn telephone_mobile = new Cndn("telephone_mobile", typeof(String));
		public Cndn telephone_residence = new Cndn("telephone_residence", typeof(String));
		public Cndn telephone_office = new Cndn("telephone_office", typeof(String));
		public Cndn occupation = new Cndn("occupation", typeof(String));
		public Cndn attends_weekly_satsang = new Cndn("attends_weekly_satsang", typeof(String));
		public Cndn weekly_satsang_centre_id = new Cndn("weekly_satsang_centre_id", typeof(Int32));
		public Cndn has_hypertension = new Cndn("has_hypertension", typeof(String));
		public Cndn is_diabetic = new Cndn("is_diabetic", typeof(String));
		public Cndn has_skin_problem = new Cndn("has_skin_problem", typeof(String));
		public Cndn has_epillepsy = new Cndn("has_epillepsy", typeof(String));
		public Cndn photo_id = new Cndn("photo_id", typeof(String));
		public Cndn photo_dt = new Cndn("photo_dt", typeof(DateTime));
		public Cndn appointment_dt = new Cndn("appointment_dt", typeof(DateTime));
		public Cndn is_outstation_sewadar = new Cndn("is_outstation_sewadar", typeof(String));
		public Cndn department_id = new Cndn("department_id", typeof(Int16));
		public Cndn department_nm = new Cndn("department_nm", typeof(String));
		public Cndn sub_department_id = new Cndn("sub_department_id", typeof(Int16));
		public Cndn sub_department_nm = new Cndn("sub_department_nm", typeof(String));
		public Cndn old_grno = new Cndn("old_grno", typeof(String));
		public Cndn reference_1_sewadar_id = new Cndn("reference_1_sewadar_id", typeof(Int32));
		public Cndn reference_1_grno = new Cndn("reference_1_grno", typeof(String));
		public Cndn reference_1_relationship = new Cndn("reference_1_relationship", typeof(Int16));
		public Cndn reference_1_centre_nm = new Cndn("reference_1_centre_nm", typeof(String));
		public Cndn reference_1_centre_id = new Cndn("reference_1_centre_id", typeof(Int32));
		public Cndn reference_1_relationship_nm = new Cndn("reference_1_relationship_nm", typeof(String));
		public Cndn reference_1_department = new Cndn("reference_1_department", typeof(String));
		public Cndn reference_1_nm = new Cndn("reference_1_nm", typeof(String));
		public Cndn reference_2_sewadar_id = new Cndn("reference_2_sewadar_id", typeof(Int32));
		public Cndn reference_2_grno = new Cndn("reference_2_grno", typeof(String));
		public Cndn reference_2_relationship = new Cndn("reference_2_relationship", typeof(Int16));
		public Cndn reference_2_relationship_nm = new Cndn("reference_2_relationship_nm", typeof(String));
		public Cndn reference_2_department = new Cndn("reference_2_department", typeof(String));
		public Cndn reference_2_nm = new Cndn("reference_2_nm", typeof(String));
		public Cndn reference_2_centre_nm = new Cndn("reference_2_centre_nm", typeof(String));
		public Cndn reference_2_centre_id = new Cndn("reference_2_centre_id", typeof(Int32));
		public Cndn security_approver_id = new Cndn("security_approver_id", typeof(Int32));
		public Cndn security_approver_centre_nm = new Cndn("security_approver_centre_nm", typeof(String));
		public Cndn security_approver_centre_id = new Cndn("security_approver_centre_id", typeof(Int32));
		public Cndn security_approver_grno = new Cndn("security_approver_grno", typeof(String));
		public Cndn security_approver_nm = new Cndn("security_approver_nm", typeof(String));
		public Cndn sewa_samiti_approver_id = new Cndn("sewa_samiti_approver_id", typeof(Int32));
		public Cndn sewa_samiti_approver_centre_id = new Cndn("sewa_samiti_approver_centre_id", typeof(Int32));
		public Cndn sewa_samiti_approver_centre_nm = new Cndn("sewa_samiti_approver_centre_nm", typeof(String));
		public Cndn sewa_samiti_approver_grno = new Cndn("sewa_samiti_approver_grno", typeof(String));
		public Cndn sewa_samiti_approver_nm = new Cndn("sewa_samiti_approver_nm", typeof(String));
		public Cndn area_secretary_id = new Cndn("area_secretary_id", typeof(Int16));
		public Cndn area_secretary_centre_id = new Cndn("area_secretary_centre_id", typeof(Int32));
		public Cndn area_secretary_centre_nm = new Cndn("area_secretary_centre_nm", typeof(String));
		public Cndn area_secretary_grno = new Cndn("area_secretary_grno", typeof(String));
		public Cndn area_secretary_nm = new Cndn("area_secretary_nm", typeof(String));
		public Cndn secretary_id = new Cndn("secretary_id", typeof(Int16));
		public Cndn secretary_centre_id = new Cndn("secretary_centre_id", typeof(Int32));
		public Cndn secretary_centre_nm = new Cndn("secretary_centre_nm", typeof(String));
		public Cndn secretary_grno = new Cndn("secretary_grno", typeof(String));
		public Cndn secretary_nm = new Cndn("secretary_nm", typeof(String));
		public Cndn sponsorer_id = new Cndn("sponsorer_id", typeof(Int32));
		public Cndn sponsorer_centre_id = new Cndn("sponsorer_centre_id", typeof(Int32));
		public Cndn sponsorer_centre_nm = new Cndn("sponsorer_centre_nm", typeof(String));
		public Cndn sponsorer_grno = new Cndn("sponsorer_grno", typeof(String));
		public Cndn sponsorer_nm = new Cndn("sponsorer_nm", typeof(String));
		public Cndn sponsorer_department = new Cndn("sponsorer_department", typeof(String));
		public Cndn remarks = new Cndn("remarks", typeof(String));
		public Cndn reason = new Cndn("reason", typeof(String));
		public Cndn registered_sewadar_grno = new Cndn("registered_sewadar_grno", typeof(String));
		public Cndn registered_sewadar_id = new Cndn("registered_sewadar_id", typeof(Int32));
		public Cndn weekly_satsang_centre_nm = new Cndn("weekly_satsang_centre_nm", typeof(String));
		public Cndn txn_ts = new Cndn("txn_ts", typeof(Byte[]));
		public ViewSewadarApplicationSQLSelectQuery()
		{
			SqlObjectName = "ViewSewadarApplication";
			SQLObjectType = SQLObjectTypes.View;

			lst.Add(application_id);
			lst.Add(application_centre_id);
			lst.Add(application_centre_nm);
			lst.Add(application_dt);
			lst.Add(application_status);
			lst.Add(application_status_dtm);
			lst.Add(first_nm);
			lst.Add(middle_nm);
			lst.Add(last_nm);
			lst.Add(gender);
			lst.Add(birth_dtm);
			lst.Add(is_married);
			lst.Add(initiation_dt);
			lst.Add(initiation_place_id);
			lst.Add(place_nm);
			lst.Add(initiation_by);
			lst.Add(address_line_1);
			lst.Add(address_line_2);
			lst.Add(post_office_or_city_id);
			lst.Add(post_office_or_city_nm);
			lst.Add(district_or_city_id);
			lst.Add(district_nm);
			lst.Add(state_nm);
			lst.Add(state_id);
			lst.Add(country_nm);
			lst.Add(country_id);
			lst.Add(pin_or_zip_code);
			lst.Add(address_proof);
			lst.Add(other_address_proof_id);
			lst.Add(other_address_proof_nm);
			lst.Add(telephone_mobile);
			lst.Add(telephone_residence);
			lst.Add(telephone_office);
			lst.Add(occupation);
			lst.Add(attends_weekly_satsang);
			lst.Add(weekly_satsang_centre_id);
			lst.Add(has_hypertension);
			lst.Add(is_diabetic);
			lst.Add(has_skin_problem);
			lst.Add(has_epillepsy);
			lst.Add(photo_id);
			lst.Add(photo_dt);
			lst.Add(appointment_dt);
			lst.Add(is_outstation_sewadar);
			lst.Add(department_id);
			lst.Add(department_nm);
			lst.Add(sub_department_id);
			lst.Add(sub_department_nm);
			lst.Add(old_grno);
			lst.Add(reference_1_sewadar_id);
			lst.Add(reference_1_grno);
			lst.Add(reference_1_relationship);
			lst.Add(reference_1_centre_nm);
			lst.Add(reference_1_centre_id);
			lst.Add(reference_1_relationship_nm);
			lst.Add(reference_1_department);
			lst.Add(reference_1_nm);
			lst.Add(reference_2_sewadar_id);
			lst.Add(reference_2_grno);
			lst.Add(reference_2_relationship);
			lst.Add(reference_2_relationship_nm);
			lst.Add(reference_2_department);
			lst.Add(reference_2_nm);
			lst.Add(reference_2_centre_nm);
			lst.Add(reference_2_centre_id);
			lst.Add(security_approver_id);
			lst.Add(security_approver_centre_nm);
			lst.Add(security_approver_centre_id);
			lst.Add(security_approver_grno);
			lst.Add(security_approver_nm);
			lst.Add(sewa_samiti_approver_id);
			lst.Add(sewa_samiti_approver_centre_id);
			lst.Add(sewa_samiti_approver_centre_nm);
			lst.Add(sewa_samiti_approver_grno);
			lst.Add(sewa_samiti_approver_nm);
			lst.Add(area_secretary_id);
			lst.Add(area_secretary_centre_id);
			lst.Add(area_secretary_centre_nm);
			lst.Add(area_secretary_grno);
			lst.Add(area_secretary_nm);
			lst.Add(secretary_id);
			lst.Add(secretary_centre_id);
			lst.Add(secretary_centre_nm);
			lst.Add(secretary_grno);
			lst.Add(secretary_nm);
			lst.Add(sponsorer_id);
			lst.Add(sponsorer_centre_id);
			lst.Add(sponsorer_centre_nm);
			lst.Add(sponsorer_grno);
			lst.Add(sponsorer_nm);
			lst.Add(sponsorer_department);
			lst.Add(remarks);
			lst.Add(reason);
			lst.Add(registered_sewadar_grno);
			lst.Add(registered_sewadar_id);
			lst.Add(weekly_satsang_centre_nm);
			lst.Add(txn_ts);
		}
	}
	
	
	public class ViewSewadarHeaderSQLSelectQuery : SQLSelectQuery
	{
		public Cndn sewadar_id = new Cndn("sewadar_id", typeof(Int32));
		public Cndn first_nm = new Cndn("first_nm", typeof(String));
		public Cndn middle_nm = new Cndn("middle_nm", typeof(String));
		public Cndn last_nm = new Cndn("last_nm", typeof(String));
		public Cndn full_nm = new Cndn("full_nm", typeof(String));
		public Cndn gender = new Cndn("gender", typeof(String));
		public Cndn birth_dtm = new Cndn("birth_dtm", typeof(DateTime));
		public Cndn age = new Cndn("age", typeof(Int32));
		public Cndn is_married = new Cndn("is_married", typeof(String));
		public Cndn initiation_dt = new Cndn("initiation_dt", typeof(DateTime));
		public Cndn initiation_place_id = new Cndn("initiation_place_id", typeof(Int16));
		public Cndn place_nm = new Cndn("place_nm", typeof(String));
		public Cndn initiation_by = new Cndn("initiation_by", typeof(Byte));
		public Cndn satsang_centre_id = new Cndn("satsang_centre_id", typeof(Int32));
		public Cndn global_sewadar_status_cd = new Cndn("global_sewadar_status_cd", typeof(String));
		public Cndn global_sewadar_status_dt = new Cndn("global_sewadar_status_dt", typeof(DateTime));
		public Cndn sewadar_grno = new Cndn("sewadar_grno", typeof(String));
		public Cndn sewadar_type = new Cndn("sewadar_type", typeof(String));
		public Cndn sewadar_status_dtm = new Cndn("sewadar_status_dtm", typeof(DateTime));
		public Cndn global_sewadar_status_nm = new Cndn("global_sewadar_status_nm", typeof(String));
		public Cndn centre_nm = new Cndn("centre_nm", typeof(String));
		public Cndn centre_cd = new Cndn("centre_cd", typeof(String));
		public Cndn sewadar_status_dt = new Cndn("sewadar_status_dt", typeof(DateTime));
		public Cndn sewadar_status_nm = new Cndn("sewadar_status_nm", typeof(String));
		public Cndn sewadar_status_cd = new Cndn("sewadar_status_cd", typeof(String));
		public Cndn responsibility = new Cndn("responsibility", typeof(String));
		public Cndn department_dt = new Cndn("department_dt", typeof(DateTime));
		public Cndn appointment_dt = new Cndn("appointment_dt", typeof(DateTime));
		public Cndn department_nm = new Cndn("department_nm", typeof(String));
		public Cndn sub_department_nm = new Cndn("sub_department_nm", typeof(String));
		public Cndn full_department_nm = new Cndn("full_department_nm", typeof(String));
		public Cndn department_id = new Cndn("department_id", typeof(Int16));
		public Cndn sub_department_id = new Cndn("sub_department_id", typeof(Int16));
		public Cndn weekly_satsang_centre_id = new Cndn("weekly_satsang_centre_id", typeof(Int32));
		public Cndn weekly_satsang_centre_nm = new Cndn("weekly_satsang_centre_nm", typeof(String));
		public Cndn weekly_sewa_location_id = new Cndn("weekly_sewa_location_id", typeof(Int32));
		public Cndn F7Column = new Cndn("F7Column", typeof(String));
		public Cndn F8Column = new Cndn("F8Column", typeof(String));
		public Cndn txn_ts = new Cndn("txn_ts", typeof(Byte[]));
		public ViewSewadarHeaderSQLSelectQuery()
		{
			SqlObjectName = "ViewSewadarHeader";
			SQLObjectType = SQLObjectTypes.View;

			lst.Add(sewadar_id);
			lst.Add(first_nm);
			lst.Add(middle_nm);
			lst.Add(last_nm);
			lst.Add(full_nm);
			lst.Add(gender);
			lst.Add(birth_dtm);
			lst.Add(age);
			lst.Add(is_married);
			lst.Add(initiation_dt);
			lst.Add(initiation_place_id);
			lst.Add(place_nm);
			lst.Add(initiation_by);
			lst.Add(satsang_centre_id);
			lst.Add(global_sewadar_status_cd);
			lst.Add(global_sewadar_status_dt);
			lst.Add(sewadar_grno);
			lst.Add(sewadar_type);
			lst.Add(sewadar_status_dtm);
			lst.Add(global_sewadar_status_nm);
			lst.Add(centre_nm);
			lst.Add(centre_cd);
			lst.Add(sewadar_status_dt);
			lst.Add(sewadar_status_nm);
			lst.Add(sewadar_status_cd);
			lst.Add(responsibility);
			lst.Add(department_dt);
			lst.Add(appointment_dt);
			lst.Add(department_nm);
			lst.Add(sub_department_nm);
			lst.Add(full_department_nm);
			lst.Add(department_id);
			lst.Add(sub_department_id);
			lst.Add(weekly_satsang_centre_id);
			lst.Add(weekly_satsang_centre_nm);
			lst.Add(weekly_sewa_location_id);
			lst.Add(F7Column);
			lst.Add(F8Column);
			lst.Add(txn_ts);
		}
	}
	
	
	public class ViewSewadarHeaderOnGRNoSQLSelectQuery : SQLSelectQuery
	{
		public Cndn sewadar_id = new Cndn("sewadar_id", typeof(Int32));
		public Cndn first_nm = new Cndn("first_nm", typeof(String));
		public Cndn middle_nm = new Cndn("middle_nm", typeof(String));
		public Cndn last_nm = new Cndn("last_nm", typeof(String));
		public Cndn full_nm = new Cndn("full_nm", typeof(String));
		public Cndn gender = new Cndn("gender", typeof(String));
		public Cndn birth_dtm = new Cndn("birth_dtm", typeof(DateTime));
		public Cndn age = new Cndn("age", typeof(Int32));
		public Cndn is_married = new Cndn("is_married", typeof(String));
		public Cndn initiation_dt = new Cndn("initiation_dt", typeof(DateTime));
		public Cndn initiation_place_id = new Cndn("initiation_place_id", typeof(Int16));
		public Cndn place_nm = new Cndn("place_nm", typeof(String));
		public Cndn initiation_by = new Cndn("initiation_by", typeof(Byte));
		public Cndn satsang_centre_id = new Cndn("satsang_centre_id", typeof(Int32));
		public Cndn global_sewadar_status_cd = new Cndn("global_sewadar_status_cd", typeof(String));
		public Cndn global_sewadar_status_dt = new Cndn("global_sewadar_status_dt", typeof(DateTime));
		public Cndn sewadar_grno = new Cndn("sewadar_grno", typeof(String));
		public Cndn sewadar_type = new Cndn("sewadar_type", typeof(String));
		public Cndn sewadar_status_dtm = new Cndn("sewadar_status_dtm", typeof(DateTime));
		public Cndn global_sewadar_status_nm = new Cndn("global_sewadar_status_nm", typeof(String));
		public Cndn centre_nm = new Cndn("centre_nm", typeof(String));
		public Cndn centre_cd = new Cndn("centre_cd", typeof(String));
		public Cndn sewadar_status_dt = new Cndn("sewadar_status_dt", typeof(DateTime));
		public Cndn sewadar_status_nm = new Cndn("sewadar_status_nm", typeof(String));
		public Cndn sewadar_status_cd = new Cndn("sewadar_status_cd", typeof(String));
		public Cndn responsibility = new Cndn("responsibility", typeof(String));
		public Cndn department_dt = new Cndn("department_dt", typeof(DateTime));
		public Cndn appointment_dt = new Cndn("appointment_dt", typeof(DateTime));
		public Cndn department_nm = new Cndn("department_nm", typeof(String));
		public Cndn sub_department_nm = new Cndn("sub_department_nm", typeof(String));
		public Cndn full_department_nm = new Cndn("full_department_nm", typeof(String));
		public Cndn department_id = new Cndn("department_id", typeof(Int16));
		public Cndn sub_department_id = new Cndn("sub_department_id", typeof(Int16));
		public Cndn weekly_satsang_centre_id = new Cndn("weekly_satsang_centre_id", typeof(Int32));
		public Cndn weekly_satsang_centre_nm = new Cndn("weekly_satsang_centre_nm", typeof(String));
		public Cndn weekly_sewa_location_id = new Cndn("weekly_sewa_location_id", typeof(Int32));
		public Cndn F7Column = new Cndn("F7Column", typeof(String));
		public Cndn F8Column = new Cndn("F8Column", typeof(String));
		public Cndn txn_ts = new Cndn("txn_ts", typeof(Byte[]));
		public ViewSewadarHeaderOnGRNoSQLSelectQuery()
		{
			SqlObjectName = "ViewSewadarHeaderOnGRNo";
			SQLObjectType = SQLObjectTypes.View;

			lst.Add(sewadar_id);
			lst.Add(first_nm);
			lst.Add(middle_nm);
			lst.Add(last_nm);
			lst.Add(full_nm);
			lst.Add(gender);
			lst.Add(birth_dtm);
			lst.Add(age);
			lst.Add(is_married);
			lst.Add(initiation_dt);
			lst.Add(initiation_place_id);
			lst.Add(place_nm);
			lst.Add(initiation_by);
			lst.Add(satsang_centre_id);
			lst.Add(global_sewadar_status_cd);
			lst.Add(global_sewadar_status_dt);
			lst.Add(sewadar_grno);
			lst.Add(sewadar_type);
			lst.Add(sewadar_status_dtm);
			lst.Add(global_sewadar_status_nm);
			lst.Add(centre_nm);
			lst.Add(centre_cd);
			lst.Add(sewadar_status_dt);
			lst.Add(sewadar_status_nm);
			lst.Add(sewadar_status_cd);
			lst.Add(responsibility);
			lst.Add(department_dt);
			lst.Add(appointment_dt);
			lst.Add(department_nm);
			lst.Add(sub_department_nm);
			lst.Add(full_department_nm);
			lst.Add(department_id);
			lst.Add(sub_department_id);
			lst.Add(weekly_satsang_centre_id);
			lst.Add(weekly_satsang_centre_nm);
			lst.Add(weekly_sewa_location_id);
			lst.Add(F7Column);
			lst.Add(F8Column);
			lst.Add(txn_ts);
		}
	}
	
	
	public class ViewSewadarsDetailSQLSelectQuery : SQLSelectQuery
	{
		public Cndn sewadar_id = new Cndn("sewadar_id", typeof(Int32));
		public Cndn address_proof = new Cndn("address_proof", typeof(String));
		public Cndn other_address_proof_id = new Cndn("other_address_proof_id", typeof(Int16));
		public Cndn other_address_proof_nm = new Cndn("other_address_proof_nm", typeof(String));
		public Cndn telephone_mobile = new Cndn("telephone_mobile", typeof(String));
		public Cndn telephone_residence = new Cndn("telephone_residence", typeof(String));
		public Cndn telephone_office = new Cndn("telephone_office", typeof(String));
		public Cndn occupation = new Cndn("occupation", typeof(String));
		public Cndn attends_weekly_satsang = new Cndn("attends_weekly_satsang", typeof(String));
		public Cndn weekly_satsang_centre_id = new Cndn("weekly_satsang_centre_id", typeof(Int32));
		public Cndn weekly_satsang_centre_nm = new Cndn("weekly_satsang_centre_nm", typeof(String));
		public Cndn has_hypertension = new Cndn("has_hypertension", typeof(String));
		public Cndn is_diabetic = new Cndn("is_diabetic", typeof(String));
		public Cndn has_skin_problem = new Cndn("has_skin_problem", typeof(String));
		public Cndn has_epillepsy = new Cndn("has_epillepsy", typeof(String));
		public Cndn address_type = new Cndn("address_type", typeof(String));
		public Cndn address_line_1 = new Cndn("address_line_1", typeof(String));
		public Cndn address_line_2 = new Cndn("address_line_2", typeof(String));
		public Cndn post_office_or_city_id = new Cndn("post_office_or_city_id", typeof(Int32));
		public Cndn pin_or_zip_code = new Cndn("pin_or_zip_code", typeof(String));
		public Cndn full_nm = new Cndn("full_nm", typeof(String));
		public Cndn gender = new Cndn("gender", typeof(String));
		public Cndn age = new Cndn("age", typeof(Int32));
		public Cndn global_sewadar_status_nm = new Cndn("global_sewadar_status_nm", typeof(String));
		public Cndn global_sewadar_status_dt = new Cndn("global_sewadar_status_dt", typeof(DateTime));
		public Cndn sewadar_grno = new Cndn("sewadar_grno", typeof(String));
		public Cndn sewadar_status_dtm = new Cndn("sewadar_status_dtm", typeof(DateTime));
		public Cndn sewadar_status_cd = new Cndn("sewadar_status_cd", typeof(String));
		public Cndn centre_nm = new Cndn("centre_nm", typeof(String));
		public Cndn satsang_centre_id = new Cndn("satsang_centre_id", typeof(Int32));
		public Cndn full_department_nm = new Cndn("full_department_nm", typeof(String));
		public Cndn department_dt = new Cndn("department_dt", typeof(DateTime));
		public Cndn appointment_dt = new Cndn("appointment_dt", typeof(DateTime));
		public Cndn post_office_or_city_nm = new Cndn("post_office_or_city_nm", typeof(String));
		public Cndn district_or_city_id = new Cndn("district_or_city_id", typeof(Int32));
		public Cndn district_nm = new Cndn("district_nm", typeof(String));
		public Cndn state_nm = new Cndn("state_nm", typeof(String));
		public Cndn state_id = new Cndn("state_id", typeof(Int32));
		public Cndn country_nm = new Cndn("country_nm", typeof(String));
		public Cndn country_id = new Cndn("country_id", typeof(Int16));
		public Cndn txn_ts = new Cndn("txn_ts", typeof(Byte[]));
		public ViewSewadarsDetailSQLSelectQuery()
		{
			SqlObjectName = "ViewSewadarsDetail";
			SQLObjectType = SQLObjectTypes.View;

			lst.Add(sewadar_id);
			lst.Add(address_proof);
			lst.Add(other_address_proof_id);
			lst.Add(other_address_proof_nm);
			lst.Add(telephone_mobile);
			lst.Add(telephone_residence);
			lst.Add(telephone_office);
			lst.Add(occupation);
			lst.Add(attends_weekly_satsang);
			lst.Add(weekly_satsang_centre_id);
			lst.Add(weekly_satsang_centre_nm);
			lst.Add(has_hypertension);
			lst.Add(is_diabetic);
			lst.Add(has_skin_problem);
			lst.Add(has_epillepsy);
			lst.Add(address_type);
			lst.Add(address_line_1);
			lst.Add(address_line_2);
			lst.Add(post_office_or_city_id);
			lst.Add(pin_or_zip_code);
			lst.Add(full_nm);
			lst.Add(gender);
			lst.Add(age);
			lst.Add(global_sewadar_status_nm);
			lst.Add(global_sewadar_status_dt);
			lst.Add(sewadar_grno);
			lst.Add(sewadar_status_dtm);
			lst.Add(sewadar_status_cd);
			lst.Add(centre_nm);
			lst.Add(satsang_centre_id);
			lst.Add(full_department_nm);
			lst.Add(department_dt);
			lst.Add(appointment_dt);
			lst.Add(post_office_or_city_nm);
			lst.Add(district_or_city_id);
			lst.Add(district_nm);
			lst.Add(state_nm);
			lst.Add(state_id);
			lst.Add(country_nm);
			lst.Add(country_id);
			lst.Add(txn_ts);
		}
	}
	
	
	public class ViewSewadarsInSewadarListSQLSelectQuery : SQLSelectQuery
	{
		public Cndn sewadar_list_id = new Cndn("sewadar_list_id", typeof(Int32));
		public Cndn list_satsang_centre_id = new Cndn("list_satsang_centre_id", typeof(Int32));
		public Cndn list_centre_nm = new Cndn("list_centre_nm", typeof(String));
		public Cndn application_satsang_centre_id = new Cndn("application_satsang_centre_id", typeof(Int32));
		public Cndn sewadar_list_nm = new Cndn("sewadar_list_nm", typeof(String));
		public Cndn sewadar_list_use = new Cndn("sewadar_list_use", typeof(String));
		public Cndn sewadar_list_other_use = new Cndn("sewadar_list_other_use", typeof(String));
		public Cndn other_satsang_centre_sewadars = new Cndn("other_satsang_centre_sewadars", typeof(String));
		public Cndn is_other_satsang_centre = new Cndn("is_other_satsang_centre", typeof(String));
		public Cndn is_editing_allowed = new Cndn("is_editing_allowed", typeof(String));
		public Cndn remarks = new Cndn("remarks", typeof(String));
		public Cndn generated_dtm = new Cndn("generated_dtm", typeof(DateTime));
		public Cndn report_nm = new Cndn("report_nm", typeof(String));
		public Cndn session_id = new Cndn("session_id", typeof(Int32));
		public Cndn swd_satsang_centre_id = new Cndn("swd_satsang_centre_id", typeof(Int32));
		public Cndn swd_sewadar_gr_no = new Cndn("swd_sewadar_gr_no", typeof(String));
		public Cndn swd_centre_nm = new Cndn("swd_centre_nm", typeof(String));
		public Cndn old_satsang_centre_id = new Cndn("old_satsang_centre_id", typeof(Int32));
		public Cndn old_sewadar_grno = new Cndn("old_sewadar_grno", typeof(String));
		public Cndn swd_sewadar_id = new Cndn("swd_sewadar_id", typeof(Int32));
		public Cndn full_nm = new Cndn("full_nm", typeof(String));
		public Cndn sewadar_grno = new Cndn("sewadar_grno", typeof(String));
		public Cndn age = new Cndn("age", typeof(Int32));
		public Cndn gender = new Cndn("gender", typeof(String));
		public Cndn sewadar_status_nm = new Cndn("sewadar_status_nm", typeof(String));
		public Cndn sewadar_status_dtm = new Cndn("sewadar_status_dtm", typeof(DateTime));
		public Cndn department_nm = new Cndn("department_nm", typeof(String));
		public Cndn sub_department_nm = new Cndn("sub_department_nm", typeof(String));
		public Cndn department_dt = new Cndn("department_dt", typeof(DateTime));
		public ViewSewadarsInSewadarListSQLSelectQuery()
		{
			SqlObjectName = "ViewSewadarsInSewadarList";
			SQLObjectType = SQLObjectTypes.View;

			lst.Add(sewadar_list_id);
			lst.Add(list_satsang_centre_id);
			lst.Add(list_centre_nm);
			lst.Add(application_satsang_centre_id);
			lst.Add(sewadar_list_nm);
			lst.Add(sewadar_list_use);
			lst.Add(sewadar_list_other_use);
			lst.Add(other_satsang_centre_sewadars);
			lst.Add(is_other_satsang_centre);
			lst.Add(is_editing_allowed);
			lst.Add(remarks);
			lst.Add(generated_dtm);
			lst.Add(report_nm);
			lst.Add(session_id);
			lst.Add(swd_satsang_centre_id);
			lst.Add(swd_sewadar_gr_no);
			lst.Add(swd_centre_nm);
			lst.Add(old_satsang_centre_id);
			lst.Add(old_sewadar_grno);
			lst.Add(swd_sewadar_id);
			lst.Add(full_nm);
			lst.Add(sewadar_grno);
			lst.Add(age);
			lst.Add(gender);
			lst.Add(sewadar_status_nm);
			lst.Add(sewadar_status_dtm);
			lst.Add(department_nm);
			lst.Add(sub_department_nm);
			lst.Add(department_dt);
		}
	}
	
	
	public class ViewSewadarsParticularsSQLSelectQuery : SQLSelectQuery
	{
		public Cndn satsang_centre_id = new Cndn("satsang_centre_id", typeof(Int32));
		public Cndn centre_nm = new Cndn("centre_nm", typeof(String));
		public Cndn sewadar_grno = new Cndn("sewadar_grno", typeof(String));
		public Cndn full_nm = new Cndn("full_nm", typeof(String));
		public Cndn sewadar_id = new Cndn("sewadar_id", typeof(Int32));
		public Cndn age = new Cndn("age", typeof(Int32));
		public Cndn gender = new Cndn("gender", typeof(String));
		public Cndn sewadar_status_nm = new Cndn("sewadar_status_nm", typeof(String));
		public Cndn sewadar_status_dtm = new Cndn("sewadar_status_dtm", typeof(DateTime));
		public Cndn department_nm = new Cndn("department_nm", typeof(String));
		public Cndn sub_department_nm = new Cndn("sub_department_nm", typeof(String));
		public Cndn department_dt = new Cndn("department_dt", typeof(DateTime));
		public Cndn txn_ts = new Cndn("txn_ts", typeof(Byte[]));
		public ViewSewadarsParticularsSQLSelectQuery()
		{
			SqlObjectName = "ViewSewadarsParticulars";
			SQLObjectType = SQLObjectTypes.View;

			lst.Add(satsang_centre_id);
			lst.Add(centre_nm);
			lst.Add(sewadar_grno);
			lst.Add(full_nm);
			lst.Add(sewadar_id);
			lst.Add(age);
			lst.Add(gender);
			lst.Add(sewadar_status_nm);
			lst.Add(sewadar_status_dtm);
			lst.Add(department_nm);
			lst.Add(sub_department_nm);
			lst.Add(department_dt);
			lst.Add(txn_ts);
		}
	}
	
	
	public class ViewSewadarsRegistrationSQLSelectQuery : SQLSelectQuery
	{
		public Cndn is_outstation_sewadar = new Cndn("is_outstation_sewadar", typeof(String));
		public Cndn satsang_centre_id = new Cndn("satsang_centre_id", typeof(Int32));
		public Cndn weekly_sewa_location_id = new Cndn("weekly_sewa_location_id", typeof(Int32));
		public Cndn weekly_sewa_location_nm = new Cndn("weekly_sewa_location_nm", typeof(String));
		public Cndn department_nm = new Cndn("department_nm", typeof(String));
		public Cndn department_id = new Cndn("department_id", typeof(Int16));
		public Cndn weekly_department_nm = new Cndn("weekly_department_nm", typeof(String));
		public Cndn weekly_department_id = new Cndn("weekly_department_id", typeof(Int16));
		public Cndn sub_department_nm = new Cndn("sub_department_nm", typeof(String));
		public Cndn sub_department_id = new Cndn("sub_department_id", typeof(Int16));
		public Cndn sewadar_status_cd = new Cndn("sewadar_status_cd", typeof(String));
		public Cndn global_sewadar_status_dt = new Cndn("global_sewadar_status_dt", typeof(DateTime));
		public Cndn department_dt = new Cndn("department_dt", typeof(DateTime));
		public Cndn appointment_dt = new Cndn("appointment_dt", typeof(DateTime));
		public Cndn sewadar_grno = new Cndn("sewadar_grno", typeof(String));
		public Cndn sewadar_status_nm = new Cndn("sewadar_status_nm", typeof(String));
		public Cndn sewadar_status_dtm = new Cndn("sewadar_status_dtm", typeof(DateTime));
		public Cndn gender = new Cndn("gender", typeof(String));
		public Cndn age = new Cndn("age", typeof(Int32));
		public Cndn global_sewadar_status_nm = new Cndn("global_sewadar_status_nm", typeof(String));
		public Cndn centre_nm = new Cndn("centre_nm", typeof(String));
		public Cndn full_nm = new Cndn("full_nm", typeof(String));
		public Cndn sewadar_id = new Cndn("sewadar_id", typeof(Int32));
		public Cndn sp_centre_nm = new Cndn("sp_centre_nm", typeof(String));
		public Cndn sp_centre_id = new Cndn("sp_centre_id", typeof(Int32));
		public Cndn sp_sewadar_grno = new Cndn("sp_sewadar_grno", typeof(String));
		public Cndn sp_sponsorer_id = new Cndn("sp_sponsorer_id", typeof(Int32));
		public Cndn sp_full_nm = new Cndn("sp_full_nm", typeof(String));
		public Cndn sp_responsibility = new Cndn("sp_responsibility", typeof(String));
		public Cndn sp_sewadar_id = new Cndn("sp_sewadar_id", typeof(Int32));
		public Cndn sp_sewadar_status = new Cndn("sp_sewadar_status", typeof(String));
		public Cndn sp_years_in_sewa = new Cndn("sp_years_in_sewa", typeof(Int32));
		public Cndn s_centre_nm = new Cndn("s_centre_nm", typeof(String));
		public Cndn s_centre_id = new Cndn("s_centre_id", typeof(Int32));
		public Cndn s_full_nm = new Cndn("s_full_nm", typeof(String));
		public Cndn secretary_id = new Cndn("secretary_id", typeof(Int16));
		public Cndn as_centre_id = new Cndn("as_centre_id", typeof(Int32));
		public Cndn as_centre_nm = new Cndn("as_centre_nm", typeof(String));
		public Cndn as_full_nm = new Cndn("as_full_nm", typeof(String));
		public Cndn area_secretary_id = new Cndn("area_secretary_id", typeof(Int16));
		public Cndn sa_centre_nm = new Cndn("sa_centre_nm", typeof(String));
		public Cndn sa_centre_id = new Cndn("sa_centre_id", typeof(Int32));
		public Cndn sa_sewadar_grno = new Cndn("sa_sewadar_grno", typeof(String));
		public Cndn sa_sewadar_id = new Cndn("sa_sewadar_id", typeof(Int32));
		public Cndn sa_full_nm = new Cndn("sa_full_nm", typeof(String));
		public Cndn reference_2_centre_nm = new Cndn("reference_2_centre_nm", typeof(String));
		public Cndn reference_2_centre_id = new Cndn("reference_2_centre_id", typeof(Int32));
		public Cndn app_responsibility = new Cndn("app_responsibility", typeof(String));
		public Cndn app_sewadar_status = new Cndn("app_sewadar_status", typeof(String));
		public Cndn app_years_in_sewa = new Cndn("app_years_in_sewa", typeof(Int32));
		public Cndn reference_2_sewadar_id = new Cndn("reference_2_sewadar_id", typeof(Int32));
		public Cndn reference_2_relationship_nm = new Cndn("reference_2_relationship_nm", typeof(String));
		public Cndn reference_2_relationship = new Cndn("reference_2_relationship", typeof(Int16));
		public Cndn reference_2_department = new Cndn("reference_2_department", typeof(String));
		public Cndn ref2_sewadar_grno = new Cndn("ref2_sewadar_grno", typeof(String));
		public Cndn reference_2_nm = new Cndn("reference_2_nm", typeof(String));
		public Cndn ref2_sewadar_id = new Cndn("ref2_sewadar_id", typeof(Int32));
		public Cndn reference_1_centre_nm = new Cndn("reference_1_centre_nm", typeof(String));
		public Cndn reference_1_centre_id = new Cndn("reference_1_centre_id", typeof(Int32));
		public Cndn reference_1_relationship_nm = new Cndn("reference_1_relationship_nm", typeof(String));
		public Cndn reference_1_relationship = new Cndn("reference_1_relationship", typeof(Int16));
		public Cndn reference_1_department = new Cndn("reference_1_department", typeof(String));
		public Cndn reference_1_nm = new Cndn("reference_1_nm", typeof(String));
		public Cndn ref1_sewadar_grno = new Cndn("ref1_sewadar_grno", typeof(String));
		public Cndn ref1_sewadar_id = new Cndn("ref1_sewadar_id", typeof(Int32));
		public Cndn ss_centre_nm = new Cndn("ss_centre_nm", typeof(String));
		public Cndn ss_centre_id = new Cndn("ss_centre_id", typeof(Int32));
		public Cndn ss_sewadar_grno = new Cndn("ss_sewadar_grno", typeof(String));
		public Cndn ss_sewadar_id = new Cndn("ss_sewadar_id", typeof(Int32));
		public Cndn ss_full_nm = new Cndn("ss_full_nm", typeof(String));
		public Cndn ss_responsibility = new Cndn("ss_responsibility", typeof(String));
		public Cndn ss_sewadar_status = new Cndn("ss_sewadar_status", typeof(String));
		public Cndn ss_years_in_sewa = new Cndn("ss_years_in_sewa", typeof(Int32));
		public Cndn responsibility_dtm = new Cndn("responsibility_dtm", typeof(DateTime));
		public Cndn responsibility = new Cndn("responsibility", typeof(String));
		public Cndn sewadar_type = new Cndn("sewadar_type", typeof(String));
		public Cndn district_or_city_id = new Cndn("district_or_city_id", typeof(Int32));
		public Cndn district_nm = new Cndn("district_nm", typeof(String));
		public Cndn sewa_id = new Cndn("sewa_id", typeof(Int32));
		public Cndn sewa_nm = new Cndn("sewa_nm", typeof(String));
		public Cndn finish_dt = new Cndn("finish_dt", typeof(DateTime));
		public Cndn start_dt = new Cndn("start_dt", typeof(DateTime));
		public Cndn occupation = new Cndn("occupation", typeof(String));
		public Cndn state_id = new Cndn("state_id", typeof(Int32));
		public Cndn state_nm = new Cndn("state_nm", typeof(String));
		public Cndn txn_ts = new Cndn("txn_ts", typeof(Byte[]));
		public ViewSewadarsRegistrationSQLSelectQuery()
		{
			SqlObjectName = "ViewSewadarsRegistration";
			SQLObjectType = SQLObjectTypes.View;

			lst.Add(is_outstation_sewadar);
			lst.Add(satsang_centre_id);
			lst.Add(weekly_sewa_location_id);
			lst.Add(weekly_sewa_location_nm);
			lst.Add(department_nm);
			lst.Add(department_id);
			lst.Add(weekly_department_nm);
			lst.Add(weekly_department_id);
			lst.Add(sub_department_nm);
			lst.Add(sub_department_id);
			lst.Add(sewadar_status_cd);
			lst.Add(global_sewadar_status_dt);
			lst.Add(department_dt);
			lst.Add(appointment_dt);
			lst.Add(sewadar_grno);
			lst.Add(sewadar_status_nm);
			lst.Add(sewadar_status_dtm);
			lst.Add(gender);
			lst.Add(age);
			lst.Add(global_sewadar_status_nm);
			lst.Add(centre_nm);
			lst.Add(full_nm);
			lst.Add(sewadar_id);
			lst.Add(sp_centre_nm);
			lst.Add(sp_centre_id);
			lst.Add(sp_sewadar_grno);
			lst.Add(sp_sponsorer_id);
			lst.Add(sp_full_nm);
			lst.Add(sp_responsibility);
			lst.Add(sp_sewadar_id);
			lst.Add(sp_sewadar_status);
			lst.Add(sp_years_in_sewa);
			lst.Add(s_centre_nm);
			lst.Add(s_centre_id);
			lst.Add(s_full_nm);
			lst.Add(secretary_id);
			lst.Add(as_centre_id);
			lst.Add(as_centre_nm);
			lst.Add(as_full_nm);
			lst.Add(area_secretary_id);
			lst.Add(sa_centre_nm);
			lst.Add(sa_centre_id);
			lst.Add(sa_sewadar_grno);
			lst.Add(sa_sewadar_id);
			lst.Add(sa_full_nm);
			lst.Add(reference_2_centre_nm);
			lst.Add(reference_2_centre_id);
			lst.Add(app_responsibility);
			lst.Add(app_sewadar_status);
			lst.Add(app_years_in_sewa);
			lst.Add(reference_2_sewadar_id);
			lst.Add(reference_2_relationship_nm);
			lst.Add(reference_2_relationship);
			lst.Add(reference_2_department);
			lst.Add(ref2_sewadar_grno);
			lst.Add(reference_2_nm);
			lst.Add(ref2_sewadar_id);
			lst.Add(reference_1_centre_nm);
			lst.Add(reference_1_centre_id);
			lst.Add(reference_1_relationship_nm);
			lst.Add(reference_1_relationship);
			lst.Add(reference_1_department);
			lst.Add(reference_1_nm);
			lst.Add(ref1_sewadar_grno);
			lst.Add(ref1_sewadar_id);
			lst.Add(ss_centre_nm);
			lst.Add(ss_centre_id);
			lst.Add(ss_sewadar_grno);
			lst.Add(ss_sewadar_id);
			lst.Add(ss_full_nm);
			lst.Add(ss_responsibility);
			lst.Add(ss_sewadar_status);
			lst.Add(ss_years_in_sewa);
			lst.Add(responsibility_dtm);
			lst.Add(responsibility);
			lst.Add(sewadar_type);
			lst.Add(district_or_city_id);
			lst.Add(district_nm);
			lst.Add(sewa_id);
			lst.Add(sewa_nm);
			lst.Add(finish_dt);
			lst.Add(start_dt);
			lst.Add(occupation);
			lst.Add(state_id);
			lst.Add(state_nm);
			lst.Add(txn_ts);
		}
	}
	
	
	public class ViewSewadarsTableOnlySQLSelectQuery : SQLSelectQuery
	{
		public Cndn sewadar_id = new Cndn("sewadar_id", typeof(Int32));
		public Cndn first_nm = new Cndn("first_nm", typeof(String));
		public Cndn middle_nm = new Cndn("middle_nm", typeof(String));
		public Cndn last_nm = new Cndn("last_nm", typeof(String));
		public Cndn full_nm = new Cndn("full_nm", typeof(String));
		public Cndn gender = new Cndn("gender", typeof(String));
		public Cndn birth_dtm = new Cndn("birth_dtm", typeof(DateTime));
		public Cndn age = new Cndn("age", typeof(Int32));
		public Cndn is_married = new Cndn("is_married", typeof(String));
		public Cndn initiation_dt = new Cndn("initiation_dt", typeof(DateTime));
		public Cndn initiation_place_id = new Cndn("initiation_place_id", typeof(Int16));
		public Cndn place_nm = new Cndn("place_nm", typeof(String));
		public Cndn initiation_by = new Cndn("initiation_by", typeof(Byte));
		public Cndn current_satsang_centre_id = new Cndn("current_satsang_centre_id", typeof(Int32));
		public Cndn global_sewadar_status_cd = new Cndn("global_sewadar_status_cd", typeof(String));
		public Cndn global_sewadar_status_dt = new Cndn("global_sewadar_status_dt", typeof(DateTime));
		public Cndn current_sewadar_grno = new Cndn("current_sewadar_grno", typeof(String));
		public Cndn global_sewadar_status_nm = new Cndn("global_sewadar_status_nm", typeof(String));
		public Cndn centre_nm = new Cndn("centre_nm", typeof(String));
		public Cndn centre_cd = new Cndn("centre_cd", typeof(String));
		public Cndn txn_ts = new Cndn("txn_ts", typeof(Byte[]));
		public ViewSewadarsTableOnlySQLSelectQuery()
		{
			SqlObjectName = "ViewSewadarsTableOnly";
			SQLObjectType = SQLObjectTypes.View;

			lst.Add(sewadar_id);
			lst.Add(first_nm);
			lst.Add(middle_nm);
			lst.Add(last_nm);
			lst.Add(full_nm);
			lst.Add(gender);
			lst.Add(birth_dtm);
			lst.Add(age);
			lst.Add(is_married);
			lst.Add(initiation_dt);
			lst.Add(initiation_place_id);
			lst.Add(place_nm);
			lst.Add(initiation_by);
			lst.Add(current_satsang_centre_id);
			lst.Add(global_sewadar_status_cd);
			lst.Add(global_sewadar_status_dt);
			lst.Add(current_sewadar_grno);
			lst.Add(global_sewadar_status_nm);
			lst.Add(centre_nm);
			lst.Add(centre_cd);
			lst.Add(txn_ts);
		}
	}
	
	
	public class ViewSewadarsTransfersSQLSelectQuery : SQLSelectQuery
	{
		public Cndn satsang_centre_id = new Cndn("satsang_centre_id", typeof(Int32));
		public Cndn sewadar_grno = new Cndn("sewadar_grno", typeof(String));
		public Cndn sewadar_id = new Cndn("sewadar_id", typeof(Int32));
		public Cndn full_nm = new Cndn("full_nm", typeof(String));
		public Cndn department_dt = new Cndn("department_dt", typeof(DateTime));
		public Cndn effective_dt = new Cndn("effective_dt", typeof(DateTime));
		public Cndn old_department_id = new Cndn("old_department_id", typeof(Int16));
		public Cndn old_sub_department_id = new Cndn("old_sub_department_id", typeof(Int16));
		public Cndn department_id = new Cndn("department_id", typeof(Int16));
		public Cndn sub_department_id = new Cndn("sub_department_id", typeof(Int16));
		public Cndn remarks = new Cndn("remarks", typeof(String));
		public Cndn department_nm = new Cndn("department_nm", typeof(String));
		public Cndn sub_department_nm = new Cndn("sub_department_nm", typeof(String));
		public Cndn old_sub_department_nm = new Cndn("old_sub_department_nm", typeof(String));
		public Cndn old_department_nm = new Cndn("old_department_nm", typeof(String));
		public Cndn sewadar_status_nm = new Cndn("sewadar_status_nm", typeof(String));
		public Cndn sewadar_status_dtm = new Cndn("sewadar_status_dtm", typeof(DateTime));
		public Cndn gender = new Cndn("gender", typeof(String));
		public Cndn txn_ts = new Cndn("txn_ts", typeof(Byte[]));
		public ViewSewadarsTransfersSQLSelectQuery()
		{
			SqlObjectName = "ViewSewadarsTransfers";
			SQLObjectType = SQLObjectTypes.View;

			lst.Add(satsang_centre_id);
			lst.Add(sewadar_grno);
			lst.Add(sewadar_id);
			lst.Add(full_nm);
			lst.Add(department_dt);
			lst.Add(effective_dt);
			lst.Add(old_department_id);
			lst.Add(old_sub_department_id);
			lst.Add(department_id);
			lst.Add(sub_department_id);
			lst.Add(remarks);
			lst.Add(department_nm);
			lst.Add(sub_department_nm);
			lst.Add(old_sub_department_nm);
			lst.Add(old_department_nm);
			lst.Add(sewadar_status_nm);
			lst.Add(sewadar_status_dtm);
			lst.Add(gender);
			lst.Add(txn_ts);
		}
	}
	
	
	public class ViewSewadarWiseSewaSummarieSQLSelectQuery : SQLSelectQuery
	{
		public Cndn sewa_id = new Cndn("sewa_id", typeof(Int32));
		public Cndn satsang_centre_id = new Cndn("satsang_centre_id", typeof(Int32));
		public Cndn sewadar_grno = new Cndn("sewadar_grno", typeof(String));
		public Cndn present_cnt = new Cndn("present_cnt", typeof(Decimal));
		public Cndn exempt_cnt = new Cndn("exempt_cnt", typeof(Decimal));
		public Cndn leave_cnt = new Cndn("leave_cnt", typeof(Decimal));
		public Cndn absent_cnt = new Cndn("absent_cnt", typeof(Decimal));
		public Cndn sewa_nm = new Cndn("sewa_nm", typeof(String));
		public Cndn is_system_recorded = new Cndn("is_system_recorded", typeof(String));
		public Cndn old_sewa_id = new Cndn("old_sewa_id", typeof(Int32));
		public Cndn old_satsang_centre_id = new Cndn("old_satsang_centre_id", typeof(Int32));
		public Cndn old_sewadar_grno = new Cndn("old_sewadar_grno", typeof(String));
		public Cndn finish_dt = new Cndn("finish_dt", typeof(DateTime));
		public Cndn start_dt = new Cndn("start_dt", typeof(DateTime));
		public Cndn centre_nm = new Cndn("centre_nm", typeof(String));
		public Cndn full_nm = new Cndn("full_nm", typeof(String));
		public Cndn sewadar_id = new Cndn("sewadar_id", typeof(Int32));
		public Cndn age = new Cndn("age", typeof(Int32));
		public Cndn gender = new Cndn("gender", typeof(String));
		public Cndn sewadar_status_nm = new Cndn("sewadar_status_nm", typeof(String));
		public Cndn sewadar_status_dtm = new Cndn("sewadar_status_dtm", typeof(DateTime));
		public Cndn department_nm = new Cndn("department_nm", typeof(String));
		public Cndn sub_department_nm = new Cndn("sub_department_nm", typeof(String));
		public Cndn department_dt = new Cndn("department_dt", typeof(DateTime));
		public Cndn screen_id = new Cndn("screen_id", typeof(String));
		public Cndn is_editable = new Cndn("is_editable", typeof(String));
		public Cndn sewadar_txn_ts = new Cndn("sewadar_txn_ts", typeof(Byte[]));
		public ViewSewadarWiseSewaSummarieSQLSelectQuery()
		{
			SqlObjectName = "ViewSewadarWiseSewaSummarie";
			SQLObjectType = SQLObjectTypes.View;

			lst.Add(sewa_id);
			lst.Add(satsang_centre_id);
			lst.Add(sewadar_grno);
			lst.Add(present_cnt);
			lst.Add(exempt_cnt);
			lst.Add(leave_cnt);
			lst.Add(absent_cnt);
			lst.Add(sewa_nm);
			lst.Add(is_system_recorded);
			lst.Add(old_sewa_id);
			lst.Add(old_satsang_centre_id);
			lst.Add(old_sewadar_grno);
			lst.Add(finish_dt);
			lst.Add(start_dt);
			lst.Add(centre_nm);
			lst.Add(full_nm);
			lst.Add(sewadar_id);
			lst.Add(age);
			lst.Add(gender);
			lst.Add(sewadar_status_nm);
			lst.Add(sewadar_status_dtm);
			lst.Add(department_nm);
			lst.Add(sub_department_nm);
			lst.Add(department_dt);
			lst.Add(screen_id);
			lst.Add(is_editable);
			lst.Add(sewadar_txn_ts);
		}
	}
	
	
	public class ViewSewaExemptionSQLSelectQuery : SQLSelectQuery
	{
		public Cndn sewa_exemption_id = new Cndn("sewa_exemption_id", typeof(Int16));
		public Cndn sewa_exemption_nm = new Cndn("sewa_exemption_nm", typeof(String));
		public Cndn sewa_exemption_type = new Cndn("sewa_exemption_type", typeof(String));
		public Cndn sewa_applicability = new Cndn("sewa_applicability", typeof(String));
		public Cndn is_computed = new Cndn("is_computed", typeof(String));
		public Cndn effective_from = new Cndn("effective_from", typeof(DateTime));
		public Cndn effective_till = new Cndn("effective_till", typeof(DateTime));
		public Cndn txn_ts = new Cndn("txn_ts", typeof(Byte[]));
		public ViewSewaExemptionSQLSelectQuery()
		{
			SqlObjectName = "ViewSewaExemption";
			SQLObjectType = SQLObjectTypes.View;

			lst.Add(sewa_exemption_id);
			lst.Add(sewa_exemption_nm);
			lst.Add(sewa_exemption_type);
			lst.Add(sewa_applicability);
			lst.Add(is_computed);
			lst.Add(effective_from);
			lst.Add(effective_till);
			lst.Add(txn_ts);
		}
	}
	
	
	public class ViewSewasSQLSelectQuery : SQLSelectQuery
	{
		public Cndn sewa_id = new Cndn("sewa_id", typeof(Int32));
		public Cndn satsang_centre_id = new Cndn("satsang_centre_id", typeof(Int32));
		public Cndn sewa_cd = new Cndn("sewa_cd", typeof(String));
		public Cndn sewa_nm = new Cndn("sewa_nm", typeof(String));
		public Cndn start_dt = new Cndn("start_dt", typeof(DateTime));
		public Cndn finish_dt = new Cndn("finish_dt", typeof(DateTime));
		public Cndn is_satsang_programme = new Cndn("is_satsang_programme", typeof(String));
		public Cndn is_scanner_used = new Cndn("is_scanner_used", typeof(String));
		public Cndn is_leave_allowed = new Cndn("is_leave_allowed", typeof(String));
		public Cndn is_exemption_allowed = new Cndn("is_exemption_allowed", typeof(String));
		public Cndn is_default_sewa = new Cndn("is_default_sewa", typeof(String));
		public Cndn sewa_frequency = new Cndn("sewa_frequency", typeof(String));
		public Cndn attendance_unit = new Cndn("attendance_unit", typeof(String));
		public Cndn attendance_marking = new Cndn("attendance_marking", typeof(String));
		public Cndn min_sewa_duration = new Cndn("min_sewa_duration", typeof(Int16));
		public Cndn max_sewa_duration = new Cndn("max_sewa_duration", typeof(Int16));
		public Cndn gents_born_after = new Cndn("gents_born_after", typeof(DateTime));
		public Cndn ladies_born_after = new Cndn("ladies_born_after", typeof(DateTime));
		public Cndn referred_sewa_id = new Cndn("referred_sewa_id", typeof(Int32));
		public Cndn trainee_current_seq_id = new Cndn("trainee_current_seq_id", typeof(String));
		public Cndn open_sewadar_current_seq_id = new Cndn("open_sewadar_current_seq_id", typeof(String));
		public Cndn attendance_ts = new Cndn("attendance_ts", typeof(DateTime));
		public Cndn summary_ts = new Cndn("summary_ts", typeof(DateTime));
		public Cndn deleted_ts = new Cndn("deleted_ts", typeof(DateTime));
		public Cndn locked_dtm = new Cndn("locked_dtm", typeof(DateTime));
		public Cndn txn_ts = new Cndn("txn_ts", typeof(Byte[]));
		public Cndn referred_sewa_nm = new Cndn("referred_sewa_nm", typeof(String));
		public ViewSewasSQLSelectQuery()
		{
			SqlObjectName = "ViewSewas";
			SQLObjectType = SQLObjectTypes.View;

			lst.Add(sewa_id);
			lst.Add(satsang_centre_id);
			lst.Add(sewa_cd);
			lst.Add(sewa_nm);
			lst.Add(start_dt);
			lst.Add(finish_dt);
			lst.Add(is_satsang_programme);
			lst.Add(is_scanner_used);
			lst.Add(is_leave_allowed);
			lst.Add(is_exemption_allowed);
			lst.Add(is_default_sewa);
			lst.Add(sewa_frequency);
			lst.Add(attendance_unit);
			lst.Add(attendance_marking);
			lst.Add(min_sewa_duration);
			lst.Add(max_sewa_duration);
			lst.Add(gents_born_after);
			lst.Add(ladies_born_after);
			lst.Add(referred_sewa_id);
			lst.Add(trainee_current_seq_id);
			lst.Add(open_sewadar_current_seq_id);
			lst.Add(attendance_ts);
			lst.Add(summary_ts);
			lst.Add(deleted_ts);
			lst.Add(locked_dtm);
			lst.Add(txn_ts);
			lst.Add(referred_sewa_nm);
		}
	}
	
	
	public class ViewSewaTeamSQLSelectQuery : SQLSelectQuery
	{
		public Cndn sewa_team_id = new Cndn("sewa_team_id", typeof(Int32));
		public Cndn sewa_team_nm = new Cndn("sewa_team_nm", typeof(String));
		public Cndn team_description = new Cndn("team_description", typeof(String));
		public Cndn sewa_id = new Cndn("sewa_id", typeof(Int32));
		public Cndn acceptance_ts = new Cndn("acceptance_ts", typeof(DateTime));
		public Cndn satsang_centre_id = new Cndn("satsang_centre_id", typeof(Int32));
		public Cndn centre_nm = new Cndn("centre_nm", typeof(String));
		public Cndn sewa_nm = new Cndn("sewa_nm", typeof(String));
		public Cndn start_dt = new Cndn("start_dt", typeof(DateTime));
		public Cndn finish_dt = new Cndn("finish_dt", typeof(DateTime));
		public Cndn txn_ts = new Cndn("txn_ts", typeof(Byte[]));
		public ViewSewaTeamSQLSelectQuery()
		{
			SqlObjectName = "ViewSewaTeam";
			SQLObjectType = SQLObjectTypes.View;

			lst.Add(sewa_team_id);
			lst.Add(sewa_team_nm);
			lst.Add(team_description);
			lst.Add(sewa_id);
			lst.Add(acceptance_ts);
			lst.Add(satsang_centre_id);
			lst.Add(centre_nm);
			lst.Add(sewa_nm);
			lst.Add(start_dt);
			lst.Add(finish_dt);
			lst.Add(txn_ts);
		}
	}
	
	
	public class ViewSewaTeamAttendenceSQLSelectQuery : SQLSelectQuery
	{
		public Cndn satsang_centre_id = new Cndn("satsang_centre_id", typeof(Int32));
		public Cndn centre_nm = new Cndn("centre_nm", typeof(String));
		public Cndn sewa_team_id = new Cndn("sewa_team_id", typeof(Int32));
		public Cndn attendance_dt = new Cndn("attendance_dt", typeof(DateTime));
		public Cndn sewa_team_nm = new Cndn("sewa_team_nm", typeof(String));
		public Cndn sewa_id = new Cndn("sewa_id", typeof(Int32));
		public Cndn sewa_nm = new Cndn("sewa_nm", typeof(String));
		public Cndn finish_dt = new Cndn("finish_dt", typeof(DateTime));
		public Cndn start_dt = new Cndn("start_dt", typeof(DateTime));
		public Cndn txn_ts = new Cndn("txn_ts", typeof(Byte[]));
		public ViewSewaTeamAttendenceSQLSelectQuery()
		{
			SqlObjectName = "ViewSewaTeamAttendence";
			SQLObjectType = SQLObjectTypes.View;

			lst.Add(satsang_centre_id);
			lst.Add(centre_nm);
			lst.Add(sewa_team_id);
			lst.Add(attendance_dt);
			lst.Add(sewa_team_nm);
			lst.Add(sewa_id);
			lst.Add(sewa_nm);
			lst.Add(finish_dt);
			lst.Add(start_dt);
			lst.Add(txn_ts);
		}
	}
	
	
	public class ViewSpeakersSQLSelectQuery : SQLSelectQuery
	{
		public Cndn speaker_id = new Cndn("speaker_id", typeof(Int32));
		public Cndn full_nm = new Cndn("full_nm", typeof(String));
		public Cndn gender = new Cndn("gender", typeof(String));
		public Cndn birth_dtm = new Cndn("birth_dtm", typeof(DateTime));
		public Cndn age = new Cndn("age", typeof(Int32));
		public Cndn global_sewadar_status_cd = new Cndn("global_sewadar_status_cd", typeof(String));
		public Cndn global_sewadar_status_dt = new Cndn("global_sewadar_status_dt", typeof(DateTime));
		public Cndn sewadar_status_nm = new Cndn("sewadar_status_nm", typeof(String));
		public Cndn sewadar_status_dt = new Cndn("sewadar_status_dt", typeof(DateTime));
		public Cndn speaker_type = new Cndn("speaker_type", typeof(String));
		public Cndn satsang_centre_id = new Cndn("satsang_centre_id", typeof(Int32));
		public Cndn is_main_centre = new Cndn("is_main_centre", typeof(String));
		public Cndn centre_nm = new Cndn("centre_nm", typeof(String));
		public Cndn speaker_status = new Cndn("speaker_status", typeof(String));
		public Cndn speaker_status_dtm = new Cndn("speaker_status_dtm", typeof(DateTime));
		public Cndn txn_ts = new Cndn("txn_ts", typeof(Byte[]));
		public ViewSpeakersSQLSelectQuery()
		{
			SqlObjectName = "ViewSpeakers";
			SQLObjectType = SQLObjectTypes.View;

			lst.Add(speaker_id);
			lst.Add(full_nm);
			lst.Add(gender);
			lst.Add(birth_dtm);
			lst.Add(age);
			lst.Add(global_sewadar_status_cd);
			lst.Add(global_sewadar_status_dt);
			lst.Add(sewadar_status_nm);
			lst.Add(sewadar_status_dt);
			lst.Add(speaker_type);
			lst.Add(satsang_centre_id);
			lst.Add(is_main_centre);
			lst.Add(centre_nm);
			lst.Add(speaker_status);
			lst.Add(speaker_status_dtm);
			lst.Add(txn_ts);
		}
	}
	
	
	public class ViewSystemInformationCodesSQLSelectQuery : SQLSelectQuery
	{
		public Cndn system_info_cd = new Cndn("system_info_cd", typeof(String));
		public Cndn system_info_nm = new Cndn("system_info_nm", typeof(String));
		public Cndn remarks = new Cndn("remarks", typeof(String));
		public ViewSystemInformationCodesSQLSelectQuery()
		{
			SqlObjectName = "ViewSystemInformationCodes";
			SQLObjectType = SQLObjectTypes.View;

			lst.Add(system_info_cd);
			lst.Add(system_info_nm);
			lst.Add(remarks);
		}
	}
	
	
	public class ViewTeamDailyAttendenceSQLSelectQuery : SQLSelectQuery
	{
		public Cndn satsang_centre_id = new Cndn("satsang_centre_id", typeof(Int32));
		public Cndn sewa_id = new Cndn("sewa_id", typeof(Int32));
		public Cndn sewadar_id = new Cndn("sewadar_id", typeof(Int32));
		public Cndn sewadar_grno = new Cndn("sewadar_grno", typeof(String));
		public Cndn full_nm = new Cndn("full_nm", typeof(String));
		public Cndn centre_nm = new Cndn("centre_nm", typeof(String));
		public Cndn age = new Cndn("age", typeof(Int32));
		public Cndn sewadar_status_nm = new Cndn("sewadar_status_nm", typeof(String));
		public Cndn sewadar_status_dtm = new Cndn("sewadar_status_dtm", typeof(DateTime));
		public Cndn department_nm = new Cndn("department_nm", typeof(String));
		public Cndn sub_department_nm = new Cndn("sub_department_nm", typeof(String));
		public Cndn department_dt = new Cndn("department_dt", typeof(DateTime));
		public Cndn sewa_nm = new Cndn("sewa_nm", typeof(String));
		public Cndn finish_dt = new Cndn("finish_dt", typeof(DateTime));
		public Cndn start_dt = new Cndn("start_dt", typeof(DateTime));
		public Cndn screen_id = new Cndn("screen_id", typeof(String));
		public Cndn serial_id = new Cndn("serial_id", typeof(Int32));
		public Cndn sewa_team_id = new Cndn("sewa_team_id", typeof(Int32));
		public Cndn sewa_team_nm = new Cndn("sewa_team_nm", typeof(String));
		public Cndn enable = new Cndn("enable", typeof(String));
		public Cndn txn_ts = new Cndn("txn_ts", typeof(Byte[]));
		public ViewTeamDailyAttendenceSQLSelectQuery()
		{
			SqlObjectName = "ViewTeamDailyAttendence";
			SQLObjectType = SQLObjectTypes.View;

			lst.Add(satsang_centre_id);
			lst.Add(sewa_id);
			lst.Add(sewadar_id);
			lst.Add(sewadar_grno);
			lst.Add(full_nm);
			lst.Add(centre_nm);
			lst.Add(age);
			lst.Add(sewadar_status_nm);
			lst.Add(sewadar_status_dtm);
			lst.Add(department_nm);
			lst.Add(sub_department_nm);
			lst.Add(department_dt);
			lst.Add(sewa_nm);
			lst.Add(finish_dt);
			lst.Add(start_dt);
			lst.Add(screen_id);
			lst.Add(serial_id);
			lst.Add(sewa_team_id);
			lst.Add(sewa_team_nm);
			lst.Add(enable);
			lst.Add(txn_ts);
		}
	}
	
	
	public class ViewUsersSQLSelectQuery : SQLSelectQuery
	{
		public Cndn user_no = new Cndn("user_no", typeof(Int32));
		public Cndn user_id = new Cndn("user_id", typeof(String));
		public Cndn user_nm = new Cndn("user_nm", typeof(String));
		public Cndn email_id = new Cndn("email_id", typeof(String));
		public Cndn activation_dt = new Cndn("activation_dt", typeof(DateTime));
		public Cndn deactivation_dt = new Cndn("deactivation_dt", typeof(DateTime));
		public Cndn is_open_sewadar = new Cndn("is_open_sewadar", typeof(String));
		public Cndn sewadar_id = new Cndn("sewadar_id", typeof(Int32));
		public Cndn is_locked = new Cndn("is_locked", typeof(String));
		public Cndn user_role_id = new Cndn("user_role_id", typeof(String));
		public Cndn application_id = new Cndn("application_id", typeof(String));
		public ViewUsersSQLSelectQuery()
		{
			SqlObjectName = "ViewUsers";
			SQLObjectType = SQLObjectTypes.View;

			lst.Add(user_no);
			lst.Add(user_id);
			lst.Add(user_nm);
			lst.Add(email_id);
			lst.Add(activation_dt);
			lst.Add(deactivation_dt);
			lst.Add(is_open_sewadar);
			lst.Add(sewadar_id);
			lst.Add(is_locked);
			lst.Add(user_role_id);
			lst.Add(application_id);
		}
	}
	
	
	public class ViewWeeklySewaLocationSQLSelectQuery : SQLSelectQuery
	{
		public Cndn satsang_centre_id = new Cndn("satsang_centre_id", typeof(Int32));
		public Cndn weekly_sewa_location_id = new Cndn("weekly_sewa_location_id", typeof(Int32));
		public Cndn weekly_sewa_location_nm = new Cndn("weekly_sewa_location_nm", typeof(String));
		public Cndn remarks = new Cndn("remarks", typeof(String));
		public Cndn effective_from = new Cndn("effective_from", typeof(DateTime));
		public Cndn effective_till = new Cndn("effective_till", typeof(DateTime));
		public Cndn txn_ts = new Cndn("txn_ts", typeof(Byte[]));
		public ViewWeeklySewaLocationSQLSelectQuery()
		{
			SqlObjectName = "ViewWeeklySewaLocation";
			SQLObjectType = SQLObjectTypes.View;

			lst.Add(satsang_centre_id);
			lst.Add(weekly_sewa_location_id);
			lst.Add(weekly_sewa_location_nm);
			lst.Add(remarks);
			lst.Add(effective_from);
			lst.Add(effective_till);
			lst.Add(txn_ts);
		}
	}
	
	
	public class VwSewadarsAttributesSQLSelectQuery : SQLSelectQuery
	{
		public Cndn sewadar_id = new Cndn("sewadar_id", typeof(Int32));
		public Cndn first_nm = new Cndn("first_nm", typeof(String));
		public Cndn middle_nm = new Cndn("middle_nm", typeof(String));
		public Cndn last_nm = new Cndn("last_nm", typeof(String));
		public Cndn full_nm = new Cndn("full_nm", typeof(String));
		public Cndn gender = new Cndn("gender", typeof(String));
		public Cndn birth_dtm = new Cndn("birth_dtm", typeof(DateTime));
		public Cndn age = new Cndn("age", typeof(Int32));
		public Cndn is_married = new Cndn("is_married", typeof(String));
		public Cndn initiation_dt = new Cndn("initiation_dt", typeof(DateTime));
		public Cndn initiation_place_id = new Cndn("initiation_place_id", typeof(Int16));
		public Cndn place_nm = new Cndn("place_nm", typeof(String));
		public Cndn initiation_by = new Cndn("initiation_by", typeof(Byte));
		public Cndn satsang_centre_id = new Cndn("satsang_centre_id", typeof(Int32));
		public Cndn global_sewadar_status_cd = new Cndn("global_sewadar_status_cd", typeof(String));
		public Cndn global_sewadar_status_dt = new Cndn("global_sewadar_status_dt", typeof(DateTime));
		public Cndn sewadar_grno = new Cndn("sewadar_grno", typeof(String));
		public Cndn sewadar_type = new Cndn("sewadar_type", typeof(String));
		public Cndn sewadar_status_dtm = new Cndn("sewadar_status_dtm", typeof(DateTime));
		public Cndn global_sewadar_status_nm = new Cndn("global_sewadar_status_nm", typeof(String));
		public Cndn centre_nm = new Cndn("centre_nm", typeof(String));
		public Cndn centre_cd = new Cndn("centre_cd", typeof(String));
		public Cndn sewadar_status_dt = new Cndn("sewadar_status_dt", typeof(DateTime));
		public Cndn sewadar_status_nm = new Cndn("sewadar_status_nm", typeof(String));
		public Cndn sewadar_status_cd = new Cndn("sewadar_status_cd", typeof(String));
		public Cndn responsibility = new Cndn("responsibility", typeof(String));
		public Cndn department_dt = new Cndn("department_dt", typeof(DateTime));
		public Cndn appointment_dt = new Cndn("appointment_dt", typeof(DateTime));
		public Cndn department_nm = new Cndn("department_nm", typeof(String));
		public Cndn sub_department_nm = new Cndn("sub_department_nm", typeof(String));
		public Cndn full_department_nm = new Cndn("full_department_nm", typeof(String));
		public Cndn department_id = new Cndn("department_id", typeof(Int16));
		public Cndn sub_department_id = new Cndn("sub_department_id", typeof(Int16));
		public Cndn weekly_satsang_centre_id = new Cndn("weekly_satsang_centre_id", typeof(Int32));
		public Cndn weekly_satsang_centre_nm = new Cndn("weekly_satsang_centre_nm", typeof(String));
		public Cndn weekly_sewa_location_id = new Cndn("weekly_sewa_location_id", typeof(Int32));
		public Cndn F7Column = new Cndn("F7Column", typeof(String));
		public Cndn F8Column = new Cndn("F8Column", typeof(String));
		public Cndn txn_ts = new Cndn("txn_ts", typeof(Byte[]));
		public VwSewadarsAttributesSQLSelectQuery()
		{
			SqlObjectName = "VwSewadarsAttributes";
			SQLObjectType = SQLObjectTypes.View;

			lst.Add(sewadar_id);
			lst.Add(first_nm);
			lst.Add(middle_nm);
			lst.Add(last_nm);
			lst.Add(full_nm);
			lst.Add(gender);
			lst.Add(birth_dtm);
			lst.Add(age);
			lst.Add(is_married);
			lst.Add(initiation_dt);
			lst.Add(initiation_place_id);
			lst.Add(place_nm);
			lst.Add(initiation_by);
			lst.Add(satsang_centre_id);
			lst.Add(global_sewadar_status_cd);
			lst.Add(global_sewadar_status_dt);
			lst.Add(sewadar_grno);
			lst.Add(sewadar_type);
			lst.Add(sewadar_status_dtm);
			lst.Add(global_sewadar_status_nm);
			lst.Add(centre_nm);
			lst.Add(centre_cd);
			lst.Add(sewadar_status_dt);
			lst.Add(sewadar_status_nm);
			lst.Add(sewadar_status_cd);
			lst.Add(responsibility);
			lst.Add(department_dt);
			lst.Add(appointment_dt);
			lst.Add(department_nm);
			lst.Add(sub_department_nm);
			lst.Add(full_department_nm);
			lst.Add(department_id);
			lst.Add(sub_department_id);
			lst.Add(weekly_satsang_centre_id);
			lst.Add(weekly_satsang_centre_nm);
			lst.Add(weekly_sewa_location_id);
			lst.Add(F7Column);
			lst.Add(F8Column);
			lst.Add(txn_ts);
		}
	}
	
	
	public class Weekly_sewa_locationsSQLSelectQuery : SQLSelectQuery
	{
		public Cndn weekly_sewa_location_id = new Cndn("weekly_sewa_location_id", typeof(Int32));
		public Cndn weekly_sewa_location_nm = new Cndn("weekly_sewa_location_nm", typeof(String));
		public Cndn satsang_centre_id = new Cndn("satsang_centre_id", typeof(Int32));
		public Cndn remarks = new Cndn("remarks", typeof(String));
		public Cndn effective_from = new Cndn("effective_from", typeof(DateTime));
		public Cndn effective_till = new Cndn("effective_till", typeof(DateTime));
		public Cndn txn_ts = new Cndn("txn_ts", typeof(Byte[]));
		public Weekly_sewa_locationsSQLSelectQuery()
		{
			SqlObjectName = "Weekly_sewa_locations";

			lst.Add(weekly_sewa_location_id);
			lst.Add(weekly_sewa_location_nm);
			lst.Add(satsang_centre_id);
			lst.Add(remarks);
			lst.Add(effective_from);
			lst.Add(effective_till);
			lst.Add(txn_ts);
		}
	}
	
	
	public class Zzz_shft_prsncsSQLSelectQuery : SQLSelectQuery
	{
		public Cndn sewa_id = new Cndn("sewa_id", typeof(Int32));
		public Cndn satsang_centre_id = new Cndn("satsang_centre_id", typeof(Int32));
		public Cndn sewadar_grno = new Cndn("sewadar_grno", typeof(String));
		public Cndn presence_dt = new Cndn("presence_dt", typeof(DateTime));
		public Cndn sewa_shift = new Cndn("sewa_shift", typeof(String));
		public Cndn is_scanned = new Cndn("is_scanned", typeof(String));
		public Zzz_shft_prsncsSQLSelectQuery()
		{
			SqlObjectName = "Zzz_shft_prsncs";

			lst.Add(sewa_id);
			lst.Add(satsang_centre_id);
			lst.Add(sewadar_grno);
			lst.Add(presence_dt);
			lst.Add(sewa_shift);
			lst.Add(is_scanned);
		}
	}
}
