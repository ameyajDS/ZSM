// Generated on : 31 Jul 17 - 03:07:18
///This code is auto generated by CDF.
///Please don't alter the contents of this file

using System.Collections.Generic;
using System;
using System.Data;
using System.Data.SqlClient;
using DCC.UMB.CDF.DB;
using System.Text;
using System.Linq;
namespace DCC.DBFacade
{
	public partial class CDB_APPDbFacade
	{
		private List<string> dbTasks = new List<string>();
		public IDbManager ObjDBManager = null;
		public DCCSqlDataReader ExecuteSelectQuery(SQLSelectQuery sqlSelectQuery){return ObjDBManager.ExecuteReaderSQL(sqlSelectQuery.GetSQLSelectQuery());}
		public DataSet ExecuteSelectQueryDataSet(SQLSelectQuery sqlSelectQuery){return ObjDBManager.ExecuteSQL(sqlSelectQuery.GetSQLSelectQuery());}
		public void BeginTrans() { ObjDBManager.BeginTrans(); }
        public void CommitTrans() {
            //if (this.ObjDBManager.AuditLogId.HasValue)
            //{
            //    throw new Exception("CommitTran must consume the generated auditLog, call the other overload of CommitTran");
            //}
            ObjDBManager.CommitTrans(); 
        }
		public void RollbackTrans() { ObjDBManager.RollbackTrans(); }
		public void AddDbTask(string task){this.dbTasks.Add(task);}
		public void AddDbTasks(List<string> tasks) { this.dbTasks.AddRange(tasks); }
		public void ClearDbTasks(){this.dbTasks.Clear();}
		ParameterDirection IN = ParameterDirection.Input;
		ParameterDirection OUT = ParameterDirection.Output;
		SqlDbType BIGINT = SqlDbType.BigInt, BINARY = SqlDbType.Binary, BIT = SqlDbType.Bit,CHAR = SqlDbType.Char,DATE = SqlDbType.Date,
		DATETIME = SqlDbType.DateTime,DATETIME2 = SqlDbType.DateTime2,DATETIMEOFFSET = SqlDbType.DateTimeOffset,DECIMAL = SqlDbType.Decimal,
		FLOAT = SqlDbType.Float,IMAGE = SqlDbType.Image,INT = SqlDbType.Int,MONEY = SqlDbType.Money,NCHAR = SqlDbType.NChar,NTEXT = SqlDbType.NText,
		NVARCHAR = SqlDbType.NVarChar,REAL = SqlDbType.Real,SMALLDATETIME = SqlDbType.SmallDateTime,SMALLINT = SqlDbType.SmallInt,SMALLMONEY = SqlDbType.SmallMoney,
		STRUCTURED = SqlDbType.Structured,TEXT = SqlDbType.Text,TIME = SqlDbType.Time,TIMESTAMP = SqlDbType.Timestamp,TINYINT = SqlDbType.TinyInt,
		UDT = SqlDbType.Udt,UNIQUEIDENTIFIER = SqlDbType.UniqueIdentifier,VARBINARY = SqlDbType.VarBinary,VARCHAR = SqlDbType.VarChar,
		VARIANT = SqlDbType.Variant,XML = SqlDbType.Xml;
		private void csp(string parameterName, object paramValue, SqlDbType parameterType, ParameterDirection direction, List<SqlParameter> p) { p.Add(ObjDBManager.CreateSqlParameter(parameterName, paramValue, parameterType, direction)); }
		private string gps(string procName, List<SqlParameter> parms) { return ObjDBManager.GetPrintableSQLString(procName, parms); }
		private DataSet esp(string procName, List<SqlParameter> parms) { return ObjDBManager.ExecuteStoredProc(procName, parms); }
		public CDB_APPDbFacade(string applicationID) { this.ObjDBManager = DCC.UMB.CDF.Utils.UtilityManager.CreateDBManagerInstance(applicationID); }
		public DataSet ExecuteDbTasks()
		{
			try
			{
				StringBuilder sb = new StringBuilder();
				if (this.dbTasks.Count == 0) { this.AddDbTask("select 'No tasks were defined'"); }
				foreach(string task in this.dbTasks)
				{
					if (string.IsNullOrEmpty(task)) continue;
					sb.Append(task + ";");
					sb.AppendLine();
					sb.AppendLine();
				}
				return ObjDBManager.ExecuteSQL(sb.ToString(), 100);
			}
			finally
			{
				this.dbTasks.Clear();
			}
		}
		
		
		
		
		
		
		
		
		
private List<SqlParameter> CDBAuditLogOperation_Params(Int32? p_session_id, 
		                                                            String p_application_id, 
		                                                            Int32? p_user_no, 
		                                                            String p_user_role_id, 
		                                                            String p_operation, 
		                                                            String p_screen_id, 
		                                                            String p_object_id, 
		                                                            Int16? qualification_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_session_id", p_session_id, INT, IN, p);
			csp("p_application_id", p_application_id, CHAR, IN, p);
			csp("p_user_no", p_user_no, INT, IN, p);
			csp("p_user_role_id", p_user_role_id, VARCHAR, IN, p);
			csp("p_operation", p_operation, CHAR, IN, p);
			csp("p_screen_id", p_screen_id, CHAR, IN, p);
			csp("p_object_id", p_object_id, VARCHAR, IN, p);
			csp("qualification_id", qualification_id, SMALLINT, IN, p);
			return p;
		}
		
public DataSet CDBAuditLogOperation(Int32? p_session_id, 
		                                        String p_application_id, 
		                                        Int32? p_user_no, 
		                                        String p_user_role_id, 
		                                        String p_operation, 
		                                        String p_screen_id, 
		                                        String p_object_id, 
		                                        Int16? qualification_id)
		{
			List<SqlParameter> prms = CDBAuditLogOperation_Params(p_session_id, p_application_id, p_user_no, p_user_role_id, p_operation, p_screen_id, p_object_id, qualification_id);
			DataSet dset = esp("CDBAuditLogOperation", prms);

			return dset;
		}
		
public string CDBAuditLogOperationAsTask(Int32? p_session_id, 
		                                            String p_application_id, 
		                                            Int32? p_user_no, 
		                                            String p_user_role_id, 
		                                            String p_operation, 
		                                            String p_screen_id, 
		                                            String p_object_id, 
		                                            Int16? qualification_id)
		{
			List<SqlParameter> prms = CDBAuditLogOperation_Params(p_session_id, p_application_id, p_user_no, p_user_role_id, p_operation, p_screen_id, p_object_id, qualification_id);
			return gps("CDBAuditLogOperation", prms);

		}
		
		
		
		
		
		
		
private List<SqlParameter> Del_epabx_extensions_WU_Params(Int16? in_working_unit_id, 
		                                                                String in_epabx_extension)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("in_working_unit_id", in_working_unit_id, SMALLINT, IN, p);
			csp("in_epabx_extension", in_epabx_extension, CHAR, IN, p);
			return p;
		}
		
public DataSet Del_epabx_extensions_WU(Int16? in_working_unit_id, 
		                                            String in_epabx_extension)
		{
			List<SqlParameter> prms = Del_epabx_extensions_WU_Params(in_working_unit_id, in_epabx_extension);
			DataSet dset = esp("Del_epabx_extensions_WU", prms);

			return dset;
		}
		
public string Del_epabx_extensions_WUAsTask(Int16? in_working_unit_id, 
		                                                String in_epabx_extension)
		{
			List<SqlParameter> prms = Del_epabx_extensions_WU_Params(in_working_unit_id, in_epabx_extension);
			return gps("Del_epabx_extensions_WU", prms);

		}
		
		
		
private List<SqlParameter> Del_fax_lines_WU_Params(Int16? in_working_unit_id, 
		                                                        String in_fax_line)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("in_working_unit_id", in_working_unit_id, SMALLINT, IN, p);
			csp("in_fax_line", in_fax_line, CHAR, IN, p);
			return p;
		}
		
public DataSet Del_fax_lines_WU(Int16? in_working_unit_id, 
		                                    String in_fax_line)
		{
			List<SqlParameter> prms = Del_fax_lines_WU_Params(in_working_unit_id, in_fax_line);
			DataSet dset = esp("Del_fax_lines_WU", prms);

			return dset;
		}
		
public string Del_fax_lines_WUAsTask(Int16? in_working_unit_id, 
		                                        String in_fax_line)
		{
			List<SqlParameter> prms = Del_fax_lines_WU_Params(in_working_unit_id, in_fax_line);
			return gps("Del_fax_lines_WU", prms);

		}
		
		
		
private List<SqlParameter> Del_p_and_t_lines_WU_Params(Int16? in_working_unit_id, 
		                                                            String in_p_and_t_line)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("in_working_unit_id", in_working_unit_id, SMALLINT, IN, p);
			csp("in_p_and_t_line", in_p_and_t_line, CHAR, IN, p);
			return p;
		}
		
public DataSet Del_p_and_t_lines_WU(Int16? in_working_unit_id, 
		                                        String in_p_and_t_line)
		{
			List<SqlParameter> prms = Del_p_and_t_lines_WU_Params(in_working_unit_id, in_p_and_t_line);
			DataSet dset = esp("Del_p_and_t_lines_WU", prms);

			return dset;
		}
		
public string Del_p_and_t_lines_WUAsTask(Int16? in_working_unit_id, 
		                                            String in_p_and_t_line)
		{
			List<SqlParameter> prms = Del_p_and_t_lines_WU_Params(in_working_unit_id, in_p_and_t_line);
			return gps("Del_p_and_t_lines_WU", prms);

		}
		
		
		
private List<SqlParameter> DelAssistant_Services_Params(Int16? assistant_service_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("assistant_service_id", assistant_service_id, SMALLINT, IN, p);
			return p;
		}
		
public DataSet DelAssistant_Services(Int16? assistant_service_id)
		{
			List<SqlParameter> prms = DelAssistant_Services_Params(assistant_service_id);
			DataSet dset = esp("DelAssistant_Services", prms);

			return dset;
		}
		
public string DelAssistant_ServicesAsTask(Int16? assistant_service_id)
		{
			List<SqlParameter> prms = DelAssistant_Services_Params(assistant_service_id);
			return gps("DelAssistant_Services", prms);

		}
		
		
		
private List<SqlParameter> DelCameras_Params(Int16? p_cameraID, 
		                                                Int64? p_txn_ts)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_cameraID", p_cameraID, SMALLINT, IN, p);
			csp("p_txn_ts", p_txn_ts, BIGINT, IN, p);
			return p;
		}
		
public DataSet DelCameras(Int16? p_cameraID, 
		                                Int64? p_txn_ts)
		{
			List<SqlParameter> prms = DelCameras_Params(p_cameraID, p_txn_ts);
			DataSet dset = esp("DelCameras", prms);

			return dset;
		}
		
public string DelCamerasAsTask(Int16? p_cameraID, 
		                                    Int64? p_txn_ts)
		{
			List<SqlParameter> prms = DelCameras_Params(p_cameraID, p_txn_ts);
			return gps("DelCameras", prms);

		}
		
		
		
private List<SqlParameter> DelCountries_Params(Int16? p_countryID, 
		                                                    Int64? p_txn_ts)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_countryID", p_countryID, SMALLINT, IN, p);
			csp("p_txn_ts", p_txn_ts, BIGINT, IN, p);
			return p;
		}
		
public DataSet DelCountries(Int16? p_countryID, 
		                                Int64? p_txn_ts)
		{
			List<SqlParameter> prms = DelCountries_Params(p_countryID, p_txn_ts);
			DataSet dset = esp("DelCountries", prms);

			return dset;
		}
		
public string DelCountriesAsTask(Int16? p_countryID, 
		                                    Int64? p_txn_ts)
		{
			List<SqlParameter> prms = DelCountries_Params(p_countryID, p_txn_ts);
			return gps("DelCountries", prms);

		}
		
		
		
private List<SqlParameter> DelDepartments_Params(Int16? p_departmentID, 
		                                                    Int64? p_txn_ts)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_departmentID", p_departmentID, SMALLINT, IN, p);
			csp("p_txn_ts", p_txn_ts, BIGINT, IN, p);
			return p;
		}
		
public DataSet DelDepartments(Int16? p_departmentID, 
		                                    Int64? p_txn_ts)
		{
			List<SqlParameter> prms = DelDepartments_Params(p_departmentID, p_txn_ts);
			DataSet dset = esp("DelDepartments", prms);

			return dset;
		}
		
public string DelDepartmentsAsTask(Int16? p_departmentID, 
		                                        Int64? p_txn_ts)
		{
			List<SqlParameter> prms = DelDepartments_Params(p_departmentID, p_txn_ts);
			return gps("DelDepartments", prms);

		}
		
		
		
private List<SqlParameter> DelDeptGroups_Params(Int16? p_deptGroupID, 
		                                                    Int64? p_txn_ts)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_deptGroupID", p_deptGroupID, SMALLINT, IN, p);
			csp("p_txn_ts", p_txn_ts, BIGINT, IN, p);
			return p;
		}
		
public DataSet DelDeptGroups(Int16? p_deptGroupID, 
		                                Int64? p_txn_ts)
		{
			List<SqlParameter> prms = DelDeptGroups_Params(p_deptGroupID, p_txn_ts);
			DataSet dset = esp("DelDeptGroups", prms);

			return dset;
		}
		
public string DelDeptGroupsAsTask(Int16? p_deptGroupID, 
		                                        Int64? p_txn_ts)
		{
			List<SqlParameter> prms = DelDeptGroups_Params(p_deptGroupID, p_txn_ts);
			return gps("DelDeptGroups", prms);

		}
		
		
		
private List<SqlParameter> DelDeptPersons_Params(Int32? p_personID, 
		                                                    Int16? p_departmentID, 
		                                                    Int16? p_designationID, 
		                                                    DateTime? p_effectiveFrom)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_personID", p_personID, INT, IN, p);
			csp("p_departmentID", p_departmentID, SMALLINT, IN, p);
			csp("p_designationID", p_designationID, SMALLINT, IN, p);
			csp("p_effectiveFrom", p_effectiveFrom, DATETIME, IN, p);
			return p;
		}
		
public DataSet DelDeptPersons(Int32? p_personID, 
		                                    Int16? p_departmentID, 
		                                    Int16? p_designationID, 
		                                    DateTime? p_effectiveFrom)
		{
			List<SqlParameter> prms = DelDeptPersons_Params(p_personID, p_departmentID, p_designationID, p_effectiveFrom);
			DataSet dset = esp("DelDeptPersons", prms);

			return dset;
		}
		
public string DelDeptPersonsAsTask(Int32? p_personID, 
		                                        Int16? p_departmentID, 
		                                        Int16? p_designationID, 
		                                        DateTime? p_effectiveFrom)
		{
			List<SqlParameter> prms = DelDeptPersons_Params(p_personID, p_departmentID, p_designationID, p_effectiveFrom);
			return gps("DelDeptPersons", prms);

		}
		
		
		
private List<SqlParameter> DelDeptPTLines_Params(Int16? p_departmentID, 
		                                                    String p_PTLine)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_departmentID", p_departmentID, SMALLINT, IN, p);
			csp("p_PTLine", p_PTLine, CHAR, IN, p);
			return p;
		}
		
public DataSet DelDeptPTLines(Int16? p_departmentID, 
		                                    String p_PTLine)
		{
			List<SqlParameter> prms = DelDeptPTLines_Params(p_departmentID, p_PTLine);
			DataSet dset = esp("DelDeptPTLines", prms);

			return dset;
		}
		
public string DelDeptPTLinesAsTask(Int16? p_departmentID, 
		                                        String p_PTLine)
		{
			List<SqlParameter> prms = DelDeptPTLines_Params(p_departmentID, p_PTLine);
			return gps("DelDeptPTLines", prms);

		}
		
		
		
private List<SqlParameter> DelDesignations_Params(Int16? p_designationID, 
		                                                        Int64? p_txn_ts)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_designationID", p_designationID, SMALLINT, IN, p);
			csp("p_txn_ts", p_txn_ts, BIGINT, IN, p);
			return p;
		}
		
public DataSet DelDesignations(Int16? p_designationID, 
		                                    Int64? p_txn_ts)
		{
			List<SqlParameter> prms = DelDesignations_Params(p_designationID, p_txn_ts);
			DataSet dset = esp("DelDesignations", prms);

			return dset;
		}
		
public string DelDesignationsAsTask(Int16? p_designationID, 
		                                        Int64? p_txn_ts)
		{
			List<SqlParameter> prms = DelDesignations_Params(p_designationID, p_txn_ts);
			return gps("DelDesignations", prms);

		}
		
		
		
private List<SqlParameter> DelDistrictsOrCities_Params(Int32? p_distCityID, 
		                                                            Int64? p_txn_ts)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_distCityID", p_distCityID, INT, IN, p);
			csp("p_txn_ts", p_txn_ts, BIGINT, IN, p);
			return p;
		}
		
public DataSet DelDistrictsOrCities(Int32? p_distCityID, 
		                                        Int64? p_txn_ts)
		{
			List<SqlParameter> prms = DelDistrictsOrCities_Params(p_distCityID, p_txn_ts);
			DataSet dset = esp("DelDistrictsOrCities", prms);

			return dset;
		}
		
public string DelDistrictsOrCitiesAsTask(Int32? p_distCityID, 
		                                            Int64? p_txn_ts)
		{
			List<SqlParameter> prms = DelDistrictsOrCities_Params(p_distCityID, p_txn_ts);
			return gps("DelDistrictsOrCities", prms);

		}
		
		
		
private List<SqlParameter> DelEPABXExtensions_Params(Int16? p_departmentID, 
		                                                        String p_EPABXExt)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_departmentID", p_departmentID, SMALLINT, IN, p);
			csp("p_EPABXExt", p_EPABXExt, CHAR, IN, p);
			return p;
		}
		
public DataSet DelEPABXExtensions(Int16? p_departmentID, 
		                                        String p_EPABXExt)
		{
			List<SqlParameter> prms = DelEPABXExtensions_Params(p_departmentID, p_EPABXExt);
			DataSet dset = esp("DelEPABXExtensions", prms);

			return dset;
		}
		
public string DelEPABXExtensionsAsTask(Int16? p_departmentID, 
		                                            String p_EPABXExt)
		{
			List<SqlParameter> prms = DelEPABXExtensions_Params(p_departmentID, p_EPABXExt);
			return gps("DelEPABXExtensions", prms);

		}
		
		
		
private List<SqlParameter> DelEpabxLines_Params(String p_EpabxNo, 
		                                                    Int64? p_txn_ts)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_EpabxNo", p_EpabxNo, CHAR, IN, p);
			csp("p_txn_ts", p_txn_ts, BIGINT, IN, p);
			return p;
		}
		
public DataSet DelEpabxLines(String p_EpabxNo, 
		                                Int64? p_txn_ts)
		{
			List<SqlParameter> prms = DelEpabxLines_Params(p_EpabxNo, p_txn_ts);
			DataSet dset = esp("DelEpabxLines", prms);

			return dset;
		}
		
public string DelEpabxLinesAsTask(String p_EpabxNo, 
		                                        Int64? p_txn_ts)
		{
			List<SqlParameter> prms = DelEpabxLines_Params(p_EpabxNo, p_txn_ts);
			return gps("DelEpabxLines", prms);

		}
		
		
		
private List<SqlParameter> DeleteCountrie_Params(Int16? country_id, 
		                                                    Byte[] txn_ts)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("country_id", country_id, SMALLINT, IN, p);
			csp("txn_ts", txn_ts, TIMESTAMP, IN, p);
			return p;
		}
		
public DataSet DeleteCountrie(Int16? country_id, 
		                                    Byte[] txn_ts)
		{
			List<SqlParameter> prms = DeleteCountrie_Params(country_id, txn_ts);
			DataSet dset = esp("DeleteCountrie", prms);

			return dset;
		}
		
public string DeleteCountrieAsTask(Int16? country_id, 
		                                        Byte[] txn_ts)
		{
			List<SqlParameter> prms = DeleteCountrie_Params(country_id, txn_ts);
			return gps("DeleteCountrie", prms);

		}
		
		
		
private List<SqlParameter> DeleteDistrictsOrCitie_Params(Int32? district_or_city_id, 
		                                                            Byte[] txn_ts)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("district_or_city_id", district_or_city_id, INT, IN, p);
			csp("txn_ts", txn_ts, TIMESTAMP, IN, p);
			return p;
		}
		
public DataSet DeleteDistrictsOrCitie(Int32? district_or_city_id, 
		                                            Byte[] txn_ts)
		{
			List<SqlParameter> prms = DeleteDistrictsOrCitie_Params(district_or_city_id, txn_ts);
			DataSet dset = esp("DeleteDistrictsOrCitie", prms);

			return dset;
		}
		
public string DeleteDistrictsOrCitieAsTask(Int32? district_or_city_id, 
		                                                Byte[] txn_ts)
		{
			List<SqlParameter> prms = DeleteDistrictsOrCitie_Params(district_or_city_id, txn_ts);
			return gps("DeleteDistrictsOrCitie", prms);

		}
		
		
		
private List<SqlParameter> DeleteInitiationPlace_Params(Int16? place_id, 
		                                                            Byte[] txn_ts)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("place_id", place_id, SMALLINT, IN, p);
			csp("txn_ts", txn_ts, TIMESTAMP, IN, p);
			return p;
		}
		
public DataSet DeleteInitiationPlace(Int16? place_id, 
		                                        Byte[] txn_ts)
		{
			List<SqlParameter> prms = DeleteInitiationPlace_Params(place_id, txn_ts);
			DataSet dset = esp("DeleteInitiationPlace", prms);

			return dset;
		}
		
public string DeleteInitiationPlaceAsTask(Int16? place_id, 
		                                                Byte[] txn_ts)
		{
			List<SqlParameter> prms = DeleteInitiationPlace_Params(place_id, txn_ts);
			return gps("DeleteInitiationPlace", prms);

		}
		
		
		
private List<SqlParameter> DeleteOccupation_Params(Int16? occupation_id, 
		                                                        Byte[] txn_ts)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("occupation_id", occupation_id, SMALLINT, IN, p);
			csp("txn_ts", txn_ts, TIMESTAMP, IN, p);
			return p;
		}
		
public DataSet DeleteOccupation(Int16? occupation_id, 
		                                    Byte[] txn_ts)
		{
			List<SqlParameter> prms = DeleteOccupation_Params(occupation_id, txn_ts);
			DataSet dset = esp("DeleteOccupation", prms);

			return dset;
		}
		
public string DeleteOccupationAsTask(Int16? occupation_id, 
		                                        Byte[] txn_ts)
		{
			List<SqlParameter> prms = DeleteOccupation_Params(occupation_id, txn_ts);
			return gps("DeleteOccupation", prms);

		}
		
		
		
private List<SqlParameter> DeleteQlfctnSubject_Params(Int16? qlfctn_subject_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("qlfctn_subject_id", qlfctn_subject_id, SMALLINT, IN, p);
			return p;
		}
		
public DataSet DeleteQlfctnSubject(Int16? qlfctn_subject_id)
		{
			List<SqlParameter> prms = DeleteQlfctnSubject_Params(qlfctn_subject_id);
			DataSet dset = esp("DeleteQlfctnSubject", prms);

			return dset;
		}
		
public string DeleteQlfctnSubjectAsTask(Int16? qlfctn_subject_id)
		{
			List<SqlParameter> prms = DeleteQlfctnSubject_Params(qlfctn_subject_id);
			return gps("DeleteQlfctnSubject", prms);

		}
		
		
		
private List<SqlParameter> DeleteQualification_Params(Int16? qualification_id, 
		                                                            Byte[] txn_ts)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("qualification_id", qualification_id, SMALLINT, IN, p);
			csp("txn_ts", txn_ts, TIMESTAMP, IN, p);
			return p;
		}
		
public DataSet DeleteQualification(Int16? qualification_id, 
		                                        Byte[] txn_ts)
		{
			List<SqlParameter> prms = DeleteQualification_Params(qualification_id, txn_ts);
			DataSet dset = esp("DeleteQualification", prms);

			return dset;
		}
		
public string DeleteQualificationAsTask(Int16? qualification_id, 
		                                            Byte[] txn_ts)
		{
			List<SqlParameter> prms = DeleteQualification_Params(qualification_id, txn_ts);
			return gps("DeleteQualification", prms);

		}
		
		
		
private List<SqlParameter> DeleteQualificationsQlfctnSubject_Params(Int16? old_qualification_id, 
		                                                                        Int16? old_qlfctn_subject_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("old_qualification_id", old_qualification_id, SMALLINT, IN, p);
			csp("old_qlfctn_subject_id", old_qlfctn_subject_id, SMALLINT, IN, p);
			return p;
		}
		
public DataSet DeleteQualificationsQlfctnSubject(Int16? old_qualification_id, 
		                                                    Int16? old_qlfctn_subject_id)
		{
			List<SqlParameter> prms = DeleteQualificationsQlfctnSubject_Params(old_qualification_id, old_qlfctn_subject_id);
			DataSet dset = esp("DeleteQualificationsQlfctnSubject", prms);

			return dset;
		}
		
public string DeleteQualificationsQlfctnSubjectAsTask(Int16? old_qualification_id, 
		                                                            Int16? old_qlfctn_subject_id)
		{
			List<SqlParameter> prms = DeleteQualificationsQlfctnSubject_Params(old_qualification_id, old_qlfctn_subject_id);
			return gps("DeleteQualificationsQlfctnSubject", prms);

		}
		
		
		
private List<SqlParameter> DeleteRelation_Params(Int16? relation_id, 
		                                                    Byte[] txn_ts)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("relation_id", relation_id, SMALLINT, IN, p);
			csp("txn_ts", txn_ts, TIMESTAMP, IN, p);
			return p;
		}
		
public DataSet DeleteRelation(Int16? relation_id, 
		                                    Byte[] txn_ts)
		{
			List<SqlParameter> prms = DeleteRelation_Params(relation_id, txn_ts);
			DataSet dset = esp("DeleteRelation", prms);

			return dset;
		}
		
public string DeleteRelationAsTask(Int16? relation_id, 
		                                        Byte[] txn_ts)
		{
			List<SqlParameter> prms = DeleteRelation_Params(relation_id, txn_ts);
			return gps("DeleteRelation", prms);

		}
		
		
		
private List<SqlParameter> DeleteSatsangCentre_Params(Int32? satsang_centre_id, 
		                                                            String satsang_centre_cd, 
		                                                            String satsang_centre_nm, 
		                                                            String satsang_centre_type, 
		                                                            String address_line_1, 
		                                                            String address_line_2, 
		                                                            Int32? district_or_city_id, 
		                                                            String pin_or_zip_code, 
		                                                            Int32? secretary, 
		                                                            String telephones, 
		                                                            String email_addresses, 
		                                                            String fax_lines, 
		                                                            Byte[] txn_ts, 
		                                                            DateTime? effective_from, 
		                                                            DateTime? effective_till)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("satsang_centre_id", satsang_centre_id, INT, IN, p);
			csp("satsang_centre_cd", satsang_centre_cd, CHAR, IN, p);
			csp("satsang_centre_nm", satsang_centre_nm, VARCHAR, IN, p);
			csp("satsang_centre_type", satsang_centre_type, VARCHAR, IN, p);
			csp("address_line_1", address_line_1, VARCHAR, IN, p);
			csp("address_line_2", address_line_2, VARCHAR, IN, p);
			csp("district_or_city_id", district_or_city_id, INT, IN, p);
			csp("pin_or_zip_code", pin_or_zip_code, CHAR, IN, p);
			csp("secretary", secretary, INT, IN, p);
			csp("telephones", telephones, VARCHAR, IN, p);
			csp("email_addresses", email_addresses, VARCHAR, IN, p);
			csp("fax_lines", fax_lines, VARCHAR, IN, p);
			csp("txn_ts", txn_ts, TIMESTAMP, IN, p);
			csp("effective_from", effective_from, DATETIME, IN, p);
			csp("effective_till", effective_till, DATETIME, IN, p);
			return p;
		}
		
public DataSet DeleteSatsangCentre(Int32? satsang_centre_id, 
		                                        String satsang_centre_cd, 
		                                        String satsang_centre_nm, 
		                                        String satsang_centre_type, 
		                                        String address_line_1, 
		                                        String address_line_2, 
		                                        Int32? district_or_city_id, 
		                                        String pin_or_zip_code, 
		                                        Int32? secretary, 
		                                        String telephones, 
		                                        String email_addresses, 
		                                        String fax_lines, 
		                                        Byte[] txn_ts, 
		                                        DateTime? effective_from, 
		                                        DateTime? effective_till)
		{
			List<SqlParameter> prms = DeleteSatsangCentre_Params(satsang_centre_id, satsang_centre_cd, satsang_centre_nm, satsang_centre_type, address_line_1, address_line_2, district_or_city_id, pin_or_zip_code, secretary, telephones, email_addresses, fax_lines, txn_ts, effective_from, effective_till);
			DataSet dset = esp("DeleteSatsangCentre", prms);

			return dset;
		}
		
public string DeleteSatsangCentreAsTask(Int32? satsang_centre_id, 
		                                            String satsang_centre_cd, 
		                                            String satsang_centre_nm, 
		                                            String satsang_centre_type, 
		                                            String address_line_1, 
		                                            String address_line_2, 
		                                            Int32? district_or_city_id, 
		                                            String pin_or_zip_code, 
		                                            Int32? secretary, 
		                                            String telephones, 
		                                            String email_addresses, 
		                                            String fax_lines, 
		                                            Byte[] txn_ts, 
		                                            DateTime? effective_from, 
		                                            DateTime? effective_till)
		{
			List<SqlParameter> prms = DeleteSatsangCentre_Params(satsang_centre_id, satsang_centre_cd, satsang_centre_nm, satsang_centre_type, address_line_1, address_line_2, district_or_city_id, pin_or_zip_code, secretary, telephones, email_addresses, fax_lines, txn_ts, effective_from, effective_till);
			return gps("DeleteSatsangCentre", prms);

		}
		
		
		
private List<SqlParameter> DeleteSkill_Params(Int16? skill_id, 
		                                                    Byte[] txn_ts)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("skill_id", skill_id, SMALLINT, IN, p);
			csp("txn_ts", txn_ts, TIMESTAMP, IN, p);
			return p;
		}
		
public DataSet DeleteSkill(Int16? skill_id, 
		                                Byte[] txn_ts)
		{
			List<SqlParameter> prms = DeleteSkill_Params(skill_id, txn_ts);
			DataSet dset = esp("DeleteSkill", prms);

			return dset;
		}
		
public string DeleteSkillAsTask(Int16? skill_id, 
		                                    Byte[] txn_ts)
		{
			List<SqlParameter> prms = DeleteSkill_Params(skill_id, txn_ts);
			return gps("DeleteSkill", prms);

		}
		
		
		
private List<SqlParameter> DeleteState_Params(Int32? state_id, 
		                                                    Byte[] txn_ts)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("state_id", state_id, INT, IN, p);
			csp("txn_ts", txn_ts, TIMESTAMP, IN, p);
			return p;
		}
		
public DataSet DeleteState(Int32? state_id, 
		                                Byte[] txn_ts)
		{
			List<SqlParameter> prms = DeleteState_Params(state_id, txn_ts);
			DataSet dset = esp("DeleteState", prms);

			return dset;
		}
		
public string DeleteStateAsTask(Int32? state_id, 
		                                    Byte[] txn_ts)
		{
			List<SqlParameter> prms = DeleteState_Params(state_id, txn_ts);
			return gps("DeleteState", prms);

		}
		
		
		
private List<SqlParameter> DelInitiationPlace_Params(Int16? p_place_id, 
		                                                        Int64? p_txn_ts)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_place_id", p_place_id, SMALLINT, IN, p);
			csp("p_txn_ts", p_txn_ts, BIGINT, IN, p);
			return p;
		}
		
public DataSet DelInitiationPlace(Int16? p_place_id, 
		                                        Int64? p_txn_ts)
		{
			List<SqlParameter> prms = DelInitiationPlace_Params(p_place_id, p_txn_ts);
			DataSet dset = esp("DelInitiationPlace", prms);

			return dset;
		}
		
public string DelInitiationPlaceAsTask(Int16? p_place_id, 
		                                            Int64? p_txn_ts)
		{
			List<SqlParameter> prms = DelInitiationPlace_Params(p_place_id, p_txn_ts);
			return gps("DelInitiationPlace", prms);

		}
		
		
		
private List<SqlParameter> DelLanguages_Params(Int32? p_language_id, 
		                                                    Int64? p_txn_ts)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_language_id", p_language_id, INT, IN, p);
			csp("p_txn_ts", p_txn_ts, BIGINT, IN, p);
			return p;
		}
		
public DataSet DelLanguages(Int32? p_language_id, 
		                                Int64? p_txn_ts)
		{
			List<SqlParameter> prms = DelLanguages_Params(p_language_id, p_txn_ts);
			DataSet dset = esp("DelLanguages", prms);

			return dset;
		}
		
public string DelLanguagesAsTask(Int32? p_language_id, 
		                                    Int64? p_txn_ts)
		{
			List<SqlParameter> prms = DelLanguages_Params(p_language_id, p_txn_ts);
			return gps("DelLanguages", prms);

		}
		
		
		
private List<SqlParameter> DelMeasuringUnits_Params(Int16? p_measuring_unit_id, 
		                                                        Int64? p_txn_ts)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_measuring_unit_id", p_measuring_unit_id, SMALLINT, IN, p);
			csp("p_txn_ts", p_txn_ts, BIGINT, IN, p);
			return p;
		}
		
public DataSet DelMeasuringUnits(Int16? p_measuring_unit_id, 
		                                    Int64? p_txn_ts)
		{
			List<SqlParameter> prms = DelMeasuringUnits_Params(p_measuring_unit_id, p_txn_ts);
			DataSet dset = esp("DelMeasuringUnits", prms);

			return dset;
		}
		
public string DelMeasuringUnitsAsTask(Int16? p_measuring_unit_id, 
		                                            Int64? p_txn_ts)
		{
			List<SqlParameter> prms = DelMeasuringUnits_Params(p_measuring_unit_id, p_txn_ts);
			return gps("DelMeasuringUnits", prms);

		}
		
		
		
private List<SqlParameter> DelOccupations_Params(Int16? p_occupationID, 
		                                                    Int64? p_txn_ts)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_occupationID", p_occupationID, SMALLINT, IN, p);
			csp("p_txn_ts", p_txn_ts, BIGINT, IN, p);
			return p;
		}
		
public DataSet DelOccupations(Int16? p_occupationID, 
		                                    Int64? p_txn_ts)
		{
			List<SqlParameter> prms = DelOccupations_Params(p_occupationID, p_txn_ts);
			DataSet dset = esp("DelOccupations", prms);

			return dset;
		}
		
public string DelOccupationsAsTask(Int16? p_occupationID, 
		                                        Int64? p_txn_ts)
		{
			List<SqlParameter> prms = DelOccupations_Params(p_occupationID, p_txn_ts);
			return gps("DelOccupations", prms);

		}
		
		
		
private List<SqlParameter> DelParties_Params(Int32? p_party_id, 
		                                                Int64? p_txn_ts, 
		                                                String p_application_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_party_id", p_party_id, INT, IN, p);
			csp("p_txn_ts", p_txn_ts, BIGINT, IN, p);
			csp("p_application_id", p_application_id, CHAR, IN, p);
			return p;
		}
		
public DataSet DelParties(Int32? p_party_id, 
		                                Int64? p_txn_ts, 
		                                String p_application_id)
		{
			List<SqlParameter> prms = DelParties_Params(p_party_id, p_txn_ts, p_application_id);
			DataSet dset = esp("DelParties", prms);

			return dset;
		}
		
public string DelPartiesAsTask(Int32? p_party_id, 
		                                    Int64? p_txn_ts, 
		                                    String p_application_id)
		{
			List<SqlParameter> prms = DelParties_Params(p_party_id, p_txn_ts, p_application_id);
			return gps("DelParties", prms);

		}
		
		
		
private List<SqlParameter> DelPartyAddresses_Params(Int32? p_party_address_id, 
		                                                        Int32? p_party_id, 
		                                                        String p_application_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_party_address_id", p_party_address_id, INT, IN, p);
			csp("p_party_id", p_party_id, INT, IN, p);
			csp("p_application_id", p_application_id, CHAR, IN, p);
			return p;
		}
		
public DataSet DelPartyAddresses(Int32? p_party_address_id, 
		                                    Int32? p_party_id, 
		                                    String p_application_id)
		{
			List<SqlParameter> prms = DelPartyAddresses_Params(p_party_address_id, p_party_id, p_application_id);
			DataSet dset = esp("DelPartyAddresses", prms);

			return dset;
		}
		
public string DelPartyAddressesAsTask(Int32? p_party_address_id, 
		                                            Int32? p_party_id, 
		                                            String p_application_id)
		{
			List<SqlParameter> prms = DelPartyAddresses_Params(p_party_address_id, p_party_id, p_application_id);
			return gps("DelPartyAddresses", prms);

		}
		
		
		
private List<SqlParameter> DelPartyRoleApplication_Params(Int32? p_party_id, 
		                                                                String p_old_role_cd, 
		                                                                String p_old_application_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_party_id", p_party_id, INT, IN, p);
			csp("p_old_role_cd", p_old_role_cd, CHAR, IN, p);
			csp("p_old_application_id", p_old_application_id, CHAR, IN, p);
			return p;
		}
		
public DataSet DelPartyRoleApplication(Int32? p_party_id, 
		                                            String p_old_role_cd, 
		                                            String p_old_application_id)
		{
			List<SqlParameter> prms = DelPartyRoleApplication_Params(p_party_id, p_old_role_cd, p_old_application_id);
			DataSet dset = esp("DelPartyRoleApplication", prms);

			return dset;
		}
		
public string DelPartyRoleApplicationAsTask(Int32? p_party_id, 
		                                                String p_old_role_cd, 
		                                                String p_old_application_id)
		{
			List<SqlParameter> prms = DelPartyRoleApplication_Params(p_party_id, p_old_role_cd, p_old_application_id);
			return gps("DelPartyRoleApplication", prms);

		}
		
		
		
private List<SqlParameter> DelPartyRoles_Params(Int32? p_party_id, 
		                                                    String p_old_role_cd, 
		                                                    String p_application_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_party_id", p_party_id, INT, IN, p);
			csp("p_old_role_cd", p_old_role_cd, CHAR, IN, p);
			csp("p_application_id", p_application_id, CHAR, IN, p);
			return p;
		}
		
public DataSet DelPartyRoles(Int32? p_party_id, 
		                                String p_old_role_cd, 
		                                String p_application_id)
		{
			List<SqlParameter> prms = DelPartyRoles_Params(p_party_id, p_old_role_cd, p_application_id);
			DataSet dset = esp("DelPartyRoles", prms);

			return dset;
		}
		
public string DelPartyRolesAsTask(Int32? p_party_id, 
		                                        String p_old_role_cd, 
		                                        String p_application_id)
		{
			List<SqlParameter> prms = DelPartyRoles_Params(p_party_id, p_old_role_cd, p_application_id);
			return gps("DelPartyRoles", prms);

		}
		
		
		
private List<SqlParameter> DelPersons_Params(Int32? p_personID, 
		                                                String p_package_id, 
		                                                String p_screenID, 
		                                                Int64? p_txn_ts)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_personID", p_personID, INT, IN, p);
			csp("p_package_id", p_package_id, CHAR, IN, p);
			csp("p_screenID", p_screenID, CHAR, IN, p);
			csp("p_txn_ts", p_txn_ts, BIGINT, IN, p);
			return p;
		}
		
public DataSet DelPersons(Int32? p_personID, 
		                                String p_package_id, 
		                                String p_screenID, 
		                                Int64? p_txn_ts)
		{
			List<SqlParameter> prms = DelPersons_Params(p_personID, p_package_id, p_screenID, p_txn_ts);
			DataSet dset = esp("DelPersons", prms);

			return dset;
		}
		
public string DelPersonsAsTask(Int32? p_personID, 
		                                    String p_package_id, 
		                                    String p_screenID, 
		                                    Int64? p_txn_ts)
		{
			List<SqlParameter> prms = DelPersons_Params(p_personID, p_package_id, p_screenID, p_txn_ts);
			return gps("DelPersons", prms);

		}
		
		
		
private List<SqlParameter> DelPostOffices_Params(Int32? p_post_office_ID, 
		                                                    Int64? p_txn_ts)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_post_office_ID", p_post_office_ID, INT, IN, p);
			csp("p_txn_ts", p_txn_ts, BIGINT, IN, p);
			return p;
		}
		
public DataSet DelPostOffices(Int32? p_post_office_ID, 
		                                    Int64? p_txn_ts)
		{
			List<SqlParameter> prms = DelPostOffices_Params(p_post_office_ID, p_txn_ts);
			DataSet dset = esp("DelPostOffices", prms);

			return dset;
		}
		
public string DelPostOfficesAsTask(Int32? p_post_office_ID, 
		                                        Int64? p_txn_ts)
		{
			List<SqlParameter> prms = DelPostOffices_Params(p_post_office_ID, p_txn_ts);
			return gps("DelPostOffices", prms);

		}
		
		
		
private List<SqlParameter> DelPTLines_Params(String p_telephoneNo, 
		                                                Int64? p_txn_ts)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_telephoneNo", p_telephoneNo, CHAR, IN, p);
			csp("p_txn_ts", p_txn_ts, BIGINT, IN, p);
			return p;
		}
		
public DataSet DelPTLines(String p_telephoneNo, 
		                                Int64? p_txn_ts)
		{
			List<SqlParameter> prms = DelPTLines_Params(p_telephoneNo, p_txn_ts);
			DataSet dset = esp("DelPTLines", prms);

			return dset;
		}
		
public string DelPTLinesAsTask(String p_telephoneNo, 
		                                    Int64? p_txn_ts)
		{
			List<SqlParameter> prms = DelPTLines_Params(p_telephoneNo, p_txn_ts);
			return gps("DelPTLines", prms);

		}
		
		
		
private List<SqlParameter> DelQlfctn_Subjects_Params(Int16? qlfctn_subject_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("qlfctn_subject_id", qlfctn_subject_id, SMALLINT, IN, p);
			return p;
		}
		
public DataSet DelQlfctn_Subjects(Int16? qlfctn_subject_id)
		{
			List<SqlParameter> prms = DelQlfctn_Subjects_Params(qlfctn_subject_id);
			DataSet dset = esp("DelQlfctn_Subjects", prms);

			return dset;
		}
		
public string DelQlfctn_SubjectsAsTask(Int16? qlfctn_subject_id)
		{
			List<SqlParameter> prms = DelQlfctn_Subjects_Params(qlfctn_subject_id);
			return gps("DelQlfctn_Subjects", prms);

		}
		
		
		
private List<SqlParameter> Delqualifications_Params(Int16? qualification_ID)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("qualification_ID", qualification_ID, SMALLINT, IN, p);
			return p;
		}
		
public DataSet Delqualifications(Int16? qualification_ID)
		{
			List<SqlParameter> prms = Delqualifications_Params(qualification_ID);
			DataSet dset = esp("Delqualifications", prms);

			return dset;
		}
		
public string DelqualificationsAsTask(Int16? qualification_ID)
		{
			List<SqlParameter> prms = Delqualifications_Params(qualification_ID);
			return gps("Delqualifications", prms);

		}
		
		
		
private List<SqlParameter> Delqualifications_qlfctn_subjects_Params(Int16? qualification_id, 
		                                                                        Int16? qlfctn_subject_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("qualification_id", qualification_id, SMALLINT, IN, p);
			csp("qlfctn_subject_id", qlfctn_subject_id, SMALLINT, IN, p);
			return p;
		}
		
public DataSet Delqualifications_qlfctn_subjects(Int16? qualification_id, 
		                                                    Int16? qlfctn_subject_id)
		{
			List<SqlParameter> prms = Delqualifications_qlfctn_subjects_Params(qualification_id, qlfctn_subject_id);
			DataSet dset = esp("Delqualifications_qlfctn_subjects", prms);

			return dset;
		}
		
public string Delqualifications_qlfctn_subjectsAsTask(Int16? qualification_id, 
		                                                            Int16? qlfctn_subject_id)
		{
			List<SqlParameter> prms = Delqualifications_qlfctn_subjects_Params(qualification_id, qlfctn_subject_id);
			return gps("Delqualifications_qlfctn_subjects", prms);

		}
		
		
		
private List<SqlParameter> DelRelations_Params(Int16? p_relationID, 
		                                                    Int64? p_txn_ts)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_relationID", p_relationID, SMALLINT, IN, p);
			csp("p_txn_ts", p_txn_ts, BIGINT, IN, p);
			return p;
		}
		
public DataSet DelRelations(Int16? p_relationID, 
		                                Int64? p_txn_ts)
		{
			List<SqlParameter> prms = DelRelations_Params(p_relationID, p_txn_ts);
			DataSet dset = esp("DelRelations", prms);

			return dset;
		}
		
public string DelRelationsAsTask(Int16? p_relationID, 
		                                    Int64? p_txn_ts)
		{
			List<SqlParameter> prms = DelRelations_Params(p_relationID, p_txn_ts);
			return gps("DelRelations", prms);

		}
		
		
		
private List<SqlParameter> DelRepresentatives_Params(Int32? p_representativeID, 
		                                                        Int64? p_txn_ts)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_representativeID", p_representativeID, INT, IN, p);
			csp("p_txn_ts", p_txn_ts, BIGINT, IN, p);
			return p;
		}
		
public DataSet DelRepresentatives(Int32? p_representativeID, 
		                                        Int64? p_txn_ts)
		{
			List<SqlParameter> prms = DelRepresentatives_Params(p_representativeID, p_txn_ts);
			DataSet dset = esp("DelRepresentatives", prms);

			return dset;
		}
		
public string DelRepresentativesAsTask(Int32? p_representativeID, 
		                                            Int64? p_txn_ts)
		{
			List<SqlParameter> prms = DelRepresentatives_Params(p_representativeID, p_txn_ts);
			return gps("DelRepresentatives", prms);

		}
		
		
		
private List<SqlParameter> DelRoles_Params(String p_role_cd, 
		                                                Int64? p_txn_ts)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_role_cd", p_role_cd, CHAR, IN, p);
			csp("p_txn_ts", p_txn_ts, BIGINT, IN, p);
			return p;
		}
		
public DataSet DelRoles(String p_role_cd, 
		                            Int64? p_txn_ts)
		{
			List<SqlParameter> prms = DelRoles_Params(p_role_cd, p_txn_ts);
			DataSet dset = esp("DelRoles", prms);

			return dset;
		}
		
public string DelRolesAsTask(String p_role_cd, 
		                                Int64? p_txn_ts)
		{
			List<SqlParameter> prms = DelRoles_Params(p_role_cd, p_txn_ts);
			return gps("DelRoles", prms);

		}
		
		
		
private List<SqlParameter> DelRolesAppControls_Params(String p_role_cd, 
		                                                            String p_owner_app_id, 
		                                                            String p_application_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_role_cd", p_role_cd, CHAR, IN, p);
			csp("p_owner_app_id", p_owner_app_id, CHAR, IN, p);
			csp("p_application_id", p_application_id, CHAR, IN, p);
			return p;
		}
		
public DataSet DelRolesAppControls(String p_role_cd, 
		                                        String p_owner_app_id, 
		                                        String p_application_id)
		{
			List<SqlParameter> prms = DelRolesAppControls_Params(p_role_cd, p_owner_app_id, p_application_id);
			DataSet dset = esp("DelRolesAppControls", prms);

			return dset;
		}
		
public string DelRolesAppControlsAsTask(String p_role_cd, 
		                                            String p_owner_app_id, 
		                                            String p_application_id)
		{
			List<SqlParameter> prms = DelRolesAppControls_Params(p_role_cd, p_owner_app_id, p_application_id);
			return gps("DelRolesAppControls", prms);

		}
		
		
		
private List<SqlParameter> DelSatsangCentres_Params(Int32? p_satsang_centre_id, 
		                                                        Int64? p_txn_ts, 
		                                                        Int32? p_person_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_satsang_centre_id", p_satsang_centre_id, INT, IN, p);
			csp("p_txn_ts", p_txn_ts, BIGINT, IN, p);
			csp("p_person_id", p_person_id, INT, IN, p);
			return p;
		}
		
public DataSet DelSatsangCentres(Int32? p_satsang_centre_id, 
		                                    Int64? p_txn_ts, 
		                                    Int32? p_person_id)
		{
			List<SqlParameter> prms = DelSatsangCentres_Params(p_satsang_centre_id, p_txn_ts, p_person_id);
			DataSet dset = esp("DelSatsangCentres", prms);

			return dset;
		}
		
public string DelSatsangCentresAsTask(Int32? p_satsang_centre_id, 
		                                            Int64? p_txn_ts, 
		                                            Int32? p_person_id)
		{
			List<SqlParameter> prms = DelSatsangCentres_Params(p_satsang_centre_id, p_txn_ts, p_person_id);
			return gps("DelSatsangCentres", prms);

		}
		
		
		
private List<SqlParameter> DelSewadarTypes_Params(Int32? p_sewadartype_id, 
		                                                        Int64? p_txn_ts)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_sewadartype_id", p_sewadartype_id, INT, IN, p);
			csp("p_txn_ts", p_txn_ts, BIGINT, IN, p);
			return p;
		}
		
public DataSet DelSewadarTypes(Int32? p_sewadartype_id, 
		                                    Int64? p_txn_ts)
		{
			List<SqlParameter> prms = DelSewadarTypes_Params(p_sewadartype_id, p_txn_ts);
			DataSet dset = esp("DelSewadarTypes", prms);

			return dset;
		}
		
public string DelSewadarTypesAsTask(Int32? p_sewadartype_id, 
		                                        Int64? p_txn_ts)
		{
			List<SqlParameter> prms = DelSewadarTypes_Params(p_sewadartype_id, p_txn_ts);
			return gps("DelSewadarTypes", prms);

		}
		
		
		
private List<SqlParameter> DelSkills_Params(Int16? p_skillID, 
		                                                Int64? p_txn_ts)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_skillID", p_skillID, SMALLINT, IN, p);
			csp("p_txn_ts", p_txn_ts, BIGINT, IN, p);
			return p;
		}
		
public DataSet DelSkills(Int16? p_skillID, 
		                            Int64? p_txn_ts)
		{
			List<SqlParameter> prms = DelSkills_Params(p_skillID, p_txn_ts);
			DataSet dset = esp("DelSkills", prms);

			return dset;
		}
		
public string DelSkillsAsTask(Int16? p_skillID, 
		                                    Int64? p_txn_ts)
		{
			List<SqlParameter> prms = DelSkills_Params(p_skillID, p_txn_ts);
			return gps("DelSkills", prms);

		}
		
		
		
private List<SqlParameter> DelStates_Params(Int32? p_stateID, 
		                                                Int64? p_txn_ts)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_stateID", p_stateID, INT, IN, p);
			csp("p_txn_ts", p_txn_ts, BIGINT, IN, p);
			return p;
		}
		
public DataSet DelStates(Int32? p_stateID, 
		                            Int64? p_txn_ts)
		{
			List<SqlParameter> prms = DelStates_Params(p_stateID, p_txn_ts);
			DataSet dset = esp("DelStates", prms);

			return dset;
		}
		
public string DelStatesAsTask(Int32? p_stateID, 
		                                    Int64? p_txn_ts)
		{
			List<SqlParameter> prms = DelStates_Params(p_stateID, p_txn_ts);
			return gps("DelStates", prms);

		}
		
		
		
private List<SqlParameter> DelWorkingUnits_Params(Int16? in_working_unit_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("in_working_unit_id", in_working_unit_id, SMALLINT, IN, p);
			return p;
		}
		
public DataSet DelWorkingUnits(Int16? in_working_unit_id)
		{
			List<SqlParameter> prms = DelWorkingUnits_Params(in_working_unit_id);
			DataSet dset = esp("DelWorkingUnits", prms);

			return dset;
		}
		
public string DelWorkingUnitsAsTask(Int16? in_working_unit_id)
		{
			List<SqlParameter> prms = DelWorkingUnits_Params(in_working_unit_id);
			return gps("DelWorkingUnits", prms);

		}
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
private List<SqlParameter> GetFullWorkingUnitPath_Params(Int16? working_unit_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("working_unit_id", working_unit_id, SMALLINT, IN, p);
			return p;
		}
		
public System.String GetFullWorkingUnitPath(Int16? working_unit_id)
		{
			List<SqlParameter> prms = GetFullWorkingUnitPath_Params(working_unit_id);
			string commaSeparatedParameters = ObjDBManager.GetCommaSeparatedParameters(prms);
			Object obj = ObjDBManager.ExecuteScalar("SELECT dbo.GetFullWorkingUnitPath(" + commaSeparatedParameters + ")");

			return obj == null || obj == DBNull.Value ? null : (System.String)obj;
		}
		
		
		
private List<SqlParameter> GetWorkingUnitResponsibilities_Params(Int16? p_working_unit_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_working_unit_id", p_working_unit_id, SMALLINT, IN, p);
			return p;
		}
		
public DataSet GetWorkingUnitResponsibilities(Int16? p_working_unit_id)
		{
			List<SqlParameter> prms = GetWorkingUnitResponsibilities_Params(p_working_unit_id);
			DataSet dset = esp("GetWorkingUnitResponsibilities", prms);

			return dset;
		}
		
public string GetWorkingUnitResponsibilitiesAsTask(Int16? p_working_unit_id)
		{
			List<SqlParameter> prms = GetWorkingUnitResponsibilities_Params(p_working_unit_id);
			return gps("GetWorkingUnitResponsibilities", prms);

		}
		
		
		
		
		
		
		
private List<SqlParameter> Ins_epabx_extensions_WU_Params(Int16? in_working_unit_id, 
		                                                                String in_epabx_extension, 
		                                                                Int16? in_extension_sq)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("in_working_unit_id", in_working_unit_id, SMALLINT, IN, p);
			csp("in_epabx_extension", in_epabx_extension, CHAR, IN, p);
			csp("in_extension_sq", in_extension_sq, SMALLINT, IN, p);
			return p;
		}
		
public DataSet Ins_epabx_extensions_WU(Int16? in_working_unit_id, 
		                                            String in_epabx_extension, 
		                                            Int16? in_extension_sq)
		{
			List<SqlParameter> prms = Ins_epabx_extensions_WU_Params(in_working_unit_id, in_epabx_extension, in_extension_sq);
			DataSet dset = esp("Ins_epabx_extensions_WU", prms);

			return dset;
		}
		
public string Ins_epabx_extensions_WUAsTask(Int16? in_working_unit_id, 
		                                                String in_epabx_extension, 
		                                                Int16? in_extension_sq)
		{
			List<SqlParameter> prms = Ins_epabx_extensions_WU_Params(in_working_unit_id, in_epabx_extension, in_extension_sq);
			return gps("Ins_epabx_extensions_WU", prms);

		}
		
		
		
private List<SqlParameter> Ins_fax_lines_WU_Params(Int16? in_working_unit_id, 
		                                                        String in_fax_line, 
		                                                        Int16? in_line_sq)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("in_working_unit_id", in_working_unit_id, SMALLINT, IN, p);
			csp("in_fax_line", in_fax_line, CHAR, IN, p);
			csp("in_line_sq", in_line_sq, SMALLINT, IN, p);
			return p;
		}
		
public DataSet Ins_fax_lines_WU(Int16? in_working_unit_id, 
		                                    String in_fax_line, 
		                                    Int16? in_line_sq)
		{
			List<SqlParameter> prms = Ins_fax_lines_WU_Params(in_working_unit_id, in_fax_line, in_line_sq);
			DataSet dset = esp("Ins_fax_lines_WU", prms);

			return dset;
		}
		
public string Ins_fax_lines_WUAsTask(Int16? in_working_unit_id, 
		                                        String in_fax_line, 
		                                        Int16? in_line_sq)
		{
			List<SqlParameter> prms = Ins_fax_lines_WU_Params(in_working_unit_id, in_fax_line, in_line_sq);
			return gps("Ins_fax_lines_WU", prms);

		}
		
		
		
private List<SqlParameter> Ins_p_and_t_lines_WU_Params(Int16? in_working_unit_id, 
		                                                            String in_p_and_t_line, 
		                                                            Int16? in_line_sq)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("in_working_unit_id", in_working_unit_id, SMALLINT, IN, p);
			csp("in_p_and_t_line", in_p_and_t_line, CHAR, IN, p);
			csp("in_line_sq", in_line_sq, SMALLINT, IN, p);
			return p;
		}
		
public DataSet Ins_p_and_t_lines_WU(Int16? in_working_unit_id, 
		                                        String in_p_and_t_line, 
		                                        Int16? in_line_sq)
		{
			List<SqlParameter> prms = Ins_p_and_t_lines_WU_Params(in_working_unit_id, in_p_and_t_line, in_line_sq);
			DataSet dset = esp("Ins_p_and_t_lines_WU", prms);

			return dset;
		}
		
public string Ins_p_and_t_lines_WUAsTask(Int16? in_working_unit_id, 
		                                            String in_p_and_t_line, 
		                                            Int16? in_line_sq)
		{
			List<SqlParameter> prms = Ins_p_and_t_lines_WU_Params(in_working_unit_id, in_p_and_t_line, in_line_sq);
			return gps("Ins_p_and_t_lines_WU", prms);

		}
		
		
		
private List<SqlParameter> InsAssistant_Services_Params(Int16? assistant_service_id, 
		                                                            String assistant_service_nm, 
		                                                            DateTime? effective_from, 
		                                                            DateTime? effective_till)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("assistant_service_id", assistant_service_id, SMALLINT, IN, p);
			csp("assistant_service_nm", assistant_service_nm, VARCHAR, IN, p);
			csp("effective_from", effective_from, DATETIME, IN, p);
			csp("effective_till", effective_till, DATETIME, IN, p);
			return p;
		}
		
public DataSet InsAssistant_Services(Int16? assistant_service_id, 
		                                        String assistant_service_nm, 
		                                        DateTime? effective_from, 
		                                        DateTime? effective_till)
		{
			List<SqlParameter> prms = InsAssistant_Services_Params(assistant_service_id, assistant_service_nm, effective_from, effective_till);
			DataSet dset = esp("InsAssistant_Services", prms);

			return dset;
		}
		
public string InsAssistant_ServicesAsTask(Int16? assistant_service_id, 
		                                                String assistant_service_nm, 
		                                                DateTime? effective_from, 
		                                                DateTime? effective_till)
		{
			List<SqlParameter> prms = InsAssistant_Services_Params(assistant_service_id, assistant_service_nm, effective_from, effective_till);
			return gps("InsAssistant_Services", prms);

		}
		
		
		
private List<SqlParameter> InsertCountrie_Params(ref Int16 country_id, 
		                                                    String country_cd, 
		                                                    String country_nm, 
		                                                    String isd_code, 
		                                                    Decimal? gmt_diff, 
		                                                    DateTime? effective_from, 
		                                                    DateTime? effective_till)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("country_id", country_id, SMALLINT, OUT, p);
			csp("country_cd", country_cd, VARCHAR, IN, p);
			csp("country_nm", country_nm, VARCHAR, IN, p);
			csp("isd_code", isd_code, VARCHAR, IN, p);
			csp("gmt_diff", gmt_diff, DECIMAL, IN, p);
			csp("effective_from", effective_from, DATETIME, IN, p);
			csp("effective_till", effective_till, DATETIME, IN, p);
			return p;
		}
		
public DataSet InsertCountrie(ref Int16 country_id, 
		                                    String country_cd, 
		                                    String country_nm, 
		                                    String isd_code, 
		                                    Decimal? gmt_diff, 
		                                    DateTime? effective_from, 
		                                    DateTime? effective_till)
		{
			List<SqlParameter> prms = InsertCountrie_Params(ref country_id, country_cd, country_nm, isd_code, gmt_diff, effective_from, effective_till);
			DataSet dset = esp("InsertCountrie", prms);
			country_id = (System.Int16)prms.FirstOrDefault(p => p.ParameterName == "country_id").Value;

			return dset;
		}
		
public string InsertCountrieAsTask(ref Int16 country_id, 
		                                        String country_cd, 
		                                        String country_nm, 
		                                        String isd_code, 
		                                        Decimal? gmt_diff, 
		                                        DateTime? effective_from, 
		                                        DateTime? effective_till)
		{
			List<SqlParameter> prms = InsertCountrie_Params(ref country_id, country_cd, country_nm, isd_code, gmt_diff, effective_from, effective_till);
			return gps("InsertCountrie", prms);

		}
		
		
		
private List<SqlParameter> InsertDistrictsOrCitie_Params(ref Int32 district_or_city_id, 
		                                                            String district_cd, 
		                                                            String district_nm, 
		                                                            Int32? state_id, 
		                                                            DateTime? effective_from, 
		                                                            DateTime? effective_till)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("district_or_city_id", district_or_city_id, INT, OUT, p);
			csp("district_cd", district_cd, VARCHAR, IN, p);
			csp("district_nm", district_nm, VARCHAR, IN, p);
			csp("state_id", state_id, INT, IN, p);
			csp("effective_from", effective_from, DATETIME, IN, p);
			csp("effective_till", effective_till, DATETIME, IN, p);
			return p;
		}
		
public DataSet InsertDistrictsOrCitie(ref Int32 district_or_city_id, 
		                                            String district_cd, 
		                                            String district_nm, 
		                                            Int32? state_id, 
		                                            DateTime? effective_from, 
		                                            DateTime? effective_till)
		{
			List<SqlParameter> prms = InsertDistrictsOrCitie_Params(ref district_or_city_id, district_cd, district_nm, state_id, effective_from, effective_till);
			DataSet dset = esp("InsertDistrictsOrCitie", prms);
			district_or_city_id = (System.Int32)prms.FirstOrDefault(p => p.ParameterName == "district_or_city_id").Value;

			return dset;
		}
		
public string InsertDistrictsOrCitieAsTask(ref Int32 district_or_city_id, 
		                                                String district_cd, 
		                                                String district_nm, 
		                                                Int32? state_id, 
		                                                DateTime? effective_from, 
		                                                DateTime? effective_till)
		{
			List<SqlParameter> prms = InsertDistrictsOrCitie_Params(ref district_or_city_id, district_cd, district_nm, state_id, effective_from, effective_till);
			return gps("InsertDistrictsOrCitie", prms);

		}
		
		
		
private List<SqlParameter> InsertInitiationPlace_Params(ref Int16 place_id, 
		                                                            String place_nm, 
		                                                            DateTime? effective_from, 
		                                                            DateTime? effective_till)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("place_id", place_id, SMALLINT, OUT, p);
			csp("place_nm", place_nm, VARCHAR, IN, p);
			csp("effective_from", effective_from, DATETIME, IN, p);
			csp("effective_till", effective_till, DATETIME, IN, p);
			return p;
		}
		
public DataSet InsertInitiationPlace(ref Int16 place_id, 
		                                        String place_nm, 
		                                        DateTime? effective_from, 
		                                        DateTime? effective_till)
		{
			List<SqlParameter> prms = InsertInitiationPlace_Params(ref place_id, place_nm, effective_from, effective_till);
			DataSet dset = esp("InsertInitiationPlace", prms);
			place_id = (System.Int16)prms.FirstOrDefault(p => p.ParameterName == "place_id").Value;

			return dset;
		}
		
public string InsertInitiationPlaceAsTask(ref Int16 place_id, 
		                                                String place_nm, 
		                                                DateTime? effective_from, 
		                                                DateTime? effective_till)
		{
			List<SqlParameter> prms = InsertInitiationPlace_Params(ref place_id, place_nm, effective_from, effective_till);
			return gps("InsertInitiationPlace", prms);

		}
		
		
		
private List<SqlParameter> InsertOccupation_Params(ref Int16 occupation_id, 
		                                                        String occupation_cd, 
		                                                        String occupation_nm, 
		                                                        DateTime? effective_from, 
		                                                        DateTime? effective_till)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("occupation_id", occupation_id, SMALLINT, OUT, p);
			csp("occupation_cd", occupation_cd, VARCHAR, IN, p);
			csp("occupation_nm", occupation_nm, VARCHAR, IN, p);
			csp("effective_from", effective_from, DATETIME, IN, p);
			csp("effective_till", effective_till, DATETIME, IN, p);
			return p;
		}
		
public DataSet InsertOccupation(ref Int16 occupation_id, 
		                                    String occupation_cd, 
		                                    String occupation_nm, 
		                                    DateTime? effective_from, 
		                                    DateTime? effective_till)
		{
			List<SqlParameter> prms = InsertOccupation_Params(ref occupation_id, occupation_cd, occupation_nm, effective_from, effective_till);
			DataSet dset = esp("InsertOccupation", prms);
			occupation_id = (System.Int16)prms.FirstOrDefault(p => p.ParameterName == "occupation_id").Value;

			return dset;
		}
		
public string InsertOccupationAsTask(ref Int16 occupation_id, 
		                                        String occupation_cd, 
		                                        String occupation_nm, 
		                                        DateTime? effective_from, 
		                                        DateTime? effective_till)
		{
			List<SqlParameter> prms = InsertOccupation_Params(ref occupation_id, occupation_cd, occupation_nm, effective_from, effective_till);
			return gps("InsertOccupation", prms);

		}
		
		
		
private List<SqlParameter> InsertQlfctnSubject_Params(ref Int16 qlfctn_subject_id, 
		                                                            String qlfctn_subject_cd, 
		                                                            String qlfctn_subject_nm, 
		                                                            String description, 
		                                                            DateTime? effective_from, 
		                                                            DateTime? effective_till)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("qlfctn_subject_id", qlfctn_subject_id, SMALLINT, OUT, p);
			csp("qlfctn_subject_cd", qlfctn_subject_cd, VARCHAR, IN, p);
			csp("qlfctn_subject_nm", qlfctn_subject_nm, VARCHAR, IN, p);
			csp("description", description, VARCHAR, IN, p);
			csp("effective_from", effective_from, DATETIME, IN, p);
			csp("effective_till", effective_till, DATETIME, IN, p);
			return p;
		}
		
public DataSet InsertQlfctnSubject(ref Int16 qlfctn_subject_id, 
		                                        String qlfctn_subject_cd, 
		                                        String qlfctn_subject_nm, 
		                                        String description, 
		                                        DateTime? effective_from, 
		                                        DateTime? effective_till)
		{
			List<SqlParameter> prms = InsertQlfctnSubject_Params(ref qlfctn_subject_id, qlfctn_subject_cd, qlfctn_subject_nm, description, effective_from, effective_till);
			DataSet dset = esp("InsertQlfctnSubject", prms);
			qlfctn_subject_id = (System.Int16)prms.FirstOrDefault(p => p.ParameterName == "qlfctn_subject_id").Value;

			return dset;
		}
		
public string InsertQlfctnSubjectAsTask(ref Int16 qlfctn_subject_id, 
		                                            String qlfctn_subject_cd, 
		                                            String qlfctn_subject_nm, 
		                                            String description, 
		                                            DateTime? effective_from, 
		                                            DateTime? effective_till)
		{
			List<SqlParameter> prms = InsertQlfctnSubject_Params(ref qlfctn_subject_id, qlfctn_subject_cd, qlfctn_subject_nm, description, effective_from, effective_till);
			return gps("InsertQlfctnSubject", prms);

		}
		
		
		
private List<SqlParameter> InsertQualification_Params(ref Int16 qualification_id, 
		                                                            String qualification_type, 
		                                                            String qualification_cd, 
		                                                            String qualification_nm, 
		                                                            String remarks, 
		                                                            DateTime? effective_from, 
		                                                            DateTime? effective_till)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("qualification_id", qualification_id, SMALLINT, OUT, p);
			csp("qualification_type", qualification_type, VARCHAR, IN, p);
			csp("qualification_cd", qualification_cd, VARCHAR, IN, p);
			csp("qualification_nm", qualification_nm, VARCHAR, IN, p);
			csp("remarks", remarks, VARCHAR, IN, p);
			csp("effective_from", effective_from, DATETIME, IN, p);
			csp("effective_till", effective_till, DATETIME, IN, p);
			return p;
		}
		
public DataSet InsertQualification(ref Int16 qualification_id, 
		                                        String qualification_type, 
		                                        String qualification_cd, 
		                                        String qualification_nm, 
		                                        String remarks, 
		                                        DateTime? effective_from, 
		                                        DateTime? effective_till)
		{
			List<SqlParameter> prms = InsertQualification_Params(ref qualification_id, qualification_type, qualification_cd, qualification_nm, remarks, effective_from, effective_till);
			DataSet dset = esp("InsertQualification", prms);
			qualification_id = (System.Int16)prms.FirstOrDefault(p => p.ParameterName == "qualification_id").Value;

			return dset;
		}
		
public string InsertQualificationAsTask(ref Int16 qualification_id, 
		                                            String qualification_type, 
		                                            String qualification_cd, 
		                                            String qualification_nm, 
		                                            String remarks, 
		                                            DateTime? effective_from, 
		                                            DateTime? effective_till)
		{
			List<SqlParameter> prms = InsertQualification_Params(ref qualification_id, qualification_type, qualification_cd, qualification_nm, remarks, effective_from, effective_till);
			return gps("InsertQualification", prms);

		}
		
		
		
private List<SqlParameter> InsertQualificationsQlfctnSubject_Params(Int16? qualification_id, 
		                                                                        Int16? qlfctn_subject_id, 
		                                                                        DateTime? effective_from_subject, 
		                                                                        DateTime? effective_till_subject)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("qualification_id", qualification_id, SMALLINT, IN, p);
			csp("qlfctn_subject_id", qlfctn_subject_id, SMALLINT, IN, p);
			csp("effective_from_subject", effective_from_subject, DATETIME, IN, p);
			csp("effective_till_subject", effective_till_subject, DATETIME, IN, p);
			return p;
		}
		
public DataSet InsertQualificationsQlfctnSubject(Int16? qualification_id, 
		                                                    Int16? qlfctn_subject_id, 
		                                                    DateTime? effective_from_subject, 
		                                                    DateTime? effective_till_subject)
		{
			List<SqlParameter> prms = InsertQualificationsQlfctnSubject_Params(qualification_id, qlfctn_subject_id, effective_from_subject, effective_till_subject);
			DataSet dset = esp("InsertQualificationsQlfctnSubject", prms);

			return dset;
		}
		
public string InsertQualificationsQlfctnSubjectAsTask(Int16? qualification_id, 
		                                                            Int16? qlfctn_subject_id, 
		                                                            DateTime? effective_from_subject, 
		                                                            DateTime? effective_till_subject)
		{
			List<SqlParameter> prms = InsertQualificationsQlfctnSubject_Params(qualification_id, qlfctn_subject_id, effective_from_subject, effective_till_subject);
			return gps("InsertQualificationsQlfctnSubject", prms);

		}
		
		
		
private List<SqlParameter> InsertRelation_Params(ref Int16 relation_id, 
		                                                    String relation_nm, 
		                                                    DateTime? effective_from, 
		                                                    DateTime? effective_till)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("relation_id", relation_id, SMALLINT, OUT, p);
			csp("relation_nm", relation_nm, VARCHAR, IN, p);
			csp("effective_from", effective_from, DATETIME, IN, p);
			csp("effective_till", effective_till, DATETIME, IN, p);
			return p;
		}
		
public DataSet InsertRelation(ref Int16 relation_id, 
		                                    String relation_nm, 
		                                    DateTime? effective_from, 
		                                    DateTime? effective_till)
		{
			List<SqlParameter> prms = InsertRelation_Params(ref relation_id, relation_nm, effective_from, effective_till);
			DataSet dset = esp("InsertRelation", prms);
			relation_id = (System.Int16)prms.FirstOrDefault(p => p.ParameterName == "relation_id").Value;

			return dset;
		}
		
public string InsertRelationAsTask(ref Int16 relation_id, 
		                                        String relation_nm, 
		                                        DateTime? effective_from, 
		                                        DateTime? effective_till)
		{
			List<SqlParameter> prms = InsertRelation_Params(ref relation_id, relation_nm, effective_from, effective_till);
			return gps("InsertRelation", prms);

		}
		
		
		
private List<SqlParameter> InsertSatsangCentre_Params(ref Int32 satsang_centre_id, 
		                                                            String satsang_centre_cd, 
		                                                            String satsang_centre_nm, 
		                                                            String satsang_centre_type, 
		                                                            String address_line_1, 
		                                                            String address_line_2, 
		                                                            Int32? district_or_city_id, 
		                                                            String pin_or_zip_code, 
		                                                            Int32? secretary, 
		                                                            String telephones, 
		                                                            String email_addresses, 
		                                                            String fax_lines, 
		                                                            DateTime? effective_from, 
		                                                            DateTime? effective_till)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("satsang_centre_id", satsang_centre_id, INT, OUT, p);
			csp("satsang_centre_cd", satsang_centre_cd, CHAR, IN, p);
			csp("satsang_centre_nm", satsang_centre_nm, VARCHAR, IN, p);
			csp("satsang_centre_type", satsang_centre_type, VARCHAR, IN, p);
			csp("address_line_1", address_line_1, VARCHAR, IN, p);
			csp("address_line_2", address_line_2, VARCHAR, IN, p);
			csp("district_or_city_id", district_or_city_id, INT, IN, p);
			csp("pin_or_zip_code", pin_or_zip_code, CHAR, IN, p);
			csp("secretary", secretary, INT, IN, p);
			csp("telephones", telephones, VARCHAR, IN, p);
			csp("email_addresses", email_addresses, VARCHAR, IN, p);
			csp("fax_lines", fax_lines, VARCHAR, IN, p);
			csp("effective_from", effective_from, DATETIME, IN, p);
			csp("effective_till", effective_till, DATETIME, IN, p);
			return p;
		}
		
public DataSet InsertSatsangCentre(ref Int32 satsang_centre_id, 
		                                        String satsang_centre_cd, 
		                                        String satsang_centre_nm, 
		                                        String satsang_centre_type, 
		                                        String address_line_1, 
		                                        String address_line_2, 
		                                        Int32? district_or_city_id, 
		                                        String pin_or_zip_code, 
		                                        Int32? secretary, 
		                                        String telephones, 
		                                        String email_addresses, 
		                                        String fax_lines, 
		                                        DateTime? effective_from, 
		                                        DateTime? effective_till)
		{
			List<SqlParameter> prms = InsertSatsangCentre_Params(ref satsang_centre_id, satsang_centre_cd, satsang_centre_nm, satsang_centre_type, address_line_1, address_line_2, district_or_city_id, pin_or_zip_code, secretary, telephones, email_addresses, fax_lines, effective_from, effective_till);
			DataSet dset = esp("InsertSatsangCentre", prms);
			satsang_centre_id = (System.Int32)prms.FirstOrDefault(p => p.ParameterName == "satsang_centre_id").Value;

			return dset;
		}
		
public string InsertSatsangCentreAsTask(ref Int32 satsang_centre_id, 
		                                            String satsang_centre_cd, 
		                                            String satsang_centre_nm, 
		                                            String satsang_centre_type, 
		                                            String address_line_1, 
		                                            String address_line_2, 
		                                            Int32? district_or_city_id, 
		                                            String pin_or_zip_code, 
		                                            Int32? secretary, 
		                                            String telephones, 
		                                            String email_addresses, 
		                                            String fax_lines, 
		                                            DateTime? effective_from, 
		                                            DateTime? effective_till)
		{
			List<SqlParameter> prms = InsertSatsangCentre_Params(ref satsang_centre_id, satsang_centre_cd, satsang_centre_nm, satsang_centre_type, address_line_1, address_line_2, district_or_city_id, pin_or_zip_code, secretary, telephones, email_addresses, fax_lines, effective_from, effective_till);
			return gps("InsertSatsangCentre", prms);

		}
		
		
		
private List<SqlParameter> InsertSkill_Params(ref Int16 skill_id, 
		                                                    String skill_nm, 
		                                                    DateTime? effective_from, 
		                                                    DateTime? effective_till)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("skill_id", skill_id, SMALLINT, OUT, p);
			csp("skill_nm", skill_nm, VARCHAR, IN, p);
			csp("effective_from", effective_from, DATETIME, IN, p);
			csp("effective_till", effective_till, DATETIME, IN, p);
			return p;
		}
		
public DataSet InsertSkill(ref Int16 skill_id, 
		                                String skill_nm, 
		                                DateTime? effective_from, 
		                                DateTime? effective_till)
		{
			List<SqlParameter> prms = InsertSkill_Params(ref skill_id, skill_nm, effective_from, effective_till);
			DataSet dset = esp("InsertSkill", prms);
			skill_id = (System.Int16)prms.FirstOrDefault(p => p.ParameterName == "skill_id").Value;

			return dset;
		}
		
public string InsertSkillAsTask(ref Int16 skill_id, 
		                                    String skill_nm, 
		                                    DateTime? effective_from, 
		                                    DateTime? effective_till)
		{
			List<SqlParameter> prms = InsertSkill_Params(ref skill_id, skill_nm, effective_from, effective_till);
			return gps("InsertSkill", prms);

		}
		
		
		
private List<SqlParameter> InsertState_Params(ref Int32 state_id, 
		                                                    String state_cd, 
		                                                    String state_nm, 
		                                                    Int16? country_id, 
		                                                    DateTime? effective_from, 
		                                                    DateTime? effective_till)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("state_id", state_id, INT, OUT, p);
			csp("state_cd", state_cd, VARCHAR, IN, p);
			csp("state_nm", state_nm, VARCHAR, IN, p);
			csp("country_id", country_id, SMALLINT, IN, p);
			csp("effective_from", effective_from, DATETIME, IN, p);
			csp("effective_till", effective_till, DATETIME, IN, p);
			return p;
		}
		
public DataSet InsertState(ref Int32 state_id, 
		                                String state_cd, 
		                                String state_nm, 
		                                Int16? country_id, 
		                                DateTime? effective_from, 
		                                DateTime? effective_till)
		{
			List<SqlParameter> prms = InsertState_Params(ref state_id, state_cd, state_nm, country_id, effective_from, effective_till);
			DataSet dset = esp("InsertState", prms);
			state_id = (System.Int32)prms.FirstOrDefault(p => p.ParameterName == "state_id").Value;

			return dset;
		}
		
public string InsertStateAsTask(ref Int32 state_id, 
		                                    String state_cd, 
		                                    String state_nm, 
		                                    Int16? country_id, 
		                                    DateTime? effective_from, 
		                                    DateTime? effective_till)
		{
			List<SqlParameter> prms = InsertState_Params(ref state_id, state_cd, state_nm, country_id, effective_from, effective_till);
			return gps("InsertState", prms);

		}
		
		
		
private List<SqlParameter> InsInitiationPlace_Params(String p_place_nm, 
		                                                        DateTime? p_effectiveFrom, 
		                                                        DateTime? p_effectiveTill)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_place_nm", p_place_nm, VARCHAR, IN, p);
			csp("p_effectiveFrom", p_effectiveFrom, DATETIME, IN, p);
			csp("p_effectiveTill", p_effectiveTill, DATETIME, IN, p);
			return p;
		}
		
public DataSet InsInitiationPlace(String p_place_nm, 
		                                        DateTime? p_effectiveFrom, 
		                                        DateTime? p_effectiveTill)
		{
			List<SqlParameter> prms = InsInitiationPlace_Params(p_place_nm, p_effectiveFrom, p_effectiveTill);
			DataSet dset = esp("InsInitiationPlace", prms);

			return dset;
		}
		
public string InsInitiationPlaceAsTask(String p_place_nm, 
		                                            DateTime? p_effectiveFrom, 
		                                            DateTime? p_effectiveTill)
		{
			List<SqlParameter> prms = InsInitiationPlace_Params(p_place_nm, p_effectiveFrom, p_effectiveTill);
			return gps("InsInitiationPlace", prms);

		}
		
		
		
private List<SqlParameter> InsLanguages_Params(String p_language_cd, 
		                                                    String p_language_nm, 
		                                                    DateTime? p_effectiveFrom, 
		                                                    DateTime? p_effectiveTill)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_language_cd", p_language_cd, CHAR, IN, p);
			csp("p_language_nm", p_language_nm, VARCHAR, IN, p);
			csp("p_effectiveFrom", p_effectiveFrom, DATETIME, IN, p);
			csp("p_effectiveTill", p_effectiveTill, DATETIME, IN, p);
			return p;
		}
		
public DataSet InsLanguages(String p_language_cd, 
		                                String p_language_nm, 
		                                DateTime? p_effectiveFrom, 
		                                DateTime? p_effectiveTill)
		{
			List<SqlParameter> prms = InsLanguages_Params(p_language_cd, p_language_nm, p_effectiveFrom, p_effectiveTill);
			DataSet dset = esp("InsLanguages", prms);

			return dset;
		}
		
public string InsLanguagesAsTask(String p_language_cd, 
		                                    String p_language_nm, 
		                                    DateTime? p_effectiveFrom, 
		                                    DateTime? p_effectiveTill)
		{
			List<SqlParameter> prms = InsLanguages_Params(p_language_cd, p_language_nm, p_effectiveFrom, p_effectiveTill);
			return gps("InsLanguages", prms);

		}
		
		
		
private List<SqlParameter> InsMaritalStatus_Params(String p_maritalstatus_nm, 
		                                                        DateTime? p_effectiveFrom, 
		                                                        DateTime? p_effectiveTill)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_maritalstatus_nm", p_maritalstatus_nm, VARCHAR, IN, p);
			csp("p_effectiveFrom", p_effectiveFrom, DATETIME, IN, p);
			csp("p_effectiveTill", p_effectiveTill, DATETIME, IN, p);
			return p;
		}
		
public DataSet InsMaritalStatus(String p_maritalstatus_nm, 
		                                    DateTime? p_effectiveFrom, 
		                                    DateTime? p_effectiveTill)
		{
			List<SqlParameter> prms = InsMaritalStatus_Params(p_maritalstatus_nm, p_effectiveFrom, p_effectiveTill);
			DataSet dset = esp("InsMaritalStatus", prms);

			return dset;
		}
		
public string InsMaritalStatusAsTask(String p_maritalstatus_nm, 
		                                        DateTime? p_effectiveFrom, 
		                                        DateTime? p_effectiveTill)
		{
			List<SqlParameter> prms = InsMaritalStatus_Params(p_maritalstatus_nm, p_effectiveFrom, p_effectiveTill);
			return gps("InsMaritalStatus", prms);

		}
		
		
		
private List<SqlParameter> InsParties_Params(String p_party_cd, 
		                                                String p_party_nm, 
		                                                String p_pan, 
		                                                String p_party_contact_nm, 
		                                                String p_party_contact_designation)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_party_cd", p_party_cd, VARCHAR, IN, p);
			csp("p_party_nm", p_party_nm, VARCHAR, IN, p);
			csp("p_pan", p_pan, VARCHAR, IN, p);
			csp("p_party_contact_nm", p_party_contact_nm, VARCHAR, IN, p);
			csp("p_party_contact_designation", p_party_contact_designation, VARCHAR, IN, p);
			return p;
		}
		
public DataSet InsParties(String p_party_cd, 
		                                String p_party_nm, 
		                                String p_pan, 
		                                String p_party_contact_nm, 
		                                String p_party_contact_designation)
		{
			List<SqlParameter> prms = InsParties_Params(p_party_cd, p_party_nm, p_pan, p_party_contact_nm, p_party_contact_designation);
			DataSet dset = esp("InsParties", prms);

			return dset;
		}
		
public string InsPartiesAsTask(String p_party_cd, 
		                                    String p_party_nm, 
		                                    String p_pan, 
		                                    String p_party_contact_nm, 
		                                    String p_party_contact_designation)
		{
			List<SqlParameter> prms = InsParties_Params(p_party_cd, p_party_nm, p_pan, p_party_contact_nm, p_party_contact_designation);
			return gps("InsParties", prms);

		}
		
		
		
private List<SqlParameter> InsPartyAddresses_Params(Int32? p_party_id, 
		                                                        String p_address_type_nm, 
		                                                        Int32? p_address_no, 
		                                                        String p_contact_nm, 
		                                                        String p_contact_designation, 
		                                                        String p_address_line_1, 
		                                                        String p_address_line_2, 
		                                                        Int16? p_country_id, 
		                                                        Int32? p_state_id, 
		                                                        Int32? p_district_or_city_id, 
		                                                        Int32? p_post_office_id, 
		                                                        String p_pin_or_zip_code, 
		                                                        String p_cell_phones, 
		                                                        String p_telephones, 
		                                                        String p_email_addresses, 
		                                                        String p_fax_lines, 
		                                                        DateTime? p_effective_from, 
		                                                        DateTime? p_effective_till, 
		                                                        String p_application_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_party_id", p_party_id, INT, IN, p);
			csp("p_address_type_nm", p_address_type_nm, VARCHAR, IN, p);
			csp("p_address_no", p_address_no, INT, IN, p);
			csp("p_contact_nm", p_contact_nm, VARCHAR, IN, p);
			csp("p_contact_designation", p_contact_designation, VARCHAR, IN, p);
			csp("p_address_line_1", p_address_line_1, VARCHAR, IN, p);
			csp("p_address_line_2", p_address_line_2, VARCHAR, IN, p);
			csp("p_country_id", p_country_id, SMALLINT, IN, p);
			csp("p_state_id", p_state_id, INT, IN, p);
			csp("p_district_or_city_id", p_district_or_city_id, INT, IN, p);
			csp("p_post_office_id", p_post_office_id, INT, IN, p);
			csp("p_pin_or_zip_code", p_pin_or_zip_code, CHAR, IN, p);
			csp("p_cell_phones", p_cell_phones, VARCHAR, IN, p);
			csp("p_telephones", p_telephones, VARCHAR, IN, p);
			csp("p_email_addresses", p_email_addresses, VARCHAR, IN, p);
			csp("p_fax_lines", p_fax_lines, VARCHAR, IN, p);
			csp("p_effective_from", p_effective_from, DATETIME, IN, p);
			csp("p_effective_till", p_effective_till, DATETIME, IN, p);
			csp("p_application_id", p_application_id, CHAR, IN, p);
			return p;
		}
		
public DataSet InsPartyAddresses(Int32? p_party_id, 
		                                    String p_address_type_nm, 
		                                    Int32? p_address_no, 
		                                    String p_contact_nm, 
		                                    String p_contact_designation, 
		                                    String p_address_line_1, 
		                                    String p_address_line_2, 
		                                    Int16? p_country_id, 
		                                    Int32? p_state_id, 
		                                    Int32? p_district_or_city_id, 
		                                    Int32? p_post_office_id, 
		                                    String p_pin_or_zip_code, 
		                                    String p_cell_phones, 
		                                    String p_telephones, 
		                                    String p_email_addresses, 
		                                    String p_fax_lines, 
		                                    DateTime? p_effective_from, 
		                                    DateTime? p_effective_till, 
		                                    String p_application_id)
		{
			List<SqlParameter> prms = InsPartyAddresses_Params(p_party_id, p_address_type_nm, p_address_no, p_contact_nm, p_contact_designation, p_address_line_1, p_address_line_2, p_country_id, p_state_id, p_district_or_city_id, p_post_office_id, p_pin_or_zip_code, p_cell_phones, p_telephones, p_email_addresses, p_fax_lines, p_effective_from, p_effective_till, p_application_id);
			DataSet dset = esp("InsPartyAddresses", prms);

			return dset;
		}
		
public string InsPartyAddressesAsTask(Int32? p_party_id, 
		                                            String p_address_type_nm, 
		                                            Int32? p_address_no, 
		                                            String p_contact_nm, 
		                                            String p_contact_designation, 
		                                            String p_address_line_1, 
		                                            String p_address_line_2, 
		                                            Int16? p_country_id, 
		                                            Int32? p_state_id, 
		                                            Int32? p_district_or_city_id, 
		                                            Int32? p_post_office_id, 
		                                            String p_pin_or_zip_code, 
		                                            String p_cell_phones, 
		                                            String p_telephones, 
		                                            String p_email_addresses, 
		                                            String p_fax_lines, 
		                                            DateTime? p_effective_from, 
		                                            DateTime? p_effective_till, 
		                                            String p_application_id)
		{
			List<SqlParameter> prms = InsPartyAddresses_Params(p_party_id, p_address_type_nm, p_address_no, p_contact_nm, p_contact_designation, p_address_line_1, p_address_line_2, p_country_id, p_state_id, p_district_or_city_id, p_post_office_id, p_pin_or_zip_code, p_cell_phones, p_telephones, p_email_addresses, p_fax_lines, p_effective_from, p_effective_till, p_application_id);
			return gps("InsPartyAddresses", prms);

		}
		
		
		
private List<SqlParameter> InsPartyRoleApplication_Params(Int32? p_party_id, 
		                                                                String p_role_cd, 
		                                                                String p_application_id, 
		                                                                String p_is_read, 
		                                                                String p_is_update)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_party_id", p_party_id, INT, IN, p);
			csp("p_role_cd", p_role_cd, CHAR, IN, p);
			csp("p_application_id", p_application_id, CHAR, IN, p);
			csp("p_is_read", p_is_read, CHAR, IN, p);
			csp("p_is_update", p_is_update, CHAR, IN, p);
			return p;
		}
		
public DataSet InsPartyRoleApplication(Int32? p_party_id, 
		                                            String p_role_cd, 
		                                            String p_application_id, 
		                                            String p_is_read, 
		                                            String p_is_update)
		{
			List<SqlParameter> prms = InsPartyRoleApplication_Params(p_party_id, p_role_cd, p_application_id, p_is_read, p_is_update);
			DataSet dset = esp("InsPartyRoleApplication", prms);

			return dset;
		}
		
public string InsPartyRoleApplicationAsTask(Int32? p_party_id, 
		                                                String p_role_cd, 
		                                                String p_application_id, 
		                                                String p_is_read, 
		                                                String p_is_update)
		{
			List<SqlParameter> prms = InsPartyRoleApplication_Params(p_party_id, p_role_cd, p_application_id, p_is_read, p_is_update);
			return gps("InsPartyRoleApplication", prms);

		}
		
		
		
private List<SqlParameter> InsPartyRoles_Params(Int32? p_party_id, 
		                                                    String p_role_cd, 
		                                                    String p_address_type_nm, 
		                                                    String p_owner_application_id, 
		                                                    DateTime? p_effective_from, 
		                                                    DateTime? p_effective_till)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_party_id", p_party_id, INT, IN, p);
			csp("p_role_cd", p_role_cd, CHAR, IN, p);
			csp("p_address_type_nm", p_address_type_nm, VARCHAR, IN, p);
			csp("p_owner_application_id", p_owner_application_id, CHAR, IN, p);
			csp("p_effective_from", p_effective_from, DATETIME, IN, p);
			csp("p_effective_till", p_effective_till, DATETIME, IN, p);
			return p;
		}
		
public DataSet InsPartyRoles(Int32? p_party_id, 
		                                String p_role_cd, 
		                                String p_address_type_nm, 
		                                String p_owner_application_id, 
		                                DateTime? p_effective_from, 
		                                DateTime? p_effective_till)
		{
			List<SqlParameter> prms = InsPartyRoles_Params(p_party_id, p_role_cd, p_address_type_nm, p_owner_application_id, p_effective_from, p_effective_till);
			DataSet dset = esp("InsPartyRoles", prms);

			return dset;
		}
		
public string InsPartyRolesAsTask(Int32? p_party_id, 
		                                        String p_role_cd, 
		                                        String p_address_type_nm, 
		                                        String p_owner_application_id, 
		                                        DateTime? p_effective_from, 
		                                        DateTime? p_effective_till)
		{
			List<SqlParameter> prms = InsPartyRoles_Params(p_party_id, p_role_cd, p_address_type_nm, p_owner_application_id, p_effective_from, p_effective_till);
			return gps("InsPartyRoles", prms);

		}
		
		
		
private List<SqlParameter> Insqlfctn_subjects_Params(ref Int16 qlfctn_subject_id, 
		                                                        String qlfctn_subject_cd, 
		                                                        String qlfctn_subject_nm, 
		                                                        String description, 
		                                                        DateTime? effective_from, 
		                                                        DateTime? effective_till)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("qlfctn_subject_id", qlfctn_subject_id, SMALLINT, OUT, p);
			csp("qlfctn_subject_cd", qlfctn_subject_cd, VARCHAR, IN, p);
			csp("qlfctn_subject_nm", qlfctn_subject_nm, VARCHAR, IN, p);
			csp("description", description, VARCHAR, IN, p);
			csp("effective_from", effective_from, DATETIME, IN, p);
			csp("effective_till", effective_till, DATETIME, IN, p);
			return p;
		}
		
public DataSet Insqlfctn_subjects(ref Int16 qlfctn_subject_id, 
		                                        String qlfctn_subject_cd, 
		                                        String qlfctn_subject_nm, 
		                                        String description, 
		                                        DateTime? effective_from, 
		                                        DateTime? effective_till)
		{
			List<SqlParameter> prms = Insqlfctn_subjects_Params(ref qlfctn_subject_id, qlfctn_subject_cd, qlfctn_subject_nm, description, effective_from, effective_till);
			DataSet dset = esp("Insqlfctn_subjects", prms);
			qlfctn_subject_id = (System.Int16)prms.FirstOrDefault(p => p.ParameterName == "qlfctn_subject_id").Value;

			return dset;
		}
		
public string Insqlfctn_subjectsAsTask(ref Int16 qlfctn_subject_id, 
		                                            String qlfctn_subject_cd, 
		                                            String qlfctn_subject_nm, 
		                                            String description, 
		                                            DateTime? effective_from, 
		                                            DateTime? effective_till)
		{
			List<SqlParameter> prms = Insqlfctn_subjects_Params(ref qlfctn_subject_id, qlfctn_subject_cd, qlfctn_subject_nm, description, effective_from, effective_till);
			return gps("Insqlfctn_subjects", prms);

		}
		
		
		
private List<SqlParameter> Insqualifications_Params(String qualification_type, 
		                                                        String qualification_cd, 
		                                                        String qualification_nm, 
		                                                        String remarks, 
		                                                        DateTime? effective_from, 
		                                                        DateTime? effective_till, 
		                                                        ref Int16 qualification_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("qualification_type", qualification_type, VARCHAR, IN, p);
			csp("qualification_cd", qualification_cd, VARCHAR, IN, p);
			csp("qualification_nm", qualification_nm, VARCHAR, IN, p);
			csp("remarks", remarks, VARCHAR, IN, p);
			csp("effective_from", effective_from, DATETIME, IN, p);
			csp("effective_till", effective_till, DATETIME, IN, p);
			csp("qualification_id", qualification_id, SMALLINT, OUT, p);
			return p;
		}
		
public DataSet Insqualifications(String qualification_type, 
		                                    String qualification_cd, 
		                                    String qualification_nm, 
		                                    String remarks, 
		                                    DateTime? effective_from, 
		                                    DateTime? effective_till, 
		                                    ref Int16 qualification_id)
		{
			List<SqlParameter> prms = Insqualifications_Params(qualification_type, qualification_cd, qualification_nm, remarks, effective_from, effective_till, ref qualification_id);
			DataSet dset = esp("Insqualifications", prms);
			qualification_id = (System.Int16)prms.FirstOrDefault(p => p.ParameterName == "qualification_id").Value;

			return dset;
		}
		
public string InsqualificationsAsTask(String qualification_type, 
		                                            String qualification_cd, 
		                                            String qualification_nm, 
		                                            String remarks, 
		                                            DateTime? effective_from, 
		                                            DateTime? effective_till, 
		                                            ref Int16 qualification_id)
		{
			List<SqlParameter> prms = Insqualifications_Params(qualification_type, qualification_cd, qualification_nm, remarks, effective_from, effective_till, ref qualification_id);
			return gps("Insqualifications", prms);

		}
		
		
		
private List<SqlParameter> Insqualifications_qlfctn_subjects_Params(Int16? qualification_id, 
		                                                                        Int16? qlfctn_subject_id, 
		                                                                        DateTime? effective_from, 
		                                                                        DateTime? effective_till)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("qualification_id", qualification_id, SMALLINT, IN, p);
			csp("qlfctn_subject_id", qlfctn_subject_id, SMALLINT, IN, p);
			csp("effective_from", effective_from, DATETIME, IN, p);
			csp("effective_till", effective_till, DATETIME, IN, p);
			return p;
		}
		
public DataSet Insqualifications_qlfctn_subjects(Int16? qualification_id, 
		                                                    Int16? qlfctn_subject_id, 
		                                                    DateTime? effective_from, 
		                                                    DateTime? effective_till)
		{
			List<SqlParameter> prms = Insqualifications_qlfctn_subjects_Params(qualification_id, qlfctn_subject_id, effective_from, effective_till);
			DataSet dset = esp("Insqualifications_qlfctn_subjects", prms);

			return dset;
		}
		
public string Insqualifications_qlfctn_subjectsAsTask(Int16? qualification_id, 
		                                                            Int16? qlfctn_subject_id, 
		                                                            DateTime? effective_from, 
		                                                            DateTime? effective_till)
		{
			List<SqlParameter> prms = Insqualifications_qlfctn_subjects_Params(qualification_id, qlfctn_subject_id, effective_from, effective_till);
			return gps("Insqualifications_qlfctn_subjects", prms);

		}
		
		
		
private List<SqlParameter> InsRoles_Params(String p_role_cd, 
		                                                String p_role_nm, 
		                                                String p_address_requirement, 
		                                                DateTime? p_effective_from, 
		                                                DateTime? p_effective_till)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_role_cd", p_role_cd, CHAR, IN, p);
			csp("p_role_nm", p_role_nm, VARCHAR, IN, p);
			csp("p_address_requirement", p_address_requirement, VARCHAR, IN, p);
			csp("p_effective_from", p_effective_from, DATETIME, IN, p);
			csp("p_effective_till", p_effective_till, DATETIME, IN, p);
			return p;
		}
		
public DataSet InsRoles(String p_role_cd, 
		                            String p_role_nm, 
		                            String p_address_requirement, 
		                            DateTime? p_effective_from, 
		                            DateTime? p_effective_till)
		{
			List<SqlParameter> prms = InsRoles_Params(p_role_cd, p_role_nm, p_address_requirement, p_effective_from, p_effective_till);
			DataSet dset = esp("InsRoles", prms);

			return dset;
		}
		
public string InsRolesAsTask(String p_role_cd, 
		                                String p_role_nm, 
		                                String p_address_requirement, 
		                                DateTime? p_effective_from, 
		                                DateTime? p_effective_till)
		{
			List<SqlParameter> prms = InsRoles_Params(p_role_cd, p_role_nm, p_address_requirement, p_effective_from, p_effective_till);
			return gps("InsRoles", prms);

		}
		
		
		
private List<SqlParameter> InsRolesAppControls_Params(String p_role_cd, 
		                                                            String p_owner_application_id, 
		                                                            String p_application_id, 
		                                                            String p_is_read, 
		                                                            String p_is_update)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_role_cd", p_role_cd, CHAR, IN, p);
			csp("p_owner_application_id", p_owner_application_id, CHAR, IN, p);
			csp("p_application_id", p_application_id, CHAR, IN, p);
			csp("p_is_read", p_is_read, CHAR, IN, p);
			csp("p_is_update", p_is_update, CHAR, IN, p);
			return p;
		}
		
public DataSet InsRolesAppControls(String p_role_cd, 
		                                        String p_owner_application_id, 
		                                        String p_application_id, 
		                                        String p_is_read, 
		                                        String p_is_update)
		{
			List<SqlParameter> prms = InsRolesAppControls_Params(p_role_cd, p_owner_application_id, p_application_id, p_is_read, p_is_update);
			DataSet dset = esp("InsRolesAppControls", prms);

			return dset;
		}
		
public string InsRolesAppControlsAsTask(String p_role_cd, 
		                                            String p_owner_application_id, 
		                                            String p_application_id, 
		                                            String p_is_read, 
		                                            String p_is_update)
		{
			List<SqlParameter> prms = InsRolesAppControls_Params(p_role_cd, p_owner_application_id, p_application_id, p_is_read, p_is_update);
			return gps("InsRolesAppControls", prms);

		}
		
		
		
private List<SqlParameter> InsSewadarStatus_Params(String p_sewadarstatus_nm, 
		                                                        DateTime? p_effectiveFrom, 
		                                                        DateTime? p_effectiveTill)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_sewadarstatus_nm", p_sewadarstatus_nm, VARCHAR, IN, p);
			csp("p_effectiveFrom", p_effectiveFrom, DATETIME, IN, p);
			csp("p_effectiveTill", p_effectiveTill, DATETIME, IN, p);
			return p;
		}
		
public DataSet InsSewadarStatus(String p_sewadarstatus_nm, 
		                                    DateTime? p_effectiveFrom, 
		                                    DateTime? p_effectiveTill)
		{
			List<SqlParameter> prms = InsSewadarStatus_Params(p_sewadarstatus_nm, p_effectiveFrom, p_effectiveTill);
			DataSet dset = esp("InsSewadarStatus", prms);

			return dset;
		}
		
public string InsSewadarStatusAsTask(String p_sewadarstatus_nm, 
		                                        DateTime? p_effectiveFrom, 
		                                        DateTime? p_effectiveTill)
		{
			List<SqlParameter> prms = InsSewadarStatus_Params(p_sewadarstatus_nm, p_effectiveFrom, p_effectiveTill);
			return gps("InsSewadarStatus", prms);

		}
		
		
		
private List<SqlParameter> InsSewadarTypes_Params(String p_sewadartype_nm, 
		                                                        DateTime? p_effectiveFrom, 
		                                                        DateTime? p_effectiveTill)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_sewadartype_nm", p_sewadartype_nm, VARCHAR, IN, p);
			csp("p_effectiveFrom", p_effectiveFrom, DATETIME, IN, p);
			csp("p_effectiveTill", p_effectiveTill, DATETIME, IN, p);
			return p;
		}
		
public DataSet InsSewadarTypes(String p_sewadartype_nm, 
		                                    DateTime? p_effectiveFrom, 
		                                    DateTime? p_effectiveTill)
		{
			List<SqlParameter> prms = InsSewadarTypes_Params(p_sewadartype_nm, p_effectiveFrom, p_effectiveTill);
			DataSet dset = esp("InsSewadarTypes", prms);

			return dset;
		}
		
public string InsSewadarTypesAsTask(String p_sewadartype_nm, 
		                                        DateTime? p_effectiveFrom, 
		                                        DateTime? p_effectiveTill)
		{
			List<SqlParameter> prms = InsSewadarTypes_Params(p_sewadartype_nm, p_effectiveFrom, p_effectiveTill);
			return gps("InsSewadarTypes", prms);

		}
		
		
		
private List<SqlParameter> InsUpdCameras_Params(Int16? p_cameraID, 
		                                                    String p_cameraModel, 
		                                                    String p_pictureQuality, 
		                                                    String p_flashMode, 
		                                                    Int32? p_zoomPosition, 
		                                                    String p_transferSize, 
		                                                    Int32? p_rotationAngle, 
		                                                    DateTime? p_effectiveFrom, 
		                                                    DateTime? p_effectiveTill, 
		                                                    Int64? p_txn_ts, 
		                                                    Boolean? p_isUpdate)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_cameraID", p_cameraID, SMALLINT, IN, p);
			csp("p_cameraModel", p_cameraModel, VARCHAR, IN, p);
			csp("p_pictureQuality", p_pictureQuality, VARCHAR, IN, p);
			csp("p_flashMode", p_flashMode, CHAR, IN, p);
			csp("p_zoomPosition", p_zoomPosition, INT, IN, p);
			csp("p_transferSize", p_transferSize, VARCHAR, IN, p);
			csp("p_rotationAngle", p_rotationAngle, INT, IN, p);
			csp("p_effectiveFrom", p_effectiveFrom, DATETIME, IN, p);
			csp("p_effectiveTill", p_effectiveTill, DATETIME, IN, p);
			csp("p_txn_ts", p_txn_ts, BIGINT, IN, p);
			csp("p_isUpdate", p_isUpdate, BIT, IN, p);
			return p;
		}
		
public DataSet InsUpdCameras(Int16? p_cameraID, 
		                                String p_cameraModel, 
		                                String p_pictureQuality, 
		                                String p_flashMode, 
		                                Int32? p_zoomPosition, 
		                                String p_transferSize, 
		                                Int32? p_rotationAngle, 
		                                DateTime? p_effectiveFrom, 
		                                DateTime? p_effectiveTill, 
		                                Int64? p_txn_ts, 
		                                Boolean? p_isUpdate)
		{
			List<SqlParameter> prms = InsUpdCameras_Params(p_cameraID, p_cameraModel, p_pictureQuality, p_flashMode, p_zoomPosition, p_transferSize, p_rotationAngle, p_effectiveFrom, p_effectiveTill, p_txn_ts, p_isUpdate);
			DataSet dset = esp("InsUpdCameras", prms);

			return dset;
		}
		
public string InsUpdCamerasAsTask(Int16? p_cameraID, 
		                                        String p_cameraModel, 
		                                        String p_pictureQuality, 
		                                        String p_flashMode, 
		                                        Int32? p_zoomPosition, 
		                                        String p_transferSize, 
		                                        Int32? p_rotationAngle, 
		                                        DateTime? p_effectiveFrom, 
		                                        DateTime? p_effectiveTill, 
		                                        Int64? p_txn_ts, 
		                                        Boolean? p_isUpdate)
		{
			List<SqlParameter> prms = InsUpdCameras_Params(p_cameraID, p_cameraModel, p_pictureQuality, p_flashMode, p_zoomPosition, p_transferSize, p_rotationAngle, p_effectiveFrom, p_effectiveTill, p_txn_ts, p_isUpdate);
			return gps("InsUpdCameras", prms);

		}
		
		
		
private List<SqlParameter> InsUpdCountries_Params(String p_countryCode, 
		                                                        String p_countryName, 
		                                                        String p_ISDCode, 
		                                                        Decimal? p_gmtDiff, 
		                                                        DateTime? p_effectiveFrom, 
		                                                        DateTime? p_effectiveTill, 
		                                                        Int16? p_countryID, 
		                                                        Int64? p_txn_ts, 
		                                                        Boolean? p_isUpdate)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_countryCode", p_countryCode, VARCHAR, IN, p);
			csp("p_countryName", p_countryName, VARCHAR, IN, p);
			csp("p_ISDCode", p_ISDCode, VARCHAR, IN, p);
			csp("p_gmtDiff", p_gmtDiff, DECIMAL, IN, p);
			csp("p_effectiveFrom", p_effectiveFrom, DATETIME, IN, p);
			csp("p_effectiveTill", p_effectiveTill, DATETIME, IN, p);
			csp("p_countryID", p_countryID, SMALLINT, IN, p);
			csp("p_txn_ts", p_txn_ts, BIGINT, IN, p);
			csp("p_isUpdate", p_isUpdate, BIT, IN, p);
			return p;
		}
		
public DataSet InsUpdCountries(String p_countryCode, 
		                                    String p_countryName, 
		                                    String p_ISDCode, 
		                                    Decimal? p_gmtDiff, 
		                                    DateTime? p_effectiveFrom, 
		                                    DateTime? p_effectiveTill, 
		                                    Int16? p_countryID, 
		                                    Int64? p_txn_ts, 
		                                    Boolean? p_isUpdate)
		{
			List<SqlParameter> prms = InsUpdCountries_Params(p_countryCode, p_countryName, p_ISDCode, p_gmtDiff, p_effectiveFrom, p_effectiveTill, p_countryID, p_txn_ts, p_isUpdate);
			DataSet dset = esp("InsUpdCountries", prms);

			return dset;
		}
		
public string InsUpdCountriesAsTask(String p_countryCode, 
		                                        String p_countryName, 
		                                        String p_ISDCode, 
		                                        Decimal? p_gmtDiff, 
		                                        DateTime? p_effectiveFrom, 
		                                        DateTime? p_effectiveTill, 
		                                        Int16? p_countryID, 
		                                        Int64? p_txn_ts, 
		                                        Boolean? p_isUpdate)
		{
			List<SqlParameter> prms = InsUpdCountries_Params(p_countryCode, p_countryName, p_ISDCode, p_gmtDiff, p_effectiveFrom, p_effectiveTill, p_countryID, p_txn_ts, p_isUpdate);
			return gps("InsUpdCountries", prms);

		}
		
		
		
private List<SqlParameter> InsUpdDepartments_Params(String p_deptCode, 
		                                                        String p_deptName, 
		                                                        Int16? p_deptGroupID, 
		                                                        String p_faxLine, 
		                                                        DateTime? p_effectiveFrom, 
		                                                        DateTime? p_effectiveTill, 
		                                                        Int16? p_departmentID, 
		                                                        Int64? p_txn_ts, 
		                                                        Boolean? p_isUpdate)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_deptCode", p_deptCode, VARCHAR, IN, p);
			csp("p_deptName", p_deptName, VARCHAR, IN, p);
			csp("p_deptGroupID", p_deptGroupID, SMALLINT, IN, p);
			csp("p_faxLine", p_faxLine, CHAR, IN, p);
			csp("p_effectiveFrom", p_effectiveFrom, DATETIME, IN, p);
			csp("p_effectiveTill", p_effectiveTill, DATETIME, IN, p);
			csp("p_departmentID", p_departmentID, SMALLINT, IN, p);
			csp("p_txn_ts", p_txn_ts, BIGINT, IN, p);
			csp("p_isUpdate", p_isUpdate, BIT, IN, p);
			return p;
		}
		
public DataSet InsUpdDepartments(String p_deptCode, 
		                                    String p_deptName, 
		                                    Int16? p_deptGroupID, 
		                                    String p_faxLine, 
		                                    DateTime? p_effectiveFrom, 
		                                    DateTime? p_effectiveTill, 
		                                    Int16? p_departmentID, 
		                                    Int64? p_txn_ts, 
		                                    Boolean? p_isUpdate)
		{
			List<SqlParameter> prms = InsUpdDepartments_Params(p_deptCode, p_deptName, p_deptGroupID, p_faxLine, p_effectiveFrom, p_effectiveTill, p_departmentID, p_txn_ts, p_isUpdate);
			DataSet dset = esp("InsUpdDepartments", prms);

			return dset;
		}
		
public string InsUpdDepartmentsAsTask(String p_deptCode, 
		                                            String p_deptName, 
		                                            Int16? p_deptGroupID, 
		                                            String p_faxLine, 
		                                            DateTime? p_effectiveFrom, 
		                                            DateTime? p_effectiveTill, 
		                                            Int16? p_departmentID, 
		                                            Int64? p_txn_ts, 
		                                            Boolean? p_isUpdate)
		{
			List<SqlParameter> prms = InsUpdDepartments_Params(p_deptCode, p_deptName, p_deptGroupID, p_faxLine, p_effectiveFrom, p_effectiveTill, p_departmentID, p_txn_ts, p_isUpdate);
			return gps("InsUpdDepartments", prms);

		}
		
		
		
private List<SqlParameter> InsUpdDeptEPABXExtensions_Params(Int16? p_departmentID, 
		                                                                String p_EPABXExt, 
		                                                                String p_oldEPABXExt, 
		                                                                Int16? p_displayOrder, 
		                                                                Boolean? p_isUpdate)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_departmentID", p_departmentID, SMALLINT, IN, p);
			csp("p_EPABXExt", p_EPABXExt, CHAR, IN, p);
			csp("p_oldEPABXExt", p_oldEPABXExt, CHAR, IN, p);
			csp("p_displayOrder", p_displayOrder, SMALLINT, IN, p);
			csp("p_isUpdate", p_isUpdate, BIT, IN, p);
			return p;
		}
		
public DataSet InsUpdDeptEPABXExtensions(Int16? p_departmentID, 
		                                            String p_EPABXExt, 
		                                            String p_oldEPABXExt, 
		                                            Int16? p_displayOrder, 
		                                            Boolean? p_isUpdate)
		{
			List<SqlParameter> prms = InsUpdDeptEPABXExtensions_Params(p_departmentID, p_EPABXExt, p_oldEPABXExt, p_displayOrder, p_isUpdate);
			DataSet dset = esp("InsUpdDeptEPABXExtensions", prms);

			return dset;
		}
		
public string InsUpdDeptEPABXExtensionsAsTask(Int16? p_departmentID, 
		                                                    String p_EPABXExt, 
		                                                    String p_oldEPABXExt, 
		                                                    Int16? p_displayOrder, 
		                                                    Boolean? p_isUpdate)
		{
			List<SqlParameter> prms = InsUpdDeptEPABXExtensions_Params(p_departmentID, p_EPABXExt, p_oldEPABXExt, p_displayOrder, p_isUpdate);
			return gps("InsUpdDeptEPABXExtensions", prms);

		}
		
		
		
private List<SqlParameter> InsUpdDeptGroups_Params(String p_deptGroupCode, 
		                                                        String p_deptGroupName, 
		                                                        DateTime? p_effectiveFrom, 
		                                                        DateTime? p_effectiveTill, 
		                                                        Int16? p_deptGroupID, 
		                                                        Int64? p_txn_ts, 
		                                                        Boolean? p_isUpdate)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_deptGroupCode", p_deptGroupCode, CHAR, IN, p);
			csp("p_deptGroupName", p_deptGroupName, VARCHAR, IN, p);
			csp("p_effectiveFrom", p_effectiveFrom, DATETIME, IN, p);
			csp("p_effectiveTill", p_effectiveTill, DATETIME, IN, p);
			csp("p_deptGroupID", p_deptGroupID, SMALLINT, IN, p);
			csp("p_txn_ts", p_txn_ts, BIGINT, IN, p);
			csp("p_isUpdate", p_isUpdate, BIT, IN, p);
			return p;
		}
		
public DataSet InsUpdDeptGroups(String p_deptGroupCode, 
		                                    String p_deptGroupName, 
		                                    DateTime? p_effectiveFrom, 
		                                    DateTime? p_effectiveTill, 
		                                    Int16? p_deptGroupID, 
		                                    Int64? p_txn_ts, 
		                                    Boolean? p_isUpdate)
		{
			List<SqlParameter> prms = InsUpdDeptGroups_Params(p_deptGroupCode, p_deptGroupName, p_effectiveFrom, p_effectiveTill, p_deptGroupID, p_txn_ts, p_isUpdate);
			DataSet dset = esp("InsUpdDeptGroups", prms);

			return dset;
		}
		
public string InsUpdDeptGroupsAsTask(String p_deptGroupCode, 
		                                        String p_deptGroupName, 
		                                        DateTime? p_effectiveFrom, 
		                                        DateTime? p_effectiveTill, 
		                                        Int16? p_deptGroupID, 
		                                        Int64? p_txn_ts, 
		                                        Boolean? p_isUpdate)
		{
			List<SqlParameter> prms = InsUpdDeptGroups_Params(p_deptGroupCode, p_deptGroupName, p_effectiveFrom, p_effectiveTill, p_deptGroupID, p_txn_ts, p_isUpdate);
			return gps("InsUpdDeptGroups", prms);

		}
		
		
		
private List<SqlParameter> InsUpdDeptPTLines_Params(Int16? p_departmentID, 
		                                                        String p_PTLine, 
		                                                        String p_oldPTLine, 
		                                                        Int16? p_displayOrder, 
		                                                        Boolean? p_isUpdate)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_departmentID", p_departmentID, SMALLINT, IN, p);
			csp("p_PTLine", p_PTLine, CHAR, IN, p);
			csp("p_oldPTLine", p_oldPTLine, CHAR, IN, p);
			csp("p_displayOrder", p_displayOrder, SMALLINT, IN, p);
			csp("p_isUpdate", p_isUpdate, BIT, IN, p);
			return p;
		}
		
public DataSet InsUpdDeptPTLines(Int16? p_departmentID, 
		                                    String p_PTLine, 
		                                    String p_oldPTLine, 
		                                    Int16? p_displayOrder, 
		                                    Boolean? p_isUpdate)
		{
			List<SqlParameter> prms = InsUpdDeptPTLines_Params(p_departmentID, p_PTLine, p_oldPTLine, p_displayOrder, p_isUpdate);
			DataSet dset = esp("InsUpdDeptPTLines", prms);

			return dset;
		}
		
public string InsUpdDeptPTLinesAsTask(Int16? p_departmentID, 
		                                            String p_PTLine, 
		                                            String p_oldPTLine, 
		                                            Int16? p_displayOrder, 
		                                            Boolean? p_isUpdate)
		{
			List<SqlParameter> prms = InsUpdDeptPTLines_Params(p_departmentID, p_PTLine, p_oldPTLine, p_displayOrder, p_isUpdate);
			return gps("InsUpdDeptPTLines", prms);

		}
		
		
		
private List<SqlParameter> InsUpdDesignations_Params(String p_designationCode, 
		                                                        String p_designationName, 
		                                                        Byte? p_minAge, 
		                                                        Byte? p_maxAge, 
		                                                        Byte? p_retirementAge, 
		                                                        DateTime? p_effectiveFrom, 
		                                                        DateTime? p_effectiveTill, 
		                                                        Int16? p_designationID, 
		                                                        Int64? p_txn_ts, 
		                                                        Boolean? p_isUpdate)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_designationCode", p_designationCode, CHAR, IN, p);
			csp("p_designationName", p_designationName, VARCHAR, IN, p);
			csp("p_minAge", p_minAge, TINYINT, IN, p);
			csp("p_maxAge", p_maxAge, TINYINT, IN, p);
			csp("p_retirementAge", p_retirementAge, TINYINT, IN, p);
			csp("p_effectiveFrom", p_effectiveFrom, DATETIME, IN, p);
			csp("p_effectiveTill", p_effectiveTill, DATETIME, IN, p);
			csp("p_designationID", p_designationID, SMALLINT, IN, p);
			csp("p_txn_ts", p_txn_ts, BIGINT, IN, p);
			csp("p_isUpdate", p_isUpdate, BIT, IN, p);
			return p;
		}
		
public DataSet InsUpdDesignations(String p_designationCode, 
		                                        String p_designationName, 
		                                        Byte? p_minAge, 
		                                        Byte? p_maxAge, 
		                                        Byte? p_retirementAge, 
		                                        DateTime? p_effectiveFrom, 
		                                        DateTime? p_effectiveTill, 
		                                        Int16? p_designationID, 
		                                        Int64? p_txn_ts, 
		                                        Boolean? p_isUpdate)
		{
			List<SqlParameter> prms = InsUpdDesignations_Params(p_designationCode, p_designationName, p_minAge, p_maxAge, p_retirementAge, p_effectiveFrom, p_effectiveTill, p_designationID, p_txn_ts, p_isUpdate);
			DataSet dset = esp("InsUpdDesignations", prms);

			return dset;
		}
		
public string InsUpdDesignationsAsTask(String p_designationCode, 
		                                            String p_designationName, 
		                                            Byte? p_minAge, 
		                                            Byte? p_maxAge, 
		                                            Byte? p_retirementAge, 
		                                            DateTime? p_effectiveFrom, 
		                                            DateTime? p_effectiveTill, 
		                                            Int16? p_designationID, 
		                                            Int64? p_txn_ts, 
		                                            Boolean? p_isUpdate)
		{
			List<SqlParameter> prms = InsUpdDesignations_Params(p_designationCode, p_designationName, p_minAge, p_maxAge, p_retirementAge, p_effectiveFrom, p_effectiveTill, p_designationID, p_txn_ts, p_isUpdate);
			return gps("InsUpdDesignations", prms);

		}
		
		
		
private List<SqlParameter> InsUpdDistrictsOrCities_Params(String p_distCityCode, 
		                                                                String p_distCityName, 
		                                                                Int32? p_stateID, 
		                                                                DateTime? p_effectiveFrom, 
		                                                                DateTime? p_effectiveTill, 
		                                                                Int32? p_distCityID, 
		                                                                Int64? p_txn_ts, 
		                                                                Boolean? p_isUpdate)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_distCityCode", p_distCityCode, VARCHAR, IN, p);
			csp("p_distCityName", p_distCityName, VARCHAR, IN, p);
			csp("p_stateID", p_stateID, INT, IN, p);
			csp("p_effectiveFrom", p_effectiveFrom, DATETIME, IN, p);
			csp("p_effectiveTill", p_effectiveTill, DATETIME, IN, p);
			csp("p_distCityID", p_distCityID, INT, IN, p);
			csp("p_txn_ts", p_txn_ts, BIGINT, IN, p);
			csp("p_isUpdate", p_isUpdate, BIT, IN, p);
			return p;
		}
		
public DataSet InsUpdDistrictsOrCities(String p_distCityCode, 
		                                            String p_distCityName, 
		                                            Int32? p_stateID, 
		                                            DateTime? p_effectiveFrom, 
		                                            DateTime? p_effectiveTill, 
		                                            Int32? p_distCityID, 
		                                            Int64? p_txn_ts, 
		                                            Boolean? p_isUpdate)
		{
			List<SqlParameter> prms = InsUpdDistrictsOrCities_Params(p_distCityCode, p_distCityName, p_stateID, p_effectiveFrom, p_effectiveTill, p_distCityID, p_txn_ts, p_isUpdate);
			DataSet dset = esp("InsUpdDistrictsOrCities", prms);

			return dset;
		}
		
public string InsUpdDistrictsOrCitiesAsTask(String p_distCityCode, 
		                                                String p_distCityName, 
		                                                Int32? p_stateID, 
		                                                DateTime? p_effectiveFrom, 
		                                                DateTime? p_effectiveTill, 
		                                                Int32? p_distCityID, 
		                                                Int64? p_txn_ts, 
		                                                Boolean? p_isUpdate)
		{
			List<SqlParameter> prms = InsUpdDistrictsOrCities_Params(p_distCityCode, p_distCityName, p_stateID, p_effectiveFrom, p_effectiveTill, p_distCityID, p_txn_ts, p_isUpdate);
			return gps("InsUpdDistrictsOrCities", prms);

		}
		
		
		
private List<SqlParameter> InsUpdEpabxLines_Params(String p_ExtensionNo, 
		                                                        String p_prevExtensionNo, 
		                                                        DateTime? p_effectiveFrom, 
		                                                        DateTime? p_effectiveTill, 
		                                                        Int64? p_txn_ts, 
		                                                        Boolean? p_isUpdate)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_ExtensionNo", p_ExtensionNo, CHAR, IN, p);
			csp("p_prevExtensionNo", p_prevExtensionNo, CHAR, IN, p);
			csp("p_effectiveFrom", p_effectiveFrom, DATETIME, IN, p);
			csp("p_effectiveTill", p_effectiveTill, DATETIME, IN, p);
			csp("p_txn_ts", p_txn_ts, BIGINT, IN, p);
			csp("p_isUpdate", p_isUpdate, BIT, IN, p);
			return p;
		}
		
public DataSet InsUpdEpabxLines(String p_ExtensionNo, 
		                                    String p_prevExtensionNo, 
		                                    DateTime? p_effectiveFrom, 
		                                    DateTime? p_effectiveTill, 
		                                    Int64? p_txn_ts, 
		                                    Boolean? p_isUpdate)
		{
			List<SqlParameter> prms = InsUpdEpabxLines_Params(p_ExtensionNo, p_prevExtensionNo, p_effectiveFrom, p_effectiveTill, p_txn_ts, p_isUpdate);
			DataSet dset = esp("InsUpdEpabxLines", prms);

			return dset;
		}
		
public string InsUpdEpabxLinesAsTask(String p_ExtensionNo, 
		                                        String p_prevExtensionNo, 
		                                        DateTime? p_effectiveFrom, 
		                                        DateTime? p_effectiveTill, 
		                                        Int64? p_txn_ts, 
		                                        Boolean? p_isUpdate)
		{
			List<SqlParameter> prms = InsUpdEpabxLines_Params(p_ExtensionNo, p_prevExtensionNo, p_effectiveFrom, p_effectiveTill, p_txn_ts, p_isUpdate);
			return gps("InsUpdEpabxLines", prms);

		}
		
		
		
private List<SqlParameter> InsUpdGenPersons_Params(String p_title, 
		                                                        String p_firstName, 
		                                                        String p_middleName, 
		                                                        String p_lastName, 
		                                                        String p_deraResident, 
		                                                        DateTime? p_birthDate, 
		                                                        String p_gender, 
		                                                        String p_contactInfo, 
		                                                        String p_email, 
		                                                        String p_addInfo, 
		                                                        String p_package_id, 
		                                                        String p_screenID, 
		                                                        Int32? p_initiationID, 
		                                                        DateTime? p_effectiveFrom, 
		                                                        DateTime? p_effectiveTill, 
		                                                        ref Int32 p_personID, 
		                                                        Int64? p_txn_ts, 
		                                                        Boolean? p_isUpdate)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_title", p_title, CHAR, IN, p);
			csp("p_firstName", p_firstName, VARCHAR, IN, p);
			csp("p_middleName", p_middleName, VARCHAR, IN, p);
			csp("p_lastName", p_lastName, VARCHAR, IN, p);
			csp("p_deraResident", p_deraResident, CHAR, IN, p);
			csp("p_birthDate", p_birthDate, SMALLDATETIME, IN, p);
			csp("p_gender", p_gender, CHAR, IN, p);
			csp("p_contactInfo", p_contactInfo, VARCHAR, IN, p);
			csp("p_email", p_email, VARCHAR, IN, p);
			csp("p_addInfo", p_addInfo, VARCHAR, IN, p);
			csp("p_package_id", p_package_id, CHAR, IN, p);
			csp("p_screenID", p_screenID, CHAR, IN, p);
			csp("p_initiationID", p_initiationID, INT, IN, p);
			csp("p_effectiveFrom", p_effectiveFrom, DATETIME, IN, p);
			csp("p_effectiveTill", p_effectiveTill, DATETIME, IN, p);
			csp("p_personID", p_personID, INT, OUT, p);
			csp("p_txn_ts", p_txn_ts, BIGINT, IN, p);
			csp("p_isUpdate", p_isUpdate, BIT, IN, p);
			return p;
		}
		
public DataSet InsUpdGenPersons(String p_title, 
		                                    String p_firstName, 
		                                    String p_middleName, 
		                                    String p_lastName, 
		                                    String p_deraResident, 
		                                    DateTime? p_birthDate, 
		                                    String p_gender, 
		                                    String p_contactInfo, 
		                                    String p_email, 
		                                    String p_addInfo, 
		                                    String p_package_id, 
		                                    String p_screenID, 
		                                    Int32? p_initiationID, 
		                                    DateTime? p_effectiveFrom, 
		                                    DateTime? p_effectiveTill, 
		                                    ref Int32 p_personID, 
		                                    Int64? p_txn_ts, 
		                                    Boolean? p_isUpdate)
		{
			List<SqlParameter> prms = InsUpdGenPersons_Params(p_title, p_firstName, p_middleName, p_lastName, p_deraResident, p_birthDate, p_gender, p_contactInfo, p_email, p_addInfo, p_package_id, p_screenID, p_initiationID, p_effectiveFrom, p_effectiveTill, ref p_personID, p_txn_ts, p_isUpdate);
			DataSet dset = esp("InsUpdGenPersons", prms);
			p_personID = (System.Int32)prms.FirstOrDefault(p => p.ParameterName == "p_personID").Value;

			return dset;
		}
		
public string InsUpdGenPersonsAsTask(String p_title, 
		                                        String p_firstName, 
		                                        String p_middleName, 
		                                        String p_lastName, 
		                                        String p_deraResident, 
		                                        DateTime? p_birthDate, 
		                                        String p_gender, 
		                                        String p_contactInfo, 
		                                        String p_email, 
		                                        String p_addInfo, 
		                                        String p_package_id, 
		                                        String p_screenID, 
		                                        Int32? p_initiationID, 
		                                        DateTime? p_effectiveFrom, 
		                                        DateTime? p_effectiveTill, 
		                                        ref Int32 p_personID, 
		                                        Int64? p_txn_ts, 
		                                        Boolean? p_isUpdate)
		{
			List<SqlParameter> prms = InsUpdGenPersons_Params(p_title, p_firstName, p_middleName, p_lastName, p_deraResident, p_birthDate, p_gender, p_contactInfo, p_email, p_addInfo, p_package_id, p_screenID, p_initiationID, p_effectiveFrom, p_effectiveTill, ref p_personID, p_txn_ts, p_isUpdate);
			return gps("InsUpdGenPersons", prms);

		}
		
		
		
private List<SqlParameter> InsUpdMeasuringUnits_Params(String p_measuringUnitCode, 
		                                                            String p_measuringUnitName, 
		                                                            Byte? p_decimals, 
		                                                            String p_numberFormat, 
		                                                            DateTime? p_effectiveFrom, 
		                                                            DateTime? p_effectiveTill, 
		                                                            Int16? p_measuring_unit_id, 
		                                                            Int64? p_txn_ts, 
		                                                            Boolean? p_isUpdate)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_measuringUnitCode", p_measuringUnitCode, CHAR, IN, p);
			csp("p_measuringUnitName", p_measuringUnitName, VARCHAR, IN, p);
			csp("p_decimals", p_decimals, TINYINT, IN, p);
			csp("p_numberFormat", p_numberFormat, CHAR, IN, p);
			csp("p_effectiveFrom", p_effectiveFrom, DATETIME, IN, p);
			csp("p_effectiveTill", p_effectiveTill, DATETIME, IN, p);
			csp("p_measuring_unit_id", p_measuring_unit_id, SMALLINT, IN, p);
			csp("p_txn_ts", p_txn_ts, BIGINT, IN, p);
			csp("p_isUpdate", p_isUpdate, BIT, IN, p);
			return p;
		}
		
public DataSet InsUpdMeasuringUnits(String p_measuringUnitCode, 
		                                        String p_measuringUnitName, 
		                                        Byte? p_decimals, 
		                                        String p_numberFormat, 
		                                        DateTime? p_effectiveFrom, 
		                                        DateTime? p_effectiveTill, 
		                                        Int16? p_measuring_unit_id, 
		                                        Int64? p_txn_ts, 
		                                        Boolean? p_isUpdate)
		{
			List<SqlParameter> prms = InsUpdMeasuringUnits_Params(p_measuringUnitCode, p_measuringUnitName, p_decimals, p_numberFormat, p_effectiveFrom, p_effectiveTill, p_measuring_unit_id, p_txn_ts, p_isUpdate);
			DataSet dset = esp("InsUpdMeasuringUnits", prms);

			return dset;
		}
		
public string InsUpdMeasuringUnitsAsTask(String p_measuringUnitCode, 
		                                            String p_measuringUnitName, 
		                                            Byte? p_decimals, 
		                                            String p_numberFormat, 
		                                            DateTime? p_effectiveFrom, 
		                                            DateTime? p_effectiveTill, 
		                                            Int16? p_measuring_unit_id, 
		                                            Int64? p_txn_ts, 
		                                            Boolean? p_isUpdate)
		{
			List<SqlParameter> prms = InsUpdMeasuringUnits_Params(p_measuringUnitCode, p_measuringUnitName, p_decimals, p_numberFormat, p_effectiveFrom, p_effectiveTill, p_measuring_unit_id, p_txn_ts, p_isUpdate);
			return gps("InsUpdMeasuringUnits", prms);

		}
		
		
		
private List<SqlParameter> InsUpdOccupations_Params(String p_occupationCode, 
		                                                        String p_occupationName, 
		                                                        DateTime? p_effectiveFrom, 
		                                                        DateTime? p_effectiveTill, 
		                                                        Int16? p_occupationID, 
		                                                        Int64? p_txn_ts, 
		                                                        Boolean? p_isUpdate)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_occupationCode", p_occupationCode, VARCHAR, IN, p);
			csp("p_occupationName", p_occupationName, VARCHAR, IN, p);
			csp("p_effectiveFrom", p_effectiveFrom, DATETIME, IN, p);
			csp("p_effectiveTill", p_effectiveTill, DATETIME, IN, p);
			csp("p_occupationID", p_occupationID, SMALLINT, IN, p);
			csp("p_txn_ts", p_txn_ts, BIGINT, IN, p);
			csp("p_isUpdate", p_isUpdate, BIT, IN, p);
			return p;
		}
		
public DataSet InsUpdOccupations(String p_occupationCode, 
		                                    String p_occupationName, 
		                                    DateTime? p_effectiveFrom, 
		                                    DateTime? p_effectiveTill, 
		                                    Int16? p_occupationID, 
		                                    Int64? p_txn_ts, 
		                                    Boolean? p_isUpdate)
		{
			List<SqlParameter> prms = InsUpdOccupations_Params(p_occupationCode, p_occupationName, p_effectiveFrom, p_effectiveTill, p_occupationID, p_txn_ts, p_isUpdate);
			DataSet dset = esp("InsUpdOccupations", prms);

			return dset;
		}
		
public string InsUpdOccupationsAsTask(String p_occupationCode, 
		                                            String p_occupationName, 
		                                            DateTime? p_effectiveFrom, 
		                                            DateTime? p_effectiveTill, 
		                                            Int16? p_occupationID, 
		                                            Int64? p_txn_ts, 
		                                            Boolean? p_isUpdate)
		{
			List<SqlParameter> prms = InsUpdOccupations_Params(p_occupationCode, p_occupationName, p_effectiveFrom, p_effectiveTill, p_occupationID, p_txn_ts, p_isUpdate);
			return gps("InsUpdOccupations", prms);

		}
		
		
		
private List<SqlParameter> InsUpdPersons_Params(String p_title, 
		                                                    String p_firstName, 
		                                                    String p_middleName, 
		                                                    String p_lastName, 
		                                                    String p_deraResident, 
		                                                    DateTime? p_birthDate, 
		                                                    String p_gender, 
		                                                    String p_contactInfo, 
		                                                    String p_email, 
		                                                    String p_addInfo, 
		                                                    String p_package_id, 
		                                                    String p_screenID, 
		                                                    Int32? p_initiationID, 
		                                                    DateTime? p_effectiveFrom, 
		                                                    DateTime? p_effectiveTill, 
		                                                    ref Int32 p_personID, 
		                                                    Int64? p_txn_ts, 
		                                                    Boolean? p_isUpdate)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_title", p_title, CHAR, IN, p);
			csp("p_firstName", p_firstName, VARCHAR, IN, p);
			csp("p_middleName", p_middleName, VARCHAR, IN, p);
			csp("p_lastName", p_lastName, VARCHAR, IN, p);
			csp("p_deraResident", p_deraResident, CHAR, IN, p);
			csp("p_birthDate", p_birthDate, SMALLDATETIME, IN, p);
			csp("p_gender", p_gender, CHAR, IN, p);
			csp("p_contactInfo", p_contactInfo, VARCHAR, IN, p);
			csp("p_email", p_email, VARCHAR, IN, p);
			csp("p_addInfo", p_addInfo, VARCHAR, IN, p);
			csp("p_package_id", p_package_id, CHAR, IN, p);
			csp("p_screenID", p_screenID, CHAR, IN, p);
			csp("p_initiationID", p_initiationID, INT, IN, p);
			csp("p_effectiveFrom", p_effectiveFrom, DATETIME, IN, p);
			csp("p_effectiveTill", p_effectiveTill, DATETIME, IN, p);
			csp("p_personID", p_personID, INT, OUT, p);
			csp("p_txn_ts", p_txn_ts, BIGINT, IN, p);
			csp("p_isUpdate", p_isUpdate, BIT, IN, p);
			return p;
		}
		
public DataSet InsUpdPersons(String p_title, 
		                                String p_firstName, 
		                                String p_middleName, 
		                                String p_lastName, 
		                                String p_deraResident, 
		                                DateTime? p_birthDate, 
		                                String p_gender, 
		                                String p_contactInfo, 
		                                String p_email, 
		                                String p_addInfo, 
		                                String p_package_id, 
		                                String p_screenID, 
		                                Int32? p_initiationID, 
		                                DateTime? p_effectiveFrom, 
		                                DateTime? p_effectiveTill, 
		                                ref Int32 p_personID, 
		                                Int64? p_txn_ts, 
		                                Boolean? p_isUpdate)
		{
			List<SqlParameter> prms = InsUpdPersons_Params(p_title, p_firstName, p_middleName, p_lastName, p_deraResident, p_birthDate, p_gender, p_contactInfo, p_email, p_addInfo, p_package_id, p_screenID, p_initiationID, p_effectiveFrom, p_effectiveTill, ref p_personID, p_txn_ts, p_isUpdate);
			DataSet dset = esp("InsUpdPersons", prms);
			p_personID = (System.Int32)prms.FirstOrDefault(p => p.ParameterName == "p_personID").Value;

			return dset;
		}
		
public string InsUpdPersonsAsTask(String p_title, 
		                                        String p_firstName, 
		                                        String p_middleName, 
		                                        String p_lastName, 
		                                        String p_deraResident, 
		                                        DateTime? p_birthDate, 
		                                        String p_gender, 
		                                        String p_contactInfo, 
		                                        String p_email, 
		                                        String p_addInfo, 
		                                        String p_package_id, 
		                                        String p_screenID, 
		                                        Int32? p_initiationID, 
		                                        DateTime? p_effectiveFrom, 
		                                        DateTime? p_effectiveTill, 
		                                        ref Int32 p_personID, 
		                                        Int64? p_txn_ts, 
		                                        Boolean? p_isUpdate)
		{
			List<SqlParameter> prms = InsUpdPersons_Params(p_title, p_firstName, p_middleName, p_lastName, p_deraResident, p_birthDate, p_gender, p_contactInfo, p_email, p_addInfo, p_package_id, p_screenID, p_initiationID, p_effectiveFrom, p_effectiveTill, ref p_personID, p_txn_ts, p_isUpdate);
			return gps("InsUpdPersons", prms);

		}
		
		
		
private List<SqlParameter> InsUpdPostOffices_Params(String p_post_office_code, 
		                                                        String p_post_office_name, 
		                                                        Int32? p_distCityID, 
		                                                        String p_pinZipCode, 
		                                                        String p_STDCode, 
		                                                        DateTime? p_effectiveFrom, 
		                                                        DateTime? p_effectiveTill, 
		                                                        Int32? p_post_office_ID, 
		                                                        Int64? p_txn_ts, 
		                                                        Boolean? p_isUpdate)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_post_office_code", p_post_office_code, VARCHAR, IN, p);
			csp("p_post_office_name", p_post_office_name, VARCHAR, IN, p);
			csp("p_distCityID", p_distCityID, INT, IN, p);
			csp("p_pinZipCode", p_pinZipCode, CHAR, IN, p);
			csp("p_STDCode", p_STDCode, VARCHAR, IN, p);
			csp("p_effectiveFrom", p_effectiveFrom, DATETIME, IN, p);
			csp("p_effectiveTill", p_effectiveTill, DATETIME, IN, p);
			csp("p_post_office_ID", p_post_office_ID, INT, IN, p);
			csp("p_txn_ts", p_txn_ts, BIGINT, IN, p);
			csp("p_isUpdate", p_isUpdate, BIT, IN, p);
			return p;
		}
		
public DataSet InsUpdPostOffices(String p_post_office_code, 
		                                    String p_post_office_name, 
		                                    Int32? p_distCityID, 
		                                    String p_pinZipCode, 
		                                    String p_STDCode, 
		                                    DateTime? p_effectiveFrom, 
		                                    DateTime? p_effectiveTill, 
		                                    Int32? p_post_office_ID, 
		                                    Int64? p_txn_ts, 
		                                    Boolean? p_isUpdate)
		{
			List<SqlParameter> prms = InsUpdPostOffices_Params(p_post_office_code, p_post_office_name, p_distCityID, p_pinZipCode, p_STDCode, p_effectiveFrom, p_effectiveTill, p_post_office_ID, p_txn_ts, p_isUpdate);
			DataSet dset = esp("InsUpdPostOffices", prms);

			return dset;
		}
		
public string InsUpdPostOfficesAsTask(String p_post_office_code, 
		                                            String p_post_office_name, 
		                                            Int32? p_distCityID, 
		                                            String p_pinZipCode, 
		                                            String p_STDCode, 
		                                            DateTime? p_effectiveFrom, 
		                                            DateTime? p_effectiveTill, 
		                                            Int32? p_post_office_ID, 
		                                            Int64? p_txn_ts, 
		                                            Boolean? p_isUpdate)
		{
			List<SqlParameter> prms = InsUpdPostOffices_Params(p_post_office_code, p_post_office_name, p_distCityID, p_pinZipCode, p_STDCode, p_effectiveFrom, p_effectiveTill, p_post_office_ID, p_txn_ts, p_isUpdate);
			return gps("InsUpdPostOffices", prms);

		}
		
		
		
private List<SqlParameter> InsUpdPTLines_Params(String p_telephoneNo, 
		                                                    String p_prevTelephoneNo, 
		                                                    DateTime? p_effectiveFrom, 
		                                                    DateTime? p_effectiveTill, 
		                                                    Int64? p_txn_ts, 
		                                                    Boolean? p_isUpdate)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_telephoneNo", p_telephoneNo, CHAR, IN, p);
			csp("p_prevTelephoneNo", p_prevTelephoneNo, CHAR, IN, p);
			csp("p_effectiveFrom", p_effectiveFrom, DATETIME, IN, p);
			csp("p_effectiveTill", p_effectiveTill, DATETIME, IN, p);
			csp("p_txn_ts", p_txn_ts, BIGINT, IN, p);
			csp("p_isUpdate", p_isUpdate, BIT, IN, p);
			return p;
		}
		
public DataSet InsUpdPTLines(String p_telephoneNo, 
		                                String p_prevTelephoneNo, 
		                                DateTime? p_effectiveFrom, 
		                                DateTime? p_effectiveTill, 
		                                Int64? p_txn_ts, 
		                                Boolean? p_isUpdate)
		{
			List<SqlParameter> prms = InsUpdPTLines_Params(p_telephoneNo, p_prevTelephoneNo, p_effectiveFrom, p_effectiveTill, p_txn_ts, p_isUpdate);
			DataSet dset = esp("InsUpdPTLines", prms);

			return dset;
		}
		
public string InsUpdPTLinesAsTask(String p_telephoneNo, 
		                                        String p_prevTelephoneNo, 
		                                        DateTime? p_effectiveFrom, 
		                                        DateTime? p_effectiveTill, 
		                                        Int64? p_txn_ts, 
		                                        Boolean? p_isUpdate)
		{
			List<SqlParameter> prms = InsUpdPTLines_Params(p_telephoneNo, p_prevTelephoneNo, p_effectiveFrom, p_effectiveTill, p_txn_ts, p_isUpdate);
			return gps("InsUpdPTLines", prms);

		}
		
		
		
private List<SqlParameter> InsUpdRelations_Params(String p_relationName, 
		                                                        DateTime? p_effectiveFrom, 
		                                                        DateTime? p_effectiveTill, 
		                                                        Int16? p_relationId, 
		                                                        Int64? p_txn_ts, 
		                                                        Boolean? p_isUpdate)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_relationName", p_relationName, VARCHAR, IN, p);
			csp("p_effectiveFrom", p_effectiveFrom, DATETIME, IN, p);
			csp("p_effectiveTill", p_effectiveTill, DATETIME, IN, p);
			csp("p_relationId", p_relationId, SMALLINT, IN, p);
			csp("p_txn_ts", p_txn_ts, BIGINT, IN, p);
			csp("p_isUpdate", p_isUpdate, BIT, IN, p);
			return p;
		}
		
public DataSet InsUpdRelations(String p_relationName, 
		                                    DateTime? p_effectiveFrom, 
		                                    DateTime? p_effectiveTill, 
		                                    Int16? p_relationId, 
		                                    Int64? p_txn_ts, 
		                                    Boolean? p_isUpdate)
		{
			List<SqlParameter> prms = InsUpdRelations_Params(p_relationName, p_effectiveFrom, p_effectiveTill, p_relationId, p_txn_ts, p_isUpdate);
			DataSet dset = esp("InsUpdRelations", prms);

			return dset;
		}
		
public string InsUpdRelationsAsTask(String p_relationName, 
		                                        DateTime? p_effectiveFrom, 
		                                        DateTime? p_effectiveTill, 
		                                        Int16? p_relationId, 
		                                        Int64? p_txn_ts, 
		                                        Boolean? p_isUpdate)
		{
			List<SqlParameter> prms = InsUpdRelations_Params(p_relationName, p_effectiveFrom, p_effectiveTill, p_relationId, p_txn_ts, p_isUpdate);
			return gps("InsUpdRelations", prms);

		}
		
		
		
private List<SqlParameter> InsUpdRepresentatives_Params(String p_title, 
		                                                            String p_firstName, 
		                                                            String p_middleName, 
		                                                            String p_lastName, 
		                                                            String p_gender, 
		                                                            DateTime? p_birthDate, 
		                                                            String p_email, 
		                                                            String p_territory, 
		                                                            String p_address1, 
		                                                            String p_address2, 
		                                                            Int32? p_distCityID, 
		                                                            String p_pinZipCode, 
		                                                            String p_cell, 
		                                                            String p_officePhone, 
		                                                            String p_resPhone, 
		                                                            String p_officeFax, 
		                                                            String p_resFax, 
		                                                            DateTime? p_effectiveFrom, 
		                                                            DateTime? p_effectiveTill, 
		                                                            Int64? p_txn_ts, 
		                                                            Int64? p_per_txn_ts, 
		                                                            String p_application_id, 
		                                                            String p_screen_id, 
		                                                            Int32? p_personID, 
		                                                            Int32? p_representativeID, 
		                                                            Boolean? p_isUpdate)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_title", p_title, CHAR, IN, p);
			csp("p_firstName", p_firstName, VARCHAR, IN, p);
			csp("p_middleName", p_middleName, VARCHAR, IN, p);
			csp("p_lastName", p_lastName, VARCHAR, IN, p);
			csp("p_gender", p_gender, CHAR, IN, p);
			csp("p_birthDate", p_birthDate, DATETIME, IN, p);
			csp("p_email", p_email, VARCHAR, IN, p);
			csp("p_territory", p_territory, VARCHAR, IN, p);
			csp("p_address1", p_address1, VARCHAR, IN, p);
			csp("p_address2", p_address2, VARCHAR, IN, p);
			csp("p_distCityID", p_distCityID, INT, IN, p);
			csp("p_pinZipCode", p_pinZipCode, CHAR, IN, p);
			csp("p_cell", p_cell, VARCHAR, IN, p);
			csp("p_officePhone", p_officePhone, VARCHAR, IN, p);
			csp("p_resPhone", p_resPhone, VARCHAR, IN, p);
			csp("p_officeFax", p_officeFax, VARCHAR, IN, p);
			csp("p_resFax", p_resFax, VARCHAR, IN, p);
			csp("p_effectiveFrom", p_effectiveFrom, DATETIME, IN, p);
			csp("p_effectiveTill", p_effectiveTill, DATETIME, IN, p);
			csp("p_txn_ts", p_txn_ts, BIGINT, IN, p);
			csp("p_per_txn_ts", p_per_txn_ts, BIGINT, IN, p);
			csp("p_application_id", p_application_id, CHAR, IN, p);
			csp("p_screen_id", p_screen_id, CHAR, IN, p);
			csp("p_personID", p_personID, INT, IN, p);
			csp("p_representativeID", p_representativeID, INT, IN, p);
			csp("p_isUpdate", p_isUpdate, BIT, IN, p);
			return p;
		}
		
public DataSet InsUpdRepresentatives(String p_title, 
		                                        String p_firstName, 
		                                        String p_middleName, 
		                                        String p_lastName, 
		                                        String p_gender, 
		                                        DateTime? p_birthDate, 
		                                        String p_email, 
		                                        String p_territory, 
		                                        String p_address1, 
		                                        String p_address2, 
		                                        Int32? p_distCityID, 
		                                        String p_pinZipCode, 
		                                        String p_cell, 
		                                        String p_officePhone, 
		                                        String p_resPhone, 
		                                        String p_officeFax, 
		                                        String p_resFax, 
		                                        DateTime? p_effectiveFrom, 
		                                        DateTime? p_effectiveTill, 
		                                        Int64? p_txn_ts, 
		                                        Int64? p_per_txn_ts, 
		                                        String p_application_id, 
		                                        String p_screen_id, 
		                                        Int32? p_personID, 
		                                        Int32? p_representativeID, 
		                                        Boolean? p_isUpdate)
		{
			List<SqlParameter> prms = InsUpdRepresentatives_Params(p_title, p_firstName, p_middleName, p_lastName, p_gender, p_birthDate, p_email, p_territory, p_address1, p_address2, p_distCityID, p_pinZipCode, p_cell, p_officePhone, p_resPhone, p_officeFax, p_resFax, p_effectiveFrom, p_effectiveTill, p_txn_ts, p_per_txn_ts, p_application_id, p_screen_id, p_personID, p_representativeID, p_isUpdate);
			DataSet dset = esp("InsUpdRepresentatives", prms);

			return dset;
		}
		
public string InsUpdRepresentativesAsTask(String p_title, 
		                                                String p_firstName, 
		                                                String p_middleName, 
		                                                String p_lastName, 
		                                                String p_gender, 
		                                                DateTime? p_birthDate, 
		                                                String p_email, 
		                                                String p_territory, 
		                                                String p_address1, 
		                                                String p_address2, 
		                                                Int32? p_distCityID, 
		                                                String p_pinZipCode, 
		                                                String p_cell, 
		                                                String p_officePhone, 
		                                                String p_resPhone, 
		                                                String p_officeFax, 
		                                                String p_resFax, 
		                                                DateTime? p_effectiveFrom, 
		                                                DateTime? p_effectiveTill, 
		                                                Int64? p_txn_ts, 
		                                                Int64? p_per_txn_ts, 
		                                                String p_application_id, 
		                                                String p_screen_id, 
		                                                Int32? p_personID, 
		                                                Int32? p_representativeID, 
		                                                Boolean? p_isUpdate)
		{
			List<SqlParameter> prms = InsUpdRepresentatives_Params(p_title, p_firstName, p_middleName, p_lastName, p_gender, p_birthDate, p_email, p_territory, p_address1, p_address2, p_distCityID, p_pinZipCode, p_cell, p_officePhone, p_resPhone, p_officeFax, p_resFax, p_effectiveFrom, p_effectiveTill, p_txn_ts, p_per_txn_ts, p_application_id, p_screen_id, p_personID, p_representativeID, p_isUpdate);
			return gps("InsUpdRepresentatives", prms);

		}
		
		
		
private List<SqlParameter> InsUpdSatsangCentres_Params(String p_satsang_centre_code, 
		                                                            String p_satsang_centre_name, 
		                                                            String p_satsang_centre_type, 
		                                                            String p_address_1, 
		                                                            String p_address_2, 
		                                                            Int32? p_distCity_id, 
		                                                            String p_pinZip_code, 
		                                                            Int32? p_person_id, 
		                                                            String p_telephone, 
		                                                            String p_email, 
		                                                            String p_fax, 
		                                                            DateTime? p_effectiveFrom, 
		                                                            DateTime? p_effectiveTill, 
		                                                            Int32? p_satsang_centre_id, 
		                                                            Int64? p_txn_ts, 
		                                                            Boolean? p_isUpdate)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_satsang_centre_code", p_satsang_centre_code, CHAR, IN, p);
			csp("p_satsang_centre_name", p_satsang_centre_name, VARCHAR, IN, p);
			csp("p_satsang_centre_type", p_satsang_centre_type, VARCHAR, IN, p);
			csp("p_address_1", p_address_1, VARCHAR, IN, p);
			csp("p_address_2", p_address_2, VARCHAR, IN, p);
			csp("p_distCity_id", p_distCity_id, INT, IN, p);
			csp("p_pinZip_code", p_pinZip_code, CHAR, IN, p);
			csp("p_person_id", p_person_id, INT, IN, p);
			csp("p_telephone", p_telephone, VARCHAR, IN, p);
			csp("p_email", p_email, VARCHAR, IN, p);
			csp("p_fax", p_fax, VARCHAR, IN, p);
			csp("p_effectiveFrom", p_effectiveFrom, DATETIME, IN, p);
			csp("p_effectiveTill", p_effectiveTill, DATETIME, IN, p);
			csp("p_satsang_centre_id", p_satsang_centre_id, INT, IN, p);
			csp("p_txn_ts", p_txn_ts, BIGINT, IN, p);
			csp("p_isUpdate", p_isUpdate, BIT, IN, p);
			return p;
		}
		
public DataSet InsUpdSatsangCentres(String p_satsang_centre_code, 
		                                        String p_satsang_centre_name, 
		                                        String p_satsang_centre_type, 
		                                        String p_address_1, 
		                                        String p_address_2, 
		                                        Int32? p_distCity_id, 
		                                        String p_pinZip_code, 
		                                        Int32? p_person_id, 
		                                        String p_telephone, 
		                                        String p_email, 
		                                        String p_fax, 
		                                        DateTime? p_effectiveFrom, 
		                                        DateTime? p_effectiveTill, 
		                                        Int32? p_satsang_centre_id, 
		                                        Int64? p_txn_ts, 
		                                        Boolean? p_isUpdate)
		{
			List<SqlParameter> prms = InsUpdSatsangCentres_Params(p_satsang_centre_code, p_satsang_centre_name, p_satsang_centre_type, p_address_1, p_address_2, p_distCity_id, p_pinZip_code, p_person_id, p_telephone, p_email, p_fax, p_effectiveFrom, p_effectiveTill, p_satsang_centre_id, p_txn_ts, p_isUpdate);
			DataSet dset = esp("InsUpdSatsangCentres", prms);

			return dset;
		}
		
public string InsUpdSatsangCentresAsTask(String p_satsang_centre_code, 
		                                            String p_satsang_centre_name, 
		                                            String p_satsang_centre_type, 
		                                            String p_address_1, 
		                                            String p_address_2, 
		                                            Int32? p_distCity_id, 
		                                            String p_pinZip_code, 
		                                            Int32? p_person_id, 
		                                            String p_telephone, 
		                                            String p_email, 
		                                            String p_fax, 
		                                            DateTime? p_effectiveFrom, 
		                                            DateTime? p_effectiveTill, 
		                                            Int32? p_satsang_centre_id, 
		                                            Int64? p_txn_ts, 
		                                            Boolean? p_isUpdate)
		{
			List<SqlParameter> prms = InsUpdSatsangCentres_Params(p_satsang_centre_code, p_satsang_centre_name, p_satsang_centre_type, p_address_1, p_address_2, p_distCity_id, p_pinZip_code, p_person_id, p_telephone, p_email, p_fax, p_effectiveFrom, p_effectiveTill, p_satsang_centre_id, p_txn_ts, p_isUpdate);
			return gps("InsUpdSatsangCentres", prms);

		}
		
		
		
private List<SqlParameter> InsUpdSkills_Params(String p_skillName, 
		                                                    DateTime? p_effectiveFrom, 
		                                                    DateTime? p_effectiveTill, 
		                                                    Int16? p_skillID, 
		                                                    Int64? p_txn_ts, 
		                                                    Boolean? is_Update)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_skillName", p_skillName, VARCHAR, IN, p);
			csp("p_effectiveFrom", p_effectiveFrom, DATETIME, IN, p);
			csp("p_effectiveTill", p_effectiveTill, DATETIME, IN, p);
			csp("p_skillID", p_skillID, SMALLINT, IN, p);
			csp("p_txn_ts", p_txn_ts, BIGINT, IN, p);
			csp("is_Update", is_Update, BIT, IN, p);
			return p;
		}
		
public DataSet InsUpdSkills(String p_skillName, 
		                                DateTime? p_effectiveFrom, 
		                                DateTime? p_effectiveTill, 
		                                Int16? p_skillID, 
		                                Int64? p_txn_ts, 
		                                Boolean? is_Update)
		{
			List<SqlParameter> prms = InsUpdSkills_Params(p_skillName, p_effectiveFrom, p_effectiveTill, p_skillID, p_txn_ts, is_Update);
			DataSet dset = esp("InsUpdSkills", prms);

			return dset;
		}
		
public string InsUpdSkillsAsTask(String p_skillName, 
		                                    DateTime? p_effectiveFrom, 
		                                    DateTime? p_effectiveTill, 
		                                    Int16? p_skillID, 
		                                    Int64? p_txn_ts, 
		                                    Boolean? is_Update)
		{
			List<SqlParameter> prms = InsUpdSkills_Params(p_skillName, p_effectiveFrom, p_effectiveTill, p_skillID, p_txn_ts, is_Update);
			return gps("InsUpdSkills", prms);

		}
		
		
		
private List<SqlParameter> InsUpdStates_Params(String p_stateCode, 
		                                                    String p_stateName, 
		                                                    Int16? p_countryid, 
		                                                    DateTime? p_effectiveFrom, 
		                                                    DateTime? p_effectiveTill, 
		                                                    Int32? p_stateID, 
		                                                    Int64? p_txn_ts, 
		                                                    Boolean? p_isUpdate)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_stateCode", p_stateCode, VARCHAR, IN, p);
			csp("p_stateName", p_stateName, VARCHAR, IN, p);
			csp("p_countryid", p_countryid, SMALLINT, IN, p);
			csp("p_effectiveFrom", p_effectiveFrom, DATETIME, IN, p);
			csp("p_effectiveTill", p_effectiveTill, DATETIME, IN, p);
			csp("p_stateID", p_stateID, INT, IN, p);
			csp("p_txn_ts", p_txn_ts, BIGINT, IN, p);
			csp("p_isUpdate", p_isUpdate, BIT, IN, p);
			return p;
		}
		
public DataSet InsUpdStates(String p_stateCode, 
		                                String p_stateName, 
		                                Int16? p_countryid, 
		                                DateTime? p_effectiveFrom, 
		                                DateTime? p_effectiveTill, 
		                                Int32? p_stateID, 
		                                Int64? p_txn_ts, 
		                                Boolean? p_isUpdate)
		{
			List<SqlParameter> prms = InsUpdStates_Params(p_stateCode, p_stateName, p_countryid, p_effectiveFrom, p_effectiveTill, p_stateID, p_txn_ts, p_isUpdate);
			DataSet dset = esp("InsUpdStates", prms);

			return dset;
		}
		
public string InsUpdStatesAsTask(String p_stateCode, 
		                                    String p_stateName, 
		                                    Int16? p_countryid, 
		                                    DateTime? p_effectiveFrom, 
		                                    DateTime? p_effectiveTill, 
		                                    Int32? p_stateID, 
		                                    Int64? p_txn_ts, 
		                                    Boolean? p_isUpdate)
		{
			List<SqlParameter> prms = InsUpdStates_Params(p_stateCode, p_stateName, p_countryid, p_effectiveFrom, p_effectiveTill, p_stateID, p_txn_ts, p_isUpdate);
			return gps("InsUpdStates", prms);

		}
		
		
		
private List<SqlParameter> InsWorkingUnits_Params(String in_working_unit_cd, 
		                                                        String in_working_unit_nm, 
		                                                        String in_is_root, 
		                                                        String in_is_leaf, 
		                                                        Int16? in_society_id, 
		                                                        String in_is_staff_posted, 
		                                                        Int16? in_working_unit_entity_id, 
		                                                        Int16? in_group_working_unit_id, 
		                                                        DateTime? in_effective_from, 
		                                                        DateTime? in_effective_till, 
		                                                        Int16? in_honorary_sewadar_cnt, 
		                                                        Int16? in_parshadi_sewadar_cnt, 
		                                                        ref Int16 out_working_unit_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("in_working_unit_cd", in_working_unit_cd, VARCHAR, IN, p);
			csp("in_working_unit_nm", in_working_unit_nm, VARCHAR, IN, p);
			csp("in_is_root", in_is_root, CHAR, IN, p);
			csp("in_is_leaf", in_is_leaf, CHAR, IN, p);
			csp("in_society_id", in_society_id, SMALLINT, IN, p);
			csp("in_is_staff_posted", in_is_staff_posted, CHAR, IN, p);
			csp("in_working_unit_entity_id", in_working_unit_entity_id, SMALLINT, IN, p);
			csp("in_group_working_unit_id", in_group_working_unit_id, SMALLINT, IN, p);
			csp("in_effective_from", in_effective_from, DATETIME, IN, p);
			csp("in_effective_till", in_effective_till, DATETIME, IN, p);
			csp("in_honorary_sewadar_cnt", in_honorary_sewadar_cnt, SMALLINT, IN, p);
			csp("in_parshadi_sewadar_cnt", in_parshadi_sewadar_cnt, SMALLINT, IN, p);
			csp("out_working_unit_id", out_working_unit_id, SMALLINT, OUT, p);
			return p;
		}
		
public DataSet InsWorkingUnits(String in_working_unit_cd, 
		                                    String in_working_unit_nm, 
		                                    String in_is_root, 
		                                    String in_is_leaf, 
		                                    Int16? in_society_id, 
		                                    String in_is_staff_posted, 
		                                    Int16? in_working_unit_entity_id, 
		                                    Int16? in_group_working_unit_id, 
		                                    DateTime? in_effective_from, 
		                                    DateTime? in_effective_till, 
		                                    Int16? in_honorary_sewadar_cnt, 
		                                    Int16? in_parshadi_sewadar_cnt, 
		                                    ref Int16 out_working_unit_id)
		{
			List<SqlParameter> prms = InsWorkingUnits_Params(in_working_unit_cd, in_working_unit_nm, in_is_root, in_is_leaf, in_society_id, in_is_staff_posted, in_working_unit_entity_id, in_group_working_unit_id, in_effective_from, in_effective_till, in_honorary_sewadar_cnt, in_parshadi_sewadar_cnt, ref out_working_unit_id);
			DataSet dset = esp("InsWorkingUnits", prms);
			out_working_unit_id = (System.Int16)prms.FirstOrDefault(p => p.ParameterName == "out_working_unit_id").Value;

			return dset;
		}
		
public string InsWorkingUnitsAsTask(String in_working_unit_cd, 
		                                        String in_working_unit_nm, 
		                                        String in_is_root, 
		                                        String in_is_leaf, 
		                                        Int16? in_society_id, 
		                                        String in_is_staff_posted, 
		                                        Int16? in_working_unit_entity_id, 
		                                        Int16? in_group_working_unit_id, 
		                                        DateTime? in_effective_from, 
		                                        DateTime? in_effective_till, 
		                                        Int16? in_honorary_sewadar_cnt, 
		                                        Int16? in_parshadi_sewadar_cnt, 
		                                        ref Int16 out_working_unit_id)
		{
			List<SqlParameter> prms = InsWorkingUnits_Params(in_working_unit_cd, in_working_unit_nm, in_is_root, in_is_leaf, in_society_id, in_is_staff_posted, in_working_unit_entity_id, in_group_working_unit_id, in_effective_from, in_effective_till, in_honorary_sewadar_cnt, in_parshadi_sewadar_cnt, ref out_working_unit_id);
			return gps("InsWorkingUnits", prms);

		}
		
		
		
		
		
private List<SqlParameter> LogOperation_Params(Int32? p_session_id, 
		                                                    String p_package_id, 
		                                                    String p_application_id, 
		                                                    Int32? p_user_no, 
		                                                    String p_user_role_id, 
		                                                    String p_operation, 
		                                                    String p_screen_id, 
		                                                    String p_object_id, 
		                                                    Int32? p_person_id, 
		                                                    Int32? p_sewadar_id, 
		                                                    Int32? p_dependant_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_session_id", p_session_id, INT, IN, p);
			csp("p_package_id", p_package_id, CHAR, IN, p);
			csp("p_application_id", p_application_id, CHAR, IN, p);
			csp("p_user_no", p_user_no, INT, IN, p);
			csp("p_user_role_id", p_user_role_id, VARCHAR, IN, p);
			csp("p_operation", p_operation, CHAR, IN, p);
			csp("p_screen_id", p_screen_id, CHAR, IN, p);
			csp("p_object_id", p_object_id, VARCHAR, IN, p);
			csp("p_person_id", p_person_id, INT, IN, p);
			csp("p_sewadar_id", p_sewadar_id, INT, IN, p);
			csp("p_dependant_id", p_dependant_id, INT, IN, p);
			return p;
		}
		
public DataSet LogOperation(Int32? p_session_id, 
		                                String p_package_id, 
		                                String p_application_id, 
		                                Int32? p_user_no, 
		                                String p_user_role_id, 
		                                String p_operation, 
		                                String p_screen_id, 
		                                String p_object_id, 
		                                Int32? p_person_id, 
		                                Int32? p_sewadar_id, 
		                                Int32? p_dependant_id)
		{
			List<SqlParameter> prms = LogOperation_Params(p_session_id, p_package_id, p_application_id, p_user_no, p_user_role_id, p_operation, p_screen_id, p_object_id, p_person_id, p_sewadar_id, p_dependant_id);
			DataSet dset = esp("LogOperation", prms);

			return dset;
		}
		
public string LogOperationAsTask(Int32? p_session_id, 
		                                    String p_package_id, 
		                                    String p_application_id, 
		                                    Int32? p_user_no, 
		                                    String p_user_role_id, 
		                                    String p_operation, 
		                                    String p_screen_id, 
		                                    String p_object_id, 
		                                    Int32? p_person_id, 
		                                    Int32? p_sewadar_id, 
		                                    Int32? p_dependant_id)
		{
			List<SqlParameter> prms = LogOperation_Params(p_session_id, p_package_id, p_application_id, p_user_no, p_user_role_id, p_operation, p_screen_id, p_object_id, p_person_id, p_sewadar_id, p_dependant_id);
			return gps("LogOperation", prms);

		}
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
private List<SqlParameter> QryAssistant_Services_Params(String ShowCurrent)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("ShowCurrent", ShowCurrent, CHAR, IN, p);
			return p;
		}
		
public DataSet QryAssistant_Services(String ShowCurrent)
		{
			List<SqlParameter> prms = QryAssistant_Services_Params(ShowCurrent);
			DataSet dset = esp("QryAssistant_Services", prms);

			return dset;
		}
		
public string QryAssistant_ServicesAsTask(String ShowCurrent)
		{
			List<SqlParameter> prms = QryAssistant_Services_Params(ShowCurrent);
			return gps("QryAssistant_Services", prms);

		}
		
public DCCSqlDataReader QryAssistant_ServicesAsReader(String ShowCurrent)
		{
			List<SqlParameter> prms = QryAssistant_Services_Params(ShowCurrent);
			DCCSqlDataReader reader = ObjDBManager.ExecuteReader("QryAssistant_Services", prms);

			return reader;
		}
		
		
		
private List<SqlParameter> QryParties_Params(Int32? p_party_id, 
		                                                String p_party_cd, 
		                                                String p_party_nm, 
		                                                String p_pan, 
		                                                String p_address_type_nm, 
		                                                String p_country_nm, 
		                                                String p_state_nm, 
		                                                String p_district_or_city_nm, 
		                                                String p_role_nm, 
		                                                String p_application_nm)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_party_id", p_party_id, INT, IN, p);
			csp("p_party_cd", p_party_cd, VARCHAR, IN, p);
			csp("p_party_nm", p_party_nm, VARCHAR, IN, p);
			csp("p_pan", p_pan, VARCHAR, IN, p);
			csp("p_address_type_nm", p_address_type_nm, VARCHAR, IN, p);
			csp("p_country_nm", p_country_nm, VARCHAR, IN, p);
			csp("p_state_nm", p_state_nm, VARCHAR, IN, p);
			csp("p_district_or_city_nm", p_district_or_city_nm, VARCHAR, IN, p);
			csp("p_role_nm", p_role_nm, VARCHAR, IN, p);
			csp("p_application_nm", p_application_nm, VARCHAR, IN, p);
			return p;
		}
		
public DataSet QryParties(Int32? p_party_id, 
		                                String p_party_cd, 
		                                String p_party_nm, 
		                                String p_pan, 
		                                String p_address_type_nm, 
		                                String p_country_nm, 
		                                String p_state_nm, 
		                                String p_district_or_city_nm, 
		                                String p_role_nm, 
		                                String p_application_nm)
		{
			List<SqlParameter> prms = QryParties_Params(p_party_id, p_party_cd, p_party_nm, p_pan, p_address_type_nm, p_country_nm, p_state_nm, p_district_or_city_nm, p_role_nm, p_application_nm);
			DataSet dset = esp("QryParties", prms);

			return dset;
		}
		
public string QryPartiesAsTask(Int32? p_party_id, 
		                                    String p_party_cd, 
		                                    String p_party_nm, 
		                                    String p_pan, 
		                                    String p_address_type_nm, 
		                                    String p_country_nm, 
		                                    String p_state_nm, 
		                                    String p_district_or_city_nm, 
		                                    String p_role_nm, 
		                                    String p_application_nm)
		{
			List<SqlParameter> prms = QryParties_Params(p_party_id, p_party_cd, p_party_nm, p_pan, p_address_type_nm, p_country_nm, p_state_nm, p_district_or_city_nm, p_role_nm, p_application_nm);
			return gps("QryParties", prms);

		}
		
public DCCSqlDataReader QryPartiesAsReader(Int32? p_party_id, 
		                                                String p_party_cd, 
		                                                String p_party_nm, 
		                                                String p_pan, 
		                                                String p_address_type_nm, 
		                                                String p_country_nm, 
		                                                String p_state_nm, 
		                                                String p_district_or_city_nm, 
		                                                String p_role_nm, 
		                                                String p_application_nm)
		{
			List<SqlParameter> prms = QryParties_Params(p_party_id, p_party_cd, p_party_nm, p_pan, p_address_type_nm, p_country_nm, p_state_nm, p_district_or_city_nm, p_role_nm, p_application_nm);
			DCCSqlDataReader reader = ObjDBManager.ExecuteReader("QryParties", prms);

			return reader;
		}
		
		
		
private List<SqlParameter> QryQlfctn_Subjects_Params(String ShowCurrent)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("ShowCurrent", ShowCurrent, CHAR, IN, p);
			return p;
		}
		
public DataSet QryQlfctn_Subjects(String ShowCurrent)
		{
			List<SqlParameter> prms = QryQlfctn_Subjects_Params(ShowCurrent);
			DataSet dset = esp("QryQlfctn_Subjects", prms);

			return dset;
		}
		
public string QryQlfctn_SubjectsAsTask(String ShowCurrent)
		{
			List<SqlParameter> prms = QryQlfctn_Subjects_Params(ShowCurrent);
			return gps("QryQlfctn_Subjects", prms);

		}
		
public DCCSqlDataReader QryQlfctn_SubjectsAsReader(String ShowCurrent)
		{
			List<SqlParameter> prms = QryQlfctn_Subjects_Params(ShowCurrent);
			DCCSqlDataReader reader = ObjDBManager.ExecuteReader("QryQlfctn_Subjects", prms);

			return reader;
		}
		
		
		
private List<SqlParameter> Qryqualifications_Params(Int16? qualification_id, 
		                                                        String qualification_type, 
		                                                        String qualification_cd, 
		                                                        String qualification_nm, 
		                                                        String remarks, 
		                                                        DateTime? effective_from, 
		                                                        DateTime? effective_till)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("qualification_id", qualification_id, SMALLINT, IN, p);
			csp("qualification_type", qualification_type, VARCHAR, IN, p);
			csp("qualification_cd", qualification_cd, VARCHAR, IN, p);
			csp("qualification_nm", qualification_nm, VARCHAR, IN, p);
			csp("remarks", remarks, VARCHAR, IN, p);
			csp("effective_from", effective_from, DATETIME, IN, p);
			csp("effective_till", effective_till, DATETIME, IN, p);
			return p;
		}
		
public DataSet Qryqualifications(Int16? qualification_id, 
		                                    String qualification_type, 
		                                    String qualification_cd, 
		                                    String qualification_nm, 
		                                    String remarks, 
		                                    DateTime? effective_from, 
		                                    DateTime? effective_till)
		{
			List<SqlParameter> prms = Qryqualifications_Params(qualification_id, qualification_type, qualification_cd, qualification_nm, remarks, effective_from, effective_till);
			DataSet dset = esp("Qryqualifications", prms);

			return dset;
		}
		
public string QryqualificationsAsTask(Int16? qualification_id, 
		                                            String qualification_type, 
		                                            String qualification_cd, 
		                                            String qualification_nm, 
		                                            String remarks, 
		                                            DateTime? effective_from, 
		                                            DateTime? effective_till)
		{
			List<SqlParameter> prms = Qryqualifications_Params(qualification_id, qualification_type, qualification_cd, qualification_nm, remarks, effective_from, effective_till);
			return gps("Qryqualifications", prms);

		}
		
public DCCSqlDataReader QryqualificationsAsReader(Int16? qualification_id, 
		                                                        String qualification_type, 
		                                                        String qualification_cd, 
		                                                        String qualification_nm, 
		                                                        String remarks, 
		                                                        DateTime? effective_from, 
		                                                        DateTime? effective_till)
		{
			List<SqlParameter> prms = Qryqualifications_Params(qualification_id, qualification_type, qualification_cd, qualification_nm, remarks, effective_from, effective_till);
			DCCSqlDataReader reader = ObjDBManager.ExecuteReader("Qryqualifications", prms);

			return reader;
		}
		
		
		
private List<SqlParameter> Qryqualifications_qlfctn_subjects_Params(Int16? qualification_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("qualification_id", qualification_id, SMALLINT, IN, p);
			return p;
		}
		
public DataSet Qryqualifications_qlfctn_subjects(Int16? qualification_id)
		{
			List<SqlParameter> prms = Qryqualifications_qlfctn_subjects_Params(qualification_id);
			DataSet dset = esp("Qryqualifications_qlfctn_subjects", prms);

			return dset;
		}
		
public string Qryqualifications_qlfctn_subjectsAsTask(Int16? qualification_id)
		{
			List<SqlParameter> prms = Qryqualifications_qlfctn_subjects_Params(qualification_id);
			return gps("Qryqualifications_qlfctn_subjects", prms);

		}
		
public DCCSqlDataReader Qryqualifications_qlfctn_subjectsAsReader(Int16? qualification_id)
		{
			List<SqlParameter> prms = Qryqualifications_qlfctn_subjects_Params(qualification_id);
			DCCSqlDataReader reader = ObjDBManager.ExecuteReader("Qryqualifications_qlfctn_subjects", prms);

			return reader;
		}
		
		
		
private List<SqlParameter> QryRoles_Params(String p_role_cd, 
		                                                String p_role_nm, 
		                                                String p_address_requirement, 
		                                                DateTime? p_effective_from, 
		                                                DateTime? p_effective_till)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_role_cd", p_role_cd, CHAR, IN, p);
			csp("p_role_nm", p_role_nm, VARCHAR, IN, p);
			csp("p_address_requirement", p_address_requirement, VARCHAR, IN, p);
			csp("p_effective_from", p_effective_from, DATETIME, IN, p);
			csp("p_effective_till", p_effective_till, DATETIME, IN, p);
			return p;
		}
		
public DataSet QryRoles(String p_role_cd, 
		                            String p_role_nm, 
		                            String p_address_requirement, 
		                            DateTime? p_effective_from, 
		                            DateTime? p_effective_till)
		{
			List<SqlParameter> prms = QryRoles_Params(p_role_cd, p_role_nm, p_address_requirement, p_effective_from, p_effective_till);
			DataSet dset = esp("QryRoles", prms);

			return dset;
		}
		
public string QryRolesAsTask(String p_role_cd, 
		                                String p_role_nm, 
		                                String p_address_requirement, 
		                                DateTime? p_effective_from, 
		                                DateTime? p_effective_till)
		{
			List<SqlParameter> prms = QryRoles_Params(p_role_cd, p_role_nm, p_address_requirement, p_effective_from, p_effective_till);
			return gps("QryRoles", prms);

		}
		
public DCCSqlDataReader QryRolesAsReader(String p_role_cd, 
		                                            String p_role_nm, 
		                                            String p_address_requirement, 
		                                            DateTime? p_effective_from, 
		                                            DateTime? p_effective_till)
		{
			List<SqlParameter> prms = QryRoles_Params(p_role_cd, p_role_nm, p_address_requirement, p_effective_from, p_effective_till);
			DCCSqlDataReader reader = ObjDBManager.ExecuteReader("QryRoles", prms);

			return reader;
		}
		
		
		
private List<SqlParameter> QryRolesAppControls_Params(String p_role_cd)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_role_cd", p_role_cd, CHAR, IN, p);
			return p;
		}
		
public DataSet QryRolesAppControls(String p_role_cd)
		{
			List<SqlParameter> prms = QryRolesAppControls_Params(p_role_cd);
			DataSet dset = esp("QryRolesAppControls", prms);

			return dset;
		}
		
public string QryRolesAppControlsAsTask(String p_role_cd)
		{
			List<SqlParameter> prms = QryRolesAppControls_Params(p_role_cd);
			return gps("QryRolesAppControls", prms);

		}
		
public DCCSqlDataReader QryRolesAppControlsAsReader(String p_role_cd)
		{
			List<SqlParameter> prms = QryRolesAppControls_Params(p_role_cd);
			DCCSqlDataReader reader = ObjDBManager.ExecuteReader("QryRolesAppControls", prms);

			return reader;
		}
		
		
		
private List<SqlParameter> QryStaff_Params(Int16? working_unit_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("working_unit_id", working_unit_id, SMALLINT, IN, p);
			return p;
		}
		
public DataSet QryStaff(Int16? working_unit_id)
		{
			List<SqlParameter> prms = QryStaff_Params(working_unit_id);
			DataSet dset = esp("QryStaff", prms);

			return dset;
		}
		
public string QryStaffAsTask(Int16? working_unit_id)
		{
			List<SqlParameter> prms = QryStaff_Params(working_unit_id);
			return gps("QryStaff", prms);

		}
		
public DCCSqlDataReader QryStaffAsReader(Int16? working_unit_id)
		{
			List<SqlParameter> prms = QryStaff_Params(working_unit_id);
			DCCSqlDataReader reader = ObjDBManager.ExecuteReader("QryStaff", prms);

			return reader;
		}
		
		
		
private List<SqlParameter> Qryworking_units_Params(Int16? in_working_unit_id, 
		                                                        Int16? in_group_working_unit_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("in_working_unit_id", in_working_unit_id, SMALLINT, IN, p);
			csp("in_group_working_unit_id", in_group_working_unit_id, SMALLINT, IN, p);
			return p;
		}
		
public DataSet Qryworking_units(Int16? in_working_unit_id, 
		                                    Int16? in_group_working_unit_id)
		{
			List<SqlParameter> prms = Qryworking_units_Params(in_working_unit_id, in_group_working_unit_id);
			DataSet dset = esp("Qryworking_units", prms);

			return dset;
		}
		
public string Qryworking_unitsAsTask(Int16? in_working_unit_id, 
		                                        Int16? in_group_working_unit_id)
		{
			List<SqlParameter> prms = Qryworking_units_Params(in_working_unit_id, in_group_working_unit_id);
			return gps("Qryworking_units", prms);

		}
		
public DCCSqlDataReader Qryworking_unitsAsReader(Int16? in_working_unit_id, 
		                                                    Int16? in_group_working_unit_id)
		{
			List<SqlParameter> prms = Qryworking_units_Params(in_working_unit_id, in_group_working_unit_id);
			DCCSqlDataReader reader = ObjDBManager.ExecuteReader("Qryworking_units", prms);

			return reader;
		}
		
		
		
private List<SqlParameter> QryWorkingUnitWrapper_Params(Int16? in_working_unit_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("in_working_unit_id", in_working_unit_id, SMALLINT, IN, p);
			return p;
		}
		
public DataSet QryWorkingUnitWrapper(Int16? in_working_unit_id)
		{
			List<SqlParameter> prms = QryWorkingUnitWrapper_Params(in_working_unit_id);
			DataSet dset = esp("QryWorkingUnitWrapper", prms);

			return dset;
		}
		
public string QryWorkingUnitWrapperAsTask(Int16? in_working_unit_id)
		{
			List<SqlParameter> prms = QryWorkingUnitWrapper_Params(in_working_unit_id);
			return gps("QryWorkingUnitWrapper", prms);

		}
		
public DCCSqlDataReader QryWorkingUnitWrapperAsReader(Int16? in_working_unit_id)
		{
			List<SqlParameter> prms = QryWorkingUnitWrapper_Params(in_working_unit_id);
			DCCSqlDataReader reader = ObjDBManager.ExecuteReader("QryWorkingUnitWrapper", prms);

			return reader;
		}
		
		
		
		
		
		
		
		
		
private List<SqlParameter> QueryCountrie_Params(Int16? country_id, 
		                                                    String country_cd, 
		                                                    String country_nm, 
		                                                    String isd_code, 
		                                                    Decimal? gmt_diff, 
		                                                    Byte[] txn_ts, 
		                                                    DateTime? effective_from, 
		                                                    DateTime? effective_till)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("country_id", country_id, SMALLINT, IN, p);
			csp("country_cd", country_cd, VARCHAR, IN, p);
			csp("country_nm", country_nm, VARCHAR, IN, p);
			csp("isd_code", isd_code, VARCHAR, IN, p);
			csp("gmt_diff", gmt_diff, DECIMAL, IN, p);
			csp("txn_ts", txn_ts, TIMESTAMP, IN, p);
			csp("effective_from", effective_from, DATETIME, IN, p);
			csp("effective_till", effective_till, DATETIME, IN, p);
			return p;
		}
		
public DataSet QueryCountrie(Int16? country_id, 
		                                String country_cd, 
		                                String country_nm, 
		                                String isd_code, 
		                                Decimal? gmt_diff, 
		                                Byte[] txn_ts, 
		                                DateTime? effective_from, 
		                                DateTime? effective_till)
		{
			List<SqlParameter> prms = QueryCountrie_Params(country_id, country_cd, country_nm, isd_code, gmt_diff, txn_ts, effective_from, effective_till);
			DataSet dset = esp("QueryCountrie", prms);

			return dset;
		}
		
public string QueryCountrieAsTask(Int16? country_id, 
		                                        String country_cd, 
		                                        String country_nm, 
		                                        String isd_code, 
		                                        Decimal? gmt_diff, 
		                                        Byte[] txn_ts, 
		                                        DateTime? effective_from, 
		                                        DateTime? effective_till)
		{
			List<SqlParameter> prms = QueryCountrie_Params(country_id, country_cd, country_nm, isd_code, gmt_diff, txn_ts, effective_from, effective_till);
			return gps("QueryCountrie", prms);

		}
		
		
		
private List<SqlParameter> QueryDistrictsOrCitie_Params(Int32? district_or_city_id, 
		                                                            String district_cd, 
		                                                            String district_nm, 
		                                                            Int32? state_id, 
		                                                            Byte[] txn_ts, 
		                                                            DateTime? effective_from, 
		                                                            DateTime? effective_till)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("district_or_city_id", district_or_city_id, INT, IN, p);
			csp("district_cd", district_cd, VARCHAR, IN, p);
			csp("district_nm", district_nm, VARCHAR, IN, p);
			csp("state_id", state_id, INT, IN, p);
			csp("txn_ts", txn_ts, TIMESTAMP, IN, p);
			csp("effective_from", effective_from, DATETIME, IN, p);
			csp("effective_till", effective_till, DATETIME, IN, p);
			return p;
		}
		
public DataSet QueryDistrictsOrCitie(Int32? district_or_city_id, 
		                                        String district_cd, 
		                                        String district_nm, 
		                                        Int32? state_id, 
		                                        Byte[] txn_ts, 
		                                        DateTime? effective_from, 
		                                        DateTime? effective_till)
		{
			List<SqlParameter> prms = QueryDistrictsOrCitie_Params(district_or_city_id, district_cd, district_nm, state_id, txn_ts, effective_from, effective_till);
			DataSet dset = esp("QueryDistrictsOrCitie", prms);

			return dset;
		}
		
public string QueryDistrictsOrCitieAsTask(Int32? district_or_city_id, 
		                                                String district_cd, 
		                                                String district_nm, 
		                                                Int32? state_id, 
		                                                Byte[] txn_ts, 
		                                                DateTime? effective_from, 
		                                                DateTime? effective_till)
		{
			List<SqlParameter> prms = QueryDistrictsOrCitie_Params(district_or_city_id, district_cd, district_nm, state_id, txn_ts, effective_from, effective_till);
			return gps("QueryDistrictsOrCitie", prms);

		}
		
		
		
private List<SqlParameter> QueryInitiationPlace_Params(Int16? place_id, 
		                                                            String place_nm, 
		                                                            Byte[] txn_ts, 
		                                                            DateTime? effective_from, 
		                                                            DateTime? effective_till)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("place_id", place_id, SMALLINT, IN, p);
			csp("place_nm", place_nm, VARCHAR, IN, p);
			csp("txn_ts", txn_ts, TIMESTAMP, IN, p);
			csp("effective_from", effective_from, DATETIME, IN, p);
			csp("effective_till", effective_till, DATETIME, IN, p);
			return p;
		}
		
public DataSet QueryInitiationPlace(Int16? place_id, 
		                                        String place_nm, 
		                                        Byte[] txn_ts, 
		                                        DateTime? effective_from, 
		                                        DateTime? effective_till)
		{
			List<SqlParameter> prms = QueryInitiationPlace_Params(place_id, place_nm, txn_ts, effective_from, effective_till);
			DataSet dset = esp("QueryInitiationPlace", prms);

			return dset;
		}
		
public string QueryInitiationPlaceAsTask(Int16? place_id, 
		                                            String place_nm, 
		                                            Byte[] txn_ts, 
		                                            DateTime? effective_from, 
		                                            DateTime? effective_till)
		{
			List<SqlParameter> prms = QueryInitiationPlace_Params(place_id, place_nm, txn_ts, effective_from, effective_till);
			return gps("QueryInitiationPlace", prms);

		}
		
		
		
private List<SqlParameter> QueryOccupation_Params(Int16? occupation_id, 
		                                                        String occupation_cd, 
		                                                        String occupation_nm, 
		                                                        Byte[] txn_ts, 
		                                                        DateTime? effective_from, 
		                                                        DateTime? effective_till)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("occupation_id", occupation_id, SMALLINT, IN, p);
			csp("occupation_cd", occupation_cd, VARCHAR, IN, p);
			csp("occupation_nm", occupation_nm, VARCHAR, IN, p);
			csp("txn_ts", txn_ts, TIMESTAMP, IN, p);
			csp("effective_from", effective_from, DATETIME, IN, p);
			csp("effective_till", effective_till, DATETIME, IN, p);
			return p;
		}
		
public DataSet QueryOccupation(Int16? occupation_id, 
		                                    String occupation_cd, 
		                                    String occupation_nm, 
		                                    Byte[] txn_ts, 
		                                    DateTime? effective_from, 
		                                    DateTime? effective_till)
		{
			List<SqlParameter> prms = QueryOccupation_Params(occupation_id, occupation_cd, occupation_nm, txn_ts, effective_from, effective_till);
			DataSet dset = esp("QueryOccupation", prms);

			return dset;
		}
		
public string QueryOccupationAsTask(Int16? occupation_id, 
		                                        String occupation_cd, 
		                                        String occupation_nm, 
		                                        Byte[] txn_ts, 
		                                        DateTime? effective_from, 
		                                        DateTime? effective_till)
		{
			List<SqlParameter> prms = QueryOccupation_Params(occupation_id, occupation_cd, occupation_nm, txn_ts, effective_from, effective_till);
			return gps("QueryOccupation", prms);

		}
		
		
		
private List<SqlParameter> QueryQualification_Params(Int16? qualification_id, 
		                                                        String qualification_type, 
		                                                        String qualification_cd, 
		                                                        String qualification_nm, 
		                                                        String remarks, 
		                                                        DateTime? effective_from, 
		                                                        DateTime? effective_till, 
		                                                        Byte[] txn_ts)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("qualification_id", qualification_id, SMALLINT, IN, p);
			csp("qualification_type", qualification_type, VARCHAR, IN, p);
			csp("qualification_cd", qualification_cd, VARCHAR, IN, p);
			csp("qualification_nm", qualification_nm, VARCHAR, IN, p);
			csp("remarks", remarks, VARCHAR, IN, p);
			csp("effective_from", effective_from, DATETIME, IN, p);
			csp("effective_till", effective_till, DATETIME, IN, p);
			csp("txn_ts", txn_ts, TIMESTAMP, IN, p);
			return p;
		}
		
public DataSet QueryQualification(Int16? qualification_id, 
		                                        String qualification_type, 
		                                        String qualification_cd, 
		                                        String qualification_nm, 
		                                        String remarks, 
		                                        DateTime? effective_from, 
		                                        DateTime? effective_till, 
		                                        Byte[] txn_ts)
		{
			List<SqlParameter> prms = QueryQualification_Params(qualification_id, qualification_type, qualification_cd, qualification_nm, remarks, effective_from, effective_till, txn_ts);
			DataSet dset = esp("QueryQualification", prms);

			return dset;
		}
		
public string QueryQualificationAsTask(Int16? qualification_id, 
		                                            String qualification_type, 
		                                            String qualification_cd, 
		                                            String qualification_nm, 
		                                            String remarks, 
		                                            DateTime? effective_from, 
		                                            DateTime? effective_till, 
		                                            Byte[] txn_ts)
		{
			List<SqlParameter> prms = QueryQualification_Params(qualification_id, qualification_type, qualification_cd, qualification_nm, remarks, effective_from, effective_till, txn_ts);
			return gps("QueryQualification", prms);

		}
		
		
		
private List<SqlParameter> QueryQualificationsQlfctnSubject_Params(Int16? qualification_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("qualification_id", qualification_id, SMALLINT, IN, p);
			return p;
		}
		
public DataSet QueryQualificationsQlfctnSubject(Int16? qualification_id)
		{
			List<SqlParameter> prms = QueryQualificationsQlfctnSubject_Params(qualification_id);
			DataSet dset = esp("QueryQualificationsQlfctnSubject", prms);

			return dset;
		}
		
public string QueryQualificationsQlfctnSubjectAsTask(Int16? qualification_id)
		{
			List<SqlParameter> prms = QueryQualificationsQlfctnSubject_Params(qualification_id);
			return gps("QueryQualificationsQlfctnSubject", prms);

		}
		
		
		
private List<SqlParameter> QueryRelation_Params(Int16? relation_id, 
		                                                    String relation_nm, 
		                                                    Byte[] txn_ts, 
		                                                    DateTime? effective_from, 
		                                                    DateTime? effective_till)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("relation_id", relation_id, SMALLINT, IN, p);
			csp("relation_nm", relation_nm, VARCHAR, IN, p);
			csp("txn_ts", txn_ts, TIMESTAMP, IN, p);
			csp("effective_from", effective_from, DATETIME, IN, p);
			csp("effective_till", effective_till, DATETIME, IN, p);
			return p;
		}
		
public DataSet QueryRelation(Int16? relation_id, 
		                                String relation_nm, 
		                                Byte[] txn_ts, 
		                                DateTime? effective_from, 
		                                DateTime? effective_till)
		{
			List<SqlParameter> prms = QueryRelation_Params(relation_id, relation_nm, txn_ts, effective_from, effective_till);
			DataSet dset = esp("QueryRelation", prms);

			return dset;
		}
		
public string QueryRelationAsTask(Int16? relation_id, 
		                                        String relation_nm, 
		                                        Byte[] txn_ts, 
		                                        DateTime? effective_from, 
		                                        DateTime? effective_till)
		{
			List<SqlParameter> prms = QueryRelation_Params(relation_id, relation_nm, txn_ts, effective_from, effective_till);
			return gps("QueryRelation", prms);

		}
		
		
		
private List<SqlParameter> QuerySkill_Params(Int16? skill_id, 
		                                                String skill_nm, 
		                                                Byte[] txn_ts, 
		                                                DateTime? effective_from, 
		                                                DateTime? effective_till)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("skill_id", skill_id, SMALLINT, IN, p);
			csp("skill_nm", skill_nm, VARCHAR, IN, p);
			csp("txn_ts", txn_ts, TIMESTAMP, IN, p);
			csp("effective_from", effective_from, DATETIME, IN, p);
			csp("effective_till", effective_till, DATETIME, IN, p);
			return p;
		}
		
public DataSet QuerySkill(Int16? skill_id, 
		                                String skill_nm, 
		                                Byte[] txn_ts, 
		                                DateTime? effective_from, 
		                                DateTime? effective_till)
		{
			List<SqlParameter> prms = QuerySkill_Params(skill_id, skill_nm, txn_ts, effective_from, effective_till);
			DataSet dset = esp("QuerySkill", prms);

			return dset;
		}
		
public string QuerySkillAsTask(Int16? skill_id, 
		                                    String skill_nm, 
		                                    Byte[] txn_ts, 
		                                    DateTime? effective_from, 
		                                    DateTime? effective_till)
		{
			List<SqlParameter> prms = QuerySkill_Params(skill_id, skill_nm, txn_ts, effective_from, effective_till);
			return gps("QuerySkill", prms);

		}
		
		
		
private List<SqlParameter> QueryState_Params(Int32? state_id, 
		                                                String state_cd, 
		                                                String state_nm, 
		                                                Int16? country_id, 
		                                                Byte[] txn_ts, 
		                                                DateTime? effective_from, 
		                                                DateTime? effective_till)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("state_id", state_id, INT, IN, p);
			csp("state_cd", state_cd, VARCHAR, IN, p);
			csp("state_nm", state_nm, VARCHAR, IN, p);
			csp("country_id", country_id, SMALLINT, IN, p);
			csp("txn_ts", txn_ts, TIMESTAMP, IN, p);
			csp("effective_from", effective_from, DATETIME, IN, p);
			csp("effective_till", effective_till, DATETIME, IN, p);
			return p;
		}
		
public DataSet QueryState(Int32? state_id, 
		                                String state_cd, 
		                                String state_nm, 
		                                Int16? country_id, 
		                                Byte[] txn_ts, 
		                                DateTime? effective_from, 
		                                DateTime? effective_till)
		{
			List<SqlParameter> prms = QueryState_Params(state_id, state_cd, state_nm, country_id, txn_ts, effective_from, effective_till);
			DataSet dset = esp("QueryState", prms);

			return dset;
		}
		
public string QueryStateAsTask(Int32? state_id, 
		                                    String state_cd, 
		                                    String state_nm, 
		                                    Int16? country_id, 
		                                    Byte[] txn_ts, 
		                                    DateTime? effective_from, 
		                                    DateTime? effective_till)
		{
			List<SqlParameter> prms = QueryState_Params(state_id, state_cd, state_nm, country_id, txn_ts, effective_from, effective_till);
			return gps("QueryState", prms);

		}
		
		
		
		
		
		
		
private List<SqlParameter> Responsibilities_DelPr_Params(Int16? in_working_unit_id, 
		                                                            Int32? in_sewadar_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("in_working_unit_id", in_working_unit_id, SMALLINT, IN, p);
			csp("in_sewadar_id", in_sewadar_id, INT, IN, p);
			return p;
		}
		
public DataSet Responsibilities_DelPr(Int16? in_working_unit_id, 
		                                            Int32? in_sewadar_id)
		{
			List<SqlParameter> prms = Responsibilities_DelPr_Params(in_working_unit_id, in_sewadar_id);
			DataSet dset = esp("Responsibilities_DelPr", prms);

			return dset;
		}
		
public string Responsibilities_DelPrAsTask(Int16? in_working_unit_id, 
		                                                Int32? in_sewadar_id)
		{
			List<SqlParameter> prms = Responsibilities_DelPr_Params(in_working_unit_id, in_sewadar_id);
			return gps("Responsibilities_DelPr", prms);

		}
		
		
		
private List<SqlParameter> Responsibilities_SelPr_Params(Int16? in_working_unit_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("in_working_unit_id", in_working_unit_id, SMALLINT, IN, p);
			return p;
		}
		
public DataSet Responsibilities_SelPr(Int16? in_working_unit_id)
		{
			List<SqlParameter> prms = Responsibilities_SelPr_Params(in_working_unit_id);
			DataSet dset = esp("Responsibilities_SelPr", prms);

			return dset;
		}
		
public string Responsibilities_SelPrAsTask(Int16? in_working_unit_id)
		{
			List<SqlParameter> prms = Responsibilities_SelPr_Params(in_working_unit_id);
			return gps("Responsibilities_SelPr", prms);

		}
		
		
		
private List<SqlParameter> Responsibilities_UpdPr_Params(Int16? in_working_unit_id, 
		                                                            Int16? in_responsibility_type_id, 
		                                                            Int32? in_sewadar_id, 
		                                                            Int32? in_old_sewadar_id, 
		                                                            Int16? in_responsibility_sq)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("in_working_unit_id", in_working_unit_id, SMALLINT, IN, p);
			csp("in_responsibility_type_id", in_responsibility_type_id, SMALLINT, IN, p);
			csp("in_sewadar_id", in_sewadar_id, INT, IN, p);
			csp("in_old_sewadar_id", in_old_sewadar_id, INT, IN, p);
			csp("in_responsibility_sq", in_responsibility_sq, SMALLINT, IN, p);
			return p;
		}
		
public DataSet Responsibilities_UpdPr(Int16? in_working_unit_id, 
		                                            Int16? in_responsibility_type_id, 
		                                            Int32? in_sewadar_id, 
		                                            Int32? in_old_sewadar_id, 
		                                            Int16? in_responsibility_sq)
		{
			List<SqlParameter> prms = Responsibilities_UpdPr_Params(in_working_unit_id, in_responsibility_type_id, in_sewadar_id, in_old_sewadar_id, in_responsibility_sq);
			DataSet dset = esp("Responsibilities_UpdPr", prms);

			return dset;
		}
		
public string Responsibilities_UpdPrAsTask(Int16? in_working_unit_id, 
		                                                Int16? in_responsibility_type_id, 
		                                                Int32? in_sewadar_id, 
		                                                Int32? in_old_sewadar_id, 
		                                                Int16? in_responsibility_sq)
		{
			List<SqlParameter> prms = Responsibilities_UpdPr_Params(in_working_unit_id, in_responsibility_type_id, in_sewadar_id, in_old_sewadar_id, in_responsibility_sq);
			return gps("Responsibilities_UpdPr", prms);

		}
		
		
		
private List<SqlParameter> ResponsibilitiesSequence_UpdPr_Params(Int16? in_working_unit_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("in_working_unit_id", in_working_unit_id, SMALLINT, IN, p);
			return p;
		}
		
public DataSet ResponsibilitiesSequence_UpdPr(Int16? in_working_unit_id)
		{
			List<SqlParameter> prms = ResponsibilitiesSequence_UpdPr_Params(in_working_unit_id);
			DataSet dset = esp("ResponsibilitiesSequence_UpdPr", prms);

			return dset;
		}
		
public string ResponsibilitiesSequence_UpdPrAsTask(Int16? in_working_unit_id)
		{
			List<SqlParameter> prms = ResponsibilitiesSequence_UpdPr_Params(in_working_unit_id);
			return gps("ResponsibilitiesSequence_UpdPr", prms);

		}
		
		
		
		
		
private List<SqlParameter> ResponsibilityTypes_DelPr_Params(Int16? in_working_unit_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("in_working_unit_id", in_working_unit_id, SMALLINT, IN, p);
			return p;
		}
		
public DataSet ResponsibilityTypes_DelPr(Int16? in_working_unit_id)
		{
			List<SqlParameter> prms = ResponsibilityTypes_DelPr_Params(in_working_unit_id);
			DataSet dset = esp("ResponsibilityTypes_DelPr", prms);

			return dset;
		}
		
public string ResponsibilityTypes_DelPrAsTask(Int16? in_working_unit_id)
		{
			List<SqlParameter> prms = ResponsibilityTypes_DelPr_Params(in_working_unit_id);
			return gps("ResponsibilityTypes_DelPr", prms);

		}
		
		
		
private List<SqlParameter> ResponsibilityTypes_InsPr_Params(Int16? in_working_unit_id, 
		                                                                String in_responsibility_nm, 
		                                                                Byte? in_responsibility_cnt, 
		                                                                Int16? in_responsibility_sq, 
		                                                                ref Int16 out_responsibility_type_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("in_working_unit_id", in_working_unit_id, SMALLINT, IN, p);
			csp("in_responsibility_nm", in_responsibility_nm, VARCHAR, IN, p);
			csp("in_responsibility_cnt", in_responsibility_cnt, TINYINT, IN, p);
			csp("in_responsibility_sq", in_responsibility_sq, SMALLINT, IN, p);
			csp("out_responsibility_type_id", out_responsibility_type_id, SMALLINT, OUT, p);
			return p;
		}
		
public DataSet ResponsibilityTypes_InsPr(Int16? in_working_unit_id, 
		                                            String in_responsibility_nm, 
		                                            Byte? in_responsibility_cnt, 
		                                            Int16? in_responsibility_sq, 
		                                            ref Int16 out_responsibility_type_id)
		{
			List<SqlParameter> prms = ResponsibilityTypes_InsPr_Params(in_working_unit_id, in_responsibility_nm, in_responsibility_cnt, in_responsibility_sq, ref out_responsibility_type_id);
			DataSet dset = esp("ResponsibilityTypes_InsPr", prms);
			out_responsibility_type_id = (System.Int16)prms.FirstOrDefault(p => p.ParameterName == "out_responsibility_type_id").Value;

			return dset;
		}
		
public string ResponsibilityTypes_InsPrAsTask(Int16? in_working_unit_id, 
		                                                    String in_responsibility_nm, 
		                                                    Byte? in_responsibility_cnt, 
		                                                    Int16? in_responsibility_sq, 
		                                                    ref Int16 out_responsibility_type_id)
		{
			List<SqlParameter> prms = ResponsibilityTypes_InsPr_Params(in_working_unit_id, in_responsibility_nm, in_responsibility_cnt, in_responsibility_sq, ref out_responsibility_type_id);
			return gps("ResponsibilityTypes_InsPr", prms);

		}
		
		
		
private List<SqlParameter> ResponsibilityTypes_SelPr_Params(Int16? in_working_unit_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("in_working_unit_id", in_working_unit_id, SMALLINT, IN, p);
			return p;
		}
		
public DataSet ResponsibilityTypes_SelPr(Int16? in_working_unit_id)
		{
			List<SqlParameter> prms = ResponsibilityTypes_SelPr_Params(in_working_unit_id);
			DataSet dset = esp("ResponsibilityTypes_SelPr", prms);

			return dset;
		}
		
public string ResponsibilityTypes_SelPrAsTask(Int16? in_working_unit_id)
		{
			List<SqlParameter> prms = ResponsibilityTypes_SelPr_Params(in_working_unit_id);
			return gps("ResponsibilityTypes_SelPr", prms);

		}
		
		
		
private List<SqlParameter> ResponsibilityTypes_UpdPr_Params(Int16? in_working_unit_id, 
		                                                                String in_responsibility_nm, 
		                                                                Byte? in_responsibility_cnt, 
		                                                                Int16? in_responsibility_sq, 
		                                                                Int16? in_responsibility_type_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("in_working_unit_id", in_working_unit_id, SMALLINT, IN, p);
			csp("in_responsibility_nm", in_responsibility_nm, VARCHAR, IN, p);
			csp("in_responsibility_cnt", in_responsibility_cnt, TINYINT, IN, p);
			csp("in_responsibility_sq", in_responsibility_sq, SMALLINT, IN, p);
			csp("in_responsibility_type_id", in_responsibility_type_id, SMALLINT, IN, p);
			return p;
		}
		
public DataSet ResponsibilityTypes_UpdPr(Int16? in_working_unit_id, 
		                                            String in_responsibility_nm, 
		                                            Byte? in_responsibility_cnt, 
		                                            Int16? in_responsibility_sq, 
		                                            Int16? in_responsibility_type_id)
		{
			List<SqlParameter> prms = ResponsibilityTypes_UpdPr_Params(in_working_unit_id, in_responsibility_nm, in_responsibility_cnt, in_responsibility_sq, in_responsibility_type_id);
			DataSet dset = esp("ResponsibilityTypes_UpdPr", prms);

			return dset;
		}
		
public string ResponsibilityTypes_UpdPrAsTask(Int16? in_working_unit_id, 
		                                                    String in_responsibility_nm, 
		                                                    Byte? in_responsibility_cnt, 
		                                                    Int16? in_responsibility_sq, 
		                                                    Int16? in_responsibility_type_id)
		{
			List<SqlParameter> prms = ResponsibilityTypes_UpdPr_Params(in_working_unit_id, in_responsibility_nm, in_responsibility_cnt, in_responsibility_sq, in_responsibility_type_id);
			return gps("ResponsibilityTypes_UpdPr", prms);

		}
		
		
		
		
		
		
		
		
		
		
		
private List<SqlParameter> SelAddTypes_Params()
		{
			List<SqlParameter> p = new List<SqlParameter>();
			return p;
		}
		
public DataSet SelAddTypes()
		{
			List<SqlParameter> prms = SelAddTypes_Params();
			DataSet dset = esp("SelAddTypes", prms);
			return dset;
		}
		
public string SelAddTypesAsTask()
		{
			List<SqlParameter> prms = SelAddTypes_Params();
			return gps("SelAddTypes", prms);
		}
		
		
		
private List<SqlParameter> SelCountries_Params(String p_stateName)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_stateName", p_stateName, VARCHAR, IN, p);
			return p;
		}
		
public DataSet SelCountries(String p_stateName)
		{
			List<SqlParameter> prms = SelCountries_Params(p_stateName);
			DataSet dset = esp("SelCountries", prms);

			return dset;
		}
		
public string SelCountriesAsTask(String p_stateName)
		{
			List<SqlParameter> prms = SelCountries_Params(p_stateName);
			return gps("SelCountries", prms);

		}
		
		
		
private List<SqlParameter> SelDistCity_Params(Int32? p_stateID)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_stateID", p_stateID, INT, IN, p);
			return p;
		}
		
public DataSet SelDistCity(Int32? p_stateID)
		{
			List<SqlParameter> prms = SelDistCity_Params(p_stateID);
			DataSet dset = esp("SelDistCity", prms);

			return dset;
		}
		
public string SelDistCityAsTask(Int32? p_stateID)
		{
			List<SqlParameter> prms = SelDistCity_Params(p_stateID);
			return gps("SelDistCity", prms);

		}
		
		
		
private List<SqlParameter> SelPartyAddresses_Params(Int32? p_party_id, 
		                                                        String p_application_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_party_id", p_party_id, INT, IN, p);
			csp("p_application_id", p_application_id, CHAR, IN, p);
			return p;
		}
		
public DataSet SelPartyAddresses(Int32? p_party_id, 
		                                    String p_application_id)
		{
			List<SqlParameter> prms = SelPartyAddresses_Params(p_party_id, p_application_id);
			DataSet dset = esp("SelPartyAddresses", prms);

			return dset;
		}
		
public string SelPartyAddressesAsTask(Int32? p_party_id, 
		                                            String p_application_id)
		{
			List<SqlParameter> prms = SelPartyAddresses_Params(p_party_id, p_application_id);
			return gps("SelPartyAddresses", prms);

		}
		
		
		
private List<SqlParameter> SelPartyRoleApplication_Params(Int32? p_party_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_party_id", p_party_id, INT, IN, p);
			return p;
		}
		
public DataSet SelPartyRoleApplication(Int32? p_party_id)
		{
			List<SqlParameter> prms = SelPartyRoleApplication_Params(p_party_id);
			DataSet dset = esp("SelPartyRoleApplication", prms);

			return dset;
		}
		
public string SelPartyRoleApplicationAsTask(Int32? p_party_id)
		{
			List<SqlParameter> prms = SelPartyRoleApplication_Params(p_party_id);
			return gps("SelPartyRoleApplication", prms);

		}
		
		
		
private List<SqlParameter> SelPartyRoles_Params(Int32? p_party_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_party_id", p_party_id, INT, IN, p);
			return p;
		}
		
public DataSet SelPartyRoles(Int32? p_party_id)
		{
			List<SqlParameter> prms = SelPartyRoles_Params(p_party_id);
			DataSet dset = esp("SelPartyRoles", prms);

			return dset;
		}
		
public string SelPartyRolesAsTask(Int32? p_party_id)
		{
			List<SqlParameter> prms = SelPartyRoles_Params(p_party_id);
			return gps("SelPartyRoles", prms);

		}
		
		
		
private List<SqlParameter> SelPersons_Params(String p_conditionValue, 
		                                                String p_condition)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_conditionValue", p_conditionValue, CHAR, IN, p);
			csp("p_condition", p_condition, VARCHAR, IN, p);
			return p;
		}
		
public DataSet SelPersons(String p_conditionValue, 
		                                String p_condition)
		{
			List<SqlParameter> prms = SelPersons_Params(p_conditionValue, p_condition);
			DataSet dset = esp("SelPersons", prms);

			return dset;
		}
		
public string SelPersonsAsTask(String p_conditionValue, 
		                                    String p_condition)
		{
			List<SqlParameter> prms = SelPersons_Params(p_conditionValue, p_condition);
			return gps("SelPersons", prms);

		}
		
		
		
private List<SqlParameter> SelRoles_Params()
		{
			List<SqlParameter> p = new List<SqlParameter>();
			return p;
		}
		
public DataSet SelRoles()
		{
			List<SqlParameter> prms = SelRoles_Params();
			DataSet dset = esp("SelRoles", prms);
			return dset;
		}
		
public string SelRolesAsTask()
		{
			List<SqlParameter> prms = SelRoles_Params();
			return gps("SelRoles", prms);
		}
		
		
		
private List<SqlParameter> SelRolesAppControls_Params(String p_role_cd, 
		                                                            String p_current_app_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_role_cd", p_role_cd, CHAR, IN, p);
			csp("p_current_app_id", p_current_app_id, CHAR, IN, p);
			return p;
		}
		
public DataSet SelRolesAppControls(String p_role_cd, 
		                                        String p_current_app_id)
		{
			List<SqlParameter> prms = SelRolesAppControls_Params(p_role_cd, p_current_app_id);
			DataSet dset = esp("SelRolesAppControls", prms);

			return dset;
		}
		
public string SelRolesAppControlsAsTask(String p_role_cd, 
		                                            String p_current_app_id)
		{
			List<SqlParameter> prms = SelRolesAppControls_Params(p_role_cd, p_current_app_id);
			return gps("SelRolesAppControls", prms);

		}
		
		
		
private List<SqlParameter> SelStates_Params(Int16? p_countryID)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_countryID", p_countryID, SMALLINT, IN, p);
			return p;
		}
		
public DataSet SelStates(Int16? p_countryID)
		{
			List<SqlParameter> prms = SelStates_Params(p_countryID);
			DataSet dset = esp("SelStates", prms);

			return dset;
		}
		
public string SelStatesAsTask(Int16? p_countryID)
		{
			List<SqlParameter> prms = SelStates_Params(p_countryID);
			return gps("SelStates", prms);

		}
		
		
		
		
		
		
		
private List<SqlParameter> SewadarResponsibilities_InsPr_Params(Int16? in_working_unit_id, 
		                                                                    Int16? in_responsibility_type_id, 
		                                                                    Int32? in_sewadar_id, 
		                                                                    Int16? in_responsibility_sq)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("in_working_unit_id", in_working_unit_id, SMALLINT, IN, p);
			csp("in_responsibility_type_id", in_responsibility_type_id, SMALLINT, IN, p);
			csp("in_sewadar_id", in_sewadar_id, INT, IN, p);
			csp("in_responsibility_sq", in_responsibility_sq, SMALLINT, IN, p);
			return p;
		}
		
public DataSet SewadarResponsibilities_InsPr(Int16? in_working_unit_id, 
		                                                Int16? in_responsibility_type_id, 
		                                                Int32? in_sewadar_id, 
		                                                Int16? in_responsibility_sq)
		{
			List<SqlParameter> prms = SewadarResponsibilities_InsPr_Params(in_working_unit_id, in_responsibility_type_id, in_sewadar_id, in_responsibility_sq);
			DataSet dset = esp("SewadarResponsibilities_InsPr", prms);

			return dset;
		}
		
public string SewadarResponsibilities_InsPrAsTask(Int16? in_working_unit_id, 
		                                                        Int16? in_responsibility_type_id, 
		                                                        Int32? in_sewadar_id, 
		                                                        Int16? in_responsibility_sq)
		{
			List<SqlParameter> prms = SewadarResponsibilities_InsPr_Params(in_working_unit_id, in_responsibility_type_id, in_sewadar_id, in_responsibility_sq);
			return gps("SewadarResponsibilities_InsPr", prms);

		}
		
		
		
private List<SqlParameter> SewadarResponsibilities_SelPr_Params(Int16? in_working_unit_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("in_working_unit_id", in_working_unit_id, SMALLINT, IN, p);
			return p;
		}
		
public DataSet SewadarResponsibilities_SelPr(Int16? in_working_unit_id)
		{
			List<SqlParameter> prms = SewadarResponsibilities_SelPr_Params(in_working_unit_id);
			DataSet dset = esp("SewadarResponsibilities_SelPr", prms);

			return dset;
		}
		
public string SewadarResponsibilities_SelPrAsTask(Int16? in_working_unit_id)
		{
			List<SqlParameter> prms = SewadarResponsibilities_SelPr_Params(in_working_unit_id);
			return gps("SewadarResponsibilities_SelPr", prms);

		}
		
		
		
		
		
		
		
		
		
private List<SqlParameter> Strength_SelPr_Params(Int16? in_working_unit_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("in_working_unit_id", in_working_unit_id, SMALLINT, IN, p);
			return p;
		}
		
public DataSet Strength_SelPr(Int16? in_working_unit_id)
		{
			List<SqlParameter> prms = Strength_SelPr_Params(in_working_unit_id);
			DataSet dset = esp("Strength_SelPr", prms);

			return dset;
		}
		
public string Strength_SelPrAsTask(Int16? in_working_unit_id)
		{
			List<SqlParameter> prms = Strength_SelPr_Params(in_working_unit_id);
			return gps("Strength_SelPr", prms);

		}
		
		
		
private List<SqlParameter> Upd_epabx_extensions_WU_Params(Int16? in_working_unit_id, 
		                                                                String in_epabx_extension, 
		                                                                String in_epabx_extension_old, 
		                                                                Int16? in_extension_sq)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("in_working_unit_id", in_working_unit_id, SMALLINT, IN, p);
			csp("in_epabx_extension", in_epabx_extension, CHAR, IN, p);
			csp("in_epabx_extension_old", in_epabx_extension_old, CHAR, IN, p);
			csp("in_extension_sq", in_extension_sq, SMALLINT, IN, p);
			return p;
		}
		
public DataSet Upd_epabx_extensions_WU(Int16? in_working_unit_id, 
		                                            String in_epabx_extension, 
		                                            String in_epabx_extension_old, 
		                                            Int16? in_extension_sq)
		{
			List<SqlParameter> prms = Upd_epabx_extensions_WU_Params(in_working_unit_id, in_epabx_extension, in_epabx_extension_old, in_extension_sq);
			DataSet dset = esp("Upd_epabx_extensions_WU", prms);

			return dset;
		}
		
public string Upd_epabx_extensions_WUAsTask(Int16? in_working_unit_id, 
		                                                String in_epabx_extension, 
		                                                String in_epabx_extension_old, 
		                                                Int16? in_extension_sq)
		{
			List<SqlParameter> prms = Upd_epabx_extensions_WU_Params(in_working_unit_id, in_epabx_extension, in_epabx_extension_old, in_extension_sq);
			return gps("Upd_epabx_extensions_WU", prms);

		}
		
		
		
private List<SqlParameter> Upd_epabx_extensions_WU_displayOrder_Params(Int16? in_working_unit_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("in_working_unit_id", in_working_unit_id, SMALLINT, IN, p);
			return p;
		}
		
public DataSet Upd_epabx_extensions_WU_displayOrder(Int16? in_working_unit_id)
		{
			List<SqlParameter> prms = Upd_epabx_extensions_WU_displayOrder_Params(in_working_unit_id);
			DataSet dset = esp("Upd_epabx_extensions_WU_displayOrder", prms);

			return dset;
		}
		
public string Upd_epabx_extensions_WU_displayOrderAsTask(Int16? in_working_unit_id)
		{
			List<SqlParameter> prms = Upd_epabx_extensions_WU_displayOrder_Params(in_working_unit_id);
			return gps("Upd_epabx_extensions_WU_displayOrder", prms);

		}
		
		
		
private List<SqlParameter> Upd_fax_lines_WU_Params(Int16? in_working_unit_id, 
		                                                        String in_fax_line, 
		                                                        String in_fax_line_old, 
		                                                        Int16? in_line_sq)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("in_working_unit_id", in_working_unit_id, SMALLINT, IN, p);
			csp("in_fax_line", in_fax_line, CHAR, IN, p);
			csp("in_fax_line_old", in_fax_line_old, CHAR, IN, p);
			csp("in_line_sq", in_line_sq, SMALLINT, IN, p);
			return p;
		}
		
public DataSet Upd_fax_lines_WU(Int16? in_working_unit_id, 
		                                    String in_fax_line, 
		                                    String in_fax_line_old, 
		                                    Int16? in_line_sq)
		{
			List<SqlParameter> prms = Upd_fax_lines_WU_Params(in_working_unit_id, in_fax_line, in_fax_line_old, in_line_sq);
			DataSet dset = esp("Upd_fax_lines_WU", prms);

			return dset;
		}
		
public string Upd_fax_lines_WUAsTask(Int16? in_working_unit_id, 
		                                        String in_fax_line, 
		                                        String in_fax_line_old, 
		                                        Int16? in_line_sq)
		{
			List<SqlParameter> prms = Upd_fax_lines_WU_Params(in_working_unit_id, in_fax_line, in_fax_line_old, in_line_sq);
			return gps("Upd_fax_lines_WU", prms);

		}
		
		
		
private List<SqlParameter> Upd_fax_lines_WU_displayOrder_Params(Int16? in_working_unit_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("in_working_unit_id", in_working_unit_id, SMALLINT, IN, p);
			return p;
		}
		
public DataSet Upd_fax_lines_WU_displayOrder(Int16? in_working_unit_id)
		{
			List<SqlParameter> prms = Upd_fax_lines_WU_displayOrder_Params(in_working_unit_id);
			DataSet dset = esp("Upd_fax_lines_WU_displayOrder", prms);

			return dset;
		}
		
public string Upd_fax_lines_WU_displayOrderAsTask(Int16? in_working_unit_id)
		{
			List<SqlParameter> prms = Upd_fax_lines_WU_displayOrder_Params(in_working_unit_id);
			return gps("Upd_fax_lines_WU_displayOrder", prms);

		}
		
		
		
private List<SqlParameter> Upd_p_and_t_lines_WU_Params(Int16? in_working_unit_id, 
		                                                            String in_p_and_t_line, 
		                                                            String in_p_and_t_line_old, 
		                                                            Int16? in_line_sq)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("in_working_unit_id", in_working_unit_id, SMALLINT, IN, p);
			csp("in_p_and_t_line", in_p_and_t_line, CHAR, IN, p);
			csp("in_p_and_t_line_old", in_p_and_t_line_old, CHAR, IN, p);
			csp("in_line_sq", in_line_sq, SMALLINT, IN, p);
			return p;
		}
		
public DataSet Upd_p_and_t_lines_WU(Int16? in_working_unit_id, 
		                                        String in_p_and_t_line, 
		                                        String in_p_and_t_line_old, 
		                                        Int16? in_line_sq)
		{
			List<SqlParameter> prms = Upd_p_and_t_lines_WU_Params(in_working_unit_id, in_p_and_t_line, in_p_and_t_line_old, in_line_sq);
			DataSet dset = esp("Upd_p_and_t_lines_WU", prms);

			return dset;
		}
		
public string Upd_p_and_t_lines_WUAsTask(Int16? in_working_unit_id, 
		                                            String in_p_and_t_line, 
		                                            String in_p_and_t_line_old, 
		                                            Int16? in_line_sq)
		{
			List<SqlParameter> prms = Upd_p_and_t_lines_WU_Params(in_working_unit_id, in_p_and_t_line, in_p_and_t_line_old, in_line_sq);
			return gps("Upd_p_and_t_lines_WU", prms);

		}
		
		
		
private List<SqlParameter> Upd_p_and_t_lines_WU_displayOrder_Params(Int16? in_working_unit_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("in_working_unit_id", in_working_unit_id, SMALLINT, IN, p);
			return p;
		}
		
public DataSet Upd_p_and_t_lines_WU_displayOrder(Int16? in_working_unit_id)
		{
			List<SqlParameter> prms = Upd_p_and_t_lines_WU_displayOrder_Params(in_working_unit_id);
			DataSet dset = esp("Upd_p_and_t_lines_WU_displayOrder", prms);

			return dset;
		}
		
public string Upd_p_and_t_lines_WU_displayOrderAsTask(Int16? in_working_unit_id)
		{
			List<SqlParameter> prms = Upd_p_and_t_lines_WU_displayOrder_Params(in_working_unit_id);
			return gps("Upd_p_and_t_lines_WU_displayOrder", prms);

		}
		
		
		
private List<SqlParameter> UpdAssistant_Services_Params(Int16? assistant_service_id, 
		                                                            String assistant_service_nm, 
		                                                            DateTime? effective_from, 
		                                                            DateTime? effective_till)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("assistant_service_id", assistant_service_id, SMALLINT, IN, p);
			csp("assistant_service_nm", assistant_service_nm, VARCHAR, IN, p);
			csp("effective_from", effective_from, DATETIME, IN, p);
			csp("effective_till", effective_till, DATETIME, IN, p);
			return p;
		}
		
public DataSet UpdAssistant_Services(Int16? assistant_service_id, 
		                                        String assistant_service_nm, 
		                                        DateTime? effective_from, 
		                                        DateTime? effective_till)
		{
			List<SqlParameter> prms = UpdAssistant_Services_Params(assistant_service_id, assistant_service_nm, effective_from, effective_till);
			DataSet dset = esp("UpdAssistant_Services", prms);

			return dset;
		}
		
public string UpdAssistant_ServicesAsTask(Int16? assistant_service_id, 
		                                                String assistant_service_nm, 
		                                                DateTime? effective_from, 
		                                                DateTime? effective_till)
		{
			List<SqlParameter> prms = UpdAssistant_Services_Params(assistant_service_id, assistant_service_nm, effective_from, effective_till);
			return gps("UpdAssistant_Services", prms);

		}
		
		
		
private List<SqlParameter> UpdateCountrie_Params(Int16? country_id, 
		                                                    String country_cd, 
		                                                    String country_nm, 
		                                                    String isd_code, 
		                                                    Decimal? gmt_diff, 
		                                                    Byte[] txn_ts, 
		                                                    DateTime? effective_from, 
		                                                    DateTime? effective_till)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("country_id", country_id, SMALLINT, IN, p);
			csp("country_cd", country_cd, VARCHAR, IN, p);
			csp("country_nm", country_nm, VARCHAR, IN, p);
			csp("isd_code", isd_code, VARCHAR, IN, p);
			csp("gmt_diff", gmt_diff, DECIMAL, IN, p);
			csp("txn_ts", txn_ts, TIMESTAMP, IN, p);
			csp("effective_from", effective_from, DATETIME, IN, p);
			csp("effective_till", effective_till, DATETIME, IN, p);
			return p;
		}
		
public DataSet UpdateCountrie(Int16? country_id, 
		                                    String country_cd, 
		                                    String country_nm, 
		                                    String isd_code, 
		                                    Decimal? gmt_diff, 
		                                    Byte[] txn_ts, 
		                                    DateTime? effective_from, 
		                                    DateTime? effective_till)
		{
			List<SqlParameter> prms = UpdateCountrie_Params(country_id, country_cd, country_nm, isd_code, gmt_diff, txn_ts, effective_from, effective_till);
			DataSet dset = esp("UpdateCountrie", prms);

			return dset;
		}
		
public string UpdateCountrieAsTask(Int16? country_id, 
		                                        String country_cd, 
		                                        String country_nm, 
		                                        String isd_code, 
		                                        Decimal? gmt_diff, 
		                                        Byte[] txn_ts, 
		                                        DateTime? effective_from, 
		                                        DateTime? effective_till)
		{
			List<SqlParameter> prms = UpdateCountrie_Params(country_id, country_cd, country_nm, isd_code, gmt_diff, txn_ts, effective_from, effective_till);
			return gps("UpdateCountrie", prms);

		}
		
		
		
private List<SqlParameter> UpdateDistrictsOrCitie_Params(Int32? district_or_city_id, 
		                                                            String district_cd, 
		                                                            String district_nm, 
		                                                            Int32? state_id, 
		                                                            Byte[] txn_ts, 
		                                                            DateTime? effective_from, 
		                                                            DateTime? effective_till)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("district_or_city_id", district_or_city_id, INT, IN, p);
			csp("district_cd", district_cd, VARCHAR, IN, p);
			csp("district_nm", district_nm, VARCHAR, IN, p);
			csp("state_id", state_id, INT, IN, p);
			csp("txn_ts", txn_ts, TIMESTAMP, IN, p);
			csp("effective_from", effective_from, DATETIME, IN, p);
			csp("effective_till", effective_till, DATETIME, IN, p);
			return p;
		}
		
public DataSet UpdateDistrictsOrCitie(Int32? district_or_city_id, 
		                                            String district_cd, 
		                                            String district_nm, 
		                                            Int32? state_id, 
		                                            Byte[] txn_ts, 
		                                            DateTime? effective_from, 
		                                            DateTime? effective_till)
		{
			List<SqlParameter> prms = UpdateDistrictsOrCitie_Params(district_or_city_id, district_cd, district_nm, state_id, txn_ts, effective_from, effective_till);
			DataSet dset = esp("UpdateDistrictsOrCitie", prms);

			return dset;
		}
		
public string UpdateDistrictsOrCitieAsTask(Int32? district_or_city_id, 
		                                                String district_cd, 
		                                                String district_nm, 
		                                                Int32? state_id, 
		                                                Byte[] txn_ts, 
		                                                DateTime? effective_from, 
		                                                DateTime? effective_till)
		{
			List<SqlParameter> prms = UpdateDistrictsOrCitie_Params(district_or_city_id, district_cd, district_nm, state_id, txn_ts, effective_from, effective_till);
			return gps("UpdateDistrictsOrCitie", prms);

		}
		
		
		
private List<SqlParameter> UpdateInitiationPlace_Params(Int16? place_id, 
		                                                            String place_nm, 
		                                                            Byte[] txn_ts, 
		                                                            DateTime? effective_from, 
		                                                            DateTime? effective_till)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("place_id", place_id, SMALLINT, IN, p);
			csp("place_nm", place_nm, VARCHAR, IN, p);
			csp("txn_ts", txn_ts, TIMESTAMP, IN, p);
			csp("effective_from", effective_from, DATETIME, IN, p);
			csp("effective_till", effective_till, DATETIME, IN, p);
			return p;
		}
		
public DataSet UpdateInitiationPlace(Int16? place_id, 
		                                        String place_nm, 
		                                        Byte[] txn_ts, 
		                                        DateTime? effective_from, 
		                                        DateTime? effective_till)
		{
			List<SqlParameter> prms = UpdateInitiationPlace_Params(place_id, place_nm, txn_ts, effective_from, effective_till);
			DataSet dset = esp("UpdateInitiationPlace", prms);

			return dset;
		}
		
public string UpdateInitiationPlaceAsTask(Int16? place_id, 
		                                                String place_nm, 
		                                                Byte[] txn_ts, 
		                                                DateTime? effective_from, 
		                                                DateTime? effective_till)
		{
			List<SqlParameter> prms = UpdateInitiationPlace_Params(place_id, place_nm, txn_ts, effective_from, effective_till);
			return gps("UpdateInitiationPlace", prms);

		}
		
		
		
private List<SqlParameter> UpdateOccupation_Params(Int16? occupation_id, 
		                                                        String occupation_cd, 
		                                                        String occupation_nm, 
		                                                        Byte[] txn_ts, 
		                                                        DateTime? effective_from, 
		                                                        DateTime? effective_till)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("occupation_id", occupation_id, SMALLINT, IN, p);
			csp("occupation_cd", occupation_cd, VARCHAR, IN, p);
			csp("occupation_nm", occupation_nm, VARCHAR, IN, p);
			csp("txn_ts", txn_ts, TIMESTAMP, IN, p);
			csp("effective_from", effective_from, DATETIME, IN, p);
			csp("effective_till", effective_till, DATETIME, IN, p);
			return p;
		}
		
public DataSet UpdateOccupation(Int16? occupation_id, 
		                                    String occupation_cd, 
		                                    String occupation_nm, 
		                                    Byte[] txn_ts, 
		                                    DateTime? effective_from, 
		                                    DateTime? effective_till)
		{
			List<SqlParameter> prms = UpdateOccupation_Params(occupation_id, occupation_cd, occupation_nm, txn_ts, effective_from, effective_till);
			DataSet dset = esp("UpdateOccupation", prms);

			return dset;
		}
		
public string UpdateOccupationAsTask(Int16? occupation_id, 
		                                        String occupation_cd, 
		                                        String occupation_nm, 
		                                        Byte[] txn_ts, 
		                                        DateTime? effective_from, 
		                                        DateTime? effective_till)
		{
			List<SqlParameter> prms = UpdateOccupation_Params(occupation_id, occupation_cd, occupation_nm, txn_ts, effective_from, effective_till);
			return gps("UpdateOccupation", prms);

		}
		
		
		
private List<SqlParameter> UpdateQlfctnSubject_Params(Int16? qlfctn_subject_id, 
		                                                            String qlfctn_subject_cd, 
		                                                            String qlfctn_subject_nm, 
		                                                            String description, 
		                                                            DateTime? effective_from, 
		                                                            DateTime? effective_till)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("qlfctn_subject_id", qlfctn_subject_id, SMALLINT, IN, p);
			csp("qlfctn_subject_cd", qlfctn_subject_cd, VARCHAR, IN, p);
			csp("qlfctn_subject_nm", qlfctn_subject_nm, VARCHAR, IN, p);
			csp("description", description, VARCHAR, IN, p);
			csp("effective_from", effective_from, DATETIME, IN, p);
			csp("effective_till", effective_till, DATETIME, IN, p);
			return p;
		}
		
public DataSet UpdateQlfctnSubject(Int16? qlfctn_subject_id, 
		                                        String qlfctn_subject_cd, 
		                                        String qlfctn_subject_nm, 
		                                        String description, 
		                                        DateTime? effective_from, 
		                                        DateTime? effective_till)
		{
			List<SqlParameter> prms = UpdateQlfctnSubject_Params(qlfctn_subject_id, qlfctn_subject_cd, qlfctn_subject_nm, description, effective_from, effective_till);
			DataSet dset = esp("UpdateQlfctnSubject", prms);

			return dset;
		}
		
public string UpdateQlfctnSubjectAsTask(Int16? qlfctn_subject_id, 
		                                            String qlfctn_subject_cd, 
		                                            String qlfctn_subject_nm, 
		                                            String description, 
		                                            DateTime? effective_from, 
		                                            DateTime? effective_till)
		{
			List<SqlParameter> prms = UpdateQlfctnSubject_Params(qlfctn_subject_id, qlfctn_subject_cd, qlfctn_subject_nm, description, effective_from, effective_till);
			return gps("UpdateQlfctnSubject", prms);

		}
		
		
		
private List<SqlParameter> UpdateQualification_Params(Int16? qualification_id, 
		                                                            String qualification_type, 
		                                                            String qualification_cd, 
		                                                            String qualification_nm, 
		                                                            String remarks, 
		                                                            DateTime? effective_from, 
		                                                            DateTime? effective_till, 
		                                                            Byte[] txn_ts)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("qualification_id", qualification_id, SMALLINT, IN, p);
			csp("qualification_type", qualification_type, VARCHAR, IN, p);
			csp("qualification_cd", qualification_cd, VARCHAR, IN, p);
			csp("qualification_nm", qualification_nm, VARCHAR, IN, p);
			csp("remarks", remarks, VARCHAR, IN, p);
			csp("effective_from", effective_from, DATETIME, IN, p);
			csp("effective_till", effective_till, DATETIME, IN, p);
			csp("txn_ts", txn_ts, TIMESTAMP, IN, p);
			return p;
		}
		
public DataSet UpdateQualification(Int16? qualification_id, 
		                                        String qualification_type, 
		                                        String qualification_cd, 
		                                        String qualification_nm, 
		                                        String remarks, 
		                                        DateTime? effective_from, 
		                                        DateTime? effective_till, 
		                                        Byte[] txn_ts)
		{
			List<SqlParameter> prms = UpdateQualification_Params(qualification_id, qualification_type, qualification_cd, qualification_nm, remarks, effective_from, effective_till, txn_ts);
			DataSet dset = esp("UpdateQualification", prms);

			return dset;
		}
		
public string UpdateQualificationAsTask(Int16? qualification_id, 
		                                            String qualification_type, 
		                                            String qualification_cd, 
		                                            String qualification_nm, 
		                                            String remarks, 
		                                            DateTime? effective_from, 
		                                            DateTime? effective_till, 
		                                            Byte[] txn_ts)
		{
			List<SqlParameter> prms = UpdateQualification_Params(qualification_id, qualification_type, qualification_cd, qualification_nm, remarks, effective_from, effective_till, txn_ts);
			return gps("UpdateQualification", prms);

		}
		
		
		
private List<SqlParameter> UpdateQualificationsQlfctnSubject_Params(Int16? qualification_id, 
		                                                                        Int16? qlfctn_subject_id, 
		                                                                        DateTime? effective_from_subject, 
		                                                                        DateTime? effective_till_subject, 
		                                                                        Int16? old_qualification_id, 
		                                                                        Int16? old_qlfctn_subject_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("qualification_id", qualification_id, SMALLINT, IN, p);
			csp("qlfctn_subject_id", qlfctn_subject_id, SMALLINT, IN, p);
			csp("effective_from_subject", effective_from_subject, DATETIME, IN, p);
			csp("effective_till_subject", effective_till_subject, DATETIME, IN, p);
			csp("old_qualification_id", old_qualification_id, SMALLINT, IN, p);
			csp("old_qlfctn_subject_id", old_qlfctn_subject_id, SMALLINT, IN, p);
			return p;
		}
		
public DataSet UpdateQualificationsQlfctnSubject(Int16? qualification_id, 
		                                                    Int16? qlfctn_subject_id, 
		                                                    DateTime? effective_from_subject, 
		                                                    DateTime? effective_till_subject, 
		                                                    Int16? old_qualification_id, 
		                                                    Int16? old_qlfctn_subject_id)
		{
			List<SqlParameter> prms = UpdateQualificationsQlfctnSubject_Params(qualification_id, qlfctn_subject_id, effective_from_subject, effective_till_subject, old_qualification_id, old_qlfctn_subject_id);
			DataSet dset = esp("UpdateQualificationsQlfctnSubject", prms);

			return dset;
		}
		
public string UpdateQualificationsQlfctnSubjectAsTask(Int16? qualification_id, 
		                                                            Int16? qlfctn_subject_id, 
		                                                            DateTime? effective_from_subject, 
		                                                            DateTime? effective_till_subject, 
		                                                            Int16? old_qualification_id, 
		                                                            Int16? old_qlfctn_subject_id)
		{
			List<SqlParameter> prms = UpdateQualificationsQlfctnSubject_Params(qualification_id, qlfctn_subject_id, effective_from_subject, effective_till_subject, old_qualification_id, old_qlfctn_subject_id);
			return gps("UpdateQualificationsQlfctnSubject", prms);

		}
		
		
		
private List<SqlParameter> UpdateRelation_Params(Int16? relation_id, 
		                                                    String relation_nm, 
		                                                    Byte[] txn_ts, 
		                                                    DateTime? effective_from, 
		                                                    DateTime? effective_till)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("relation_id", relation_id, SMALLINT, IN, p);
			csp("relation_nm", relation_nm, VARCHAR, IN, p);
			csp("txn_ts", txn_ts, TIMESTAMP, IN, p);
			csp("effective_from", effective_from, DATETIME, IN, p);
			csp("effective_till", effective_till, DATETIME, IN, p);
			return p;
		}
		
public DataSet UpdateRelation(Int16? relation_id, 
		                                    String relation_nm, 
		                                    Byte[] txn_ts, 
		                                    DateTime? effective_from, 
		                                    DateTime? effective_till)
		{
			List<SqlParameter> prms = UpdateRelation_Params(relation_id, relation_nm, txn_ts, effective_from, effective_till);
			DataSet dset = esp("UpdateRelation", prms);

			return dset;
		}
		
public string UpdateRelationAsTask(Int16? relation_id, 
		                                        String relation_nm, 
		                                        Byte[] txn_ts, 
		                                        DateTime? effective_from, 
		                                        DateTime? effective_till)
		{
			List<SqlParameter> prms = UpdateRelation_Params(relation_id, relation_nm, txn_ts, effective_from, effective_till);
			return gps("UpdateRelation", prms);

		}
		
		
		
private List<SqlParameter> UpdateSatsangCentre_Params(Int32? satsang_centre_id, 
		                                                            String satsang_centre_cd, 
		                                                            String satsang_centre_nm, 
		                                                            String satsang_centre_type, 
		                                                            String address_line_1, 
		                                                            String address_line_2, 
		                                                            Int32? district_or_city_id, 
		                                                            String pin_or_zip_code, 
		                                                            String telephones, 
		                                                            String email_addresses, 
		                                                            String fax_lines, 
		                                                            Byte[] txn_ts, 
		                                                            DateTime? effective_from, 
		                                                            DateTime? effective_till)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("satsang_centre_id", satsang_centre_id, INT, IN, p);
			csp("satsang_centre_cd", satsang_centre_cd, CHAR, IN, p);
			csp("satsang_centre_nm", satsang_centre_nm, VARCHAR, IN, p);
			csp("satsang_centre_type", satsang_centre_type, VARCHAR, IN, p);
			csp("address_line_1", address_line_1, VARCHAR, IN, p);
			csp("address_line_2", address_line_2, VARCHAR, IN, p);
			csp("district_or_city_id", district_or_city_id, INT, IN, p);
			csp("pin_or_zip_code", pin_or_zip_code, CHAR, IN, p);
			csp("telephones", telephones, VARCHAR, IN, p);
			csp("email_addresses", email_addresses, VARCHAR, IN, p);
			csp("fax_lines", fax_lines, VARCHAR, IN, p);
			csp("txn_ts", txn_ts, TIMESTAMP, IN, p);
			csp("effective_from", effective_from, DATETIME, IN, p);
			csp("effective_till", effective_till, DATETIME, IN, p);
			return p;
		}
		
public DataSet UpdateSatsangCentre(Int32? satsang_centre_id, 
		                                        String satsang_centre_cd, 
		                                        String satsang_centre_nm, 
		                                        String satsang_centre_type, 
		                                        String address_line_1, 
		                                        String address_line_2, 
		                                        Int32? district_or_city_id, 
		                                        String pin_or_zip_code, 
		                                        String telephones, 
		                                        String email_addresses, 
		                                        String fax_lines, 
		                                        Byte[] txn_ts, 
		                                        DateTime? effective_from, 
		                                        DateTime? effective_till)
		{
			List<SqlParameter> prms = UpdateSatsangCentre_Params(satsang_centre_id, satsang_centre_cd, satsang_centre_nm, satsang_centre_type, address_line_1, address_line_2, district_or_city_id, pin_or_zip_code, telephones, email_addresses, fax_lines, txn_ts, effective_from, effective_till);
			DataSet dset = esp("UpdateSatsangCentre", prms);

			return dset;
		}
		
public string UpdateSatsangCentreAsTask(Int32? satsang_centre_id, 
		                                            String satsang_centre_cd, 
		                                            String satsang_centre_nm, 
		                                            String satsang_centre_type, 
		                                            String address_line_1, 
		                                            String address_line_2, 
		                                            Int32? district_or_city_id, 
		                                            String pin_or_zip_code, 
		                                            String telephones, 
		                                            String email_addresses, 
		                                            String fax_lines, 
		                                            Byte[] txn_ts, 
		                                            DateTime? effective_from, 
		                                            DateTime? effective_till)
		{
			List<SqlParameter> prms = UpdateSatsangCentre_Params(satsang_centre_id, satsang_centre_cd, satsang_centre_nm, satsang_centre_type, address_line_1, address_line_2, district_or_city_id, pin_or_zip_code, telephones, email_addresses, fax_lines, txn_ts, effective_from, effective_till);
			return gps("UpdateSatsangCentre", prms);

		}
		
		
		
private List<SqlParameter> UpdateSkill_Params(Int16? skill_id, 
		                                                    String skill_nm, 
		                                                    Byte[] txn_ts, 
		                                                    DateTime? effective_from, 
		                                                    DateTime? effective_till)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("skill_id", skill_id, SMALLINT, IN, p);
			csp("skill_nm", skill_nm, VARCHAR, IN, p);
			csp("txn_ts", txn_ts, TIMESTAMP, IN, p);
			csp("effective_from", effective_from, DATETIME, IN, p);
			csp("effective_till", effective_till, DATETIME, IN, p);
			return p;
		}
		
public DataSet UpdateSkill(Int16? skill_id, 
		                                String skill_nm, 
		                                Byte[] txn_ts, 
		                                DateTime? effective_from, 
		                                DateTime? effective_till)
		{
			List<SqlParameter> prms = UpdateSkill_Params(skill_id, skill_nm, txn_ts, effective_from, effective_till);
			DataSet dset = esp("UpdateSkill", prms);

			return dset;
		}
		
public string UpdateSkillAsTask(Int16? skill_id, 
		                                    String skill_nm, 
		                                    Byte[] txn_ts, 
		                                    DateTime? effective_from, 
		                                    DateTime? effective_till)
		{
			List<SqlParameter> prms = UpdateSkill_Params(skill_id, skill_nm, txn_ts, effective_from, effective_till);
			return gps("UpdateSkill", prms);

		}
		
		
		
private List<SqlParameter> UpdateState_Params(Int32? state_id, 
		                                                    String state_cd, 
		                                                    String state_nm, 
		                                                    Int16? country_id, 
		                                                    Byte[] txn_ts, 
		                                                    DateTime? effective_from, 
		                                                    DateTime? effective_till)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("state_id", state_id, INT, IN, p);
			csp("state_cd", state_cd, VARCHAR, IN, p);
			csp("state_nm", state_nm, VARCHAR, IN, p);
			csp("country_id", country_id, SMALLINT, IN, p);
			csp("txn_ts", txn_ts, TIMESTAMP, IN, p);
			csp("effective_from", effective_from, DATETIME, IN, p);
			csp("effective_till", effective_till, DATETIME, IN, p);
			return p;
		}
		
public DataSet UpdateState(Int32? state_id, 
		                                String state_cd, 
		                                String state_nm, 
		                                Int16? country_id, 
		                                Byte[] txn_ts, 
		                                DateTime? effective_from, 
		                                DateTime? effective_till)
		{
			List<SqlParameter> prms = UpdateState_Params(state_id, state_cd, state_nm, country_id, txn_ts, effective_from, effective_till);
			DataSet dset = esp("UpdateState", prms);

			return dset;
		}
		
public string UpdateStateAsTask(Int32? state_id, 
		                                    String state_cd, 
		                                    String state_nm, 
		                                    Int16? country_id, 
		                                    Byte[] txn_ts, 
		                                    DateTime? effective_from, 
		                                    DateTime? effective_till)
		{
			List<SqlParameter> prms = UpdateState_Params(state_id, state_cd, state_nm, country_id, txn_ts, effective_from, effective_till);
			return gps("UpdateState", prms);

		}
		
		
		
private List<SqlParameter> UpdInitiationPlace_Params(Int16? p_place_id, 
		                                                        String p_place_nm, 
		                                                        DateTime? p_effectiveFrom, 
		                                                        DateTime? p_effectiveTill, 
		                                                        Int64? p_txn_ts)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_place_id", p_place_id, SMALLINT, IN, p);
			csp("p_place_nm", p_place_nm, VARCHAR, IN, p);
			csp("p_effectiveFrom", p_effectiveFrom, DATETIME, IN, p);
			csp("p_effectiveTill", p_effectiveTill, DATETIME, IN, p);
			csp("p_txn_ts", p_txn_ts, BIGINT, IN, p);
			return p;
		}
		
public DataSet UpdInitiationPlace(Int16? p_place_id, 
		                                        String p_place_nm, 
		                                        DateTime? p_effectiveFrom, 
		                                        DateTime? p_effectiveTill, 
		                                        Int64? p_txn_ts)
		{
			List<SqlParameter> prms = UpdInitiationPlace_Params(p_place_id, p_place_nm, p_effectiveFrom, p_effectiveTill, p_txn_ts);
			DataSet dset = esp("UpdInitiationPlace", prms);

			return dset;
		}
		
public string UpdInitiationPlaceAsTask(Int16? p_place_id, 
		                                            String p_place_nm, 
		                                            DateTime? p_effectiveFrom, 
		                                            DateTime? p_effectiveTill, 
		                                            Int64? p_txn_ts)
		{
			List<SqlParameter> prms = UpdInitiationPlace_Params(p_place_id, p_place_nm, p_effectiveFrom, p_effectiveTill, p_txn_ts);
			return gps("UpdInitiationPlace", prms);

		}
		
		
		
private List<SqlParameter> UpdLanguages_Params(Int32? p_language_id, 
		                                                    String p_language_cd, 
		                                                    String p_language_nm, 
		                                                    DateTime? p_effectiveFrom, 
		                                                    DateTime? p_effectiveTill, 
		                                                    Int64? p_txn_ts)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_language_id", p_language_id, INT, IN, p);
			csp("p_language_cd", p_language_cd, CHAR, IN, p);
			csp("p_language_nm", p_language_nm, VARCHAR, IN, p);
			csp("p_effectiveFrom", p_effectiveFrom, DATETIME, IN, p);
			csp("p_effectiveTill", p_effectiveTill, DATETIME, IN, p);
			csp("p_txn_ts", p_txn_ts, BIGINT, IN, p);
			return p;
		}
		
public DataSet UpdLanguages(Int32? p_language_id, 
		                                String p_language_cd, 
		                                String p_language_nm, 
		                                DateTime? p_effectiveFrom, 
		                                DateTime? p_effectiveTill, 
		                                Int64? p_txn_ts)
		{
			List<SqlParameter> prms = UpdLanguages_Params(p_language_id, p_language_cd, p_language_nm, p_effectiveFrom, p_effectiveTill, p_txn_ts);
			DataSet dset = esp("UpdLanguages", prms);

			return dset;
		}
		
public string UpdLanguagesAsTask(Int32? p_language_id, 
		                                    String p_language_cd, 
		                                    String p_language_nm, 
		                                    DateTime? p_effectiveFrom, 
		                                    DateTime? p_effectiveTill, 
		                                    Int64? p_txn_ts)
		{
			List<SqlParameter> prms = UpdLanguages_Params(p_language_id, p_language_cd, p_language_nm, p_effectiveFrom, p_effectiveTill, p_txn_ts);
			return gps("UpdLanguages", prms);

		}
		
		
		
private List<SqlParameter> UpdParties_Params(Int32? p_party_id, 
		                                                String p_party_cd, 
		                                                String p_party_nm, 
		                                                String p_pan, 
		                                                String p_party_contact_nm, 
		                                                String p_party_contact_designation, 
		                                                Int64? p_txn_ts, 
		                                                String p_application_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_party_id", p_party_id, INT, IN, p);
			csp("p_party_cd", p_party_cd, VARCHAR, IN, p);
			csp("p_party_nm", p_party_nm, VARCHAR, IN, p);
			csp("p_pan", p_pan, VARCHAR, IN, p);
			csp("p_party_contact_nm", p_party_contact_nm, VARCHAR, IN, p);
			csp("p_party_contact_designation", p_party_contact_designation, VARCHAR, IN, p);
			csp("p_txn_ts", p_txn_ts, BIGINT, IN, p);
			csp("p_application_id", p_application_id, CHAR, IN, p);
			return p;
		}
		
public DataSet UpdParties(Int32? p_party_id, 
		                                String p_party_cd, 
		                                String p_party_nm, 
		                                String p_pan, 
		                                String p_party_contact_nm, 
		                                String p_party_contact_designation, 
		                                Int64? p_txn_ts, 
		                                String p_application_id)
		{
			List<SqlParameter> prms = UpdParties_Params(p_party_id, p_party_cd, p_party_nm, p_pan, p_party_contact_nm, p_party_contact_designation, p_txn_ts, p_application_id);
			DataSet dset = esp("UpdParties", prms);

			return dset;
		}
		
public string UpdPartiesAsTask(Int32? p_party_id, 
		                                    String p_party_cd, 
		                                    String p_party_nm, 
		                                    String p_pan, 
		                                    String p_party_contact_nm, 
		                                    String p_party_contact_designation, 
		                                    Int64? p_txn_ts, 
		                                    String p_application_id)
		{
			List<SqlParameter> prms = UpdParties_Params(p_party_id, p_party_cd, p_party_nm, p_pan, p_party_contact_nm, p_party_contact_designation, p_txn_ts, p_application_id);
			return gps("UpdParties", prms);

		}
		
		
		
private List<SqlParameter> UpdPartyAddresses_Params(Int32? p_party_address_id, 
		                                                        Int32? p_party_id, 
		                                                        String p_address_type_nm, 
		                                                        Byte? p_address_no, 
		                                                        String p_contact_nm, 
		                                                        String p_contact_designation, 
		                                                        String p_address_line_1, 
		                                                        String p_address_line_2, 
		                                                        Int16? p_country_id, 
		                                                        Int32? p_state_id, 
		                                                        Int32? p_district_or_city_id, 
		                                                        Int32? p_post_office_id, 
		                                                        String p_pin_or_zip_code, 
		                                                        String p_cell_phones, 
		                                                        String p_telephones, 
		                                                        String p_email_addresses, 
		                                                        String p_fax_lines, 
		                                                        DateTime? p_effective_from, 
		                                                        DateTime? p_effective_till, 
		                                                        String p_application_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_party_address_id", p_party_address_id, INT, IN, p);
			csp("p_party_id", p_party_id, INT, IN, p);
			csp("p_address_type_nm", p_address_type_nm, VARCHAR, IN, p);
			csp("p_address_no", p_address_no, TINYINT, IN, p);
			csp("p_contact_nm", p_contact_nm, VARCHAR, IN, p);
			csp("p_contact_designation", p_contact_designation, VARCHAR, IN, p);
			csp("p_address_line_1", p_address_line_1, VARCHAR, IN, p);
			csp("p_address_line_2", p_address_line_2, VARCHAR, IN, p);
			csp("p_country_id", p_country_id, SMALLINT, IN, p);
			csp("p_state_id", p_state_id, INT, IN, p);
			csp("p_district_or_city_id", p_district_or_city_id, INT, IN, p);
			csp("p_post_office_id", p_post_office_id, INT, IN, p);
			csp("p_pin_or_zip_code", p_pin_or_zip_code, CHAR, IN, p);
			csp("p_cell_phones", p_cell_phones, VARCHAR, IN, p);
			csp("p_telephones", p_telephones, VARCHAR, IN, p);
			csp("p_email_addresses", p_email_addresses, VARCHAR, IN, p);
			csp("p_fax_lines", p_fax_lines, VARCHAR, IN, p);
			csp("p_effective_from", p_effective_from, DATETIME, IN, p);
			csp("p_effective_till", p_effective_till, DATETIME, IN, p);
			csp("p_application_id", p_application_id, CHAR, IN, p);
			return p;
		}
		
public DataSet UpdPartyAddresses(Int32? p_party_address_id, 
		                                    Int32? p_party_id, 
		                                    String p_address_type_nm, 
		                                    Byte? p_address_no, 
		                                    String p_contact_nm, 
		                                    String p_contact_designation, 
		                                    String p_address_line_1, 
		                                    String p_address_line_2, 
		                                    Int16? p_country_id, 
		                                    Int32? p_state_id, 
		                                    Int32? p_district_or_city_id, 
		                                    Int32? p_post_office_id, 
		                                    String p_pin_or_zip_code, 
		                                    String p_cell_phones, 
		                                    String p_telephones, 
		                                    String p_email_addresses, 
		                                    String p_fax_lines, 
		                                    DateTime? p_effective_from, 
		                                    DateTime? p_effective_till, 
		                                    String p_application_id)
		{
			List<SqlParameter> prms = UpdPartyAddresses_Params(p_party_address_id, p_party_id, p_address_type_nm, p_address_no, p_contact_nm, p_contact_designation, p_address_line_1, p_address_line_2, p_country_id, p_state_id, p_district_or_city_id, p_post_office_id, p_pin_or_zip_code, p_cell_phones, p_telephones, p_email_addresses, p_fax_lines, p_effective_from, p_effective_till, p_application_id);
			DataSet dset = esp("UpdPartyAddresses", prms);

			return dset;
		}
		
public string UpdPartyAddressesAsTask(Int32? p_party_address_id, 
		                                            Int32? p_party_id, 
		                                            String p_address_type_nm, 
		                                            Byte? p_address_no, 
		                                            String p_contact_nm, 
		                                            String p_contact_designation, 
		                                            String p_address_line_1, 
		                                            String p_address_line_2, 
		                                            Int16? p_country_id, 
		                                            Int32? p_state_id, 
		                                            Int32? p_district_or_city_id, 
		                                            Int32? p_post_office_id, 
		                                            String p_pin_or_zip_code, 
		                                            String p_cell_phones, 
		                                            String p_telephones, 
		                                            String p_email_addresses, 
		                                            String p_fax_lines, 
		                                            DateTime? p_effective_from, 
		                                            DateTime? p_effective_till, 
		                                            String p_application_id)
		{
			List<SqlParameter> prms = UpdPartyAddresses_Params(p_party_address_id, p_party_id, p_address_type_nm, p_address_no, p_contact_nm, p_contact_designation, p_address_line_1, p_address_line_2, p_country_id, p_state_id, p_district_or_city_id, p_post_office_id, p_pin_or_zip_code, p_cell_phones, p_telephones, p_email_addresses, p_fax_lines, p_effective_from, p_effective_till, p_application_id);
			return gps("UpdPartyAddresses", prms);

		}
		
		
		
private List<SqlParameter> UpdPartyRoleApplication_Params(Int32? p_party_id, 
		                                                                String p_old_role_cd, 
		                                                                String p_role_cd, 
		                                                                String p_application_id, 
		                                                                String p_old_application_id, 
		                                                                String p_is_read, 
		                                                                String p_is_update)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_party_id", p_party_id, INT, IN, p);
			csp("p_old_role_cd", p_old_role_cd, CHAR, IN, p);
			csp("p_role_cd", p_role_cd, CHAR, IN, p);
			csp("p_application_id", p_application_id, CHAR, IN, p);
			csp("p_old_application_id", p_old_application_id, CHAR, IN, p);
			csp("p_is_read", p_is_read, CHAR, IN, p);
			csp("p_is_update", p_is_update, CHAR, IN, p);
			return p;
		}
		
public DataSet UpdPartyRoleApplication(Int32? p_party_id, 
		                                            String p_old_role_cd, 
		                                            String p_role_cd, 
		                                            String p_application_id, 
		                                            String p_old_application_id, 
		                                            String p_is_read, 
		                                            String p_is_update)
		{
			List<SqlParameter> prms = UpdPartyRoleApplication_Params(p_party_id, p_old_role_cd, p_role_cd, p_application_id, p_old_application_id, p_is_read, p_is_update);
			DataSet dset = esp("UpdPartyRoleApplication", prms);

			return dset;
		}
		
public string UpdPartyRoleApplicationAsTask(Int32? p_party_id, 
		                                                String p_old_role_cd, 
		                                                String p_role_cd, 
		                                                String p_application_id, 
		                                                String p_old_application_id, 
		                                                String p_is_read, 
		                                                String p_is_update)
		{
			List<SqlParameter> prms = UpdPartyRoleApplication_Params(p_party_id, p_old_role_cd, p_role_cd, p_application_id, p_old_application_id, p_is_read, p_is_update);
			return gps("UpdPartyRoleApplication", prms);

		}
		
		
		
private List<SqlParameter> UpdPartyRoles_Params(Int32? p_party_id, 
		                                                    String p_old_role_cd, 
		                                                    String p_role_cd, 
		                                                    String p_address_type_nm, 
		                                                    String p_owner_application_id, 
		                                                    DateTime? p_effective_from, 
		                                                    DateTime? p_effective_till, 
		                                                    String p_application_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_party_id", p_party_id, INT, IN, p);
			csp("p_old_role_cd", p_old_role_cd, CHAR, IN, p);
			csp("p_role_cd", p_role_cd, CHAR, IN, p);
			csp("p_address_type_nm", p_address_type_nm, VARCHAR, IN, p);
			csp("p_owner_application_id", p_owner_application_id, CHAR, IN, p);
			csp("p_effective_from", p_effective_from, DATETIME, IN, p);
			csp("p_effective_till", p_effective_till, DATETIME, IN, p);
			csp("p_application_id", p_application_id, CHAR, IN, p);
			return p;
		}
		
public DataSet UpdPartyRoles(Int32? p_party_id, 
		                                String p_old_role_cd, 
		                                String p_role_cd, 
		                                String p_address_type_nm, 
		                                String p_owner_application_id, 
		                                DateTime? p_effective_from, 
		                                DateTime? p_effective_till, 
		                                String p_application_id)
		{
			List<SqlParameter> prms = UpdPartyRoles_Params(p_party_id, p_old_role_cd, p_role_cd, p_address_type_nm, p_owner_application_id, p_effective_from, p_effective_till, p_application_id);
			DataSet dset = esp("UpdPartyRoles", prms);

			return dset;
		}
		
public string UpdPartyRolesAsTask(Int32? p_party_id, 
		                                        String p_old_role_cd, 
		                                        String p_role_cd, 
		                                        String p_address_type_nm, 
		                                        String p_owner_application_id, 
		                                        DateTime? p_effective_from, 
		                                        DateTime? p_effective_till, 
		                                        String p_application_id)
		{
			List<SqlParameter> prms = UpdPartyRoles_Params(p_party_id, p_old_role_cd, p_role_cd, p_address_type_nm, p_owner_application_id, p_effective_from, p_effective_till, p_application_id);
			return gps("UpdPartyRoles", prms);

		}
		
		
		
private List<SqlParameter> UpdPartyRolesChk_Params(String p_role_cd, 
		                                                        String p_update_party_roles)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_role_cd", p_role_cd, CHAR, IN, p);
			csp("p_update_party_roles", p_update_party_roles, CHAR, IN, p);
			return p;
		}
		
public DataSet UpdPartyRolesChk(String p_role_cd, 
		                                    String p_update_party_roles)
		{
			List<SqlParameter> prms = UpdPartyRolesChk_Params(p_role_cd, p_update_party_roles);
			DataSet dset = esp("UpdPartyRolesChk", prms);

			return dset;
		}
		
public string UpdPartyRolesChkAsTask(String p_role_cd, 
		                                        String p_update_party_roles)
		{
			List<SqlParameter> prms = UpdPartyRolesChk_Params(p_role_cd, p_update_party_roles);
			return gps("UpdPartyRolesChk", prms);

		}
		
		
		
private List<SqlParameter> Updqlfctn_subjects_Params(Int16? qlfctn_subject_id, 
		                                                        String qlfctn_subject_cd, 
		                                                        String qlfctn_subject_nm, 
		                                                        String description, 
		                                                        DateTime? effective_From, 
		                                                        DateTime? effective_Till)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("qlfctn_subject_id", qlfctn_subject_id, SMALLINT, IN, p);
			csp("qlfctn_subject_cd", qlfctn_subject_cd, VARCHAR, IN, p);
			csp("qlfctn_subject_nm", qlfctn_subject_nm, VARCHAR, IN, p);
			csp("description", description, VARCHAR, IN, p);
			csp("effective_From", effective_From, DATETIME, IN, p);
			csp("effective_Till", effective_Till, DATETIME, IN, p);
			return p;
		}
		
public DataSet Updqlfctn_subjects(Int16? qlfctn_subject_id, 
		                                        String qlfctn_subject_cd, 
		                                        String qlfctn_subject_nm, 
		                                        String description, 
		                                        DateTime? effective_From, 
		                                        DateTime? effective_Till)
		{
			List<SqlParameter> prms = Updqlfctn_subjects_Params(qlfctn_subject_id, qlfctn_subject_cd, qlfctn_subject_nm, description, effective_From, effective_Till);
			DataSet dset = esp("Updqlfctn_subjects", prms);

			return dset;
		}
		
public string Updqlfctn_subjectsAsTask(Int16? qlfctn_subject_id, 
		                                            String qlfctn_subject_cd, 
		                                            String qlfctn_subject_nm, 
		                                            String description, 
		                                            DateTime? effective_From, 
		                                            DateTime? effective_Till)
		{
			List<SqlParameter> prms = Updqlfctn_subjects_Params(qlfctn_subject_id, qlfctn_subject_cd, qlfctn_subject_nm, description, effective_From, effective_Till);
			return gps("Updqlfctn_subjects", prms);

		}
		
		
		
private List<SqlParameter> Updqualifications_Params(Int16? Qualification_id, 
		                                                        String Qualification_type, 
		                                                        String Qualification_cd, 
		                                                        String Qualification_nm, 
		                                                        String Remarks, 
		                                                        DateTime? effective_from, 
		                                                        DateTime? effective_till, 
		                                                        Byte[] txn_ts)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("Qualification_id", Qualification_id, SMALLINT, IN, p);
			csp("Qualification_type", Qualification_type, VARCHAR, IN, p);
			csp("Qualification_cd", Qualification_cd, VARCHAR, IN, p);
			csp("Qualification_nm", Qualification_nm, VARCHAR, IN, p);
			csp("Remarks", Remarks, VARCHAR, IN, p);
			csp("effective_from", effective_from, DATETIME, IN, p);
			csp("effective_till", effective_till, DATETIME, IN, p);
			csp("txn_ts", txn_ts, TIMESTAMP, IN, p);
			return p;
		}
		
public DataSet Updqualifications(Int16? Qualification_id, 
		                                    String Qualification_type, 
		                                    String Qualification_cd, 
		                                    String Qualification_nm, 
		                                    String Remarks, 
		                                    DateTime? effective_from, 
		                                    DateTime? effective_till, 
		                                    Byte[] txn_ts)
		{
			List<SqlParameter> prms = Updqualifications_Params(Qualification_id, Qualification_type, Qualification_cd, Qualification_nm, Remarks, effective_from, effective_till, txn_ts);
			DataSet dset = esp("Updqualifications", prms);

			return dset;
		}
		
public string UpdqualificationsAsTask(Int16? Qualification_id, 
		                                            String Qualification_type, 
		                                            String Qualification_cd, 
		                                            String Qualification_nm, 
		                                            String Remarks, 
		                                            DateTime? effective_from, 
		                                            DateTime? effective_till, 
		                                            Byte[] txn_ts)
		{
			List<SqlParameter> prms = Updqualifications_Params(Qualification_id, Qualification_type, Qualification_cd, Qualification_nm, Remarks, effective_from, effective_till, txn_ts);
			return gps("Updqualifications", prms);

		}
		
		
		
private List<SqlParameter> Updqualifications_qlfctn_subjects_Params(Int16? qualification_id, 
		                                                                        Int16? Oldqlfctn_subject_id, 
		                                                                        Int16? qlfctn_subject_id, 
		                                                                        DateTime? effective_from, 
		                                                                        DateTime? effective_till)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("qualification_id", qualification_id, SMALLINT, IN, p);
			csp("Oldqlfctn_subject_id", Oldqlfctn_subject_id, SMALLINT, IN, p);
			csp("qlfctn_subject_id", qlfctn_subject_id, SMALLINT, IN, p);
			csp("effective_from", effective_from, DATETIME, IN, p);
			csp("effective_till", effective_till, DATETIME, IN, p);
			return p;
		}
		
public DataSet Updqualifications_qlfctn_subjects(Int16? qualification_id, 
		                                                    Int16? Oldqlfctn_subject_id, 
		                                                    Int16? qlfctn_subject_id, 
		                                                    DateTime? effective_from, 
		                                                    DateTime? effective_till)
		{
			List<SqlParameter> prms = Updqualifications_qlfctn_subjects_Params(qualification_id, Oldqlfctn_subject_id, qlfctn_subject_id, effective_from, effective_till);
			DataSet dset = esp("Updqualifications_qlfctn_subjects", prms);

			return dset;
		}
		
public string Updqualifications_qlfctn_subjectsAsTask(Int16? qualification_id, 
		                                                            Int16? Oldqlfctn_subject_id, 
		                                                            Int16? qlfctn_subject_id, 
		                                                            DateTime? effective_from, 
		                                                            DateTime? effective_till)
		{
			List<SqlParameter> prms = Updqualifications_qlfctn_subjects_Params(qualification_id, Oldqlfctn_subject_id, qlfctn_subject_id, effective_from, effective_till);
			return gps("Updqualifications_qlfctn_subjects", prms);

		}
		
		
		
private List<SqlParameter> UpdRoles_Params(String p_role_cd, 
		                                                String p_role_nm, 
		                                                String p_address_requirement, 
		                                                DateTime? p_effective_from, 
		                                                DateTime? p_effective_till, 
		                                                Int64? p_txn_ts)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_role_cd", p_role_cd, CHAR, IN, p);
			csp("p_role_nm", p_role_nm, VARCHAR, IN, p);
			csp("p_address_requirement", p_address_requirement, VARCHAR, IN, p);
			csp("p_effective_from", p_effective_from, DATETIME, IN, p);
			csp("p_effective_till", p_effective_till, DATETIME, IN, p);
			csp("p_txn_ts", p_txn_ts, BIGINT, IN, p);
			return p;
		}
		
public DataSet UpdRoles(String p_role_cd, 
		                            String p_role_nm, 
		                            String p_address_requirement, 
		                            DateTime? p_effective_from, 
		                            DateTime? p_effective_till, 
		                            Int64? p_txn_ts)
		{
			List<SqlParameter> prms = UpdRoles_Params(p_role_cd, p_role_nm, p_address_requirement, p_effective_from, p_effective_till, p_txn_ts);
			DataSet dset = esp("UpdRoles", prms);

			return dset;
		}
		
public string UpdRolesAsTask(String p_role_cd, 
		                                String p_role_nm, 
		                                String p_address_requirement, 
		                                DateTime? p_effective_from, 
		                                DateTime? p_effective_till, 
		                                Int64? p_txn_ts)
		{
			List<SqlParameter> prms = UpdRoles_Params(p_role_cd, p_role_nm, p_address_requirement, p_effective_from, p_effective_till, p_txn_ts);
			return gps("UpdRoles", prms);

		}
		
		
		
private List<SqlParameter> UpdRolesAppControls_Params(String p_role_cd, 
		                                                            String p_old_owner_app_id, 
		                                                            String p_owner_application_id, 
		                                                            String p_old_application_id, 
		                                                            String p_application_id, 
		                                                            String p_is_read, 
		                                                            String p_is_update)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_role_cd", p_role_cd, CHAR, IN, p);
			csp("p_old_owner_app_id", p_old_owner_app_id, CHAR, IN, p);
			csp("p_owner_application_id", p_owner_application_id, CHAR, IN, p);
			csp("p_old_application_id", p_old_application_id, CHAR, IN, p);
			csp("p_application_id", p_application_id, CHAR, IN, p);
			csp("p_is_read", p_is_read, CHAR, IN, p);
			csp("p_is_update", p_is_update, CHAR, IN, p);
			return p;
		}
		
public DataSet UpdRolesAppControls(String p_role_cd, 
		                                        String p_old_owner_app_id, 
		                                        String p_owner_application_id, 
		                                        String p_old_application_id, 
		                                        String p_application_id, 
		                                        String p_is_read, 
		                                        String p_is_update)
		{
			List<SqlParameter> prms = UpdRolesAppControls_Params(p_role_cd, p_old_owner_app_id, p_owner_application_id, p_old_application_id, p_application_id, p_is_read, p_is_update);
			DataSet dset = esp("UpdRolesAppControls", prms);

			return dset;
		}
		
public string UpdRolesAppControlsAsTask(String p_role_cd, 
		                                            String p_old_owner_app_id, 
		                                            String p_owner_application_id, 
		                                            String p_old_application_id, 
		                                            String p_application_id, 
		                                            String p_is_read, 
		                                            String p_is_update)
		{
			List<SqlParameter> prms = UpdRolesAppControls_Params(p_role_cd, p_old_owner_app_id, p_owner_application_id, p_old_application_id, p_application_id, p_is_read, p_is_update);
			return gps("UpdRolesAppControls", prms);

		}
		
		
		
private List<SqlParameter> UpdSewadarTypes_Params(Int32? p_sewadartype_id, 
		                                                        String p_sewadartype_nm, 
		                                                        DateTime? p_effectiveFrom, 
		                                                        DateTime? p_effectiveTill, 
		                                                        Int64? p_txn_ts)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("p_sewadartype_id", p_sewadartype_id, INT, IN, p);
			csp("p_sewadartype_nm", p_sewadartype_nm, VARCHAR, IN, p);
			csp("p_effectiveFrom", p_effectiveFrom, DATETIME, IN, p);
			csp("p_effectiveTill", p_effectiveTill, DATETIME, IN, p);
			csp("p_txn_ts", p_txn_ts, BIGINT, IN, p);
			return p;
		}
		
public DataSet UpdSewadarTypes(Int32? p_sewadartype_id, 
		                                    String p_sewadartype_nm, 
		                                    DateTime? p_effectiveFrom, 
		                                    DateTime? p_effectiveTill, 
		                                    Int64? p_txn_ts)
		{
			List<SqlParameter> prms = UpdSewadarTypes_Params(p_sewadartype_id, p_sewadartype_nm, p_effectiveFrom, p_effectiveTill, p_txn_ts);
			DataSet dset = esp("UpdSewadarTypes", prms);

			return dset;
		}
		
public string UpdSewadarTypesAsTask(Int32? p_sewadartype_id, 
		                                        String p_sewadartype_nm, 
		                                        DateTime? p_effectiveFrom, 
		                                        DateTime? p_effectiveTill, 
		                                        Int64? p_txn_ts)
		{
			List<SqlParameter> prms = UpdSewadarTypes_Params(p_sewadartype_id, p_sewadartype_nm, p_effectiveFrom, p_effectiveTill, p_txn_ts);
			return gps("UpdSewadarTypes", prms);

		}
		
		
		
private List<SqlParameter> UpdWorkingUnitNameAndCode_Params(Int16? in_working_unit_id, 
		                                                                String in_working_unit_cd, 
		                                                                String in_working_unit_nm, 
		                                                                Int16? in_society_id, 
		                                                                Int16? in_working_unit_entity_id, 
		                                                                Byte[] in_txn_ts)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("in_working_unit_id", in_working_unit_id, SMALLINT, IN, p);
			csp("in_working_unit_cd", in_working_unit_cd, VARCHAR, IN, p);
			csp("in_working_unit_nm", in_working_unit_nm, VARCHAR, IN, p);
			csp("in_society_id", in_society_id, SMALLINT, IN, p);
			csp("in_working_unit_entity_id", in_working_unit_entity_id, SMALLINT, IN, p);
			csp("in_txn_ts", in_txn_ts, TIMESTAMP, IN, p);
			return p;
		}
		
public DataSet UpdWorkingUnitNameAndCode(Int16? in_working_unit_id, 
		                                            String in_working_unit_cd, 
		                                            String in_working_unit_nm, 
		                                            Int16? in_society_id, 
		                                            Int16? in_working_unit_entity_id, 
		                                            Byte[] in_txn_ts)
		{
			List<SqlParameter> prms = UpdWorkingUnitNameAndCode_Params(in_working_unit_id, in_working_unit_cd, in_working_unit_nm, in_society_id, in_working_unit_entity_id, in_txn_ts);
			DataSet dset = esp("UpdWorkingUnitNameAndCode", prms);

			return dset;
		}
		
public string UpdWorkingUnitNameAndCodeAsTask(Int16? in_working_unit_id, 
		                                                    String in_working_unit_cd, 
		                                                    String in_working_unit_nm, 
		                                                    Int16? in_society_id, 
		                                                    Int16? in_working_unit_entity_id, 
		                                                    Byte[] in_txn_ts)
		{
			List<SqlParameter> prms = UpdWorkingUnitNameAndCode_Params(in_working_unit_id, in_working_unit_cd, in_working_unit_nm, in_society_id, in_working_unit_entity_id, in_txn_ts);
			return gps("UpdWorkingUnitNameAndCode", prms);

		}
		
		
		
private List<SqlParameter> UpdWorkingUnits_Params(Int16? in_working_unit_id, 
		                                                        String in_working_unit_cd, 
		                                                        String in_working_unit_nm, 
		                                                        String in_is_root, 
		                                                        String in_is_leaf, 
		                                                        Int16? in_society_id, 
		                                                        String in_is_staff_posted, 
		                                                        Int16? in_working_unit_entity_id, 
		                                                        Int16? in_group_working_unit_id, 
		                                                        DateTime? in_effective_from, 
		                                                        DateTime? in_effective_till, 
		                                                        Int16? in_honorary_sewadar_cnt, 
		                                                        Int16? in_parshadi_sewadar_cnt, 
		                                                        Byte[] in_txn_ts)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("in_working_unit_id", in_working_unit_id, SMALLINT, IN, p);
			csp("in_working_unit_cd", in_working_unit_cd, VARCHAR, IN, p);
			csp("in_working_unit_nm", in_working_unit_nm, VARCHAR, IN, p);
			csp("in_is_root", in_is_root, CHAR, IN, p);
			csp("in_is_leaf", in_is_leaf, CHAR, IN, p);
			csp("in_society_id", in_society_id, SMALLINT, IN, p);
			csp("in_is_staff_posted", in_is_staff_posted, CHAR, IN, p);
			csp("in_working_unit_entity_id", in_working_unit_entity_id, SMALLINT, IN, p);
			csp("in_group_working_unit_id", in_group_working_unit_id, SMALLINT, IN, p);
			csp("in_effective_from", in_effective_from, DATETIME, IN, p);
			csp("in_effective_till", in_effective_till, DATETIME, IN, p);
			csp("in_honorary_sewadar_cnt", in_honorary_sewadar_cnt, SMALLINT, IN, p);
			csp("in_parshadi_sewadar_cnt", in_parshadi_sewadar_cnt, SMALLINT, IN, p);
			csp("in_txn_ts", in_txn_ts, TIMESTAMP, IN, p);
			return p;
		}
		
public DataSet UpdWorkingUnits(Int16? in_working_unit_id, 
		                                    String in_working_unit_cd, 
		                                    String in_working_unit_nm, 
		                                    String in_is_root, 
		                                    String in_is_leaf, 
		                                    Int16? in_society_id, 
		                                    String in_is_staff_posted, 
		                                    Int16? in_working_unit_entity_id, 
		                                    Int16? in_group_working_unit_id, 
		                                    DateTime? in_effective_from, 
		                                    DateTime? in_effective_till, 
		                                    Int16? in_honorary_sewadar_cnt, 
		                                    Int16? in_parshadi_sewadar_cnt, 
		                                    Byte[] in_txn_ts)
		{
			List<SqlParameter> prms = UpdWorkingUnits_Params(in_working_unit_id, in_working_unit_cd, in_working_unit_nm, in_is_root, in_is_leaf, in_society_id, in_is_staff_posted, in_working_unit_entity_id, in_group_working_unit_id, in_effective_from, in_effective_till, in_honorary_sewadar_cnt, in_parshadi_sewadar_cnt, in_txn_ts);
			DataSet dset = esp("UpdWorkingUnits", prms);

			return dset;
		}
		
public string UpdWorkingUnitsAsTask(Int16? in_working_unit_id, 
		                                        String in_working_unit_cd, 
		                                        String in_working_unit_nm, 
		                                        String in_is_root, 
		                                        String in_is_leaf, 
		                                        Int16? in_society_id, 
		                                        String in_is_staff_posted, 
		                                        Int16? in_working_unit_entity_id, 
		                                        Int16? in_group_working_unit_id, 
		                                        DateTime? in_effective_from, 
		                                        DateTime? in_effective_till, 
		                                        Int16? in_honorary_sewadar_cnt, 
		                                        Int16? in_parshadi_sewadar_cnt, 
		                                        Byte[] in_txn_ts)
		{
			List<SqlParameter> prms = UpdWorkingUnits_Params(in_working_unit_id, in_working_unit_cd, in_working_unit_nm, in_is_root, in_is_leaf, in_society_id, in_is_staff_posted, in_working_unit_entity_id, in_group_working_unit_id, in_effective_from, in_effective_till, in_honorary_sewadar_cnt, in_parshadi_sewadar_cnt, in_txn_ts);
			return gps("UpdWorkingUnits", prms);

		}
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
private List<SqlParameter> WorkingUnitsResponsibilities_SelPr_Params(Int16? in_working_unit_id, 
		                                                                        Int16? in_parent_working_unit_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("in_working_unit_id", in_working_unit_id, SMALLINT, IN, p);
			csp("in_parent_working_unit_id", in_parent_working_unit_id, SMALLINT, IN, p);
			return p;
		}
		
public DataSet WorkingUnitsResponsibilities_SelPr(Int16? in_working_unit_id, 
		                                                        Int16? in_parent_working_unit_id)
		{
			List<SqlParameter> prms = WorkingUnitsResponsibilities_SelPr_Params(in_working_unit_id, in_parent_working_unit_id);
			DataSet dset = esp("WorkingUnitsResponsibilities_SelPr", prms);

			return dset;
		}
		
public string WorkingUnitsResponsibilities_SelPrAsTask(Int16? in_working_unit_id, 
		                                                            Int16? in_parent_working_unit_id)
		{
			List<SqlParameter> prms = WorkingUnitsResponsibilities_SelPr_Params(in_working_unit_id, in_parent_working_unit_id);
			return gps("WorkingUnitsResponsibilities_SelPr", prms);

		}
	}
	
	
	public class Address_typesSQLSelectQuery : SQLSelectQuery
	{
		public Cndn address_type_id = new Cndn("address_type_id", typeof(Int32));
		public Cndn address_type_cd = new Cndn("address_type_cd", typeof(String));
		public Cndn address_type_nm = new Cndn("address_type_nm", typeof(String));
		public Cndn effective_from = new Cndn("effective_from", typeof(DateTime));
		public Cndn effective_till = new Cndn("effective_till", typeof(DateTime));
		public Address_typesSQLSelectQuery()
		{
			SqlObjectName = "Address_types";

			lst.Add(address_type_id);
			lst.Add(address_type_cd);
			lst.Add(address_type_nm);
			lst.Add(effective_from);
			lst.Add(effective_till);
		}
	}
	
	
	public class Assistant_servicesSQLSelectQuery : SQLSelectQuery
	{
		public Cndn assistant_service_id = new Cndn("assistant_service_id", typeof(Int16));
		public Cndn assistant_service_nm = new Cndn("assistant_service_nm", typeof(String));
		public Cndn effective_from = new Cndn("effective_from", typeof(DateTime));
		public Cndn effective_till = new Cndn("effective_till", typeof(DateTime));
		public Assistant_servicesSQLSelectQuery()
		{
			SqlObjectName = "Assistant_services";

			lst.Add(assistant_service_id);
			lst.Add(assistant_service_nm);
			lst.Add(effective_from);
			lst.Add(effective_till);
		}
	}
	
	
	public class Audit_logsSQLSelectQuery : SQLSelectQuery
	{
		public Cndn audit_log_id = new Cndn("audit_log_id", typeof(Int32));
		public Cndn session_id = new Cndn("session_id", typeof(Int32));
		public Cndn application_id = new Cndn("application_id", typeof(String));
		public Cndn user_no = new Cndn("user_no", typeof(Int32));
		public Cndn user_role_id = new Cndn("user_role_id", typeof(String));
		public Cndn operation = new Cndn("operation", typeof(String));
		public Cndn screen_id = new Cndn("screen_id", typeof(String));
		public Cndn object_id = new Cndn("object_id", typeof(String));
		public Cndn qualification_id = new Cndn("qualification_id", typeof(Int16));
		public Cndn operation_dts = new Cndn("operation_dts", typeof(DateTime));
		public Audit_logsSQLSelectQuery()
		{
			SqlObjectName = "Audit_logs";

			lst.Add(audit_log_id);
			lst.Add(session_id);
			lst.Add(application_id);
			lst.Add(user_no);
			lst.Add(user_role_id);
			lst.Add(operation);
			lst.Add(screen_id);
			lst.Add(object_id);
			lst.Add(qualification_id);
			lst.Add(operation_dts);
		}
	}
	
	
	public class CamerasSQLSelectQuery : SQLSelectQuery
	{
		public Cndn camera_id = new Cndn("camera_id", typeof(Int16));
		public Cndn camera_model_nm = new Cndn("camera_model_nm", typeof(String));
		public Cndn picture_quality = new Cndn("picture_quality", typeof(String));
		public Cndn flash_mode = new Cndn("flash_mode", typeof(String));
		public Cndn zoom_position = new Cndn("zoom_position", typeof(Int16));
		public Cndn transfer_size = new Cndn("transfer_size", typeof(String));
		public Cndn rotation_angle = new Cndn("rotation_angle", typeof(Int16));
		public Cndn txn_ts = new Cndn("txn_ts", typeof(Byte[]));
		public Cndn effective_from = new Cndn("effective_from", typeof(DateTime));
		public Cndn effective_till = new Cndn("effective_till", typeof(DateTime));
		public CamerasSQLSelectQuery()
		{
			SqlObjectName = "Cameras";

			lst.Add(camera_id);
			lst.Add(camera_model_nm);
			lst.Add(picture_quality);
			lst.Add(flash_mode);
			lst.Add(zoom_position);
			lst.Add(transfer_size);
			lst.Add(rotation_angle);
			lst.Add(txn_ts);
			lst.Add(effective_from);
			lst.Add(effective_till);
		}
	}
	
	
	public class CountriesSQLSelectQuery : SQLSelectQuery
	{
		public Cndn country_id = new Cndn("country_id", typeof(Int16));
		public Cndn country_cd = new Cndn("country_cd", typeof(String));
		public Cndn country_nm = new Cndn("country_nm", typeof(String));
		public Cndn isd_code = new Cndn("isd_code", typeof(String));
		public Cndn gmt_diff = new Cndn("gmt_diff", typeof(Decimal));
		public Cndn txn_ts = new Cndn("txn_ts", typeof(Byte[]));
		public Cndn effective_from = new Cndn("effective_from", typeof(DateTime));
		public Cndn effective_till = new Cndn("effective_till", typeof(DateTime));
		public Cndn old_code = new Cndn("old_code", typeof(String));
		public CountriesSQLSelectQuery()
		{
			SqlObjectName = "Countries";

			lst.Add(country_id);
			lst.Add(country_cd);
			lst.Add(country_nm);
			lst.Add(isd_code);
			lst.Add(gmt_diff);
			lst.Add(txn_ts);
			lst.Add(effective_from);
			lst.Add(effective_till);
			lst.Add(old_code);
		}
	}
	
	
	public class CurrenciesSQLSelectQuery : SQLSelectQuery
	{
		public Cndn currency_id = new Cndn("currency_id", typeof(Int16));
		public Cndn currency_nm = new Cndn("currency_nm", typeof(String));
		public Cndn currency_abbr = new Cndn("currency_abbr", typeof(String));
		public Cndn effective_from = new Cndn("effective_from", typeof(DateTime));
		public Cndn effective_till = new Cndn("effective_till", typeof(DateTime));
		public CurrenciesSQLSelectQuery()
		{
			SqlObjectName = "Currencies";

			lst.Add(currency_id);
			lst.Add(currency_nm);
			lst.Add(currency_abbr);
			lst.Add(effective_from);
			lst.Add(effective_till);
		}
	}
	
	
	public class Department_epabx_extensionsSQLSelectQuery : SQLSelectQuery
	{
		public Cndn department_id = new Cndn("department_id", typeof(Int16));
		public Cndn epabx_extension = new Cndn("epabx_extension", typeof(String));
		public Cndn display_order = new Cndn("display_order", typeof(Int16));
		public Department_epabx_extensionsSQLSelectQuery()
		{
			SqlObjectName = "Department_epabx_extensions";

			lst.Add(department_id);
			lst.Add(epabx_extension);
			lst.Add(display_order);
		}
	}
	
	
	public class Department_groupsSQLSelectQuery : SQLSelectQuery
	{
		public Cndn department_group_id = new Cndn("department_group_id", typeof(Int16));
		public Cndn department_group_cd = new Cndn("department_group_cd", typeof(String));
		public Cndn department_group_nm = new Cndn("department_group_nm", typeof(String));
		public Cndn txn_ts = new Cndn("txn_ts", typeof(Byte[]));
		public Cndn effective_from = new Cndn("effective_from", typeof(DateTime));
		public Cndn effective_till = new Cndn("effective_till", typeof(DateTime));
		public Department_groupsSQLSelectQuery()
		{
			SqlObjectName = "Department_groups";

			lst.Add(department_group_id);
			lst.Add(department_group_cd);
			lst.Add(department_group_nm);
			lst.Add(txn_ts);
			lst.Add(effective_from);
			lst.Add(effective_till);
		}
	}
	
	
	public class Department_p_and_t_linesSQLSelectQuery : SQLSelectQuery
	{
		public Cndn department_id = new Cndn("department_id", typeof(Int16));
		public Cndn p_and_t_line = new Cndn("p_and_t_line", typeof(String));
		public Cndn display_order = new Cndn("display_order", typeof(Int16));
		public Department_p_and_t_linesSQLSelectQuery()
		{
			SqlObjectName = "Department_p_and_t_lines";

			lst.Add(department_id);
			lst.Add(p_and_t_line);
			lst.Add(display_order);
		}
	}
	
	
	public class Department_personsSQLSelectQuery : SQLSelectQuery
	{
		public Cndn person_id = new Cndn("person_id", typeof(Int32));
		public Cndn department_id = new Cndn("department_id", typeof(Int16));
		public Cndn designation_id = new Cndn("designation_id", typeof(Int16));
		public Cndn sewadarstatus_id = new Cndn("sewadarstatus_id", typeof(Int32));
		public Cndn sewadartype_id = new Cndn("sewadartype_id", typeof(Int32));
		public Cndn effective_from = new Cndn("effective_from", typeof(DateTime));
		public Cndn effective_till = new Cndn("effective_till", typeof(DateTime));
		public Department_personsSQLSelectQuery()
		{
			SqlObjectName = "Department_persons";

			lst.Add(person_id);
			lst.Add(department_id);
			lst.Add(designation_id);
			lst.Add(sewadarstatus_id);
			lst.Add(sewadartype_id);
			lst.Add(effective_from);
			lst.Add(effective_till);
		}
	}
	
	
	public class DepartmentsSQLSelectQuery : SQLSelectQuery
	{
		public Cndn department_id = new Cndn("department_id", typeof(Int16));
		public Cndn department_cd = new Cndn("department_cd", typeof(String));
		public Cndn department_nm = new Cndn("department_nm", typeof(String));
		public Cndn department_group_id = new Cndn("department_group_id", typeof(Int16));
		public Cndn fax_line = new Cndn("fax_line", typeof(String));
		public Cndn txn_ts = new Cndn("txn_ts", typeof(Byte[]));
		public Cndn effective_from = new Cndn("effective_from", typeof(DateTime));
		public Cndn effective_till = new Cndn("effective_till", typeof(DateTime));
		public Cndn is_section = new Cndn("is_section", typeof(String));
		public Cndn is_department = new Cndn("is_department", typeof(String));
		public DepartmentsSQLSelectQuery()
		{
			SqlObjectName = "Departments";

			lst.Add(department_id);
			lst.Add(department_cd);
			lst.Add(department_nm);
			lst.Add(department_group_id);
			lst.Add(fax_line);
			lst.Add(txn_ts);
			lst.Add(effective_from);
			lst.Add(effective_till);
			lst.Add(is_section);
			lst.Add(is_department);
		}
	}
	
	
	public class DesignationsSQLSelectQuery : SQLSelectQuery
	{
		public Cndn designation_id = new Cndn("designation_id", typeof(Int16));
		public Cndn designation_cd = new Cndn("designation_cd", typeof(String));
		public Cndn designation_nm = new Cndn("designation_nm", typeof(String));
		public Cndn designation_sq = new Cndn("designation_sq", typeof(Int16));
		public Cndn minimum_age = new Cndn("minimum_age", typeof(Byte));
		public Cndn maximum_starting_age = new Cndn("maximum_starting_age", typeof(Byte));
		public Cndn retirement_age = new Cndn("retirement_age", typeof(Byte));
		public Cndn txn_ts = new Cndn("txn_ts", typeof(Byte[]));
		public Cndn effective_from = new Cndn("effective_from", typeof(DateTime));
		public Cndn effective_till = new Cndn("effective_till", typeof(DateTime));
		public DesignationsSQLSelectQuery()
		{
			SqlObjectName = "Designations";

			lst.Add(designation_id);
			lst.Add(designation_cd);
			lst.Add(designation_nm);
			lst.Add(designation_sq);
			lst.Add(minimum_age);
			lst.Add(maximum_starting_age);
			lst.Add(retirement_age);
			lst.Add(txn_ts);
			lst.Add(effective_from);
			lst.Add(effective_till);
		}
	}
	
	
	public class Districts_or_citiesSQLSelectQuery : SQLSelectQuery
	{
		public Cndn district_or_city_id = new Cndn("district_or_city_id", typeof(Int32));
		public Cndn district_cd = new Cndn("district_cd", typeof(String));
		public Cndn district_nm = new Cndn("district_nm", typeof(String));
		public Cndn state_id = new Cndn("state_id", typeof(Int32));
		public Cndn txn_ts = new Cndn("txn_ts", typeof(Byte[]));
		public Cndn effective_from = new Cndn("effective_from", typeof(DateTime));
		public Cndn effective_till = new Cndn("effective_till", typeof(DateTime));
		public Districts_or_citiesSQLSelectQuery()
		{
			SqlObjectName = "Districts_or_cities";

			lst.Add(district_or_city_id);
			lst.Add(district_cd);
			lst.Add(district_nm);
			lst.Add(state_id);
			lst.Add(txn_ts);
			lst.Add(effective_from);
			lst.Add(effective_till);
		}
	}
	
	
	public class Document_typesSQLSelectQuery : SQLSelectQuery
	{
		public Cndn document_type_id = new Cndn("document_type_id", typeof(Byte));
		public Cndn document_type_nm = new Cndn("document_type_nm", typeof(String));
		public Cndn effective_from = new Cndn("effective_from", typeof(DateTime));
		public Cndn effective_till = new Cndn("effective_till", typeof(DateTime));
		public Document_typesSQLSelectQuery()
		{
			SqlObjectName = "Document_types";

			lst.Add(document_type_id);
			lst.Add(document_type_nm);
			lst.Add(effective_from);
			lst.Add(effective_till);
		}
	}
	
	
	public class DtpropertiesSQLSelectQuery : SQLSelectQuery
	{
		public Cndn id = new Cndn("id", typeof(Int32));
		public Cndn objectid = new Cndn("objectid", typeof(Int32));
		public Cndn property = new Cndn("property", typeof(String));
		public Cndn value = new Cndn("value", typeof(String));
		public Cndn uvalue = new Cndn("uvalue", typeof(String));
		public Cndn lvalue = new Cndn("lvalue", typeof(Byte[]));
		public Cndn version = new Cndn("version", typeof(Int32));
		public DtpropertiesSQLSelectQuery()
		{
			SqlObjectName = "Dtproperties";

			lst.Add(id);
			lst.Add(objectid);
			lst.Add(property);
			lst.Add(value);
			lst.Add(uvalue);
			lst.Add(lvalue);
			lst.Add(version);
		}
	}
	
	
	public class Epabx_linesSQLSelectQuery : SQLSelectQuery
	{
		public Cndn extension_no = new Cndn("extension_no", typeof(String));
		public Cndn txn_ts = new Cndn("txn_ts", typeof(Byte[]));
		public Cndn effective_from = new Cndn("effective_from", typeof(DateTime));
		public Cndn effective_till = new Cndn("effective_till", typeof(DateTime));
		public Epabx_linesSQLSelectQuery()
		{
			SqlObjectName = "Epabx_lines";

			lst.Add(extension_no);
			lst.Add(txn_ts);
			lst.Add(effective_from);
			lst.Add(effective_till);
		}
	}
	
	
	public class Hospital_unitsSQLSelectQuery : SQLSelectQuery
	{
		public Cndn hospital_unit_id = new Cndn("hospital_unit_id", typeof(Int16));
		public Cndn hospital_unit_nm = new Cndn("hospital_unit_nm", typeof(String));
		public Cndn effective_from = new Cndn("effective_from", typeof(DateTime));
		public Cndn effective_till = new Cndn("effective_till", typeof(DateTime));
		public Hospital_unitsSQLSelectQuery()
		{
			SqlObjectName = "Hospital_units";

			lst.Add(hospital_unit_id);
			lst.Add(hospital_unit_nm);
			lst.Add(effective_from);
			lst.Add(effective_till);
		}
	}
	
	
	public class Initiation_placesSQLSelectQuery : SQLSelectQuery
	{
		public Cndn place_id = new Cndn("place_id", typeof(Int16));
		public Cndn place_nm = new Cndn("place_nm", typeof(String));
		public Cndn txn_ts = new Cndn("txn_ts", typeof(Byte[]));
		public Cndn effective_from = new Cndn("effective_from", typeof(DateTime));
		public Cndn effective_till = new Cndn("effective_till", typeof(DateTime));
		public Initiation_placesSQLSelectQuery()
		{
			SqlObjectName = "Initiation_places";

			lst.Add(place_id);
			lst.Add(place_nm);
			lst.Add(txn_ts);
			lst.Add(effective_from);
			lst.Add(effective_till);
		}
	}
	
	
	public class LanguagesSQLSelectQuery : SQLSelectQuery
	{
		public Cndn Language_Id = new Cndn("Language_Id", typeof(Int32));
		public Cndn Language_Cd = new Cndn("Language_Cd", typeof(String));
		public Cndn Language_Nm = new Cndn("Language_Nm", typeof(String));
		public Cndn Txn_Ts = new Cndn("Txn_Ts", typeof(Byte[]));
		public Cndn Effective_from = new Cndn("Effective_from", typeof(DateTime));
		public Cndn Effective_till = new Cndn("Effective_till", typeof(DateTime));
		public LanguagesSQLSelectQuery()
		{
			SqlObjectName = "Languages";

			lst.Add(Language_Id);
			lst.Add(Language_Cd);
			lst.Add(Language_Nm);
			lst.Add(Txn_Ts);
			lst.Add(Effective_from);
			lst.Add(Effective_till);
		}
	}
	
	
	public class Marital_statusSQLSelectQuery : SQLSelectQuery
	{
		public Cndn marital_status = new Cndn("marital_status", typeof(String));
		public Cndn effective_from = new Cndn("effective_from", typeof(DateTime));
		public Cndn effective_till = new Cndn("effective_till", typeof(DateTime));
		public Marital_statusSQLSelectQuery()
		{
			SqlObjectName = "Marital_status";

			lst.Add(marital_status);
			lst.Add(effective_from);
			lst.Add(effective_till);
		}
	}
	
	
	public class Measuring_unitsSQLSelectQuery : SQLSelectQuery
	{
		public Cndn measuring_unit_id = new Cndn("measuring_unit_id", typeof(Int16));
		public Cndn measuring_unit_cd = new Cndn("measuring_unit_cd", typeof(String));
		public Cndn measuring_unit_nm = new Cndn("measuring_unit_nm", typeof(String));
		public Cndn unit_decimals = new Cndn("unit_decimals", typeof(Byte));
		public Cndn number_format_type = new Cndn("number_format_type", typeof(String));
		public Cndn txn_ts = new Cndn("txn_ts", typeof(Byte[]));
		public Cndn effective_from = new Cndn("effective_from", typeof(DateTime));
		public Cndn effective_till = new Cndn("effective_till", typeof(DateTime));
		public Measuring_unitsSQLSelectQuery()
		{
			SqlObjectName = "Measuring_units";

			lst.Add(measuring_unit_id);
			lst.Add(measuring_unit_cd);
			lst.Add(measuring_unit_nm);
			lst.Add(unit_decimals);
			lst.Add(number_format_type);
			lst.Add(txn_ts);
			lst.Add(effective_from);
			lst.Add(effective_till);
		}
	}
	
	
	public class OccupationsSQLSelectQuery : SQLSelectQuery
	{
		public Cndn occupation_id = new Cndn("occupation_id", typeof(Int16));
		public Cndn occupation_cd = new Cndn("occupation_cd", typeof(String));
		public Cndn occupation_nm = new Cndn("occupation_nm", typeof(String));
		public Cndn txn_ts = new Cndn("txn_ts", typeof(Byte[]));
		public Cndn effective_from = new Cndn("effective_from", typeof(DateTime));
		public Cndn effective_till = new Cndn("effective_till", typeof(DateTime));
		public OccupationsSQLSelectQuery()
		{
			SqlObjectName = "Occupations";

			lst.Add(occupation_id);
			lst.Add(occupation_cd);
			lst.Add(occupation_nm);
			lst.Add(txn_ts);
			lst.Add(effective_from);
			lst.Add(effective_till);
		}
	}
	
	
	public class P_and_t_linesSQLSelectQuery : SQLSelectQuery
	{
		public Cndn telephone_no = new Cndn("telephone_no", typeof(String));
		public Cndn txn_ts = new Cndn("txn_ts", typeof(Byte[]));
		public Cndn effective_from = new Cndn("effective_from", typeof(DateTime));
		public Cndn effective_till = new Cndn("effective_till", typeof(DateTime));
		public P_and_t_linesSQLSelectQuery()
		{
			SqlObjectName = "P_and_t_lines";

			lst.Add(telephone_no);
			lst.Add(txn_ts);
			lst.Add(effective_from);
			lst.Add(effective_till);
		}
	}
	
	
	public class PartiesSQLSelectQuery : SQLSelectQuery
	{
		public Cndn party_id = new Cndn("party_id", typeof(Int32));
		public Cndn party_cd = new Cndn("party_cd", typeof(String));
		public Cndn party_nm = new Cndn("party_nm", typeof(String));
		public Cndn pan = new Cndn("pan", typeof(String));
		public Cndn party_contact_nm = new Cndn("party_contact_nm", typeof(String));
		public Cndn party_contact_designation = new Cndn("party_contact_designation", typeof(String));
		public Cndn txn_ts = new Cndn("txn_ts", typeof(Byte[]));
		public PartiesSQLSelectQuery()
		{
			SqlObjectName = "Parties";

			lst.Add(party_id);
			lst.Add(party_cd);
			lst.Add(party_nm);
			lst.Add(pan);
			lst.Add(party_contact_nm);
			lst.Add(party_contact_designation);
			lst.Add(txn_ts);
		}
	}
	
	
	public class Party_addressesSQLSelectQuery : SQLSelectQuery
	{
		public Cndn party_address_id = new Cndn("party_address_id", typeof(Int32));
		public Cndn party_id = new Cndn("party_id", typeof(Int32));
		public Cndn address_type_id = new Cndn("address_type_id", typeof(Int32));
		public Cndn address_no = new Cndn("address_no", typeof(Byte));
		public Cndn contact_nm = new Cndn("contact_nm", typeof(String));
		public Cndn contact_designation = new Cndn("contact_designation", typeof(String));
		public Cndn address_line_1 = new Cndn("address_line_1", typeof(String));
		public Cndn address_line_2 = new Cndn("address_line_2", typeof(String));
		public Cndn state_id = new Cndn("state_id", typeof(Int32));
		public Cndn district_or_city_id = new Cndn("district_or_city_id", typeof(Int32));
		public Cndn post_office_id = new Cndn("post_office_id", typeof(Int32));
		public Cndn pin_or_zip_code = new Cndn("pin_or_zip_code", typeof(String));
		public Cndn country_id = new Cndn("country_id", typeof(Int16));
		public Cndn cell_phones = new Cndn("cell_phones", typeof(String));
		public Cndn telephones = new Cndn("telephones", typeof(String));
		public Cndn email_addresses = new Cndn("email_addresses", typeof(String));
		public Cndn fax_lines = new Cndn("fax_lines", typeof(String));
		public Cndn effective_from = new Cndn("effective_from", typeof(DateTime));
		public Cndn effective_till = new Cndn("effective_till", typeof(DateTime));
		public Party_addressesSQLSelectQuery()
		{
			SqlObjectName = "Party_addresses";

			lst.Add(party_address_id);
			lst.Add(party_id);
			lst.Add(address_type_id);
			lst.Add(address_no);
			lst.Add(contact_nm);
			lst.Add(contact_designation);
			lst.Add(address_line_1);
			lst.Add(address_line_2);
			lst.Add(state_id);
			lst.Add(district_or_city_id);
			lst.Add(post_office_id);
			lst.Add(pin_or_zip_code);
			lst.Add(country_id);
			lst.Add(cell_phones);
			lst.Add(telephones);
			lst.Add(email_addresses);
			lst.Add(fax_lines);
			lst.Add(effective_from);
			lst.Add(effective_till);
		}
	}
	
	
	public class Party_role_applicationsSQLSelectQuery : SQLSelectQuery
	{
		public Cndn party_id = new Cndn("party_id", typeof(Int32));
		public Cndn role_cd = new Cndn("role_cd", typeof(String));
		public Cndn application_id = new Cndn("application_id", typeof(String));
		public Cndn is_read = new Cndn("is_read", typeof(String));
		public Cndn is_update = new Cndn("is_update", typeof(String));
		public Party_role_applicationsSQLSelectQuery()
		{
			SqlObjectName = "Party_role_applications";

			lst.Add(party_id);
			lst.Add(role_cd);
			lst.Add(application_id);
			lst.Add(is_read);
			lst.Add(is_update);
		}
	}
	
	
	public class Party_rolesSQLSelectQuery : SQLSelectQuery
	{
		public Cndn party_id = new Cndn("party_id", typeof(Int32));
		public Cndn role_cd = new Cndn("role_cd", typeof(String));
		public Cndn default_address_id = new Cndn("default_address_id", typeof(Int32));
		public Cndn owner_application_id = new Cndn("owner_application_id", typeof(String));
		public Cndn effective_from = new Cndn("effective_from", typeof(DateTime));
		public Cndn effective_till = new Cndn("effective_till", typeof(DateTime));
		public Party_rolesSQLSelectQuery()
		{
			SqlObjectName = "Party_roles";

			lst.Add(party_id);
			lst.Add(role_cd);
			lst.Add(default_address_id);
			lst.Add(owner_application_id);
			lst.Add(effective_from);
			lst.Add(effective_till);
		}
	}
	
	
	public class PatronsSQLSelectQuery : SQLSelectQuery
	{
		public Cndn patron_id = new Cndn("patron_id", typeof(Byte));
		public Cndn patron_nm = new Cndn("patron_nm", typeof(String));
		public Cndn effective_from = new Cndn("effective_from", typeof(DateTime));
		public Cndn effective_till = new Cndn("effective_till", typeof(DateTime));
		public Cndn initiation_from = new Cndn("initiation_from", typeof(DateTime));
		public Cndn initiation_till = new Cndn("initiation_till", typeof(DateTime));
		public PatronsSQLSelectQuery()
		{
			SqlObjectName = "Patrons";

			lst.Add(patron_id);
			lst.Add(patron_nm);
			lst.Add(effective_from);
			lst.Add(effective_till);
			lst.Add(initiation_from);
			lst.Add(initiation_till);
		}
	}
	
	
	public class Person_titlesSQLSelectQuery : SQLSelectQuery
	{
		public Cndn person_title = new Cndn("person_title", typeof(String));
		public Person_titlesSQLSelectQuery()
		{
			SqlObjectName = "Person_titles";

			lst.Add(person_title);
		}
	}
	
	
	public class PersonsSQLSelectQuery : SQLSelectQuery
	{
		public Cndn person_id = new Cndn("person_id", typeof(Int32));
		public Cndn title = new Cndn("title", typeof(String));
		public Cndn first_nm = new Cndn("first_nm", typeof(String));
		public Cndn middle_nm = new Cndn("middle_nm", typeof(String));
		public Cndn last_nm = new Cndn("last_nm", typeof(String));
		public Cndn gender = new Cndn("gender", typeof(String));
		public Cndn is_dera_resident = new Cndn("is_dera_resident", typeof(String));
		public Cndn contact_information = new Cndn("contact_information", typeof(String));
		public Cndn email_addresses = new Cndn("email_addresses", typeof(String));
		public Cndn birth_dtm = new Cndn("birth_dtm", typeof(DateTime));
		public Cndn additional_information = new Cndn("additional_information", typeof(String));
		public Cndn application_id = new Cndn("application_id", typeof(String));
		public Cndn screen_id = new Cndn("screen_id", typeof(String));
		public Cndn initiation_id = new Cndn("initiation_id", typeof(Int32));
		public Cndn effective_from = new Cndn("effective_from", typeof(DateTime));
		public Cndn effective_till = new Cndn("effective_till", typeof(DateTime));
		public Cndn txn_ts = new Cndn("txn_ts", typeof(Byte[]));
		public PersonsSQLSelectQuery()
		{
			SqlObjectName = "Persons";

			lst.Add(person_id);
			lst.Add(title);
			lst.Add(first_nm);
			lst.Add(middle_nm);
			lst.Add(last_nm);
			lst.Add(gender);
			lst.Add(is_dera_resident);
			lst.Add(contact_information);
			lst.Add(email_addresses);
			lst.Add(birth_dtm);
			lst.Add(additional_information);
			lst.Add(application_id);
			lst.Add(screen_id);
			lst.Add(initiation_id);
			lst.Add(effective_from);
			lst.Add(effective_till);
			lst.Add(txn_ts);
		}
	}
	
	
	public class Phone_typesSQLSelectQuery : SQLSelectQuery
	{
		public Cndn phone_type_id = new Cndn("phone_type_id", typeof(Int16));
		public Cndn phone_type_nm = new Cndn("phone_type_nm", typeof(String));
		public Cndn effective_from = new Cndn("effective_from", typeof(DateTime));
		public Cndn effective_till = new Cndn("effective_till", typeof(DateTime));
		public Phone_typesSQLSelectQuery()
		{
			SqlObjectName = "Phone_types";

			lst.Add(phone_type_id);
			lst.Add(phone_type_nm);
			lst.Add(effective_from);
			lst.Add(effective_till);
		}
	}
	
	
	public class Post_officesSQLSelectQuery : SQLSelectQuery
	{
		public Cndn post_office_id = new Cndn("post_office_id", typeof(Int32));
		public Cndn post_office_cd = new Cndn("post_office_cd", typeof(String));
		public Cndn post_office_nm = new Cndn("post_office_nm", typeof(String));
		public Cndn district_or_city_id = new Cndn("district_or_city_id", typeof(Int32));
		public Cndn pin_or_zip_code = new Cndn("pin_or_zip_code", typeof(String));
		public Cndn std_code = new Cndn("std_code", typeof(String));
		public Cndn txn_ts = new Cndn("txn_ts", typeof(Byte[]));
		public Cndn effective_from = new Cndn("effective_from", typeof(DateTime));
		public Cndn effective_till = new Cndn("effective_till", typeof(DateTime));
		public Post_officesSQLSelectQuery()
		{
			SqlObjectName = "Post_offices";

			lst.Add(post_office_id);
			lst.Add(post_office_cd);
			lst.Add(post_office_nm);
			lst.Add(district_or_city_id);
			lst.Add(pin_or_zip_code);
			lst.Add(std_code);
			lst.Add(txn_ts);
			lst.Add(effective_from);
			lst.Add(effective_till);
		}
	}
	
	
	public class Qlfctn_subjectsSQLSelectQuery : SQLSelectQuery
	{
		public Cndn qlfctn_subject_id = new Cndn("qlfctn_subject_id", typeof(Int16));
		public Cndn qlfctn_subject_cd = new Cndn("qlfctn_subject_cd", typeof(String));
		public Cndn qlfctn_subject_nm = new Cndn("qlfctn_subject_nm", typeof(String));
		public Cndn description = new Cndn("description", typeof(String));
		public Cndn effective_from = new Cndn("effective_from", typeof(DateTime));
		public Cndn effective_till = new Cndn("effective_till", typeof(DateTime));
		public Qlfctn_subjectsSQLSelectQuery()
		{
			SqlObjectName = "Qlfctn_subjects";

			lst.Add(qlfctn_subject_id);
			lst.Add(qlfctn_subject_cd);
			lst.Add(qlfctn_subject_nm);
			lst.Add(description);
			lst.Add(effective_from);
			lst.Add(effective_till);
		}
	}
	
	
	public class Qualification_typesSQLSelectQuery : SQLSelectQuery
	{
		public Cndn qualification_type = new Cndn("qualification_type", typeof(String));
		public Cndn qualification_type_sq = new Cndn("qualification_type_sq", typeof(Int16));
		public Cndn effective_from = new Cndn("effective_from", typeof(DateTime));
		public Cndn effective_till = new Cndn("effective_till", typeof(DateTime));
		public Qualification_typesSQLSelectQuery()
		{
			SqlObjectName = "Qualification_types";

			lst.Add(qualification_type);
			lst.Add(qualification_type_sq);
			lst.Add(effective_from);
			lst.Add(effective_till);
		}
	}
	
	
	public class QualificationsSQLSelectQuery : SQLSelectQuery
	{
		public Cndn qualification_id = new Cndn("qualification_id", typeof(Int16));
		public Cndn qualification_type = new Cndn("qualification_type", typeof(String));
		public Cndn qualification_cd = new Cndn("qualification_cd", typeof(String));
		public Cndn qualification_nm = new Cndn("qualification_nm", typeof(String));
		public Cndn remarks = new Cndn("remarks", typeof(String));
		public Cndn effective_from = new Cndn("effective_from", typeof(DateTime));
		public Cndn effective_till = new Cndn("effective_till", typeof(DateTime));
		public Cndn txn_ts = new Cndn("txn_ts", typeof(Byte[]));
		public QualificationsSQLSelectQuery()
		{
			SqlObjectName = "Qualifications";

			lst.Add(qualification_id);
			lst.Add(qualification_type);
			lst.Add(qualification_cd);
			lst.Add(qualification_nm);
			lst.Add(remarks);
			lst.Add(effective_from);
			lst.Add(effective_till);
			lst.Add(txn_ts);
		}
	}
	
	
	public class Qualifications_qlfctn_subjectsSQLSelectQuery : SQLSelectQuery
	{
		public Cndn qualification_id = new Cndn("qualification_id", typeof(Int16));
		public Cndn qlfctn_subject_id = new Cndn("qlfctn_subject_id", typeof(Int16));
		public Cndn effective_from = new Cndn("effective_from", typeof(DateTime));
		public Cndn effective_till = new Cndn("effective_till", typeof(DateTime));
		public Qualifications_qlfctn_subjectsSQLSelectQuery()
		{
			SqlObjectName = "Qualifications_qlfctn_subjects";

			lst.Add(qualification_id);
			lst.Add(qlfctn_subject_id);
			lst.Add(effective_from);
			lst.Add(effective_till);
		}
	}
	
	
	public class RelationsSQLSelectQuery : SQLSelectQuery
	{
		public Cndn relation_id = new Cndn("relation_id", typeof(Int16));
		public Cndn relation_nm = new Cndn("relation_nm", typeof(String));
		public Cndn txn_ts = new Cndn("txn_ts", typeof(Byte[]));
		public Cndn effective_from = new Cndn("effective_from", typeof(DateTime));
		public Cndn effective_till = new Cndn("effective_till", typeof(DateTime));
		public RelationsSQLSelectQuery()
		{
			SqlObjectName = "Relations";

			lst.Add(relation_id);
			lst.Add(relation_nm);
			lst.Add(txn_ts);
			lst.Add(effective_from);
			lst.Add(effective_till);
		}
	}
	
	
	public class RepresentativesSQLSelectQuery : SQLSelectQuery
	{
		public Cndn representative_id = new Cndn("representative_id", typeof(Int32));
		public Cndn person_id = new Cndn("person_id", typeof(Int32));
		public Cndn address_line_1 = new Cndn("address_line_1", typeof(String));
		public Cndn address_line_2 = new Cndn("address_line_2", typeof(String));
		public Cndn district_or_city_id = new Cndn("district_or_city_id", typeof(Int32));
		public Cndn pin_or_zip_code = new Cndn("pin_or_zip_code", typeof(String));
		public Cndn telephones_office = new Cndn("telephones_office", typeof(String));
		public Cndn telephones_residence = new Cndn("telephones_residence", typeof(String));
		public Cndn cell_phone_no = new Cndn("cell_phone_no", typeof(String));
		public Cndn fax_lines_office = new Cndn("fax_lines_office", typeof(String));
		public Cndn fax_lines_residence = new Cndn("fax_lines_residence", typeof(String));
		public Cndn territory = new Cndn("territory", typeof(String));
		public Cndn txn_ts = new Cndn("txn_ts", typeof(Byte[]));
		public Cndn effective_from = new Cndn("effective_from", typeof(DateTime));
		public Cndn effective_till = new Cndn("effective_till", typeof(DateTime));
		public RepresentativesSQLSelectQuery()
		{
			SqlObjectName = "Representatives";

			lst.Add(representative_id);
			lst.Add(person_id);
			lst.Add(address_line_1);
			lst.Add(address_line_2);
			lst.Add(district_or_city_id);
			lst.Add(pin_or_zip_code);
			lst.Add(telephones_office);
			lst.Add(telephones_residence);
			lst.Add(cell_phone_no);
			lst.Add(fax_lines_office);
			lst.Add(fax_lines_residence);
			lst.Add(territory);
			lst.Add(txn_ts);
			lst.Add(effective_from);
			lst.Add(effective_till);
		}
	}
	
	
	public class Responsibility_typesSQLSelectQuery : SQLSelectQuery
	{
		public Cndn responsibility_type_id = new Cndn("responsibility_type_id", typeof(Int16));
		public Cndn working_unit_id = new Cndn("working_unit_id", typeof(Int16));
		public Cndn responsibility_nm = new Cndn("responsibility_nm", typeof(String));
		public Cndn responsibility_cnt = new Cndn("responsibility_cnt", typeof(Byte));
		public Cndn responsibility_sq = new Cndn("responsibility_sq", typeof(Int16));
		public Responsibility_typesSQLSelectQuery()
		{
			SqlObjectName = "Responsibility_types";

			lst.Add(responsibility_type_id);
			lst.Add(working_unit_id);
			lst.Add(responsibility_nm);
			lst.Add(responsibility_cnt);
			lst.Add(responsibility_sq);
		}
	}
	
	
	public class RolesSQLSelectQuery : SQLSelectQuery
	{
		public Cndn role_cd = new Cndn("role_cd", typeof(String));
		public Cndn role_nm = new Cndn("role_nm", typeof(String));
		public Cndn address_requirement = new Cndn("address_requirement", typeof(String));
		public Cndn txn_ts = new Cndn("txn_ts", typeof(Byte[]));
		public Cndn effective_from = new Cndn("effective_from", typeof(DateTime));
		public Cndn effective_till = new Cndn("effective_till", typeof(DateTime));
		public RolesSQLSelectQuery()
		{
			SqlObjectName = "Roles";

			lst.Add(role_cd);
			lst.Add(role_nm);
			lst.Add(address_requirement);
			lst.Add(txn_ts);
			lst.Add(effective_from);
			lst.Add(effective_till);
		}
	}
	
	
	public class Roles_application_controlsSQLSelectQuery : SQLSelectQuery
	{
		public Cndn role_cd = new Cndn("role_cd", typeof(String));
		public Cndn owner_application_id = new Cndn("owner_application_id", typeof(String));
		public Cndn application_id = new Cndn("application_id", typeof(String));
		public Cndn is_read = new Cndn("is_read", typeof(String));
		public Cndn is_update = new Cndn("is_update", typeof(String));
		public Roles_application_controlsSQLSelectQuery()
		{
			SqlObjectName = "Roles_application_controls";

			lst.Add(role_cd);
			lst.Add(owner_application_id);
			lst.Add(application_id);
			lst.Add(is_read);
			lst.Add(is_update);
		}
	}
	
	
	public class Satsang_centre_typesSQLSelectQuery : SQLSelectQuery
	{
		public Cndn satsang_centre_type = new Cndn("satsang_centre_type", typeof(String));
		public Satsang_centre_typesSQLSelectQuery()
		{
			SqlObjectName = "Satsang_centre_types";

			lst.Add(satsang_centre_type);
		}
	}
	
	
	public class Satsang_centresSQLSelectQuery : SQLSelectQuery
	{
		public Cndn satsang_centre_id = new Cndn("satsang_centre_id", typeof(Int32));
		public Cndn satsang_centre_cd = new Cndn("satsang_centre_cd", typeof(String));
		public Cndn satsang_centre_nm = new Cndn("satsang_centre_nm", typeof(String));
		public Cndn satsang_centre_type = new Cndn("satsang_centre_type", typeof(String));
		public Cndn address_line_1 = new Cndn("address_line_1", typeof(String));
		public Cndn address_line_2 = new Cndn("address_line_2", typeof(String));
		public Cndn district_or_city_id = new Cndn("district_or_city_id", typeof(Int32));
		public Cndn pin_or_zip_code = new Cndn("pin_or_zip_code", typeof(String));
		public Cndn secretary = new Cndn("secretary", typeof(Int32));
		public Cndn telephones = new Cndn("telephones", typeof(String));
		public Cndn email_addresses = new Cndn("email_addresses", typeof(String));
		public Cndn fax_lines = new Cndn("fax_lines", typeof(String));
		public Cndn txn_ts = new Cndn("txn_ts", typeof(Byte[]));
		public Cndn effective_from = new Cndn("effective_from", typeof(DateTime));
		public Cndn effective_till = new Cndn("effective_till", typeof(DateTime));
		public Satsang_centresSQLSelectQuery()
		{
			SqlObjectName = "Satsang_centres";

			lst.Add(satsang_centre_id);
			lst.Add(satsang_centre_cd);
			lst.Add(satsang_centre_nm);
			lst.Add(satsang_centre_type);
			lst.Add(address_line_1);
			lst.Add(address_line_2);
			lst.Add(district_or_city_id);
			lst.Add(pin_or_zip_code);
			lst.Add(secretary);
			lst.Add(telephones);
			lst.Add(email_addresses);
			lst.Add(fax_lines);
			lst.Add(txn_ts);
			lst.Add(effective_from);
			lst.Add(effective_till);
		}
	}
	
	
	public class Sewadar_StatusSQLSelectQuery : SQLSelectQuery
	{
		public Cndn sewadarstatus_id = new Cndn("sewadarstatus_id", typeof(Int32));
		public Cndn sewadarstatus_nm = new Cndn("sewadarstatus_nm", typeof(String));
		public Cndn txn_ts = new Cndn("txn_ts", typeof(Byte[]));
		public Cndn effective_from = new Cndn("effective_from", typeof(DateTime));
		public Cndn effective_till = new Cndn("effective_till", typeof(DateTime));
		public Sewadar_StatusSQLSelectQuery()
		{
			SqlObjectName = "Sewadar_Status";

			lst.Add(sewadarstatus_id);
			lst.Add(sewadarstatus_nm);
			lst.Add(txn_ts);
			lst.Add(effective_from);
			lst.Add(effective_till);
		}
	}
	
	
	public class Sewadar_typesSQLSelectQuery : SQLSelectQuery
	{
		public Cndn sewadartype_id = new Cndn("sewadartype_id", typeof(Int32));
		public Cndn sewadartype_nm = new Cndn("sewadartype_nm", typeof(String));
		public Cndn txn_ts = new Cndn("txn_ts", typeof(Byte[]));
		public Cndn effective_from = new Cndn("effective_from", typeof(DateTime));
		public Cndn effective_till = new Cndn("effective_till", typeof(DateTime));
		public Cndn is_used_in_RMS = new Cndn("is_used_in_RMS", typeof(String));
		public Sewadar_typesSQLSelectQuery()
		{
			SqlObjectName = "Sewadar_types";

			lst.Add(sewadartype_id);
			lst.Add(sewadartype_nm);
			lst.Add(txn_ts);
			lst.Add(effective_from);
			lst.Add(effective_till);
			lst.Add(is_used_in_RMS);
		}
	}
	
	
	public class SkillsSQLSelectQuery : SQLSelectQuery
	{
		public Cndn skill_id = new Cndn("skill_id", typeof(Int16));
		public Cndn skill_nm = new Cndn("skill_nm", typeof(String));
		public Cndn txn_ts = new Cndn("txn_ts", typeof(Byte[]));
		public Cndn effective_from = new Cndn("effective_from", typeof(DateTime));
		public Cndn effective_till = new Cndn("effective_till", typeof(DateTime));
		public SkillsSQLSelectQuery()
		{
			SqlObjectName = "Skills";

			lst.Add(skill_id);
			lst.Add(skill_nm);
			lst.Add(txn_ts);
			lst.Add(effective_from);
			lst.Add(effective_till);
		}
	}
	
	
	public class SocietiesSQLSelectQuery : SQLSelectQuery
	{
		public Cndn society_id = new Cndn("society_id", typeof(Int16));
		public Cndn society_cd = new Cndn("society_cd", typeof(String));
		public Cndn society_nm = new Cndn("society_nm", typeof(String));
		public Cndn effective_from = new Cndn("effective_from", typeof(DateTime));
		public Cndn effective_till = new Cndn("effective_till", typeof(DateTime));
		public SocietiesSQLSelectQuery()
		{
			SqlObjectName = "Societies";

			lst.Add(society_id);
			lst.Add(society_cd);
			lst.Add(society_nm);
			lst.Add(effective_from);
			lst.Add(effective_till);
		}
	}
	
	
	public class StatesSQLSelectQuery : SQLSelectQuery
	{
		public Cndn state_id = new Cndn("state_id", typeof(Int32));
		public Cndn state_cd = new Cndn("state_cd", typeof(String));
		public Cndn state_nm = new Cndn("state_nm", typeof(String));
		public Cndn country_id = new Cndn("country_id", typeof(Int16));
		public Cndn txn_ts = new Cndn("txn_ts", typeof(Byte[]));
		public Cndn effective_from = new Cndn("effective_from", typeof(DateTime));
		public Cndn effective_till = new Cndn("effective_till", typeof(DateTime));
		public StatesSQLSelectQuery()
		{
			SqlObjectName = "States";

			lst.Add(state_id);
			lst.Add(state_cd);
			lst.Add(state_nm);
			lst.Add(country_id);
			lst.Add(txn_ts);
			lst.Add(effective_from);
			lst.Add(effective_till);
		}
	}
	
	
	public class ViewCountrieSQLSelectQuery : SQLSelectQuery
	{
		public Cndn country_id = new Cndn("country_id", typeof(Int16));
		public Cndn country_cd = new Cndn("country_cd", typeof(String));
		public Cndn country_nm = new Cndn("country_nm", typeof(String));
		public Cndn isd_code = new Cndn("isd_code", typeof(String));
		public Cndn gmt_diff = new Cndn("gmt_diff", typeof(Decimal));
		public Cndn txn_ts = new Cndn("txn_ts", typeof(Byte[]));
		public Cndn effective_from = new Cndn("effective_from", typeof(DateTime));
		public Cndn effective_till = new Cndn("effective_till", typeof(DateTime));
		public ViewCountrieSQLSelectQuery()
		{
			SqlObjectName = "ViewCountrie";
			SQLObjectType = SQLObjectTypes.View;

			lst.Add(country_id);
			lst.Add(country_cd);
			lst.Add(country_nm);
			lst.Add(isd_code);
			lst.Add(gmt_diff);
			lst.Add(txn_ts);
			lst.Add(effective_from);
			lst.Add(effective_till);
		}
	}
	
	
	public class ViewDistrictsOrCitieSQLSelectQuery : SQLSelectQuery
	{
		public Cndn district_or_city_id = new Cndn("district_or_city_id", typeof(Int32));
		public Cndn district_cd = new Cndn("district_cd", typeof(String));
		public Cndn district_nm = new Cndn("district_nm", typeof(String));
		public Cndn state_id = new Cndn("state_id", typeof(Int32));
		public Cndn state_nm = new Cndn("state_nm", typeof(String));
		public Cndn txn_ts = new Cndn("txn_ts", typeof(Byte[]));
		public Cndn effective_from = new Cndn("effective_from", typeof(DateTime));
		public Cndn effective_till = new Cndn("effective_till", typeof(DateTime));
		public Cndn country_id = new Cndn("country_id", typeof(Int16));
		public Cndn country_nm = new Cndn("country_nm", typeof(String));
		public ViewDistrictsOrCitieSQLSelectQuery()
		{
			SqlObjectName = "ViewDistrictsOrCitie";
			SQLObjectType = SQLObjectTypes.View;

			lst.Add(district_or_city_id);
			lst.Add(district_cd);
			lst.Add(district_nm);
			lst.Add(state_id);
			lst.Add(state_nm);
			lst.Add(txn_ts);
			lst.Add(effective_from);
			lst.Add(effective_till);
			lst.Add(country_id);
			lst.Add(country_nm);
		}
	}
	
	
	public class ViewInitiationPlaceSQLSelectQuery : SQLSelectQuery
	{
		public Cndn place_id = new Cndn("place_id", typeof(Int16));
		public Cndn place_nm = new Cndn("place_nm", typeof(String));
		public Cndn txn_ts = new Cndn("txn_ts", typeof(Byte[]));
		public Cndn effective_from = new Cndn("effective_from", typeof(DateTime));
		public Cndn effective_till = new Cndn("effective_till", typeof(DateTime));
		public ViewInitiationPlaceSQLSelectQuery()
		{
			SqlObjectName = "ViewInitiationPlace";
			SQLObjectType = SQLObjectTypes.View;

			lst.Add(place_id);
			lst.Add(place_nm);
			lst.Add(txn_ts);
			lst.Add(effective_from);
			lst.Add(effective_till);
		}
	}
	
	
	public class ViewOccupationSQLSelectQuery : SQLSelectQuery
	{
		public Cndn occupation_id = new Cndn("occupation_id", typeof(Int16));
		public Cndn occupation_cd = new Cndn("occupation_cd", typeof(String));
		public Cndn occupation_nm = new Cndn("occupation_nm", typeof(String));
		public Cndn txn_ts = new Cndn("txn_ts", typeof(Byte[]));
		public Cndn effective_from = new Cndn("effective_from", typeof(DateTime));
		public Cndn effective_till = new Cndn("effective_till", typeof(DateTime));
		public ViewOccupationSQLSelectQuery()
		{
			SqlObjectName = "ViewOccupation";
			SQLObjectType = SQLObjectTypes.View;

			lst.Add(occupation_id);
			lst.Add(occupation_cd);
			lst.Add(occupation_nm);
			lst.Add(txn_ts);
			lst.Add(effective_from);
			lst.Add(effective_till);
		}
	}
	
	
	public class ViewQlfctnSubjectSQLSelectQuery : SQLSelectQuery
	{
		public Cndn qlfctn_subject_id = new Cndn("qlfctn_subject_id", typeof(Int16));
		public Cndn qlfctn_subject_cd = new Cndn("qlfctn_subject_cd", typeof(String));
		public Cndn qlfctn_subject_nm = new Cndn("qlfctn_subject_nm", typeof(String));
		public Cndn description = new Cndn("description", typeof(String));
		public Cndn effective_from = new Cndn("effective_from", typeof(DateTime));
		public Cndn effective_till = new Cndn("effective_till", typeof(DateTime));
		public ViewQlfctnSubjectSQLSelectQuery()
		{
			SqlObjectName = "ViewQlfctnSubject";
			SQLObjectType = SQLObjectTypes.View;

			lst.Add(qlfctn_subject_id);
			lst.Add(qlfctn_subject_cd);
			lst.Add(qlfctn_subject_nm);
			lst.Add(description);
			lst.Add(effective_from);
			lst.Add(effective_till);
		}
	}
	
	
	public class ViewQualificationSQLSelectQuery : SQLSelectQuery
	{
		public Cndn qualification_id = new Cndn("qualification_id", typeof(Int16));
		public Cndn qualification_type = new Cndn("qualification_type", typeof(String));
		public Cndn qualification_cd = new Cndn("qualification_cd", typeof(String));
		public Cndn qualification_nm = new Cndn("qualification_nm", typeof(String));
		public Cndn remarks = new Cndn("remarks", typeof(String));
		public Cndn effective_from = new Cndn("effective_from", typeof(DateTime));
		public Cndn effective_till = new Cndn("effective_till", typeof(DateTime));
		public Cndn txn_ts = new Cndn("txn_ts", typeof(Byte[]));
		public ViewQualificationSQLSelectQuery()
		{
			SqlObjectName = "ViewQualification";
			SQLObjectType = SQLObjectTypes.View;

			lst.Add(qualification_id);
			lst.Add(qualification_type);
			lst.Add(qualification_cd);
			lst.Add(qualification_nm);
			lst.Add(remarks);
			lst.Add(effective_from);
			lst.Add(effective_till);
			lst.Add(txn_ts);
		}
	}
	
	
	public class ViewqualificationsSQLSelectQuery : SQLSelectQuery
	{
		public Cndn qualification_id = new Cndn("qualification_id", typeof(Int16));
		public Cndn qualification_type = new Cndn("qualification_type", typeof(String));
		public Cndn qualification_cd = new Cndn("qualification_cd", typeof(String));
		public Cndn qualification_nm = new Cndn("qualification_nm", typeof(String));
		public Cndn remarks = new Cndn("remarks", typeof(String));
		public Cndn effective_from = new Cndn("effective_from", typeof(DateTime));
		public Cndn effective_till = new Cndn("effective_till", typeof(DateTime));
		public Cndn txn_ts = new Cndn("txn_ts", typeof(Byte[]));
		public ViewqualificationsSQLSelectQuery()
		{
			SqlObjectName = "Viewqualifications";
			SQLObjectType = SQLObjectTypes.View;

			lst.Add(qualification_id);
			lst.Add(qualification_type);
			lst.Add(qualification_cd);
			lst.Add(qualification_nm);
			lst.Add(remarks);
			lst.Add(effective_from);
			lst.Add(effective_till);
			lst.Add(txn_ts);
		}
	}
	
	
	public class ViewRelationSQLSelectQuery : SQLSelectQuery
	{
		public Cndn relation_id = new Cndn("relation_id", typeof(Int16));
		public Cndn relation_nm = new Cndn("relation_nm", typeof(String));
		public Cndn txn_ts = new Cndn("txn_ts", typeof(Byte[]));
		public Cndn effective_from = new Cndn("effective_from", typeof(DateTime));
		public Cndn effective_till = new Cndn("effective_till", typeof(DateTime));
		public ViewRelationSQLSelectQuery()
		{
			SqlObjectName = "ViewRelation";
			SQLObjectType = SQLObjectTypes.View;

			lst.Add(relation_id);
			lst.Add(relation_nm);
			lst.Add(txn_ts);
			lst.Add(effective_from);
			lst.Add(effective_till);
		}
	}
	
	
	public class ViewSkillSQLSelectQuery : SQLSelectQuery
	{
		public Cndn skill_id = new Cndn("skill_id", typeof(Int16));
		public Cndn skill_nm = new Cndn("skill_nm", typeof(String));
		public Cndn txn_ts = new Cndn("txn_ts", typeof(Byte[]));
		public Cndn effective_from = new Cndn("effective_from", typeof(DateTime));
		public Cndn effective_till = new Cndn("effective_till", typeof(DateTime));
		public ViewSkillSQLSelectQuery()
		{
			SqlObjectName = "ViewSkill";
			SQLObjectType = SQLObjectTypes.View;

			lst.Add(skill_id);
			lst.Add(skill_nm);
			lst.Add(txn_ts);
			lst.Add(effective_from);
			lst.Add(effective_till);
		}
	}
	
	
	public class ViewStateSQLSelectQuery : SQLSelectQuery
	{
		public Cndn state_id = new Cndn("state_id", typeof(Int32));
		public Cndn state_cd = new Cndn("state_cd", typeof(String));
		public Cndn state_nm = new Cndn("state_nm", typeof(String));
		public Cndn country_id = new Cndn("country_id", typeof(Int16));
		public Cndn country_nm = new Cndn("country_nm", typeof(String));
		public Cndn txn_ts = new Cndn("txn_ts", typeof(Byte[]));
		public Cndn effective_from = new Cndn("effective_from", typeof(DateTime));
		public Cndn effective_till = new Cndn("effective_till", typeof(DateTime));
		public ViewStateSQLSelectQuery()
		{
			SqlObjectName = "ViewState";
			SQLObjectType = SQLObjectTypes.View;

			lst.Add(state_id);
			lst.Add(state_cd);
			lst.Add(state_nm);
			lst.Add(country_id);
			lst.Add(country_nm);
			lst.Add(txn_ts);
			lst.Add(effective_from);
			lst.Add(effective_till);
		}
	}
	
	
	public class Working_unit_entitiesSQLSelectQuery : SQLSelectQuery
	{
		public Cndn entity_id = new Cndn("entity_id", typeof(Int16));
		public Cndn entity_singular_nm = new Cndn("entity_singular_nm", typeof(String));
		public Cndn entity_plural_nm = new Cndn("entity_plural_nm", typeof(String));
		public Cndn effective_from = new Cndn("effective_from", typeof(DateTime));
		public Cndn effective_till = new Cndn("effective_till", typeof(DateTime));
		public Working_unit_entitiesSQLSelectQuery()
		{
			SqlObjectName = "Working_unit_entities";

			lst.Add(entity_id);
			lst.Add(entity_singular_nm);
			lst.Add(entity_plural_nm);
			lst.Add(effective_from);
			lst.Add(effective_till);
		}
	}
	
	
	public class Working_unit_epabx_extensionsSQLSelectQuery : SQLSelectQuery
	{
		public Cndn working_unit_id = new Cndn("working_unit_id", typeof(Int16));
		public Cndn epabx_extension = new Cndn("epabx_extension", typeof(String));
		public Cndn extension_sq = new Cndn("extension_sq", typeof(Int16));
		public Working_unit_epabx_extensionsSQLSelectQuery()
		{
			SqlObjectName = "Working_unit_epabx_extensions";

			lst.Add(working_unit_id);
			lst.Add(epabx_extension);
			lst.Add(extension_sq);
		}
	}
	
	
	public class Working_unit_fax_linesSQLSelectQuery : SQLSelectQuery
	{
		public Cndn working_unit_id = new Cndn("working_unit_id", typeof(Int16));
		public Cndn fax_line = new Cndn("fax_line", typeof(String));
		public Cndn line_sq = new Cndn("line_sq", typeof(Int16));
		public Working_unit_fax_linesSQLSelectQuery()
		{
			SqlObjectName = "Working_unit_fax_lines";

			lst.Add(working_unit_id);
			lst.Add(fax_line);
			lst.Add(line_sq);
		}
	}
	
	
	public class Working_unit_p_and_t_linesSQLSelectQuery : SQLSelectQuery
	{
		public Cndn working_unit_id = new Cndn("working_unit_id", typeof(Int16));
		public Cndn p_and_t_line = new Cndn("p_and_t_line", typeof(String));
		public Cndn line_sq = new Cndn("line_sq", typeof(Int16));
		public Working_unit_p_and_t_linesSQLSelectQuery()
		{
			SqlObjectName = "Working_unit_p_and_t_lines";

			lst.Add(working_unit_id);
			lst.Add(p_and_t_line);
			lst.Add(line_sq);
		}
	}
	
	
	public class Working_unit_responsibilitiesSQLSelectQuery : SQLSelectQuery
	{
		public Cndn working_unit_id = new Cndn("working_unit_id", typeof(Int16));
		public Cndn sewadar_id = new Cndn("sewadar_id", typeof(Int32));
		public Cndn responsibility_type_id = new Cndn("responsibility_type_id", typeof(Int16));
		public Cndn responsibility_sq = new Cndn("responsibility_sq", typeof(Int16));
		public Working_unit_responsibilitiesSQLSelectQuery()
		{
			SqlObjectName = "Working_unit_responsibilities";

			lst.Add(working_unit_id);
			lst.Add(sewadar_id);
			lst.Add(responsibility_type_id);
			lst.Add(responsibility_sq);
		}
	}
	
	
	public class Working_unit_sanctioned_strengthSQLSelectQuery : SQLSelectQuery
	{
		public Cndn working_unit_id = new Cndn("working_unit_id", typeof(Int16));
		public Cndn honorary_sewadar_cnt = new Cndn("honorary_sewadar_cnt", typeof(Int16));
		public Cndn parshadi_sewadar_cnt = new Cndn("parshadi_sewadar_cnt", typeof(Int16));
		public Working_unit_sanctioned_strengthSQLSelectQuery()
		{
			SqlObjectName = "Working_unit_sanctioned_strength";

			lst.Add(working_unit_id);
			lst.Add(honorary_sewadar_cnt);
			lst.Add(parshadi_sewadar_cnt);
		}
	}
	
	
	public class Working_unitsSQLSelectQuery : SQLSelectQuery
	{
		public Cndn working_unit_id = new Cndn("working_unit_id", typeof(Int16));
		public Cndn working_unit_cd = new Cndn("working_unit_cd", typeof(String));
		public Cndn working_unit_nm = new Cndn("working_unit_nm", typeof(String));
		public Cndn is_root = new Cndn("is_root", typeof(String));
		public Cndn is_leaf = new Cndn("is_leaf", typeof(String));
		public Cndn society_id = new Cndn("society_id", typeof(Int16));
		public Cndn is_staff_posted = new Cndn("is_staff_posted", typeof(String));
		public Cndn working_unit_entity_id = new Cndn("working_unit_entity_id", typeof(Int16));
		public Cndn group_working_unit_id = new Cndn("group_working_unit_id", typeof(Int16));
		public Cndn effective_from = new Cndn("effective_from", typeof(DateTime));
		public Cndn effective_till = new Cndn("effective_till", typeof(DateTime));
		public Cndn txn_ts = new Cndn("txn_ts", typeof(Byte[]));
		public Working_unitsSQLSelectQuery()
		{
			SqlObjectName = "Working_units";

			lst.Add(working_unit_id);
			lst.Add(working_unit_cd);
			lst.Add(working_unit_nm);
			lst.Add(is_root);
			lst.Add(is_leaf);
			lst.Add(society_id);
			lst.Add(is_staff_posted);
			lst.Add(working_unit_entity_id);
			lst.Add(group_working_unit_id);
			lst.Add(effective_from);
			lst.Add(effective_till);
			lst.Add(txn_ts);
		}
	}
}
