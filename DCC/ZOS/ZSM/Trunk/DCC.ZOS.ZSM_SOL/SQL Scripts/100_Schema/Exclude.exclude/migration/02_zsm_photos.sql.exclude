USE ZSM_Photos
GO

CREATE	TABLE	sewadars_actual_photos
(
	sewadar_id			INTEGER		NOT NULL	CONSTRAINT	SewadarsActualPhotos_PK_SewadarID
													PRIMARY KEY	NONCLUSTERED,
	sewadar_photo		IMAGE		NOT NULL,
	photo_dt			DATETIME	NOT NULL	CONSTRAINT	SewadarsActualPhotos_CK_PhotoDt
														CHECK	(	photo_dt <= GETDATE()	)
);
GO

CREATE	TABLE	sewadars_not_found
(
	sewadar_grno		CHAR(6)		NOT NULL,
	upload_dtm			DATETIME	NOT NULL	Default GetDate()
);
GO

CREATE	TABLE	sewadars_already_exist
(
	sewadar_id			INTEGER		NOT NULL,
	sewadar_grno		CHAR(6)		NOT NULL,
	upload_dtm			DATETIME	NOT NULL	Default GetDate()
);
GO

IF EXISTS	(	SELECT	name	FROM sysobjects
				WHERE	name = 'InsertPhoto' AND xtype IN ('P')
			)
BEGIN
		DROP	PROCEDURE	InsertPhoto
END
GO
CREATE	PROCEDURE	InsertPhoto
	(
		@p_person_id			CHAR(6),
		@p_photo				IMAGE,
		@p_photo_dt				DATETIME = NULL
	)

WITH ENCRYPTION
AS
	DECLARE
		@system_id	INTEGER;

BEGIN

	IF EXISTS	(	SELECT	TOP 1 1
					FROM	zsm..tmp_mgr_sms_sewadar_system_record r
					JOIN 	zsm..sewadars	s ON s.sewadar_id = r.system_id
					WHERE	r.sewadar_id	= @p_person_id
				)
		BEGIN
			SELECT	@system_id	=	r.system_id
			FROM	sewadars_actual_photos 	p
			JOIN	zsm..tmp_mgr_sms_sewadar_system_record r ON r.system_id = p.sewadar_id
			WHERE	r.sewadar_id	= @p_person_id;
			IF (@@ROWCOUNT > 0)
				INSERT INTO	sewadars_already_exist
						(sewadar_id, sewadar_grno)
					VALUES	
						(@system_id, @p_person_id);
			ELSE
				--	The person does not have a photo earlier, insert a fresh record
				BEGIN
					INSERT	INTO	sewadars_actual_photos (sewadar_id, sewadar_photo, photo_dt)	
						SELECT system_id, @p_photo, COALESCE (@p_photo_dt, GETDATE () )
						FROM zsm..tmp_mgr_sms_sewadar_system_record
						WHERE sewadar_id = @p_person_id
				END
		END
	ELSE
		INSERT INTO	sewadars_not_found (sewadar_grno) VALUES	(@p_person_id);
END

GO
-- =============================================================================

-- =============================================================================
-- Function	UpdatePhoto	(person_id, photo, photo_dt)
-- =============================================================================
IF EXISTS	(	SELECT	name	FROM sysobjects
				WHERE	name = 'UpdatePhoto' AND xtype IN ('P')
			)
BEGIN
		DROP	PROCEDURE	UpdatePhoto
END
GO
CREATE	PROCEDURE	UpdatePhoto
	(
		@p_person_id			CHAR(6),
		@p_photo				IMAGE,
		@p_photo_dt				DATETIME = NULL
	)

WITH ENCRYPTION
AS

BEGIN

	IF EXISTS	(	SELECT	TOP 1 1
					FROM	zsm..tmp_mgr_sms_sewadar_system_record r
					JOIN 	zsm..sewadars	s ON s.sewadar_id = r.system_id
					WHERE	r.sewadar_id	= @p_person_id
				)
		BEGIN

			IF EXISTS	(	SELECT	TOP 1 1
							FROM	sewadars_actual_photos 	p
							JOIN	zsm..tmp_mgr_sms_sewadar_system_record r ON r.system_id = p.sewadar_id
							WHERE	r.sewadar_id	= @p_person_id
						)
				--	The person already has a photo (record), update the photo
				BEGIN
					UPDATE	p
						SET	sewadar_photo	= @p_photo,
							photo_dt		= COALESCE (@p_photo_dt, GETDATE () )
					FROM 	sewadars_actual_photos p
					JOIN 	zsm..tmp_mgr_sms_sewadar_system_record r ON r.system_id = p.sewadar_id
					WHERE	r.sewadar_id	= @p_person_id
				END
			ELSE
				--	The person does not have a photo earlier, return an error
				BEGIN
					EXEC SysAdmin..RaiseErrorMessage 'NotExist', 'Person Photo', NULL, NULL, NULL 
					RETURN
				END
		END
	ELSE
		BEGIN
			EXEC SysAdmin..RaiseErrorMessage 'NotExist', 'Person', NULL, NULL, NULL 
			RETURN
		END

END

