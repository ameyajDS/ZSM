Attribute VB_Name = "modADLObjects"
'##############################################################################
'##############################ADL GENERATED CODE##############################
'##############################################################################
'------------------------------------------------------------------------------
' Summary: This is an auto generated module, using project wizard. This module
' has core object declarations and definitions. Programmer should not modify
' this code. This module has only one method initializeADLObjects() which should
' be called by the programmer at the very first line of his code, i.e. the first
' line of the main method of the modMain.bas module, which is also auto
' generated by project wizard. Once the method initializeADLObjects() is called
' from the main method of the project the following objects are created with
' public scope in the project, i.e. these objects will be available to the
' programmer in his/her vb project.
' 1. An object of clsUIManager class, named as "uiManager"
' 2. An object of frmMDIMain form, named as "mdiMain"
' 3. An object of clsUtils class, named as "utils"
' 4. An object of clsLookupManager class, named by "lookupManager"
' 5. An object of clsDatabaseManager class, named by "dbManager"
' 6. An object of clsApplicationContext class, available as a proeprty of
' uiManager object available as uiManager.ApplicationContext
' 7. An object of clsLogger class, named by logger.
' 8. An object of clsErrorManager class, named by errorManager
'------------------------------------------------------------------------------
Option Explicit
Public uiManager                As clsUIManager
Public mdiMain                  As frmMDIMain
Public utils                    As clsUtils
Public lookupManager            As clsLookUpManager
Public dbManager                As clsDatabaseManager
Public logger                   As clsLogger
Public errorManager             As clsErrorManager
Declare Sub Sleep Lib "kernel32" (ByVal dwMilliseconds As Long)

'------------------------------------------------------------------------------
' Summary: This method initializes the ADL objects. The declaration, as public,
' of these objects is done in the general section of this module, where as they
' are defined(instantiated) here in this method
'------------------------------------------------------------------------------
Public Sub initializeADLObjects()
    On Error GoTo errortag
    
    'First create the instance of clsUtils class
    Set utils = New clsUtils
'    #If dev Then
'        MsgBox "Utils Created"
'    #End If
    
    Dim commandLineArguments As String
    commandLineArguments = Command()
    
'    #If dev Then
'        MsgBox "command line arguments read"
'    #End If
    
    'get the session id from command line arguments, assuming arguments are correct
    Dim tokens() As String
    tokens = utils.getTokens(commandLineArguments, "|")
    
    Dim sessionID  As String
    sessionID = tokens(14)
    
'    #If dev Then
'        MsgBox "session ID = " & sessionID
'    #End If
    
    'set the logger
     Set logger = New clsLogger
    logger.setLoggingLevel logLevels.PLAIN_LOG

'    #If dev Then
'        MsgBox "Logger created and log level set to plain"
'    #End If
    
     'set the log file, it should be in the Log folder and the file will be
    'exeName_sessionID.log
    logger.setLoggingFile App.Path & "\..\Log\" & App.EXEName & "_" & sessionID & ".log"
    logger.logCommentedMessage "Logging started"
    logger.logCommentedMessage commandLineArguments
    
    'Show the splash screen
    'frmSplash.cmdClose.Visible = False
    frmSplash.Show
    frmSplash.Refresh
    
    'First create the instance of clsUIManager
    Set uiManager = New clsUIManager
    
    'set the logger of the ADL
    uiManager.setLogger logger
    
    'set the uimanager to logger
    logger.setUIManager uiManager
    
    'Now pass the command line argument string to the UIManager. Programmer can refer
    'these by calling the getArgument() method of the uiManager. This method takes one
    'parameter which is the key of the argument you want to get. The valid keys are defined
    'in uiManager.
    Dim commandLineArgs         As String
    commandLineArgs = commandLineArguments
    
    'create the MDI Main form
    Set mdiMain = New frmMDIMain
    logger.logCommentedMessage "mdi main created"
    
    'Now register the MDI Main form with the uiManager object
    uiManager.registerMDIMainForm mdiMain
    uiManager.setApplicationContext Command()
    
    Set errorManager = uiManager.getErrorManager
    
    logger.logCommentedMessage "Application context set"
    
    'Now register the splash form with the uiManager
    uiManager.registerSplashForm frmSplash
    
    'Now create the instance of clsLookupManager class
    Set lookupManager = New clsLookUpManager
    logger.logCommentedMessage "look up manager installed"
    
    'Now create the instance of clsDatabaseManager
    Set dbManager = New clsDatabaseManager
    logger.logCommentedMessage "dbManager created"
    
    'Now from the properties exposed by uiManager.applicationContext,
    'set the connection parameters of the dbManager, and lookupManager
    dbManager.openConnection uiManager.ApplicationContext.ARG_SERVER_NAME, _
        uiManager.ApplicationContext.ARG_DATABASE_NAME, _
        uiManager.ApplicationContext.ARG_USER_ROLE_ID, _
        uiManager.ApplicationContext.ARG_USER_ROLE_IDENTITY
    logger.logCommentedMessage "connection with " & uiManager.ApplicationContext.ARG_SERVER_NAME & ":" & _
            uiManager.ApplicationContext.ARG_DATABASE_NAME & " established"
    'Now register the databaseManager with UIManager
    uiManager.dbManager = dbManager
    
    
    lookupManager.setConnectionParameters _
        uiManager.ApplicationContext.ARG_SERVER_NAME, _
        uiManager.ApplicationContext.ARG_DATABASE_NAME, _
        uiManager.ApplicationContext.ARG_USER_ROLE_ID, _
        uiManager.ApplicationContext.ARG_USER_ROLE_IDENTITY
    logger.logCommentedMessage "lookup manager's connection parameters set"

    'set the application context of the lookup manager
    'this will be used to set the buttons (for new, update and reference modes)
    'on the lookup dialog based upon the user priveleges.
    lookupManager.registerUIManager uiManager
    
    'Register the lookup manager with uiManager
    uiManager.lookupManager = lookupManager
    
    'load the standard messages in errorManager
    errorManager.loadStandardMessages
    
    'Now show the mdiMain form
    mdiMain.Show
    
    'unload the splash screen
    'frmSplash.cmdClose.Visible = True
    Unload frmSplash
    Exit Sub
errortag:
    
    If (Not (uiManager Is Nothing)) Then
        MsgBox "Error in initializing ADL Objects" & Chr$(13) & vbNewLine & Err.Description & vbNewLine & "Package ID is : " & uiManager.ApplicationContext.ARG_PACKAGE_ID, , "ERROR"
        If (Not (dbManager Is Nothing)) Then
            If (dbManager.connection.Errors.Count = 0) Then
                uiManager.closeSession
            End If
        End If
    Else
        MsgBox "Error in initializing ADL Objects" & Chr$(13) & vbNewLine & Err.Description, , "ERROR"
    End If
    
    End
End Sub











