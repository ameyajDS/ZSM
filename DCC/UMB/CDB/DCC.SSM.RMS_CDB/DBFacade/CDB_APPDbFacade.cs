///This code is auto generated by CDF.
///Please don't alter the contents of this file

using System.Collections.Generic;
using System;
using System.Data;
using System.Data.SqlClient;
using DCC.UMB.CDF.DB;
using System.Text;
namespace DCC.DBFacade
{
	public class CDB_AppDbFacade
	{
		private List<string> dbTasks = new List<string>();
		public IDbManager ObjDBManager = null;
		public DCCSqlDataReader ExecuteSelectQuery(SQLSelectQuery sqlSelectQuery){return ObjDBManager.ExecuteReaderSQL(sqlSelectQuery.GetSQLSelectQuery());}
		public void BeginTrans() { ObjDBManager.BeginTrans(); }
		public void CommitTrans() { ObjDBManager.CommitTrans(); }
		public void RollbackTrans() { ObjDBManager.RollbackTrans(); }
		public void AddDbTask(string task){this.dbTasks.Add(task);}
		public void AddDbTasks(List<string> tasks) { this.dbTasks.AddRange(tasks); }
		public void ClearDbTasks(){this.dbTasks.Clear();}
		public CDB_AppDbFacade(string applicationID) { this.ObjDBManager = DCC.UMB.CDF.Utils.UtilityManager.CreateDBManagerInstance(applicationID); }
		public DataSet ExecuteDbTasks()
		{
			StringBuilder sb = new StringBuilder();
			if (this.dbTasks.Count == 0) { this.AddDbTask("select 'No tasks were defined'"); }
			foreach(string task in this.dbTasks)
			{
				sb.Append(task + ";");
				sb.AppendLine();
				sb.AppendLine();
			}
			return ObjDBManager.ExecuteSQL(sb.ToString());
		}
		
public DataSet CDBAuditLogOperation(System.Int32? p_session_id, 
		                                        System.String p_application_id, 
		                                        System.Int32? p_user_no, 
		                                        System.String p_user_role_id, 
		                                        System.String p_operation, 
		                                        System.String p_screen_id, 
		                                        System.String p_object_id, 
		                                        System.Int16? qualification_id)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter p_session_id_Parameter = ObjDBManager.CreateSqlParameter("p_session_id", p_session_id, SqlDbType.Int, ParameterDirection.Input);
			sqlParameters.Add(p_session_id_Parameter);
			SqlParameter p_application_id_Parameter = ObjDBManager.CreateSqlParameter("p_application_id", p_application_id, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_application_id_Parameter);
			SqlParameter p_user_no_Parameter = ObjDBManager.CreateSqlParameter("p_user_no", p_user_no, SqlDbType.Int, ParameterDirection.Input);
			sqlParameters.Add(p_user_no_Parameter);
			SqlParameter p_user_role_id_Parameter = ObjDBManager.CreateSqlParameter("p_user_role_id", p_user_role_id, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_user_role_id_Parameter);
			SqlParameter p_operation_Parameter = ObjDBManager.CreateSqlParameter("p_operation", p_operation, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_operation_Parameter);
			SqlParameter p_screen_id_Parameter = ObjDBManager.CreateSqlParameter("p_screen_id", p_screen_id, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_screen_id_Parameter);
			SqlParameter p_object_id_Parameter = ObjDBManager.CreateSqlParameter("p_object_id", p_object_id, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_object_id_Parameter);
			SqlParameter qualification_id_Parameter = ObjDBManager.CreateSqlParameter("qualification_id", qualification_id, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(qualification_id_Parameter);
			DataSet dset = ObjDBManager.ExecuteStoredProc("CDBAuditLogOperation", sqlParameters);

			return dset;
		}
		
public string CDBAuditLogOperationAsTask(System.Int32? p_session_id, 
		                                            System.String p_application_id, 
		                                            System.Int32? p_user_no, 
		                                            System.String p_user_role_id, 
		                                            System.String p_operation, 
		                                            System.String p_screen_id, 
		                                            System.String p_object_id, 
		                                            System.Int16? qualification_id)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter p_session_id_Parameter = ObjDBManager.CreateSqlParameter("p_session_id", p_session_id, SqlDbType.Int, ParameterDirection.Input);
			sqlParameters.Add(p_session_id_Parameter);
			SqlParameter p_application_id_Parameter = ObjDBManager.CreateSqlParameter("p_application_id", p_application_id, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_application_id_Parameter);
			SqlParameter p_user_no_Parameter = ObjDBManager.CreateSqlParameter("p_user_no", p_user_no, SqlDbType.Int, ParameterDirection.Input);
			sqlParameters.Add(p_user_no_Parameter);
			SqlParameter p_user_role_id_Parameter = ObjDBManager.CreateSqlParameter("p_user_role_id", p_user_role_id, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_user_role_id_Parameter);
			SqlParameter p_operation_Parameter = ObjDBManager.CreateSqlParameter("p_operation", p_operation, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_operation_Parameter);
			SqlParameter p_screen_id_Parameter = ObjDBManager.CreateSqlParameter("p_screen_id", p_screen_id, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_screen_id_Parameter);
			SqlParameter p_object_id_Parameter = ObjDBManager.CreateSqlParameter("p_object_id", p_object_id, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_object_id_Parameter);
			SqlParameter qualification_id_Parameter = ObjDBManager.CreateSqlParameter("qualification_id", qualification_id, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(qualification_id_Parameter);
			string taskString = ObjDBManager.GetPrintableSQLString("CDBAuditLogOperation", sqlParameters);

			return taskString;
		}
		
		
		
public DataSet Del_epabx_extensions_WU(System.Int16? in_working_unit_id, 
		                                            System.String in_epabx_extension)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter in_working_unit_id_Parameter = ObjDBManager.CreateSqlParameter("in_working_unit_id", in_working_unit_id, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(in_working_unit_id_Parameter);
			SqlParameter in_epabx_extension_Parameter = ObjDBManager.CreateSqlParameter("in_epabx_extension", in_epabx_extension, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(in_epabx_extension_Parameter);
			DataSet dset = ObjDBManager.ExecuteStoredProc("Del_epabx_extensions_WU", sqlParameters);

			return dset;
		}
		
public string Del_epabx_extensions_WUAsTask(System.Int16? in_working_unit_id, 
		                                                System.String in_epabx_extension)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter in_working_unit_id_Parameter = ObjDBManager.CreateSqlParameter("in_working_unit_id", in_working_unit_id, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(in_working_unit_id_Parameter);
			SqlParameter in_epabx_extension_Parameter = ObjDBManager.CreateSqlParameter("in_epabx_extension", in_epabx_extension, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(in_epabx_extension_Parameter);
			string taskString = ObjDBManager.GetPrintableSQLString("Del_epabx_extensions_WU", sqlParameters);

			return taskString;
		}
		
		
		
public DataSet Del_fax_lines_WU(System.Int16? in_working_unit_id, 
		                                    System.String in_fax_line)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter in_working_unit_id_Parameter = ObjDBManager.CreateSqlParameter("in_working_unit_id", in_working_unit_id, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(in_working_unit_id_Parameter);
			SqlParameter in_fax_line_Parameter = ObjDBManager.CreateSqlParameter("in_fax_line", in_fax_line, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(in_fax_line_Parameter);
			DataSet dset = ObjDBManager.ExecuteStoredProc("Del_fax_lines_WU", sqlParameters);

			return dset;
		}
		
public string Del_fax_lines_WUAsTask(System.Int16? in_working_unit_id, 
		                                        System.String in_fax_line)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter in_working_unit_id_Parameter = ObjDBManager.CreateSqlParameter("in_working_unit_id", in_working_unit_id, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(in_working_unit_id_Parameter);
			SqlParameter in_fax_line_Parameter = ObjDBManager.CreateSqlParameter("in_fax_line", in_fax_line, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(in_fax_line_Parameter);
			string taskString = ObjDBManager.GetPrintableSQLString("Del_fax_lines_WU", sqlParameters);

			return taskString;
		}
		
		
		
public DataSet Del_p_and_t_lines_WU(System.Int16? in_working_unit_id, 
		                                        System.String in_p_and_t_line)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter in_working_unit_id_Parameter = ObjDBManager.CreateSqlParameter("in_working_unit_id", in_working_unit_id, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(in_working_unit_id_Parameter);
			SqlParameter in_p_and_t_line_Parameter = ObjDBManager.CreateSqlParameter("in_p_and_t_line", in_p_and_t_line, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(in_p_and_t_line_Parameter);
			DataSet dset = ObjDBManager.ExecuteStoredProc("Del_p_and_t_lines_WU", sqlParameters);

			return dset;
		}
		
public string Del_p_and_t_lines_WUAsTask(System.Int16? in_working_unit_id, 
		                                            System.String in_p_and_t_line)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter in_working_unit_id_Parameter = ObjDBManager.CreateSqlParameter("in_working_unit_id", in_working_unit_id, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(in_working_unit_id_Parameter);
			SqlParameter in_p_and_t_line_Parameter = ObjDBManager.CreateSqlParameter("in_p_and_t_line", in_p_and_t_line, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(in_p_and_t_line_Parameter);
			string taskString = ObjDBManager.GetPrintableSQLString("Del_p_and_t_lines_WU", sqlParameters);

			return taskString;
		}
		
		
		
public DataSet DelAssistant_Services(System.Int16? assistant_service_id)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter assistant_service_id_Parameter = ObjDBManager.CreateSqlParameter("assistant_service_id", assistant_service_id, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(assistant_service_id_Parameter);
			DataSet dset = ObjDBManager.ExecuteStoredProc("DelAssistant_Services", sqlParameters);

			return dset;
		}
		
public string DelAssistant_ServicesAsTask(System.Int16? assistant_service_id)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter assistant_service_id_Parameter = ObjDBManager.CreateSqlParameter("assistant_service_id", assistant_service_id, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(assistant_service_id_Parameter);
			string taskString = ObjDBManager.GetPrintableSQLString("DelAssistant_Services", sqlParameters);

			return taskString;
		}
		
		
		
public DataSet DelCameras(System.Int16? p_cameraID, 
		                                System.Int64? p_txn_ts)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter p_cameraID_Parameter = ObjDBManager.CreateSqlParameter("p_cameraID", p_cameraID, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(p_cameraID_Parameter);
			SqlParameter p_txn_ts_Parameter = ObjDBManager.CreateSqlParameter("p_txn_ts", p_txn_ts, SqlDbType.BigInt, ParameterDirection.Input);
			sqlParameters.Add(p_txn_ts_Parameter);
			DataSet dset = ObjDBManager.ExecuteStoredProc("DelCameras", sqlParameters);

			return dset;
		}
		
public string DelCamerasAsTask(System.Int16? p_cameraID, 
		                                    System.Int64? p_txn_ts)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter p_cameraID_Parameter = ObjDBManager.CreateSqlParameter("p_cameraID", p_cameraID, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(p_cameraID_Parameter);
			SqlParameter p_txn_ts_Parameter = ObjDBManager.CreateSqlParameter("p_txn_ts", p_txn_ts, SqlDbType.BigInt, ParameterDirection.Input);
			sqlParameters.Add(p_txn_ts_Parameter);
			string taskString = ObjDBManager.GetPrintableSQLString("DelCameras", sqlParameters);

			return taskString;
		}
		
		
		
public DataSet DelCountries(System.Int16? p_countryID, 
		                                System.Int64? p_txn_ts)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter p_countryID_Parameter = ObjDBManager.CreateSqlParameter("p_countryID", p_countryID, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(p_countryID_Parameter);
			SqlParameter p_txn_ts_Parameter = ObjDBManager.CreateSqlParameter("p_txn_ts", p_txn_ts, SqlDbType.BigInt, ParameterDirection.Input);
			sqlParameters.Add(p_txn_ts_Parameter);
			DataSet dset = ObjDBManager.ExecuteStoredProc("DelCountries", sqlParameters);

			return dset;
		}
		
public string DelCountriesAsTask(System.Int16? p_countryID, 
		                                    System.Int64? p_txn_ts)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter p_countryID_Parameter = ObjDBManager.CreateSqlParameter("p_countryID", p_countryID, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(p_countryID_Parameter);
			SqlParameter p_txn_ts_Parameter = ObjDBManager.CreateSqlParameter("p_txn_ts", p_txn_ts, SqlDbType.BigInt, ParameterDirection.Input);
			sqlParameters.Add(p_txn_ts_Parameter);
			string taskString = ObjDBManager.GetPrintableSQLString("DelCountries", sqlParameters);

			return taskString;
		}
		
		
		
public DataSet DelDepartments(System.Int16? p_departmentID, 
		                                    System.Int64? p_txn_ts)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter p_departmentID_Parameter = ObjDBManager.CreateSqlParameter("p_departmentID", p_departmentID, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(p_departmentID_Parameter);
			SqlParameter p_txn_ts_Parameter = ObjDBManager.CreateSqlParameter("p_txn_ts", p_txn_ts, SqlDbType.BigInt, ParameterDirection.Input);
			sqlParameters.Add(p_txn_ts_Parameter);
			DataSet dset = ObjDBManager.ExecuteStoredProc("DelDepartments", sqlParameters);

			return dset;
		}
		
public string DelDepartmentsAsTask(System.Int16? p_departmentID, 
		                                        System.Int64? p_txn_ts)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter p_departmentID_Parameter = ObjDBManager.CreateSqlParameter("p_departmentID", p_departmentID, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(p_departmentID_Parameter);
			SqlParameter p_txn_ts_Parameter = ObjDBManager.CreateSqlParameter("p_txn_ts", p_txn_ts, SqlDbType.BigInt, ParameterDirection.Input);
			sqlParameters.Add(p_txn_ts_Parameter);
			string taskString = ObjDBManager.GetPrintableSQLString("DelDepartments", sqlParameters);

			return taskString;
		}
		
		
		
public DataSet DelDeptGroups(System.Int16? p_deptGroupID, 
		                                System.Int64? p_txn_ts)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter p_deptGroupID_Parameter = ObjDBManager.CreateSqlParameter("p_deptGroupID", p_deptGroupID, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(p_deptGroupID_Parameter);
			SqlParameter p_txn_ts_Parameter = ObjDBManager.CreateSqlParameter("p_txn_ts", p_txn_ts, SqlDbType.BigInt, ParameterDirection.Input);
			sqlParameters.Add(p_txn_ts_Parameter);
			DataSet dset = ObjDBManager.ExecuteStoredProc("DelDeptGroups", sqlParameters);

			return dset;
		}
		
public string DelDeptGroupsAsTask(System.Int16? p_deptGroupID, 
		                                        System.Int64? p_txn_ts)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter p_deptGroupID_Parameter = ObjDBManager.CreateSqlParameter("p_deptGroupID", p_deptGroupID, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(p_deptGroupID_Parameter);
			SqlParameter p_txn_ts_Parameter = ObjDBManager.CreateSqlParameter("p_txn_ts", p_txn_ts, SqlDbType.BigInt, ParameterDirection.Input);
			sqlParameters.Add(p_txn_ts_Parameter);
			string taskString = ObjDBManager.GetPrintableSQLString("DelDeptGroups", sqlParameters);

			return taskString;
		}
		
		
		
public DataSet DelDeptPersons(System.Int32? p_personID, 
		                                    System.Int16? p_departmentID, 
		                                    System.Int16? p_designationID, 
		                                    System.DateTime? p_effectiveFrom)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter p_personID_Parameter = ObjDBManager.CreateSqlParameter("p_personID", p_personID, SqlDbType.Int, ParameterDirection.Input);
			sqlParameters.Add(p_personID_Parameter);
			SqlParameter p_departmentID_Parameter = ObjDBManager.CreateSqlParameter("p_departmentID", p_departmentID, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(p_departmentID_Parameter);
			SqlParameter p_designationID_Parameter = ObjDBManager.CreateSqlParameter("p_designationID", p_designationID, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(p_designationID_Parameter);
			SqlParameter p_effectiveFrom_Parameter = ObjDBManager.CreateSqlParameter("p_effectiveFrom", p_effectiveFrom, SqlDbType.DateTime, ParameterDirection.Input);
			sqlParameters.Add(p_effectiveFrom_Parameter);
			DataSet dset = ObjDBManager.ExecuteStoredProc("DelDeptPersons", sqlParameters);

			return dset;
		}
		
public string DelDeptPersonsAsTask(System.Int32? p_personID, 
		                                        System.Int16? p_departmentID, 
		                                        System.Int16? p_designationID, 
		                                        System.DateTime? p_effectiveFrom)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter p_personID_Parameter = ObjDBManager.CreateSqlParameter("p_personID", p_personID, SqlDbType.Int, ParameterDirection.Input);
			sqlParameters.Add(p_personID_Parameter);
			SqlParameter p_departmentID_Parameter = ObjDBManager.CreateSqlParameter("p_departmentID", p_departmentID, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(p_departmentID_Parameter);
			SqlParameter p_designationID_Parameter = ObjDBManager.CreateSqlParameter("p_designationID", p_designationID, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(p_designationID_Parameter);
			SqlParameter p_effectiveFrom_Parameter = ObjDBManager.CreateSqlParameter("p_effectiveFrom", p_effectiveFrom, SqlDbType.DateTime, ParameterDirection.Input);
			sqlParameters.Add(p_effectiveFrom_Parameter);
			string taskString = ObjDBManager.GetPrintableSQLString("DelDeptPersons", sqlParameters);

			return taskString;
		}
		
		
		
public DataSet DelDeptPTLines(System.Int16? p_departmentID, 
		                                    System.String p_PTLine)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter p_departmentID_Parameter = ObjDBManager.CreateSqlParameter("p_departmentID", p_departmentID, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(p_departmentID_Parameter);
			SqlParameter p_PTLine_Parameter = ObjDBManager.CreateSqlParameter("p_PTLine", p_PTLine, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_PTLine_Parameter);
			DataSet dset = ObjDBManager.ExecuteStoredProc("DelDeptPTLines", sqlParameters);

			return dset;
		}
		
public string DelDeptPTLinesAsTask(System.Int16? p_departmentID, 
		                                        System.String p_PTLine)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter p_departmentID_Parameter = ObjDBManager.CreateSqlParameter("p_departmentID", p_departmentID, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(p_departmentID_Parameter);
			SqlParameter p_PTLine_Parameter = ObjDBManager.CreateSqlParameter("p_PTLine", p_PTLine, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_PTLine_Parameter);
			string taskString = ObjDBManager.GetPrintableSQLString("DelDeptPTLines", sqlParameters);

			return taskString;
		}
		
		
		
public DataSet DelDesignations(System.Int16? p_designationID, 
		                                    System.Int64? p_txn_ts)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter p_designationID_Parameter = ObjDBManager.CreateSqlParameter("p_designationID", p_designationID, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(p_designationID_Parameter);
			SqlParameter p_txn_ts_Parameter = ObjDBManager.CreateSqlParameter("p_txn_ts", p_txn_ts, SqlDbType.BigInt, ParameterDirection.Input);
			sqlParameters.Add(p_txn_ts_Parameter);
			DataSet dset = ObjDBManager.ExecuteStoredProc("DelDesignations", sqlParameters);

			return dset;
		}
		
public string DelDesignationsAsTask(System.Int16? p_designationID, 
		                                        System.Int64? p_txn_ts)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter p_designationID_Parameter = ObjDBManager.CreateSqlParameter("p_designationID", p_designationID, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(p_designationID_Parameter);
			SqlParameter p_txn_ts_Parameter = ObjDBManager.CreateSqlParameter("p_txn_ts", p_txn_ts, SqlDbType.BigInt, ParameterDirection.Input);
			sqlParameters.Add(p_txn_ts_Parameter);
			string taskString = ObjDBManager.GetPrintableSQLString("DelDesignations", sqlParameters);

			return taskString;
		}
		
		
		
public DataSet DelDistrictsOrCities(System.Int32? p_distCityID, 
		                                        System.Int64? p_txn_ts)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter p_distCityID_Parameter = ObjDBManager.CreateSqlParameter("p_distCityID", p_distCityID, SqlDbType.Int, ParameterDirection.Input);
			sqlParameters.Add(p_distCityID_Parameter);
			SqlParameter p_txn_ts_Parameter = ObjDBManager.CreateSqlParameter("p_txn_ts", p_txn_ts, SqlDbType.BigInt, ParameterDirection.Input);
			sqlParameters.Add(p_txn_ts_Parameter);
			DataSet dset = ObjDBManager.ExecuteStoredProc("DelDistrictsOrCities", sqlParameters);

			return dset;
		}
		
public string DelDistrictsOrCitiesAsTask(System.Int32? p_distCityID, 
		                                            System.Int64? p_txn_ts)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter p_distCityID_Parameter = ObjDBManager.CreateSqlParameter("p_distCityID", p_distCityID, SqlDbType.Int, ParameterDirection.Input);
			sqlParameters.Add(p_distCityID_Parameter);
			SqlParameter p_txn_ts_Parameter = ObjDBManager.CreateSqlParameter("p_txn_ts", p_txn_ts, SqlDbType.BigInt, ParameterDirection.Input);
			sqlParameters.Add(p_txn_ts_Parameter);
			string taskString = ObjDBManager.GetPrintableSQLString("DelDistrictsOrCities", sqlParameters);

			return taskString;
		}
		
		
		
public DataSet DelEPABXExtensions(System.Int16? p_departmentID, 
		                                        System.String p_EPABXExt)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter p_departmentID_Parameter = ObjDBManager.CreateSqlParameter("p_departmentID", p_departmentID, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(p_departmentID_Parameter);
			SqlParameter p_EPABXExt_Parameter = ObjDBManager.CreateSqlParameter("p_EPABXExt", p_EPABXExt, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_EPABXExt_Parameter);
			DataSet dset = ObjDBManager.ExecuteStoredProc("DelEPABXExtensions", sqlParameters);

			return dset;
		}
		
public string DelEPABXExtensionsAsTask(System.Int16? p_departmentID, 
		                                            System.String p_EPABXExt)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter p_departmentID_Parameter = ObjDBManager.CreateSqlParameter("p_departmentID", p_departmentID, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(p_departmentID_Parameter);
			SqlParameter p_EPABXExt_Parameter = ObjDBManager.CreateSqlParameter("p_EPABXExt", p_EPABXExt, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_EPABXExt_Parameter);
			string taskString = ObjDBManager.GetPrintableSQLString("DelEPABXExtensions", sqlParameters);

			return taskString;
		}
		
		
		
public DataSet DelEpabxLines(System.String p_EpabxNo, 
		                                System.Int64? p_txn_ts)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter p_EpabxNo_Parameter = ObjDBManager.CreateSqlParameter("p_EpabxNo", p_EpabxNo, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_EpabxNo_Parameter);
			SqlParameter p_txn_ts_Parameter = ObjDBManager.CreateSqlParameter("p_txn_ts", p_txn_ts, SqlDbType.BigInt, ParameterDirection.Input);
			sqlParameters.Add(p_txn_ts_Parameter);
			DataSet dset = ObjDBManager.ExecuteStoredProc("DelEpabxLines", sqlParameters);

			return dset;
		}
		
public string DelEpabxLinesAsTask(System.String p_EpabxNo, 
		                                        System.Int64? p_txn_ts)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter p_EpabxNo_Parameter = ObjDBManager.CreateSqlParameter("p_EpabxNo", p_EpabxNo, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_EpabxNo_Parameter);
			SqlParameter p_txn_ts_Parameter = ObjDBManager.CreateSqlParameter("p_txn_ts", p_txn_ts, SqlDbType.BigInt, ParameterDirection.Input);
			sqlParameters.Add(p_txn_ts_Parameter);
			string taskString = ObjDBManager.GetPrintableSQLString("DelEpabxLines", sqlParameters);

			return taskString;
		}
		
		
		
public DataSet DelInitiationPlace(System.Int16? p_place_id, 
		                                        System.Int64? p_txn_ts)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter p_place_id_Parameter = ObjDBManager.CreateSqlParameter("p_place_id", p_place_id, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(p_place_id_Parameter);
			SqlParameter p_txn_ts_Parameter = ObjDBManager.CreateSqlParameter("p_txn_ts", p_txn_ts, SqlDbType.BigInt, ParameterDirection.Input);
			sqlParameters.Add(p_txn_ts_Parameter);
			DataSet dset = ObjDBManager.ExecuteStoredProc("DelInitiationPlace", sqlParameters);

			return dset;
		}
		
public string DelInitiationPlaceAsTask(System.Int16? p_place_id, 
		                                            System.Int64? p_txn_ts)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter p_place_id_Parameter = ObjDBManager.CreateSqlParameter("p_place_id", p_place_id, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(p_place_id_Parameter);
			SqlParameter p_txn_ts_Parameter = ObjDBManager.CreateSqlParameter("p_txn_ts", p_txn_ts, SqlDbType.BigInt, ParameterDirection.Input);
			sqlParameters.Add(p_txn_ts_Parameter);
			string taskString = ObjDBManager.GetPrintableSQLString("DelInitiationPlace", sqlParameters);

			return taskString;
		}
		
		
		
public DataSet DelLanguages(System.Int32? p_language_id, 
		                                System.Int64? p_txn_ts)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter p_language_id_Parameter = ObjDBManager.CreateSqlParameter("p_language_id", p_language_id, SqlDbType.Int, ParameterDirection.Input);
			sqlParameters.Add(p_language_id_Parameter);
			SqlParameter p_txn_ts_Parameter = ObjDBManager.CreateSqlParameter("p_txn_ts", p_txn_ts, SqlDbType.BigInt, ParameterDirection.Input);
			sqlParameters.Add(p_txn_ts_Parameter);
			DataSet dset = ObjDBManager.ExecuteStoredProc("DelLanguages", sqlParameters);

			return dset;
		}
		
public string DelLanguagesAsTask(System.Int32? p_language_id, 
		                                    System.Int64? p_txn_ts)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter p_language_id_Parameter = ObjDBManager.CreateSqlParameter("p_language_id", p_language_id, SqlDbType.Int, ParameterDirection.Input);
			sqlParameters.Add(p_language_id_Parameter);
			SqlParameter p_txn_ts_Parameter = ObjDBManager.CreateSqlParameter("p_txn_ts", p_txn_ts, SqlDbType.BigInt, ParameterDirection.Input);
			sqlParameters.Add(p_txn_ts_Parameter);
			string taskString = ObjDBManager.GetPrintableSQLString("DelLanguages", sqlParameters);

			return taskString;
		}
		
		
		
public DataSet DelMeasuringUnits(System.Int16? p_measuring_unit_id, 
		                                    System.Int64? p_txn_ts)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter p_measuring_unit_id_Parameter = ObjDBManager.CreateSqlParameter("p_measuring_unit_id", p_measuring_unit_id, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(p_measuring_unit_id_Parameter);
			SqlParameter p_txn_ts_Parameter = ObjDBManager.CreateSqlParameter("p_txn_ts", p_txn_ts, SqlDbType.BigInt, ParameterDirection.Input);
			sqlParameters.Add(p_txn_ts_Parameter);
			DataSet dset = ObjDBManager.ExecuteStoredProc("DelMeasuringUnits", sqlParameters);

			return dset;
		}
		
public string DelMeasuringUnitsAsTask(System.Int16? p_measuring_unit_id, 
		                                            System.Int64? p_txn_ts)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter p_measuring_unit_id_Parameter = ObjDBManager.CreateSqlParameter("p_measuring_unit_id", p_measuring_unit_id, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(p_measuring_unit_id_Parameter);
			SqlParameter p_txn_ts_Parameter = ObjDBManager.CreateSqlParameter("p_txn_ts", p_txn_ts, SqlDbType.BigInt, ParameterDirection.Input);
			sqlParameters.Add(p_txn_ts_Parameter);
			string taskString = ObjDBManager.GetPrintableSQLString("DelMeasuringUnits", sqlParameters);

			return taskString;
		}
		
		
		
public DataSet DelOccupations(System.Int16? p_occupationID, 
		                                    System.Int64? p_txn_ts)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter p_occupationID_Parameter = ObjDBManager.CreateSqlParameter("p_occupationID", p_occupationID, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(p_occupationID_Parameter);
			SqlParameter p_txn_ts_Parameter = ObjDBManager.CreateSqlParameter("p_txn_ts", p_txn_ts, SqlDbType.BigInt, ParameterDirection.Input);
			sqlParameters.Add(p_txn_ts_Parameter);
			DataSet dset = ObjDBManager.ExecuteStoredProc("DelOccupations", sqlParameters);

			return dset;
		}
		
public string DelOccupationsAsTask(System.Int16? p_occupationID, 
		                                        System.Int64? p_txn_ts)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter p_occupationID_Parameter = ObjDBManager.CreateSqlParameter("p_occupationID", p_occupationID, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(p_occupationID_Parameter);
			SqlParameter p_txn_ts_Parameter = ObjDBManager.CreateSqlParameter("p_txn_ts", p_txn_ts, SqlDbType.BigInt, ParameterDirection.Input);
			sqlParameters.Add(p_txn_ts_Parameter);
			string taskString = ObjDBManager.GetPrintableSQLString("DelOccupations", sqlParameters);

			return taskString;
		}
		
		
		
public DataSet DelParties(System.Int32? p_party_id, 
		                                System.Int64? p_txn_ts, 
		                                System.String p_application_id)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter p_party_id_Parameter = ObjDBManager.CreateSqlParameter("p_party_id", p_party_id, SqlDbType.Int, ParameterDirection.Input);
			sqlParameters.Add(p_party_id_Parameter);
			SqlParameter p_txn_ts_Parameter = ObjDBManager.CreateSqlParameter("p_txn_ts", p_txn_ts, SqlDbType.BigInt, ParameterDirection.Input);
			sqlParameters.Add(p_txn_ts_Parameter);
			SqlParameter p_application_id_Parameter = ObjDBManager.CreateSqlParameter("p_application_id", p_application_id, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_application_id_Parameter);
			DataSet dset = ObjDBManager.ExecuteStoredProc("DelParties", sqlParameters);

			return dset;
		}
		
public string DelPartiesAsTask(System.Int32? p_party_id, 
		                                    System.Int64? p_txn_ts, 
		                                    System.String p_application_id)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter p_party_id_Parameter = ObjDBManager.CreateSqlParameter("p_party_id", p_party_id, SqlDbType.Int, ParameterDirection.Input);
			sqlParameters.Add(p_party_id_Parameter);
			SqlParameter p_txn_ts_Parameter = ObjDBManager.CreateSqlParameter("p_txn_ts", p_txn_ts, SqlDbType.BigInt, ParameterDirection.Input);
			sqlParameters.Add(p_txn_ts_Parameter);
			SqlParameter p_application_id_Parameter = ObjDBManager.CreateSqlParameter("p_application_id", p_application_id, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_application_id_Parameter);
			string taskString = ObjDBManager.GetPrintableSQLString("DelParties", sqlParameters);

			return taskString;
		}
		
		
		
public DataSet DelPartyAddresses(System.Int32? p_party_address_id, 
		                                    System.Int32? p_party_id, 
		                                    System.String p_application_id)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter p_party_address_id_Parameter = ObjDBManager.CreateSqlParameter("p_party_address_id", p_party_address_id, SqlDbType.Int, ParameterDirection.Input);
			sqlParameters.Add(p_party_address_id_Parameter);
			SqlParameter p_party_id_Parameter = ObjDBManager.CreateSqlParameter("p_party_id", p_party_id, SqlDbType.Int, ParameterDirection.Input);
			sqlParameters.Add(p_party_id_Parameter);
			SqlParameter p_application_id_Parameter = ObjDBManager.CreateSqlParameter("p_application_id", p_application_id, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_application_id_Parameter);
			DataSet dset = ObjDBManager.ExecuteStoredProc("DelPartyAddresses", sqlParameters);

			return dset;
		}
		
public string DelPartyAddressesAsTask(System.Int32? p_party_address_id, 
		                                            System.Int32? p_party_id, 
		                                            System.String p_application_id)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter p_party_address_id_Parameter = ObjDBManager.CreateSqlParameter("p_party_address_id", p_party_address_id, SqlDbType.Int, ParameterDirection.Input);
			sqlParameters.Add(p_party_address_id_Parameter);
			SqlParameter p_party_id_Parameter = ObjDBManager.CreateSqlParameter("p_party_id", p_party_id, SqlDbType.Int, ParameterDirection.Input);
			sqlParameters.Add(p_party_id_Parameter);
			SqlParameter p_application_id_Parameter = ObjDBManager.CreateSqlParameter("p_application_id", p_application_id, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_application_id_Parameter);
			string taskString = ObjDBManager.GetPrintableSQLString("DelPartyAddresses", sqlParameters);

			return taskString;
		}
		
		
		
public DataSet DelPartyRoleApplication(System.Int32? p_party_id, 
		                                            System.String p_old_role_cd, 
		                                            System.String p_old_application_id)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter p_party_id_Parameter = ObjDBManager.CreateSqlParameter("p_party_id", p_party_id, SqlDbType.Int, ParameterDirection.Input);
			sqlParameters.Add(p_party_id_Parameter);
			SqlParameter p_old_role_cd_Parameter = ObjDBManager.CreateSqlParameter("p_old_role_cd", p_old_role_cd, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_old_role_cd_Parameter);
			SqlParameter p_old_application_id_Parameter = ObjDBManager.CreateSqlParameter("p_old_application_id", p_old_application_id, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_old_application_id_Parameter);
			DataSet dset = ObjDBManager.ExecuteStoredProc("DelPartyRoleApplication", sqlParameters);

			return dset;
		}
		
public string DelPartyRoleApplicationAsTask(System.Int32? p_party_id, 
		                                                System.String p_old_role_cd, 
		                                                System.String p_old_application_id)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter p_party_id_Parameter = ObjDBManager.CreateSqlParameter("p_party_id", p_party_id, SqlDbType.Int, ParameterDirection.Input);
			sqlParameters.Add(p_party_id_Parameter);
			SqlParameter p_old_role_cd_Parameter = ObjDBManager.CreateSqlParameter("p_old_role_cd", p_old_role_cd, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_old_role_cd_Parameter);
			SqlParameter p_old_application_id_Parameter = ObjDBManager.CreateSqlParameter("p_old_application_id", p_old_application_id, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_old_application_id_Parameter);
			string taskString = ObjDBManager.GetPrintableSQLString("DelPartyRoleApplication", sqlParameters);

			return taskString;
		}
		
		
		
public DataSet DelPartyRoles(System.Int32? p_party_id, 
		                                System.String p_old_role_cd, 
		                                System.String p_application_id)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter p_party_id_Parameter = ObjDBManager.CreateSqlParameter("p_party_id", p_party_id, SqlDbType.Int, ParameterDirection.Input);
			sqlParameters.Add(p_party_id_Parameter);
			SqlParameter p_old_role_cd_Parameter = ObjDBManager.CreateSqlParameter("p_old_role_cd", p_old_role_cd, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_old_role_cd_Parameter);
			SqlParameter p_application_id_Parameter = ObjDBManager.CreateSqlParameter("p_application_id", p_application_id, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_application_id_Parameter);
			DataSet dset = ObjDBManager.ExecuteStoredProc("DelPartyRoles", sqlParameters);

			return dset;
		}
		
public string DelPartyRolesAsTask(System.Int32? p_party_id, 
		                                        System.String p_old_role_cd, 
		                                        System.String p_application_id)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter p_party_id_Parameter = ObjDBManager.CreateSqlParameter("p_party_id", p_party_id, SqlDbType.Int, ParameterDirection.Input);
			sqlParameters.Add(p_party_id_Parameter);
			SqlParameter p_old_role_cd_Parameter = ObjDBManager.CreateSqlParameter("p_old_role_cd", p_old_role_cd, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_old_role_cd_Parameter);
			SqlParameter p_application_id_Parameter = ObjDBManager.CreateSqlParameter("p_application_id", p_application_id, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_application_id_Parameter);
			string taskString = ObjDBManager.GetPrintableSQLString("DelPartyRoles", sqlParameters);

			return taskString;
		}
		
		
		
public DataSet DelPersons(System.Int32? p_personID, 
		                                System.String p_package_id, 
		                                System.String p_screenID, 
		                                System.Int64? p_txn_ts)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter p_personID_Parameter = ObjDBManager.CreateSqlParameter("p_personID", p_personID, SqlDbType.Int, ParameterDirection.Input);
			sqlParameters.Add(p_personID_Parameter);
			SqlParameter p_package_id_Parameter = ObjDBManager.CreateSqlParameter("p_package_id", p_package_id, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_package_id_Parameter);
			SqlParameter p_screenID_Parameter = ObjDBManager.CreateSqlParameter("p_screenID", p_screenID, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_screenID_Parameter);
			SqlParameter p_txn_ts_Parameter = ObjDBManager.CreateSqlParameter("p_txn_ts", p_txn_ts, SqlDbType.BigInt, ParameterDirection.Input);
			sqlParameters.Add(p_txn_ts_Parameter);
			DataSet dset = ObjDBManager.ExecuteStoredProc("DelPersons", sqlParameters);

			return dset;
		}
		
public string DelPersonsAsTask(System.Int32? p_personID, 
		                                    System.String p_package_id, 
		                                    System.String p_screenID, 
		                                    System.Int64? p_txn_ts)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter p_personID_Parameter = ObjDBManager.CreateSqlParameter("p_personID", p_personID, SqlDbType.Int, ParameterDirection.Input);
			sqlParameters.Add(p_personID_Parameter);
			SqlParameter p_package_id_Parameter = ObjDBManager.CreateSqlParameter("p_package_id", p_package_id, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_package_id_Parameter);
			SqlParameter p_screenID_Parameter = ObjDBManager.CreateSqlParameter("p_screenID", p_screenID, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_screenID_Parameter);
			SqlParameter p_txn_ts_Parameter = ObjDBManager.CreateSqlParameter("p_txn_ts", p_txn_ts, SqlDbType.BigInt, ParameterDirection.Input);
			sqlParameters.Add(p_txn_ts_Parameter);
			string taskString = ObjDBManager.GetPrintableSQLString("DelPersons", sqlParameters);

			return taskString;
		}
		
		
		
public DataSet DelPostOffices(System.Int32? p_post_office_ID, 
		                                    System.Int64? p_txn_ts)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter p_post_office_ID_Parameter = ObjDBManager.CreateSqlParameter("p_post_office_ID", p_post_office_ID, SqlDbType.Int, ParameterDirection.Input);
			sqlParameters.Add(p_post_office_ID_Parameter);
			SqlParameter p_txn_ts_Parameter = ObjDBManager.CreateSqlParameter("p_txn_ts", p_txn_ts, SqlDbType.BigInt, ParameterDirection.Input);
			sqlParameters.Add(p_txn_ts_Parameter);
			DataSet dset = ObjDBManager.ExecuteStoredProc("DelPostOffices", sqlParameters);

			return dset;
		}
		
public string DelPostOfficesAsTask(System.Int32? p_post_office_ID, 
		                                        System.Int64? p_txn_ts)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter p_post_office_ID_Parameter = ObjDBManager.CreateSqlParameter("p_post_office_ID", p_post_office_ID, SqlDbType.Int, ParameterDirection.Input);
			sqlParameters.Add(p_post_office_ID_Parameter);
			SqlParameter p_txn_ts_Parameter = ObjDBManager.CreateSqlParameter("p_txn_ts", p_txn_ts, SqlDbType.BigInt, ParameterDirection.Input);
			sqlParameters.Add(p_txn_ts_Parameter);
			string taskString = ObjDBManager.GetPrintableSQLString("DelPostOffices", sqlParameters);

			return taskString;
		}
		
		
		
public DataSet DelPTLines(System.String p_telephoneNo, 
		                                System.Int64? p_txn_ts)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter p_telephoneNo_Parameter = ObjDBManager.CreateSqlParameter("p_telephoneNo", p_telephoneNo, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_telephoneNo_Parameter);
			SqlParameter p_txn_ts_Parameter = ObjDBManager.CreateSqlParameter("p_txn_ts", p_txn_ts, SqlDbType.BigInt, ParameterDirection.Input);
			sqlParameters.Add(p_txn_ts_Parameter);
			DataSet dset = ObjDBManager.ExecuteStoredProc("DelPTLines", sqlParameters);

			return dset;
		}
		
public string DelPTLinesAsTask(System.String p_telephoneNo, 
		                                    System.Int64? p_txn_ts)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter p_telephoneNo_Parameter = ObjDBManager.CreateSqlParameter("p_telephoneNo", p_telephoneNo, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_telephoneNo_Parameter);
			SqlParameter p_txn_ts_Parameter = ObjDBManager.CreateSqlParameter("p_txn_ts", p_txn_ts, SqlDbType.BigInt, ParameterDirection.Input);
			sqlParameters.Add(p_txn_ts_Parameter);
			string taskString = ObjDBManager.GetPrintableSQLString("DelPTLines", sqlParameters);

			return taskString;
		}
		
		
		
public DataSet DelQlfctn_Subjects(System.Int16? qlfctn_subject_id)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter qlfctn_subject_id_Parameter = ObjDBManager.CreateSqlParameter("qlfctn_subject_id", qlfctn_subject_id, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(qlfctn_subject_id_Parameter);
			DataSet dset = ObjDBManager.ExecuteStoredProc("DelQlfctn_Subjects", sqlParameters);

			return dset;
		}
		
public string DelQlfctn_SubjectsAsTask(System.Int16? qlfctn_subject_id)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter qlfctn_subject_id_Parameter = ObjDBManager.CreateSqlParameter("qlfctn_subject_id", qlfctn_subject_id, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(qlfctn_subject_id_Parameter);
			string taskString = ObjDBManager.GetPrintableSQLString("DelQlfctn_Subjects", sqlParameters);

			return taskString;
		}
		
		
		
public DataSet Delqualifications(System.Int16? qualification_ID)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter qualification_ID_Parameter = ObjDBManager.CreateSqlParameter("qualification_ID", qualification_ID, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(qualification_ID_Parameter);
			DataSet dset = ObjDBManager.ExecuteStoredProc("Delqualifications", sqlParameters);

			return dset;
		}
		
public string DelqualificationsAsTask(System.Int16? qualification_ID)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter qualification_ID_Parameter = ObjDBManager.CreateSqlParameter("qualification_ID", qualification_ID, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(qualification_ID_Parameter);
			string taskString = ObjDBManager.GetPrintableSQLString("Delqualifications", sqlParameters);

			return taskString;
		}
		
		
		
public DataSet Delqualifications_qlfctn_subjects(System.Int16? qualification_id, 
		                                                    System.Int16? qlfctn_subject_id)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter qualification_id_Parameter = ObjDBManager.CreateSqlParameter("qualification_id", qualification_id, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(qualification_id_Parameter);
			SqlParameter qlfctn_subject_id_Parameter = ObjDBManager.CreateSqlParameter("qlfctn_subject_id", qlfctn_subject_id, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(qlfctn_subject_id_Parameter);
			DataSet dset = ObjDBManager.ExecuteStoredProc("Delqualifications_qlfctn_subjects", sqlParameters);

			return dset;
		}
		
public string Delqualifications_qlfctn_subjectsAsTask(System.Int16? qualification_id, 
		                                                            System.Int16? qlfctn_subject_id)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter qualification_id_Parameter = ObjDBManager.CreateSqlParameter("qualification_id", qualification_id, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(qualification_id_Parameter);
			SqlParameter qlfctn_subject_id_Parameter = ObjDBManager.CreateSqlParameter("qlfctn_subject_id", qlfctn_subject_id, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(qlfctn_subject_id_Parameter);
			string taskString = ObjDBManager.GetPrintableSQLString("Delqualifications_qlfctn_subjects", sqlParameters);

			return taskString;
		}
		
		
		
public DataSet DelRelations(System.Int16? p_relationID, 
		                                System.Int64? p_txn_ts)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter p_relationID_Parameter = ObjDBManager.CreateSqlParameter("p_relationID", p_relationID, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(p_relationID_Parameter);
			SqlParameter p_txn_ts_Parameter = ObjDBManager.CreateSqlParameter("p_txn_ts", p_txn_ts, SqlDbType.BigInt, ParameterDirection.Input);
			sqlParameters.Add(p_txn_ts_Parameter);
			DataSet dset = ObjDBManager.ExecuteStoredProc("DelRelations", sqlParameters);

			return dset;
		}
		
public string DelRelationsAsTask(System.Int16? p_relationID, 
		                                    System.Int64? p_txn_ts)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter p_relationID_Parameter = ObjDBManager.CreateSqlParameter("p_relationID", p_relationID, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(p_relationID_Parameter);
			SqlParameter p_txn_ts_Parameter = ObjDBManager.CreateSqlParameter("p_txn_ts", p_txn_ts, SqlDbType.BigInt, ParameterDirection.Input);
			sqlParameters.Add(p_txn_ts_Parameter);
			string taskString = ObjDBManager.GetPrintableSQLString("DelRelations", sqlParameters);

			return taskString;
		}
		
		
		
public DataSet DelRepresentatives(System.Int32? p_representativeID, 
		                                        System.Int64? p_txn_ts)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter p_representativeID_Parameter = ObjDBManager.CreateSqlParameter("p_representativeID", p_representativeID, SqlDbType.Int, ParameterDirection.Input);
			sqlParameters.Add(p_representativeID_Parameter);
			SqlParameter p_txn_ts_Parameter = ObjDBManager.CreateSqlParameter("p_txn_ts", p_txn_ts, SqlDbType.BigInt, ParameterDirection.Input);
			sqlParameters.Add(p_txn_ts_Parameter);
			DataSet dset = ObjDBManager.ExecuteStoredProc("DelRepresentatives", sqlParameters);

			return dset;
		}
		
public string DelRepresentativesAsTask(System.Int32? p_representativeID, 
		                                            System.Int64? p_txn_ts)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter p_representativeID_Parameter = ObjDBManager.CreateSqlParameter("p_representativeID", p_representativeID, SqlDbType.Int, ParameterDirection.Input);
			sqlParameters.Add(p_representativeID_Parameter);
			SqlParameter p_txn_ts_Parameter = ObjDBManager.CreateSqlParameter("p_txn_ts", p_txn_ts, SqlDbType.BigInt, ParameterDirection.Input);
			sqlParameters.Add(p_txn_ts_Parameter);
			string taskString = ObjDBManager.GetPrintableSQLString("DelRepresentatives", sqlParameters);

			return taskString;
		}
		
		
		
public DataSet DelRoles(System.String p_role_cd, 
		                            System.Int64? p_txn_ts)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter p_role_cd_Parameter = ObjDBManager.CreateSqlParameter("p_role_cd", p_role_cd, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_role_cd_Parameter);
			SqlParameter p_txn_ts_Parameter = ObjDBManager.CreateSqlParameter("p_txn_ts", p_txn_ts, SqlDbType.BigInt, ParameterDirection.Input);
			sqlParameters.Add(p_txn_ts_Parameter);
			DataSet dset = ObjDBManager.ExecuteStoredProc("DelRoles", sqlParameters);

			return dset;
		}
		
public string DelRolesAsTask(System.String p_role_cd, 
		                                System.Int64? p_txn_ts)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter p_role_cd_Parameter = ObjDBManager.CreateSqlParameter("p_role_cd", p_role_cd, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_role_cd_Parameter);
			SqlParameter p_txn_ts_Parameter = ObjDBManager.CreateSqlParameter("p_txn_ts", p_txn_ts, SqlDbType.BigInt, ParameterDirection.Input);
			sqlParameters.Add(p_txn_ts_Parameter);
			string taskString = ObjDBManager.GetPrintableSQLString("DelRoles", sqlParameters);

			return taskString;
		}
		
		
		
public DataSet DelRolesAppControls(System.String p_role_cd, 
		                                        System.String p_owner_app_id, 
		                                        System.String p_application_id)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter p_role_cd_Parameter = ObjDBManager.CreateSqlParameter("p_role_cd", p_role_cd, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_role_cd_Parameter);
			SqlParameter p_owner_app_id_Parameter = ObjDBManager.CreateSqlParameter("p_owner_app_id", p_owner_app_id, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_owner_app_id_Parameter);
			SqlParameter p_application_id_Parameter = ObjDBManager.CreateSqlParameter("p_application_id", p_application_id, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_application_id_Parameter);
			DataSet dset = ObjDBManager.ExecuteStoredProc("DelRolesAppControls", sqlParameters);

			return dset;
		}
		
public string DelRolesAppControlsAsTask(System.String p_role_cd, 
		                                            System.String p_owner_app_id, 
		                                            System.String p_application_id)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter p_role_cd_Parameter = ObjDBManager.CreateSqlParameter("p_role_cd", p_role_cd, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_role_cd_Parameter);
			SqlParameter p_owner_app_id_Parameter = ObjDBManager.CreateSqlParameter("p_owner_app_id", p_owner_app_id, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_owner_app_id_Parameter);
			SqlParameter p_application_id_Parameter = ObjDBManager.CreateSqlParameter("p_application_id", p_application_id, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_application_id_Parameter);
			string taskString = ObjDBManager.GetPrintableSQLString("DelRolesAppControls", sqlParameters);

			return taskString;
		}
		
		
		
public DataSet DelSatsangCentres(System.Int32? p_satsang_centre_id, 
		                                    System.Int64? p_txn_ts, 
		                                    System.Int32? p_person_id)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter p_satsang_centre_id_Parameter = ObjDBManager.CreateSqlParameter("p_satsang_centre_id", p_satsang_centre_id, SqlDbType.Int, ParameterDirection.Input);
			sqlParameters.Add(p_satsang_centre_id_Parameter);
			SqlParameter p_txn_ts_Parameter = ObjDBManager.CreateSqlParameter("p_txn_ts", p_txn_ts, SqlDbType.BigInt, ParameterDirection.Input);
			sqlParameters.Add(p_txn_ts_Parameter);
			SqlParameter p_person_id_Parameter = ObjDBManager.CreateSqlParameter("p_person_id", p_person_id, SqlDbType.Int, ParameterDirection.Input);
			sqlParameters.Add(p_person_id_Parameter);
			DataSet dset = ObjDBManager.ExecuteStoredProc("DelSatsangCentres", sqlParameters);

			return dset;
		}
		
public string DelSatsangCentresAsTask(System.Int32? p_satsang_centre_id, 
		                                            System.Int64? p_txn_ts, 
		                                            System.Int32? p_person_id)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter p_satsang_centre_id_Parameter = ObjDBManager.CreateSqlParameter("p_satsang_centre_id", p_satsang_centre_id, SqlDbType.Int, ParameterDirection.Input);
			sqlParameters.Add(p_satsang_centre_id_Parameter);
			SqlParameter p_txn_ts_Parameter = ObjDBManager.CreateSqlParameter("p_txn_ts", p_txn_ts, SqlDbType.BigInt, ParameterDirection.Input);
			sqlParameters.Add(p_txn_ts_Parameter);
			SqlParameter p_person_id_Parameter = ObjDBManager.CreateSqlParameter("p_person_id", p_person_id, SqlDbType.Int, ParameterDirection.Input);
			sqlParameters.Add(p_person_id_Parameter);
			string taskString = ObjDBManager.GetPrintableSQLString("DelSatsangCentres", sqlParameters);

			return taskString;
		}
		
		
		
public DataSet DelSewadarTypes(System.Int32? p_sewadartype_id, 
		                                    System.Int64? p_txn_ts)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter p_sewadartype_id_Parameter = ObjDBManager.CreateSqlParameter("p_sewadartype_id", p_sewadartype_id, SqlDbType.Int, ParameterDirection.Input);
			sqlParameters.Add(p_sewadartype_id_Parameter);
			SqlParameter p_txn_ts_Parameter = ObjDBManager.CreateSqlParameter("p_txn_ts", p_txn_ts, SqlDbType.BigInt, ParameterDirection.Input);
			sqlParameters.Add(p_txn_ts_Parameter);
			DataSet dset = ObjDBManager.ExecuteStoredProc("DelSewadarTypes", sqlParameters);

			return dset;
		}
		
public string DelSewadarTypesAsTask(System.Int32? p_sewadartype_id, 
		                                        System.Int64? p_txn_ts)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter p_sewadartype_id_Parameter = ObjDBManager.CreateSqlParameter("p_sewadartype_id", p_sewadartype_id, SqlDbType.Int, ParameterDirection.Input);
			sqlParameters.Add(p_sewadartype_id_Parameter);
			SqlParameter p_txn_ts_Parameter = ObjDBManager.CreateSqlParameter("p_txn_ts", p_txn_ts, SqlDbType.BigInt, ParameterDirection.Input);
			sqlParameters.Add(p_txn_ts_Parameter);
			string taskString = ObjDBManager.GetPrintableSQLString("DelSewadarTypes", sqlParameters);

			return taskString;
		}
		
		
		
public DataSet DelSkills(System.Int16? p_skillID, 
		                            System.Int64? p_txn_ts)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter p_skillID_Parameter = ObjDBManager.CreateSqlParameter("p_skillID", p_skillID, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(p_skillID_Parameter);
			SqlParameter p_txn_ts_Parameter = ObjDBManager.CreateSqlParameter("p_txn_ts", p_txn_ts, SqlDbType.BigInt, ParameterDirection.Input);
			sqlParameters.Add(p_txn_ts_Parameter);
			DataSet dset = ObjDBManager.ExecuteStoredProc("DelSkills", sqlParameters);

			return dset;
		}
		
public string DelSkillsAsTask(System.Int16? p_skillID, 
		                                    System.Int64? p_txn_ts)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter p_skillID_Parameter = ObjDBManager.CreateSqlParameter("p_skillID", p_skillID, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(p_skillID_Parameter);
			SqlParameter p_txn_ts_Parameter = ObjDBManager.CreateSqlParameter("p_txn_ts", p_txn_ts, SqlDbType.BigInt, ParameterDirection.Input);
			sqlParameters.Add(p_txn_ts_Parameter);
			string taskString = ObjDBManager.GetPrintableSQLString("DelSkills", sqlParameters);

			return taskString;
		}
		
		
		
public DataSet DelStates(System.Int32? p_stateID, 
		                            System.Int64? p_txn_ts)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter p_stateID_Parameter = ObjDBManager.CreateSqlParameter("p_stateID", p_stateID, SqlDbType.Int, ParameterDirection.Input);
			sqlParameters.Add(p_stateID_Parameter);
			SqlParameter p_txn_ts_Parameter = ObjDBManager.CreateSqlParameter("p_txn_ts", p_txn_ts, SqlDbType.BigInt, ParameterDirection.Input);
			sqlParameters.Add(p_txn_ts_Parameter);
			DataSet dset = ObjDBManager.ExecuteStoredProc("DelStates", sqlParameters);

			return dset;
		}
		
public string DelStatesAsTask(System.Int32? p_stateID, 
		                                    System.Int64? p_txn_ts)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter p_stateID_Parameter = ObjDBManager.CreateSqlParameter("p_stateID", p_stateID, SqlDbType.Int, ParameterDirection.Input);
			sqlParameters.Add(p_stateID_Parameter);
			SqlParameter p_txn_ts_Parameter = ObjDBManager.CreateSqlParameter("p_txn_ts", p_txn_ts, SqlDbType.BigInt, ParameterDirection.Input);
			sqlParameters.Add(p_txn_ts_Parameter);
			string taskString = ObjDBManager.GetPrintableSQLString("DelStates", sqlParameters);

			return taskString;
		}
		
		
		
public DataSet DelWorkingUnits(System.Int16? in_working_unit_id)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter in_working_unit_id_Parameter = ObjDBManager.CreateSqlParameter("in_working_unit_id", in_working_unit_id, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(in_working_unit_id_Parameter);
			DataSet dset = ObjDBManager.ExecuteStoredProc("DelWorkingUnits", sqlParameters);

			return dset;
		}
		
public string DelWorkingUnitsAsTask(System.Int16? in_working_unit_id)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter in_working_unit_id_Parameter = ObjDBManager.CreateSqlParameter("in_working_unit_id", in_working_unit_id, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(in_working_unit_id_Parameter);
			string taskString = ObjDBManager.GetPrintableSQLString("DelWorkingUnits", sqlParameters);

			return taskString;
		}
		
		
		
public DataSet GetWorkingUnitResponsibilities(System.Int16? p_working_unit_id)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter p_working_unit_id_Parameter = ObjDBManager.CreateSqlParameter("p_working_unit_id", p_working_unit_id, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(p_working_unit_id_Parameter);
			DataSet dset = ObjDBManager.ExecuteStoredProc("GetWorkingUnitResponsibilities", sqlParameters);

			return dset;
		}
		
public string GetWorkingUnitResponsibilitiesAsTask(System.Int16? p_working_unit_id)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter p_working_unit_id_Parameter = ObjDBManager.CreateSqlParameter("p_working_unit_id", p_working_unit_id, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(p_working_unit_id_Parameter);
			string taskString = ObjDBManager.GetPrintableSQLString("GetWorkingUnitResponsibilities", sqlParameters);

			return taskString;
		}
		
		
		
public DataSet Ins_epabx_extensions_WU(System.Int16? in_working_unit_id, 
		                                            System.String in_epabx_extension, 
		                                            System.Int16? in_extension_sq)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter in_working_unit_id_Parameter = ObjDBManager.CreateSqlParameter("in_working_unit_id", in_working_unit_id, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(in_working_unit_id_Parameter);
			SqlParameter in_epabx_extension_Parameter = ObjDBManager.CreateSqlParameter("in_epabx_extension", in_epabx_extension, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(in_epabx_extension_Parameter);
			SqlParameter in_extension_sq_Parameter = ObjDBManager.CreateSqlParameter("in_extension_sq", in_extension_sq, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(in_extension_sq_Parameter);
			DataSet dset = ObjDBManager.ExecuteStoredProc("Ins_epabx_extensions_WU", sqlParameters);

			return dset;
		}
		
public string Ins_epabx_extensions_WUAsTask(System.Int16? in_working_unit_id, 
		                                                System.String in_epabx_extension, 
		                                                System.Int16? in_extension_sq)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter in_working_unit_id_Parameter = ObjDBManager.CreateSqlParameter("in_working_unit_id", in_working_unit_id, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(in_working_unit_id_Parameter);
			SqlParameter in_epabx_extension_Parameter = ObjDBManager.CreateSqlParameter("in_epabx_extension", in_epabx_extension, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(in_epabx_extension_Parameter);
			SqlParameter in_extension_sq_Parameter = ObjDBManager.CreateSqlParameter("in_extension_sq", in_extension_sq, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(in_extension_sq_Parameter);
			string taskString = ObjDBManager.GetPrintableSQLString("Ins_epabx_extensions_WU", sqlParameters);

			return taskString;
		}
		
		
		
public DataSet Ins_fax_lines_WU(System.Int16? in_working_unit_id, 
		                                    System.String in_fax_line, 
		                                    System.Int16? in_line_sq)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter in_working_unit_id_Parameter = ObjDBManager.CreateSqlParameter("in_working_unit_id", in_working_unit_id, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(in_working_unit_id_Parameter);
			SqlParameter in_fax_line_Parameter = ObjDBManager.CreateSqlParameter("in_fax_line", in_fax_line, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(in_fax_line_Parameter);
			SqlParameter in_line_sq_Parameter = ObjDBManager.CreateSqlParameter("in_line_sq", in_line_sq, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(in_line_sq_Parameter);
			DataSet dset = ObjDBManager.ExecuteStoredProc("Ins_fax_lines_WU", sqlParameters);

			return dset;
		}
		
public string Ins_fax_lines_WUAsTask(System.Int16? in_working_unit_id, 
		                                        System.String in_fax_line, 
		                                        System.Int16? in_line_sq)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter in_working_unit_id_Parameter = ObjDBManager.CreateSqlParameter("in_working_unit_id", in_working_unit_id, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(in_working_unit_id_Parameter);
			SqlParameter in_fax_line_Parameter = ObjDBManager.CreateSqlParameter("in_fax_line", in_fax_line, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(in_fax_line_Parameter);
			SqlParameter in_line_sq_Parameter = ObjDBManager.CreateSqlParameter("in_line_sq", in_line_sq, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(in_line_sq_Parameter);
			string taskString = ObjDBManager.GetPrintableSQLString("Ins_fax_lines_WU", sqlParameters);

			return taskString;
		}
		
		
		
public DataSet Ins_p_and_t_lines_WU(System.Int16? in_working_unit_id, 
		                                        System.String in_p_and_t_line, 
		                                        System.Int16? in_line_sq)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter in_working_unit_id_Parameter = ObjDBManager.CreateSqlParameter("in_working_unit_id", in_working_unit_id, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(in_working_unit_id_Parameter);
			SqlParameter in_p_and_t_line_Parameter = ObjDBManager.CreateSqlParameter("in_p_and_t_line", in_p_and_t_line, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(in_p_and_t_line_Parameter);
			SqlParameter in_line_sq_Parameter = ObjDBManager.CreateSqlParameter("in_line_sq", in_line_sq, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(in_line_sq_Parameter);
			DataSet dset = ObjDBManager.ExecuteStoredProc("Ins_p_and_t_lines_WU", sqlParameters);

			return dset;
		}
		
public string Ins_p_and_t_lines_WUAsTask(System.Int16? in_working_unit_id, 
		                                            System.String in_p_and_t_line, 
		                                            System.Int16? in_line_sq)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter in_working_unit_id_Parameter = ObjDBManager.CreateSqlParameter("in_working_unit_id", in_working_unit_id, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(in_working_unit_id_Parameter);
			SqlParameter in_p_and_t_line_Parameter = ObjDBManager.CreateSqlParameter("in_p_and_t_line", in_p_and_t_line, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(in_p_and_t_line_Parameter);
			SqlParameter in_line_sq_Parameter = ObjDBManager.CreateSqlParameter("in_line_sq", in_line_sq, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(in_line_sq_Parameter);
			string taskString = ObjDBManager.GetPrintableSQLString("Ins_p_and_t_lines_WU", sqlParameters);

			return taskString;
		}
		
		
		
public DataSet InsAssistant_Services(System.Int16? assistant_service_id, 
		                                        System.String assistant_service_nm, 
		                                        System.DateTime? effective_from, 
		                                        System.DateTime? effective_till)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter assistant_service_id_Parameter = ObjDBManager.CreateSqlParameter("assistant_service_id", assistant_service_id, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(assistant_service_id_Parameter);
			SqlParameter assistant_service_nm_Parameter = ObjDBManager.CreateSqlParameter("assistant_service_nm", assistant_service_nm, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(assistant_service_nm_Parameter);
			SqlParameter effective_from_Parameter = ObjDBManager.CreateSqlParameter("effective_from", effective_from, SqlDbType.DateTime, ParameterDirection.Input);
			sqlParameters.Add(effective_from_Parameter);
			SqlParameter effective_till_Parameter = ObjDBManager.CreateSqlParameter("effective_till", effective_till, SqlDbType.DateTime, ParameterDirection.Input);
			sqlParameters.Add(effective_till_Parameter);
			DataSet dset = ObjDBManager.ExecuteStoredProc("InsAssistant_Services", sqlParameters);

			return dset;
		}
		
public string InsAssistant_ServicesAsTask(System.Int16? assistant_service_id, 
		                                                System.String assistant_service_nm, 
		                                                System.DateTime? effective_from, 
		                                                System.DateTime? effective_till)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter assistant_service_id_Parameter = ObjDBManager.CreateSqlParameter("assistant_service_id", assistant_service_id, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(assistant_service_id_Parameter);
			SqlParameter assistant_service_nm_Parameter = ObjDBManager.CreateSqlParameter("assistant_service_nm", assistant_service_nm, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(assistant_service_nm_Parameter);
			SqlParameter effective_from_Parameter = ObjDBManager.CreateSqlParameter("effective_from", effective_from, SqlDbType.DateTime, ParameterDirection.Input);
			sqlParameters.Add(effective_from_Parameter);
			SqlParameter effective_till_Parameter = ObjDBManager.CreateSqlParameter("effective_till", effective_till, SqlDbType.DateTime, ParameterDirection.Input);
			sqlParameters.Add(effective_till_Parameter);
			string taskString = ObjDBManager.GetPrintableSQLString("InsAssistant_Services", sqlParameters);

			return taskString;
		}
		
		
		
public DataSet InsInitiationPlace(System.String p_place_nm, 
		                                        System.DateTime? p_effectiveFrom, 
		                                        System.DateTime? p_effectiveTill)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter p_place_nm_Parameter = ObjDBManager.CreateSqlParameter("p_place_nm", p_place_nm, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_place_nm_Parameter);
			SqlParameter p_effectiveFrom_Parameter = ObjDBManager.CreateSqlParameter("p_effectiveFrom", p_effectiveFrom, SqlDbType.DateTime, ParameterDirection.Input);
			sqlParameters.Add(p_effectiveFrom_Parameter);
			SqlParameter p_effectiveTill_Parameter = ObjDBManager.CreateSqlParameter("p_effectiveTill", p_effectiveTill, SqlDbType.DateTime, ParameterDirection.Input);
			sqlParameters.Add(p_effectiveTill_Parameter);
			DataSet dset = ObjDBManager.ExecuteStoredProc("InsInitiationPlace", sqlParameters);

			return dset;
		}
		
public string InsInitiationPlaceAsTask(System.String p_place_nm, 
		                                            System.DateTime? p_effectiveFrom, 
		                                            System.DateTime? p_effectiveTill)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter p_place_nm_Parameter = ObjDBManager.CreateSqlParameter("p_place_nm", p_place_nm, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_place_nm_Parameter);
			SqlParameter p_effectiveFrom_Parameter = ObjDBManager.CreateSqlParameter("p_effectiveFrom", p_effectiveFrom, SqlDbType.DateTime, ParameterDirection.Input);
			sqlParameters.Add(p_effectiveFrom_Parameter);
			SqlParameter p_effectiveTill_Parameter = ObjDBManager.CreateSqlParameter("p_effectiveTill", p_effectiveTill, SqlDbType.DateTime, ParameterDirection.Input);
			sqlParameters.Add(p_effectiveTill_Parameter);
			string taskString = ObjDBManager.GetPrintableSQLString("InsInitiationPlace", sqlParameters);

			return taskString;
		}
		
		
		
public DataSet InsLanguages(System.String p_language_cd, 
		                                System.String p_language_nm, 
		                                System.DateTime? p_effectiveFrom, 
		                                System.DateTime? p_effectiveTill)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter p_language_cd_Parameter = ObjDBManager.CreateSqlParameter("p_language_cd", p_language_cd, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_language_cd_Parameter);
			SqlParameter p_language_nm_Parameter = ObjDBManager.CreateSqlParameter("p_language_nm", p_language_nm, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_language_nm_Parameter);
			SqlParameter p_effectiveFrom_Parameter = ObjDBManager.CreateSqlParameter("p_effectiveFrom", p_effectiveFrom, SqlDbType.DateTime, ParameterDirection.Input);
			sqlParameters.Add(p_effectiveFrom_Parameter);
			SqlParameter p_effectiveTill_Parameter = ObjDBManager.CreateSqlParameter("p_effectiveTill", p_effectiveTill, SqlDbType.DateTime, ParameterDirection.Input);
			sqlParameters.Add(p_effectiveTill_Parameter);
			DataSet dset = ObjDBManager.ExecuteStoredProc("InsLanguages", sqlParameters);

			return dset;
		}
		
public string InsLanguagesAsTask(System.String p_language_cd, 
		                                    System.String p_language_nm, 
		                                    System.DateTime? p_effectiveFrom, 
		                                    System.DateTime? p_effectiveTill)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter p_language_cd_Parameter = ObjDBManager.CreateSqlParameter("p_language_cd", p_language_cd, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_language_cd_Parameter);
			SqlParameter p_language_nm_Parameter = ObjDBManager.CreateSqlParameter("p_language_nm", p_language_nm, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_language_nm_Parameter);
			SqlParameter p_effectiveFrom_Parameter = ObjDBManager.CreateSqlParameter("p_effectiveFrom", p_effectiveFrom, SqlDbType.DateTime, ParameterDirection.Input);
			sqlParameters.Add(p_effectiveFrom_Parameter);
			SqlParameter p_effectiveTill_Parameter = ObjDBManager.CreateSqlParameter("p_effectiveTill", p_effectiveTill, SqlDbType.DateTime, ParameterDirection.Input);
			sqlParameters.Add(p_effectiveTill_Parameter);
			string taskString = ObjDBManager.GetPrintableSQLString("InsLanguages", sqlParameters);

			return taskString;
		}
		
		
		
public DataSet InsMaritalStatus(System.String p_maritalstatus_nm, 
		                                    System.DateTime? p_effectiveFrom, 
		                                    System.DateTime? p_effectiveTill)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter p_maritalstatus_nm_Parameter = ObjDBManager.CreateSqlParameter("p_maritalstatus_nm", p_maritalstatus_nm, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_maritalstatus_nm_Parameter);
			SqlParameter p_effectiveFrom_Parameter = ObjDBManager.CreateSqlParameter("p_effectiveFrom", p_effectiveFrom, SqlDbType.DateTime, ParameterDirection.Input);
			sqlParameters.Add(p_effectiveFrom_Parameter);
			SqlParameter p_effectiveTill_Parameter = ObjDBManager.CreateSqlParameter("p_effectiveTill", p_effectiveTill, SqlDbType.DateTime, ParameterDirection.Input);
			sqlParameters.Add(p_effectiveTill_Parameter);
			DataSet dset = ObjDBManager.ExecuteStoredProc("InsMaritalStatus", sqlParameters);

			return dset;
		}
		
public string InsMaritalStatusAsTask(System.String p_maritalstatus_nm, 
		                                        System.DateTime? p_effectiveFrom, 
		                                        System.DateTime? p_effectiveTill)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter p_maritalstatus_nm_Parameter = ObjDBManager.CreateSqlParameter("p_maritalstatus_nm", p_maritalstatus_nm, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_maritalstatus_nm_Parameter);
			SqlParameter p_effectiveFrom_Parameter = ObjDBManager.CreateSqlParameter("p_effectiveFrom", p_effectiveFrom, SqlDbType.DateTime, ParameterDirection.Input);
			sqlParameters.Add(p_effectiveFrom_Parameter);
			SqlParameter p_effectiveTill_Parameter = ObjDBManager.CreateSqlParameter("p_effectiveTill", p_effectiveTill, SqlDbType.DateTime, ParameterDirection.Input);
			sqlParameters.Add(p_effectiveTill_Parameter);
			string taskString = ObjDBManager.GetPrintableSQLString("InsMaritalStatus", sqlParameters);

			return taskString;
		}
		
		
		
public DataSet InsParties(System.String p_party_cd, 
		                                System.String p_party_nm, 
		                                System.String p_pan, 
		                                System.String p_party_contact_nm, 
		                                System.String p_party_contact_designation)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter p_party_cd_Parameter = ObjDBManager.CreateSqlParameter("p_party_cd", p_party_cd, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_party_cd_Parameter);
			SqlParameter p_party_nm_Parameter = ObjDBManager.CreateSqlParameter("p_party_nm", p_party_nm, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_party_nm_Parameter);
			SqlParameter p_pan_Parameter = ObjDBManager.CreateSqlParameter("p_pan", p_pan, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_pan_Parameter);
			SqlParameter p_party_contact_nm_Parameter = ObjDBManager.CreateSqlParameter("p_party_contact_nm", p_party_contact_nm, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_party_contact_nm_Parameter);
			SqlParameter p_party_contact_designation_Parameter = ObjDBManager.CreateSqlParameter("p_party_contact_designation", p_party_contact_designation, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_party_contact_designation_Parameter);
			DataSet dset = ObjDBManager.ExecuteStoredProc("InsParties", sqlParameters);

			return dset;
		}
		
public string InsPartiesAsTask(System.String p_party_cd, 
		                                    System.String p_party_nm, 
		                                    System.String p_pan, 
		                                    System.String p_party_contact_nm, 
		                                    System.String p_party_contact_designation)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter p_party_cd_Parameter = ObjDBManager.CreateSqlParameter("p_party_cd", p_party_cd, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_party_cd_Parameter);
			SqlParameter p_party_nm_Parameter = ObjDBManager.CreateSqlParameter("p_party_nm", p_party_nm, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_party_nm_Parameter);
			SqlParameter p_pan_Parameter = ObjDBManager.CreateSqlParameter("p_pan", p_pan, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_pan_Parameter);
			SqlParameter p_party_contact_nm_Parameter = ObjDBManager.CreateSqlParameter("p_party_contact_nm", p_party_contact_nm, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_party_contact_nm_Parameter);
			SqlParameter p_party_contact_designation_Parameter = ObjDBManager.CreateSqlParameter("p_party_contact_designation", p_party_contact_designation, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_party_contact_designation_Parameter);
			string taskString = ObjDBManager.GetPrintableSQLString("InsParties", sqlParameters);

			return taskString;
		}
		
		
		
public DataSet InsPartyAddresses(System.Int32? p_party_id, 
		                                    System.String p_address_type_nm, 
		                                    System.Int32? p_address_no, 
		                                    System.String p_contact_nm, 
		                                    System.String p_contact_designation, 
		                                    System.String p_address_line_1, 
		                                    System.String p_address_line_2, 
		                                    System.Int16? p_country_id, 
		                                    System.Int32? p_state_id, 
		                                    System.Int32? p_district_or_city_id, 
		                                    System.Int32? p_post_office_id, 
		                                    System.String p_pin_or_zip_code, 
		                                    System.String p_cell_phones, 
		                                    System.String p_telephones, 
		                                    System.String p_email_addresses, 
		                                    System.String p_fax_lines, 
		                                    System.DateTime? p_effective_from, 
		                                    System.DateTime? p_effective_till, 
		                                    System.String p_application_id)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter p_party_id_Parameter = ObjDBManager.CreateSqlParameter("p_party_id", p_party_id, SqlDbType.Int, ParameterDirection.Input);
			sqlParameters.Add(p_party_id_Parameter);
			SqlParameter p_address_type_nm_Parameter = ObjDBManager.CreateSqlParameter("p_address_type_nm", p_address_type_nm, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_address_type_nm_Parameter);
			SqlParameter p_address_no_Parameter = ObjDBManager.CreateSqlParameter("p_address_no", p_address_no, SqlDbType.Int, ParameterDirection.Input);
			sqlParameters.Add(p_address_no_Parameter);
			SqlParameter p_contact_nm_Parameter = ObjDBManager.CreateSqlParameter("p_contact_nm", p_contact_nm, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_contact_nm_Parameter);
			SqlParameter p_contact_designation_Parameter = ObjDBManager.CreateSqlParameter("p_contact_designation", p_contact_designation, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_contact_designation_Parameter);
			SqlParameter p_address_line_1_Parameter = ObjDBManager.CreateSqlParameter("p_address_line_1", p_address_line_1, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_address_line_1_Parameter);
			SqlParameter p_address_line_2_Parameter = ObjDBManager.CreateSqlParameter("p_address_line_2", p_address_line_2, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_address_line_2_Parameter);
			SqlParameter p_country_id_Parameter = ObjDBManager.CreateSqlParameter("p_country_id", p_country_id, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(p_country_id_Parameter);
			SqlParameter p_state_id_Parameter = ObjDBManager.CreateSqlParameter("p_state_id", p_state_id, SqlDbType.Int, ParameterDirection.Input);
			sqlParameters.Add(p_state_id_Parameter);
			SqlParameter p_district_or_city_id_Parameter = ObjDBManager.CreateSqlParameter("p_district_or_city_id", p_district_or_city_id, SqlDbType.Int, ParameterDirection.Input);
			sqlParameters.Add(p_district_or_city_id_Parameter);
			SqlParameter p_post_office_id_Parameter = ObjDBManager.CreateSqlParameter("p_post_office_id", p_post_office_id, SqlDbType.Int, ParameterDirection.Input);
			sqlParameters.Add(p_post_office_id_Parameter);
			SqlParameter p_pin_or_zip_code_Parameter = ObjDBManager.CreateSqlParameter("p_pin_or_zip_code", p_pin_or_zip_code, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_pin_or_zip_code_Parameter);
			SqlParameter p_cell_phones_Parameter = ObjDBManager.CreateSqlParameter("p_cell_phones", p_cell_phones, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_cell_phones_Parameter);
			SqlParameter p_telephones_Parameter = ObjDBManager.CreateSqlParameter("p_telephones", p_telephones, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_telephones_Parameter);
			SqlParameter p_email_addresses_Parameter = ObjDBManager.CreateSqlParameter("p_email_addresses", p_email_addresses, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_email_addresses_Parameter);
			SqlParameter p_fax_lines_Parameter = ObjDBManager.CreateSqlParameter("p_fax_lines", p_fax_lines, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_fax_lines_Parameter);
			SqlParameter p_effective_from_Parameter = ObjDBManager.CreateSqlParameter("p_effective_from", p_effective_from, SqlDbType.DateTime, ParameterDirection.Input);
			sqlParameters.Add(p_effective_from_Parameter);
			SqlParameter p_effective_till_Parameter = ObjDBManager.CreateSqlParameter("p_effective_till", p_effective_till, SqlDbType.DateTime, ParameterDirection.Input);
			sqlParameters.Add(p_effective_till_Parameter);
			SqlParameter p_application_id_Parameter = ObjDBManager.CreateSqlParameter("p_application_id", p_application_id, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_application_id_Parameter);
			DataSet dset = ObjDBManager.ExecuteStoredProc("InsPartyAddresses", sqlParameters);

			return dset;
		}
		
public string InsPartyAddressesAsTask(System.Int32? p_party_id, 
		                                            System.String p_address_type_nm, 
		                                            System.Int32? p_address_no, 
		                                            System.String p_contact_nm, 
		                                            System.String p_contact_designation, 
		                                            System.String p_address_line_1, 
		                                            System.String p_address_line_2, 
		                                            System.Int16? p_country_id, 
		                                            System.Int32? p_state_id, 
		                                            System.Int32? p_district_or_city_id, 
		                                            System.Int32? p_post_office_id, 
		                                            System.String p_pin_or_zip_code, 
		                                            System.String p_cell_phones, 
		                                            System.String p_telephones, 
		                                            System.String p_email_addresses, 
		                                            System.String p_fax_lines, 
		                                            System.DateTime? p_effective_from, 
		                                            System.DateTime? p_effective_till, 
		                                            System.String p_application_id)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter p_party_id_Parameter = ObjDBManager.CreateSqlParameter("p_party_id", p_party_id, SqlDbType.Int, ParameterDirection.Input);
			sqlParameters.Add(p_party_id_Parameter);
			SqlParameter p_address_type_nm_Parameter = ObjDBManager.CreateSqlParameter("p_address_type_nm", p_address_type_nm, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_address_type_nm_Parameter);
			SqlParameter p_address_no_Parameter = ObjDBManager.CreateSqlParameter("p_address_no", p_address_no, SqlDbType.Int, ParameterDirection.Input);
			sqlParameters.Add(p_address_no_Parameter);
			SqlParameter p_contact_nm_Parameter = ObjDBManager.CreateSqlParameter("p_contact_nm", p_contact_nm, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_contact_nm_Parameter);
			SqlParameter p_contact_designation_Parameter = ObjDBManager.CreateSqlParameter("p_contact_designation", p_contact_designation, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_contact_designation_Parameter);
			SqlParameter p_address_line_1_Parameter = ObjDBManager.CreateSqlParameter("p_address_line_1", p_address_line_1, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_address_line_1_Parameter);
			SqlParameter p_address_line_2_Parameter = ObjDBManager.CreateSqlParameter("p_address_line_2", p_address_line_2, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_address_line_2_Parameter);
			SqlParameter p_country_id_Parameter = ObjDBManager.CreateSqlParameter("p_country_id", p_country_id, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(p_country_id_Parameter);
			SqlParameter p_state_id_Parameter = ObjDBManager.CreateSqlParameter("p_state_id", p_state_id, SqlDbType.Int, ParameterDirection.Input);
			sqlParameters.Add(p_state_id_Parameter);
			SqlParameter p_district_or_city_id_Parameter = ObjDBManager.CreateSqlParameter("p_district_or_city_id", p_district_or_city_id, SqlDbType.Int, ParameterDirection.Input);
			sqlParameters.Add(p_district_or_city_id_Parameter);
			SqlParameter p_post_office_id_Parameter = ObjDBManager.CreateSqlParameter("p_post_office_id", p_post_office_id, SqlDbType.Int, ParameterDirection.Input);
			sqlParameters.Add(p_post_office_id_Parameter);
			SqlParameter p_pin_or_zip_code_Parameter = ObjDBManager.CreateSqlParameter("p_pin_or_zip_code", p_pin_or_zip_code, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_pin_or_zip_code_Parameter);
			SqlParameter p_cell_phones_Parameter = ObjDBManager.CreateSqlParameter("p_cell_phones", p_cell_phones, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_cell_phones_Parameter);
			SqlParameter p_telephones_Parameter = ObjDBManager.CreateSqlParameter("p_telephones", p_telephones, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_telephones_Parameter);
			SqlParameter p_email_addresses_Parameter = ObjDBManager.CreateSqlParameter("p_email_addresses", p_email_addresses, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_email_addresses_Parameter);
			SqlParameter p_fax_lines_Parameter = ObjDBManager.CreateSqlParameter("p_fax_lines", p_fax_lines, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_fax_lines_Parameter);
			SqlParameter p_effective_from_Parameter = ObjDBManager.CreateSqlParameter("p_effective_from", p_effective_from, SqlDbType.DateTime, ParameterDirection.Input);
			sqlParameters.Add(p_effective_from_Parameter);
			SqlParameter p_effective_till_Parameter = ObjDBManager.CreateSqlParameter("p_effective_till", p_effective_till, SqlDbType.DateTime, ParameterDirection.Input);
			sqlParameters.Add(p_effective_till_Parameter);
			SqlParameter p_application_id_Parameter = ObjDBManager.CreateSqlParameter("p_application_id", p_application_id, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_application_id_Parameter);
			string taskString = ObjDBManager.GetPrintableSQLString("InsPartyAddresses", sqlParameters);

			return taskString;
		}
		
		
		
public DataSet InsPartyRoleApplication(System.Int32? p_party_id, 
		                                            System.String p_role_cd, 
		                                            System.String p_application_id, 
		                                            System.String p_is_read, 
		                                            System.String p_is_update)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter p_party_id_Parameter = ObjDBManager.CreateSqlParameter("p_party_id", p_party_id, SqlDbType.Int, ParameterDirection.Input);
			sqlParameters.Add(p_party_id_Parameter);
			SqlParameter p_role_cd_Parameter = ObjDBManager.CreateSqlParameter("p_role_cd", p_role_cd, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_role_cd_Parameter);
			SqlParameter p_application_id_Parameter = ObjDBManager.CreateSqlParameter("p_application_id", p_application_id, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_application_id_Parameter);
			SqlParameter p_is_read_Parameter = ObjDBManager.CreateSqlParameter("p_is_read", p_is_read, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_is_read_Parameter);
			SqlParameter p_is_update_Parameter = ObjDBManager.CreateSqlParameter("p_is_update", p_is_update, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_is_update_Parameter);
			DataSet dset = ObjDBManager.ExecuteStoredProc("InsPartyRoleApplication", sqlParameters);

			return dset;
		}
		
public string InsPartyRoleApplicationAsTask(System.Int32? p_party_id, 
		                                                System.String p_role_cd, 
		                                                System.String p_application_id, 
		                                                System.String p_is_read, 
		                                                System.String p_is_update)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter p_party_id_Parameter = ObjDBManager.CreateSqlParameter("p_party_id", p_party_id, SqlDbType.Int, ParameterDirection.Input);
			sqlParameters.Add(p_party_id_Parameter);
			SqlParameter p_role_cd_Parameter = ObjDBManager.CreateSqlParameter("p_role_cd", p_role_cd, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_role_cd_Parameter);
			SqlParameter p_application_id_Parameter = ObjDBManager.CreateSqlParameter("p_application_id", p_application_id, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_application_id_Parameter);
			SqlParameter p_is_read_Parameter = ObjDBManager.CreateSqlParameter("p_is_read", p_is_read, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_is_read_Parameter);
			SqlParameter p_is_update_Parameter = ObjDBManager.CreateSqlParameter("p_is_update", p_is_update, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_is_update_Parameter);
			string taskString = ObjDBManager.GetPrintableSQLString("InsPartyRoleApplication", sqlParameters);

			return taskString;
		}
		
		
		
public DataSet InsPartyRoles(System.Int32? p_party_id, 
		                                System.String p_role_cd, 
		                                System.String p_address_type_nm, 
		                                System.String p_owner_application_id, 
		                                System.DateTime? p_effective_from, 
		                                System.DateTime? p_effective_till)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter p_party_id_Parameter = ObjDBManager.CreateSqlParameter("p_party_id", p_party_id, SqlDbType.Int, ParameterDirection.Input);
			sqlParameters.Add(p_party_id_Parameter);
			SqlParameter p_role_cd_Parameter = ObjDBManager.CreateSqlParameter("p_role_cd", p_role_cd, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_role_cd_Parameter);
			SqlParameter p_address_type_nm_Parameter = ObjDBManager.CreateSqlParameter("p_address_type_nm", p_address_type_nm, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_address_type_nm_Parameter);
			SqlParameter p_owner_application_id_Parameter = ObjDBManager.CreateSqlParameter("p_owner_application_id", p_owner_application_id, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_owner_application_id_Parameter);
			SqlParameter p_effective_from_Parameter = ObjDBManager.CreateSqlParameter("p_effective_from", p_effective_from, SqlDbType.DateTime, ParameterDirection.Input);
			sqlParameters.Add(p_effective_from_Parameter);
			SqlParameter p_effective_till_Parameter = ObjDBManager.CreateSqlParameter("p_effective_till", p_effective_till, SqlDbType.DateTime, ParameterDirection.Input);
			sqlParameters.Add(p_effective_till_Parameter);
			DataSet dset = ObjDBManager.ExecuteStoredProc("InsPartyRoles", sqlParameters);

			return dset;
		}
		
public string InsPartyRolesAsTask(System.Int32? p_party_id, 
		                                        System.String p_role_cd, 
		                                        System.String p_address_type_nm, 
		                                        System.String p_owner_application_id, 
		                                        System.DateTime? p_effective_from, 
		                                        System.DateTime? p_effective_till)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter p_party_id_Parameter = ObjDBManager.CreateSqlParameter("p_party_id", p_party_id, SqlDbType.Int, ParameterDirection.Input);
			sqlParameters.Add(p_party_id_Parameter);
			SqlParameter p_role_cd_Parameter = ObjDBManager.CreateSqlParameter("p_role_cd", p_role_cd, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_role_cd_Parameter);
			SqlParameter p_address_type_nm_Parameter = ObjDBManager.CreateSqlParameter("p_address_type_nm", p_address_type_nm, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_address_type_nm_Parameter);
			SqlParameter p_owner_application_id_Parameter = ObjDBManager.CreateSqlParameter("p_owner_application_id", p_owner_application_id, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_owner_application_id_Parameter);
			SqlParameter p_effective_from_Parameter = ObjDBManager.CreateSqlParameter("p_effective_from", p_effective_from, SqlDbType.DateTime, ParameterDirection.Input);
			sqlParameters.Add(p_effective_from_Parameter);
			SqlParameter p_effective_till_Parameter = ObjDBManager.CreateSqlParameter("p_effective_till", p_effective_till, SqlDbType.DateTime, ParameterDirection.Input);
			sqlParameters.Add(p_effective_till_Parameter);
			string taskString = ObjDBManager.GetPrintableSQLString("InsPartyRoles", sqlParameters);

			return taskString;
		}
		
		
		
public DataSet Insqlfctn_subjects(ref System.Int16 qlfctn_subject_id, 
		                                        System.String qlfctn_subject_cd, 
		                                        System.String qlfctn_subject_nm, 
		                                        System.String description, 
		                                        System.DateTime? effective_from, 
		                                        System.DateTime? effective_till)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter qlfctn_subject_id_Parameter = ObjDBManager.CreateSqlParameter("qlfctn_subject_id", qlfctn_subject_id, SqlDbType.SmallInt, ParameterDirection.Output);
			sqlParameters.Add(qlfctn_subject_id_Parameter);
			SqlParameter qlfctn_subject_cd_Parameter = ObjDBManager.CreateSqlParameter("qlfctn_subject_cd", qlfctn_subject_cd, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(qlfctn_subject_cd_Parameter);
			SqlParameter qlfctn_subject_nm_Parameter = ObjDBManager.CreateSqlParameter("qlfctn_subject_nm", qlfctn_subject_nm, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(qlfctn_subject_nm_Parameter);
			SqlParameter description_Parameter = ObjDBManager.CreateSqlParameter("description", description, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(description_Parameter);
			SqlParameter effective_from_Parameter = ObjDBManager.CreateSqlParameter("effective_from", effective_from, SqlDbType.DateTime, ParameterDirection.Input);
			sqlParameters.Add(effective_from_Parameter);
			SqlParameter effective_till_Parameter = ObjDBManager.CreateSqlParameter("effective_till", effective_till, SqlDbType.DateTime, ParameterDirection.Input);
			sqlParameters.Add(effective_till_Parameter);
			DataSet dset = ObjDBManager.ExecuteStoredProc("Insqlfctn_subjects", sqlParameters);
			qlfctn_subject_id = (System.Int16)qlfctn_subject_id_Parameter.Value;

			return dset;
		}
		
public string Insqlfctn_subjectsAsTask(ref System.Int16 qlfctn_subject_id, 
		                                            System.String qlfctn_subject_cd, 
		                                            System.String qlfctn_subject_nm, 
		                                            System.String description, 
		                                            System.DateTime? effective_from, 
		                                            System.DateTime? effective_till)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter qlfctn_subject_id_Parameter = ObjDBManager.CreateSqlParameter("qlfctn_subject_id", qlfctn_subject_id, SqlDbType.SmallInt, ParameterDirection.Output);
			sqlParameters.Add(qlfctn_subject_id_Parameter);
			SqlParameter qlfctn_subject_cd_Parameter = ObjDBManager.CreateSqlParameter("qlfctn_subject_cd", qlfctn_subject_cd, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(qlfctn_subject_cd_Parameter);
			SqlParameter qlfctn_subject_nm_Parameter = ObjDBManager.CreateSqlParameter("qlfctn_subject_nm", qlfctn_subject_nm, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(qlfctn_subject_nm_Parameter);
			SqlParameter description_Parameter = ObjDBManager.CreateSqlParameter("description", description, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(description_Parameter);
			SqlParameter effective_from_Parameter = ObjDBManager.CreateSqlParameter("effective_from", effective_from, SqlDbType.DateTime, ParameterDirection.Input);
			sqlParameters.Add(effective_from_Parameter);
			SqlParameter effective_till_Parameter = ObjDBManager.CreateSqlParameter("effective_till", effective_till, SqlDbType.DateTime, ParameterDirection.Input);
			sqlParameters.Add(effective_till_Parameter);
			string taskString = ObjDBManager.GetPrintableSQLString("Insqlfctn_subjects", sqlParameters);
			qlfctn_subject_id = (System.Int16)qlfctn_subject_id_Parameter.Value;

			return taskString;
		}
		
		
		
public DataSet Insqualifications(System.String qualification_type, 
		                                    System.String qualification_cd, 
		                                    System.String qualification_nm, 
		                                    System.String remarks, 
		                                    System.DateTime? effective_from, 
		                                    System.DateTime? effective_till, 
		                                    ref System.Int16 qualification_id)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter qualification_type_Parameter = ObjDBManager.CreateSqlParameter("qualification_type", qualification_type, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(qualification_type_Parameter);
			SqlParameter qualification_cd_Parameter = ObjDBManager.CreateSqlParameter("qualification_cd", qualification_cd, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(qualification_cd_Parameter);
			SqlParameter qualification_nm_Parameter = ObjDBManager.CreateSqlParameter("qualification_nm", qualification_nm, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(qualification_nm_Parameter);
			SqlParameter remarks_Parameter = ObjDBManager.CreateSqlParameter("remarks", remarks, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(remarks_Parameter);
			SqlParameter effective_from_Parameter = ObjDBManager.CreateSqlParameter("effective_from", effective_from, SqlDbType.DateTime, ParameterDirection.Input);
			sqlParameters.Add(effective_from_Parameter);
			SqlParameter effective_till_Parameter = ObjDBManager.CreateSqlParameter("effective_till", effective_till, SqlDbType.DateTime, ParameterDirection.Input);
			sqlParameters.Add(effective_till_Parameter);
			SqlParameter qualification_id_Parameter = ObjDBManager.CreateSqlParameter("qualification_id", qualification_id, SqlDbType.SmallInt, ParameterDirection.Output);
			sqlParameters.Add(qualification_id_Parameter);
			DataSet dset = ObjDBManager.ExecuteStoredProc("Insqualifications", sqlParameters);
			qualification_id = (System.Int16)qualification_id_Parameter.Value;

			return dset;
		}
		
public string InsqualificationsAsTask(System.String qualification_type, 
		                                            System.String qualification_cd, 
		                                            System.String qualification_nm, 
		                                            System.String remarks, 
		                                            System.DateTime? effective_from, 
		                                            System.DateTime? effective_till, 
		                                            ref System.Int16 qualification_id)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter qualification_type_Parameter = ObjDBManager.CreateSqlParameter("qualification_type", qualification_type, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(qualification_type_Parameter);
			SqlParameter qualification_cd_Parameter = ObjDBManager.CreateSqlParameter("qualification_cd", qualification_cd, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(qualification_cd_Parameter);
			SqlParameter qualification_nm_Parameter = ObjDBManager.CreateSqlParameter("qualification_nm", qualification_nm, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(qualification_nm_Parameter);
			SqlParameter remarks_Parameter = ObjDBManager.CreateSqlParameter("remarks", remarks, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(remarks_Parameter);
			SqlParameter effective_from_Parameter = ObjDBManager.CreateSqlParameter("effective_from", effective_from, SqlDbType.DateTime, ParameterDirection.Input);
			sqlParameters.Add(effective_from_Parameter);
			SqlParameter effective_till_Parameter = ObjDBManager.CreateSqlParameter("effective_till", effective_till, SqlDbType.DateTime, ParameterDirection.Input);
			sqlParameters.Add(effective_till_Parameter);
			SqlParameter qualification_id_Parameter = ObjDBManager.CreateSqlParameter("qualification_id", qualification_id, SqlDbType.SmallInt, ParameterDirection.Output);
			sqlParameters.Add(qualification_id_Parameter);
			string taskString = ObjDBManager.GetPrintableSQLString("Insqualifications", sqlParameters);
			qualification_id = (System.Int16)qualification_id_Parameter.Value;

			return taskString;
		}
		
		
		
public DataSet Insqualifications_qlfctn_subjects(System.Int16? qualification_id, 
		                                                    System.Int16? qlfctn_subject_id, 
		                                                    System.DateTime? effective_from, 
		                                                    System.DateTime? effective_till)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter qualification_id_Parameter = ObjDBManager.CreateSqlParameter("qualification_id", qualification_id, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(qualification_id_Parameter);
			SqlParameter qlfctn_subject_id_Parameter = ObjDBManager.CreateSqlParameter("qlfctn_subject_id", qlfctn_subject_id, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(qlfctn_subject_id_Parameter);
			SqlParameter effective_from_Parameter = ObjDBManager.CreateSqlParameter("effective_from", effective_from, SqlDbType.DateTime, ParameterDirection.Input);
			sqlParameters.Add(effective_from_Parameter);
			SqlParameter effective_till_Parameter = ObjDBManager.CreateSqlParameter("effective_till", effective_till, SqlDbType.DateTime, ParameterDirection.Input);
			sqlParameters.Add(effective_till_Parameter);
			DataSet dset = ObjDBManager.ExecuteStoredProc("Insqualifications_qlfctn_subjects", sqlParameters);

			return dset;
		}
		
public string Insqualifications_qlfctn_subjectsAsTask(System.Int16? qualification_id, 
		                                                            System.Int16? qlfctn_subject_id, 
		                                                            System.DateTime? effective_from, 
		                                                            System.DateTime? effective_till)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter qualification_id_Parameter = ObjDBManager.CreateSqlParameter("qualification_id", qualification_id, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(qualification_id_Parameter);
			SqlParameter qlfctn_subject_id_Parameter = ObjDBManager.CreateSqlParameter("qlfctn_subject_id", qlfctn_subject_id, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(qlfctn_subject_id_Parameter);
			SqlParameter effective_from_Parameter = ObjDBManager.CreateSqlParameter("effective_from", effective_from, SqlDbType.DateTime, ParameterDirection.Input);
			sqlParameters.Add(effective_from_Parameter);
			SqlParameter effective_till_Parameter = ObjDBManager.CreateSqlParameter("effective_till", effective_till, SqlDbType.DateTime, ParameterDirection.Input);
			sqlParameters.Add(effective_till_Parameter);
			string taskString = ObjDBManager.GetPrintableSQLString("Insqualifications_qlfctn_subjects", sqlParameters);

			return taskString;
		}
		
		
		
public DataSet InsRoles(System.String p_role_cd, 
		                            System.String p_role_nm, 
		                            System.String p_address_requirement, 
		                            System.DateTime? p_effective_from, 
		                            System.DateTime? p_effective_till)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter p_role_cd_Parameter = ObjDBManager.CreateSqlParameter("p_role_cd", p_role_cd, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_role_cd_Parameter);
			SqlParameter p_role_nm_Parameter = ObjDBManager.CreateSqlParameter("p_role_nm", p_role_nm, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_role_nm_Parameter);
			SqlParameter p_address_requirement_Parameter = ObjDBManager.CreateSqlParameter("p_address_requirement", p_address_requirement, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_address_requirement_Parameter);
			SqlParameter p_effective_from_Parameter = ObjDBManager.CreateSqlParameter("p_effective_from", p_effective_from, SqlDbType.DateTime, ParameterDirection.Input);
			sqlParameters.Add(p_effective_from_Parameter);
			SqlParameter p_effective_till_Parameter = ObjDBManager.CreateSqlParameter("p_effective_till", p_effective_till, SqlDbType.DateTime, ParameterDirection.Input);
			sqlParameters.Add(p_effective_till_Parameter);
			DataSet dset = ObjDBManager.ExecuteStoredProc("InsRoles", sqlParameters);

			return dset;
		}
		
public string InsRolesAsTask(System.String p_role_cd, 
		                                System.String p_role_nm, 
		                                System.String p_address_requirement, 
		                                System.DateTime? p_effective_from, 
		                                System.DateTime? p_effective_till)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter p_role_cd_Parameter = ObjDBManager.CreateSqlParameter("p_role_cd", p_role_cd, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_role_cd_Parameter);
			SqlParameter p_role_nm_Parameter = ObjDBManager.CreateSqlParameter("p_role_nm", p_role_nm, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_role_nm_Parameter);
			SqlParameter p_address_requirement_Parameter = ObjDBManager.CreateSqlParameter("p_address_requirement", p_address_requirement, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_address_requirement_Parameter);
			SqlParameter p_effective_from_Parameter = ObjDBManager.CreateSqlParameter("p_effective_from", p_effective_from, SqlDbType.DateTime, ParameterDirection.Input);
			sqlParameters.Add(p_effective_from_Parameter);
			SqlParameter p_effective_till_Parameter = ObjDBManager.CreateSqlParameter("p_effective_till", p_effective_till, SqlDbType.DateTime, ParameterDirection.Input);
			sqlParameters.Add(p_effective_till_Parameter);
			string taskString = ObjDBManager.GetPrintableSQLString("InsRoles", sqlParameters);

			return taskString;
		}
		
		
		
public DataSet InsRolesAppControls(System.String p_role_cd, 
		                                        System.String p_owner_application_id, 
		                                        System.String p_application_id, 
		                                        System.String p_is_read, 
		                                        System.String p_is_update)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter p_role_cd_Parameter = ObjDBManager.CreateSqlParameter("p_role_cd", p_role_cd, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_role_cd_Parameter);
			SqlParameter p_owner_application_id_Parameter = ObjDBManager.CreateSqlParameter("p_owner_application_id", p_owner_application_id, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_owner_application_id_Parameter);
			SqlParameter p_application_id_Parameter = ObjDBManager.CreateSqlParameter("p_application_id", p_application_id, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_application_id_Parameter);
			SqlParameter p_is_read_Parameter = ObjDBManager.CreateSqlParameter("p_is_read", p_is_read, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_is_read_Parameter);
			SqlParameter p_is_update_Parameter = ObjDBManager.CreateSqlParameter("p_is_update", p_is_update, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_is_update_Parameter);
			DataSet dset = ObjDBManager.ExecuteStoredProc("InsRolesAppControls", sqlParameters);

			return dset;
		}
		
public string InsRolesAppControlsAsTask(System.String p_role_cd, 
		                                            System.String p_owner_application_id, 
		                                            System.String p_application_id, 
		                                            System.String p_is_read, 
		                                            System.String p_is_update)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter p_role_cd_Parameter = ObjDBManager.CreateSqlParameter("p_role_cd", p_role_cd, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_role_cd_Parameter);
			SqlParameter p_owner_application_id_Parameter = ObjDBManager.CreateSqlParameter("p_owner_application_id", p_owner_application_id, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_owner_application_id_Parameter);
			SqlParameter p_application_id_Parameter = ObjDBManager.CreateSqlParameter("p_application_id", p_application_id, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_application_id_Parameter);
			SqlParameter p_is_read_Parameter = ObjDBManager.CreateSqlParameter("p_is_read", p_is_read, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_is_read_Parameter);
			SqlParameter p_is_update_Parameter = ObjDBManager.CreateSqlParameter("p_is_update", p_is_update, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_is_update_Parameter);
			string taskString = ObjDBManager.GetPrintableSQLString("InsRolesAppControls", sqlParameters);

			return taskString;
		}
		
		
		
public DataSet InsSewadarStatus(System.String p_sewadarstatus_nm, 
		                                    System.DateTime? p_effectiveFrom, 
		                                    System.DateTime? p_effectiveTill)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter p_sewadarstatus_nm_Parameter = ObjDBManager.CreateSqlParameter("p_sewadarstatus_nm", p_sewadarstatus_nm, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_sewadarstatus_nm_Parameter);
			SqlParameter p_effectiveFrom_Parameter = ObjDBManager.CreateSqlParameter("p_effectiveFrom", p_effectiveFrom, SqlDbType.DateTime, ParameterDirection.Input);
			sqlParameters.Add(p_effectiveFrom_Parameter);
			SqlParameter p_effectiveTill_Parameter = ObjDBManager.CreateSqlParameter("p_effectiveTill", p_effectiveTill, SqlDbType.DateTime, ParameterDirection.Input);
			sqlParameters.Add(p_effectiveTill_Parameter);
			DataSet dset = ObjDBManager.ExecuteStoredProc("InsSewadarStatus", sqlParameters);

			return dset;
		}
		
public string InsSewadarStatusAsTask(System.String p_sewadarstatus_nm, 
		                                        System.DateTime? p_effectiveFrom, 
		                                        System.DateTime? p_effectiveTill)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter p_sewadarstatus_nm_Parameter = ObjDBManager.CreateSqlParameter("p_sewadarstatus_nm", p_sewadarstatus_nm, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_sewadarstatus_nm_Parameter);
			SqlParameter p_effectiveFrom_Parameter = ObjDBManager.CreateSqlParameter("p_effectiveFrom", p_effectiveFrom, SqlDbType.DateTime, ParameterDirection.Input);
			sqlParameters.Add(p_effectiveFrom_Parameter);
			SqlParameter p_effectiveTill_Parameter = ObjDBManager.CreateSqlParameter("p_effectiveTill", p_effectiveTill, SqlDbType.DateTime, ParameterDirection.Input);
			sqlParameters.Add(p_effectiveTill_Parameter);
			string taskString = ObjDBManager.GetPrintableSQLString("InsSewadarStatus", sqlParameters);

			return taskString;
		}
		
		
		
public DataSet InsSewadarTypes(System.String p_sewadartype_nm, 
		                                    System.DateTime? p_effectiveFrom, 
		                                    System.DateTime? p_effectiveTill)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter p_sewadartype_nm_Parameter = ObjDBManager.CreateSqlParameter("p_sewadartype_nm", p_sewadartype_nm, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_sewadartype_nm_Parameter);
			SqlParameter p_effectiveFrom_Parameter = ObjDBManager.CreateSqlParameter("p_effectiveFrom", p_effectiveFrom, SqlDbType.DateTime, ParameterDirection.Input);
			sqlParameters.Add(p_effectiveFrom_Parameter);
			SqlParameter p_effectiveTill_Parameter = ObjDBManager.CreateSqlParameter("p_effectiveTill", p_effectiveTill, SqlDbType.DateTime, ParameterDirection.Input);
			sqlParameters.Add(p_effectiveTill_Parameter);
			DataSet dset = ObjDBManager.ExecuteStoredProc("InsSewadarTypes", sqlParameters);

			return dset;
		}
		
public string InsSewadarTypesAsTask(System.String p_sewadartype_nm, 
		                                        System.DateTime? p_effectiveFrom, 
		                                        System.DateTime? p_effectiveTill)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter p_sewadartype_nm_Parameter = ObjDBManager.CreateSqlParameter("p_sewadartype_nm", p_sewadartype_nm, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_sewadartype_nm_Parameter);
			SqlParameter p_effectiveFrom_Parameter = ObjDBManager.CreateSqlParameter("p_effectiveFrom", p_effectiveFrom, SqlDbType.DateTime, ParameterDirection.Input);
			sqlParameters.Add(p_effectiveFrom_Parameter);
			SqlParameter p_effectiveTill_Parameter = ObjDBManager.CreateSqlParameter("p_effectiveTill", p_effectiveTill, SqlDbType.DateTime, ParameterDirection.Input);
			sqlParameters.Add(p_effectiveTill_Parameter);
			string taskString = ObjDBManager.GetPrintableSQLString("InsSewadarTypes", sqlParameters);

			return taskString;
		}
		
		
		
public DataSet InsUpdCameras(System.Int16? p_cameraID, 
		                                System.String p_cameraModel, 
		                                System.String p_pictureQuality, 
		                                System.String p_flashMode, 
		                                System.Int32? p_zoomPosition, 
		                                System.String p_transferSize, 
		                                System.Int32? p_rotationAngle, 
		                                System.DateTime? p_effectiveFrom, 
		                                System.DateTime? p_effectiveTill, 
		                                System.Int64? p_txn_ts, 
		                                System.Boolean? p_isUpdate)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter p_cameraID_Parameter = ObjDBManager.CreateSqlParameter("p_cameraID", p_cameraID, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(p_cameraID_Parameter);
			SqlParameter p_cameraModel_Parameter = ObjDBManager.CreateSqlParameter("p_cameraModel", p_cameraModel, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_cameraModel_Parameter);
			SqlParameter p_pictureQuality_Parameter = ObjDBManager.CreateSqlParameter("p_pictureQuality", p_pictureQuality, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_pictureQuality_Parameter);
			SqlParameter p_flashMode_Parameter = ObjDBManager.CreateSqlParameter("p_flashMode", p_flashMode, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_flashMode_Parameter);
			SqlParameter p_zoomPosition_Parameter = ObjDBManager.CreateSqlParameter("p_zoomPosition", p_zoomPosition, SqlDbType.Int, ParameterDirection.Input);
			sqlParameters.Add(p_zoomPosition_Parameter);
			SqlParameter p_transferSize_Parameter = ObjDBManager.CreateSqlParameter("p_transferSize", p_transferSize, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_transferSize_Parameter);
			SqlParameter p_rotationAngle_Parameter = ObjDBManager.CreateSqlParameter("p_rotationAngle", p_rotationAngle, SqlDbType.Int, ParameterDirection.Input);
			sqlParameters.Add(p_rotationAngle_Parameter);
			SqlParameter p_effectiveFrom_Parameter = ObjDBManager.CreateSqlParameter("p_effectiveFrom", p_effectiveFrom, SqlDbType.DateTime, ParameterDirection.Input);
			sqlParameters.Add(p_effectiveFrom_Parameter);
			SqlParameter p_effectiveTill_Parameter = ObjDBManager.CreateSqlParameter("p_effectiveTill", p_effectiveTill, SqlDbType.DateTime, ParameterDirection.Input);
			sqlParameters.Add(p_effectiveTill_Parameter);
			SqlParameter p_txn_ts_Parameter = ObjDBManager.CreateSqlParameter("p_txn_ts", p_txn_ts, SqlDbType.BigInt, ParameterDirection.Input);
			sqlParameters.Add(p_txn_ts_Parameter);
			SqlParameter p_isUpdate_Parameter = ObjDBManager.CreateSqlParameter("p_isUpdate", p_isUpdate, SqlDbType.Bit, ParameterDirection.Input);
			sqlParameters.Add(p_isUpdate_Parameter);
			DataSet dset = ObjDBManager.ExecuteStoredProc("InsUpdCameras", sqlParameters);

			return dset;
		}
		
public string InsUpdCamerasAsTask(System.Int16? p_cameraID, 
		                                        System.String p_cameraModel, 
		                                        System.String p_pictureQuality, 
		                                        System.String p_flashMode, 
		                                        System.Int32? p_zoomPosition, 
		                                        System.String p_transferSize, 
		                                        System.Int32? p_rotationAngle, 
		                                        System.DateTime? p_effectiveFrom, 
		                                        System.DateTime? p_effectiveTill, 
		                                        System.Int64? p_txn_ts, 
		                                        System.Boolean? p_isUpdate)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter p_cameraID_Parameter = ObjDBManager.CreateSqlParameter("p_cameraID", p_cameraID, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(p_cameraID_Parameter);
			SqlParameter p_cameraModel_Parameter = ObjDBManager.CreateSqlParameter("p_cameraModel", p_cameraModel, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_cameraModel_Parameter);
			SqlParameter p_pictureQuality_Parameter = ObjDBManager.CreateSqlParameter("p_pictureQuality", p_pictureQuality, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_pictureQuality_Parameter);
			SqlParameter p_flashMode_Parameter = ObjDBManager.CreateSqlParameter("p_flashMode", p_flashMode, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_flashMode_Parameter);
			SqlParameter p_zoomPosition_Parameter = ObjDBManager.CreateSqlParameter("p_zoomPosition", p_zoomPosition, SqlDbType.Int, ParameterDirection.Input);
			sqlParameters.Add(p_zoomPosition_Parameter);
			SqlParameter p_transferSize_Parameter = ObjDBManager.CreateSqlParameter("p_transferSize", p_transferSize, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_transferSize_Parameter);
			SqlParameter p_rotationAngle_Parameter = ObjDBManager.CreateSqlParameter("p_rotationAngle", p_rotationAngle, SqlDbType.Int, ParameterDirection.Input);
			sqlParameters.Add(p_rotationAngle_Parameter);
			SqlParameter p_effectiveFrom_Parameter = ObjDBManager.CreateSqlParameter("p_effectiveFrom", p_effectiveFrom, SqlDbType.DateTime, ParameterDirection.Input);
			sqlParameters.Add(p_effectiveFrom_Parameter);
			SqlParameter p_effectiveTill_Parameter = ObjDBManager.CreateSqlParameter("p_effectiveTill", p_effectiveTill, SqlDbType.DateTime, ParameterDirection.Input);
			sqlParameters.Add(p_effectiveTill_Parameter);
			SqlParameter p_txn_ts_Parameter = ObjDBManager.CreateSqlParameter("p_txn_ts", p_txn_ts, SqlDbType.BigInt, ParameterDirection.Input);
			sqlParameters.Add(p_txn_ts_Parameter);
			SqlParameter p_isUpdate_Parameter = ObjDBManager.CreateSqlParameter("p_isUpdate", p_isUpdate, SqlDbType.Bit, ParameterDirection.Input);
			sqlParameters.Add(p_isUpdate_Parameter);
			string taskString = ObjDBManager.GetPrintableSQLString("InsUpdCameras", sqlParameters);

			return taskString;
		}
		
		
		
public DataSet InsUpdCountries(System.String p_countryCode, 
		                                    System.String p_countryName, 
		                                    System.String p_ISDCode, 
		                                    System.Decimal? p_gmtDiff, 
		                                    System.DateTime? p_effectiveFrom, 
		                                    System.DateTime? p_effectiveTill, 
		                                    System.Int16? p_countryID, 
		                                    System.Int64? p_txn_ts, 
		                                    System.Boolean? p_isUpdate)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter p_countryCode_Parameter = ObjDBManager.CreateSqlParameter("p_countryCode", p_countryCode, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_countryCode_Parameter);
			SqlParameter p_countryName_Parameter = ObjDBManager.CreateSqlParameter("p_countryName", p_countryName, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_countryName_Parameter);
			SqlParameter p_ISDCode_Parameter = ObjDBManager.CreateSqlParameter("p_ISDCode", p_ISDCode, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_ISDCode_Parameter);
			SqlParameter p_gmtDiff_Parameter = ObjDBManager.CreateSqlParameter("p_gmtDiff", p_gmtDiff, SqlDbType.Decimal, ParameterDirection.Input);
			sqlParameters.Add(p_gmtDiff_Parameter);
			SqlParameter p_effectiveFrom_Parameter = ObjDBManager.CreateSqlParameter("p_effectiveFrom", p_effectiveFrom, SqlDbType.DateTime, ParameterDirection.Input);
			sqlParameters.Add(p_effectiveFrom_Parameter);
			SqlParameter p_effectiveTill_Parameter = ObjDBManager.CreateSqlParameter("p_effectiveTill", p_effectiveTill, SqlDbType.DateTime, ParameterDirection.Input);
			sqlParameters.Add(p_effectiveTill_Parameter);
			SqlParameter p_countryID_Parameter = ObjDBManager.CreateSqlParameter("p_countryID", p_countryID, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(p_countryID_Parameter);
			SqlParameter p_txn_ts_Parameter = ObjDBManager.CreateSqlParameter("p_txn_ts", p_txn_ts, SqlDbType.BigInt, ParameterDirection.Input);
			sqlParameters.Add(p_txn_ts_Parameter);
			SqlParameter p_isUpdate_Parameter = ObjDBManager.CreateSqlParameter("p_isUpdate", p_isUpdate, SqlDbType.Bit, ParameterDirection.Input);
			sqlParameters.Add(p_isUpdate_Parameter);
			DataSet dset = ObjDBManager.ExecuteStoredProc("InsUpdCountries", sqlParameters);

			return dset;
		}
		
public string InsUpdCountriesAsTask(System.String p_countryCode, 
		                                        System.String p_countryName, 
		                                        System.String p_ISDCode, 
		                                        System.Decimal? p_gmtDiff, 
		                                        System.DateTime? p_effectiveFrom, 
		                                        System.DateTime? p_effectiveTill, 
		                                        System.Int16? p_countryID, 
		                                        System.Int64? p_txn_ts, 
		                                        System.Boolean? p_isUpdate)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter p_countryCode_Parameter = ObjDBManager.CreateSqlParameter("p_countryCode", p_countryCode, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_countryCode_Parameter);
			SqlParameter p_countryName_Parameter = ObjDBManager.CreateSqlParameter("p_countryName", p_countryName, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_countryName_Parameter);
			SqlParameter p_ISDCode_Parameter = ObjDBManager.CreateSqlParameter("p_ISDCode", p_ISDCode, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_ISDCode_Parameter);
			SqlParameter p_gmtDiff_Parameter = ObjDBManager.CreateSqlParameter("p_gmtDiff", p_gmtDiff, SqlDbType.Decimal, ParameterDirection.Input);
			sqlParameters.Add(p_gmtDiff_Parameter);
			SqlParameter p_effectiveFrom_Parameter = ObjDBManager.CreateSqlParameter("p_effectiveFrom", p_effectiveFrom, SqlDbType.DateTime, ParameterDirection.Input);
			sqlParameters.Add(p_effectiveFrom_Parameter);
			SqlParameter p_effectiveTill_Parameter = ObjDBManager.CreateSqlParameter("p_effectiveTill", p_effectiveTill, SqlDbType.DateTime, ParameterDirection.Input);
			sqlParameters.Add(p_effectiveTill_Parameter);
			SqlParameter p_countryID_Parameter = ObjDBManager.CreateSqlParameter("p_countryID", p_countryID, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(p_countryID_Parameter);
			SqlParameter p_txn_ts_Parameter = ObjDBManager.CreateSqlParameter("p_txn_ts", p_txn_ts, SqlDbType.BigInt, ParameterDirection.Input);
			sqlParameters.Add(p_txn_ts_Parameter);
			SqlParameter p_isUpdate_Parameter = ObjDBManager.CreateSqlParameter("p_isUpdate", p_isUpdate, SqlDbType.Bit, ParameterDirection.Input);
			sqlParameters.Add(p_isUpdate_Parameter);
			string taskString = ObjDBManager.GetPrintableSQLString("InsUpdCountries", sqlParameters);

			return taskString;
		}
		
		
		
public DataSet InsUpdDepartments(System.String p_deptCode, 
		                                    System.String p_deptName, 
		                                    System.Int16? p_deptGroupID, 
		                                    System.String p_faxLine, 
		                                    System.DateTime? p_effectiveFrom, 
		                                    System.DateTime? p_effectiveTill, 
		                                    System.Int16? p_departmentID, 
		                                    System.Int64? p_txn_ts, 
		                                    System.Boolean? p_isUpdate)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter p_deptCode_Parameter = ObjDBManager.CreateSqlParameter("p_deptCode", p_deptCode, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_deptCode_Parameter);
			SqlParameter p_deptName_Parameter = ObjDBManager.CreateSqlParameter("p_deptName", p_deptName, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_deptName_Parameter);
			SqlParameter p_deptGroupID_Parameter = ObjDBManager.CreateSqlParameter("p_deptGroupID", p_deptGroupID, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(p_deptGroupID_Parameter);
			SqlParameter p_faxLine_Parameter = ObjDBManager.CreateSqlParameter("p_faxLine", p_faxLine, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_faxLine_Parameter);
			SqlParameter p_effectiveFrom_Parameter = ObjDBManager.CreateSqlParameter("p_effectiveFrom", p_effectiveFrom, SqlDbType.DateTime, ParameterDirection.Input);
			sqlParameters.Add(p_effectiveFrom_Parameter);
			SqlParameter p_effectiveTill_Parameter = ObjDBManager.CreateSqlParameter("p_effectiveTill", p_effectiveTill, SqlDbType.DateTime, ParameterDirection.Input);
			sqlParameters.Add(p_effectiveTill_Parameter);
			SqlParameter p_departmentID_Parameter = ObjDBManager.CreateSqlParameter("p_departmentID", p_departmentID, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(p_departmentID_Parameter);
			SqlParameter p_txn_ts_Parameter = ObjDBManager.CreateSqlParameter("p_txn_ts", p_txn_ts, SqlDbType.BigInt, ParameterDirection.Input);
			sqlParameters.Add(p_txn_ts_Parameter);
			SqlParameter p_isUpdate_Parameter = ObjDBManager.CreateSqlParameter("p_isUpdate", p_isUpdate, SqlDbType.Bit, ParameterDirection.Input);
			sqlParameters.Add(p_isUpdate_Parameter);
			DataSet dset = ObjDBManager.ExecuteStoredProc("InsUpdDepartments", sqlParameters);

			return dset;
		}
		
public string InsUpdDepartmentsAsTask(System.String p_deptCode, 
		                                            System.String p_deptName, 
		                                            System.Int16? p_deptGroupID, 
		                                            System.String p_faxLine, 
		                                            System.DateTime? p_effectiveFrom, 
		                                            System.DateTime? p_effectiveTill, 
		                                            System.Int16? p_departmentID, 
		                                            System.Int64? p_txn_ts, 
		                                            System.Boolean? p_isUpdate)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter p_deptCode_Parameter = ObjDBManager.CreateSqlParameter("p_deptCode", p_deptCode, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_deptCode_Parameter);
			SqlParameter p_deptName_Parameter = ObjDBManager.CreateSqlParameter("p_deptName", p_deptName, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_deptName_Parameter);
			SqlParameter p_deptGroupID_Parameter = ObjDBManager.CreateSqlParameter("p_deptGroupID", p_deptGroupID, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(p_deptGroupID_Parameter);
			SqlParameter p_faxLine_Parameter = ObjDBManager.CreateSqlParameter("p_faxLine", p_faxLine, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_faxLine_Parameter);
			SqlParameter p_effectiveFrom_Parameter = ObjDBManager.CreateSqlParameter("p_effectiveFrom", p_effectiveFrom, SqlDbType.DateTime, ParameterDirection.Input);
			sqlParameters.Add(p_effectiveFrom_Parameter);
			SqlParameter p_effectiveTill_Parameter = ObjDBManager.CreateSqlParameter("p_effectiveTill", p_effectiveTill, SqlDbType.DateTime, ParameterDirection.Input);
			sqlParameters.Add(p_effectiveTill_Parameter);
			SqlParameter p_departmentID_Parameter = ObjDBManager.CreateSqlParameter("p_departmentID", p_departmentID, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(p_departmentID_Parameter);
			SqlParameter p_txn_ts_Parameter = ObjDBManager.CreateSqlParameter("p_txn_ts", p_txn_ts, SqlDbType.BigInt, ParameterDirection.Input);
			sqlParameters.Add(p_txn_ts_Parameter);
			SqlParameter p_isUpdate_Parameter = ObjDBManager.CreateSqlParameter("p_isUpdate", p_isUpdate, SqlDbType.Bit, ParameterDirection.Input);
			sqlParameters.Add(p_isUpdate_Parameter);
			string taskString = ObjDBManager.GetPrintableSQLString("InsUpdDepartments", sqlParameters);

			return taskString;
		}
		
		
		
public DataSet InsUpdDeptEPABXExtensions(System.Int16? p_departmentID, 
		                                            System.String p_EPABXExt, 
		                                            System.String p_oldEPABXExt, 
		                                            System.Int16? p_displayOrder, 
		                                            System.Boolean? p_isUpdate)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter p_departmentID_Parameter = ObjDBManager.CreateSqlParameter("p_departmentID", p_departmentID, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(p_departmentID_Parameter);
			SqlParameter p_EPABXExt_Parameter = ObjDBManager.CreateSqlParameter("p_EPABXExt", p_EPABXExt, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_EPABXExt_Parameter);
			SqlParameter p_oldEPABXExt_Parameter = ObjDBManager.CreateSqlParameter("p_oldEPABXExt", p_oldEPABXExt, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_oldEPABXExt_Parameter);
			SqlParameter p_displayOrder_Parameter = ObjDBManager.CreateSqlParameter("p_displayOrder", p_displayOrder, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(p_displayOrder_Parameter);
			SqlParameter p_isUpdate_Parameter = ObjDBManager.CreateSqlParameter("p_isUpdate", p_isUpdate, SqlDbType.Bit, ParameterDirection.Input);
			sqlParameters.Add(p_isUpdate_Parameter);
			DataSet dset = ObjDBManager.ExecuteStoredProc("InsUpdDeptEPABXExtensions", sqlParameters);

			return dset;
		}
		
public string InsUpdDeptEPABXExtensionsAsTask(System.Int16? p_departmentID, 
		                                                    System.String p_EPABXExt, 
		                                                    System.String p_oldEPABXExt, 
		                                                    System.Int16? p_displayOrder, 
		                                                    System.Boolean? p_isUpdate)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter p_departmentID_Parameter = ObjDBManager.CreateSqlParameter("p_departmentID", p_departmentID, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(p_departmentID_Parameter);
			SqlParameter p_EPABXExt_Parameter = ObjDBManager.CreateSqlParameter("p_EPABXExt", p_EPABXExt, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_EPABXExt_Parameter);
			SqlParameter p_oldEPABXExt_Parameter = ObjDBManager.CreateSqlParameter("p_oldEPABXExt", p_oldEPABXExt, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_oldEPABXExt_Parameter);
			SqlParameter p_displayOrder_Parameter = ObjDBManager.CreateSqlParameter("p_displayOrder", p_displayOrder, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(p_displayOrder_Parameter);
			SqlParameter p_isUpdate_Parameter = ObjDBManager.CreateSqlParameter("p_isUpdate", p_isUpdate, SqlDbType.Bit, ParameterDirection.Input);
			sqlParameters.Add(p_isUpdate_Parameter);
			string taskString = ObjDBManager.GetPrintableSQLString("InsUpdDeptEPABXExtensions", sqlParameters);

			return taskString;
		}
		
		
		
public DataSet InsUpdDeptGroups(System.String p_deptGroupCode, 
		                                    System.String p_deptGroupName, 
		                                    System.DateTime? p_effectiveFrom, 
		                                    System.DateTime? p_effectiveTill, 
		                                    System.Int16? p_deptGroupID, 
		                                    System.Int64? p_txn_ts, 
		                                    System.Boolean? p_isUpdate)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter p_deptGroupCode_Parameter = ObjDBManager.CreateSqlParameter("p_deptGroupCode", p_deptGroupCode, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_deptGroupCode_Parameter);
			SqlParameter p_deptGroupName_Parameter = ObjDBManager.CreateSqlParameter("p_deptGroupName", p_deptGroupName, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_deptGroupName_Parameter);
			SqlParameter p_effectiveFrom_Parameter = ObjDBManager.CreateSqlParameter("p_effectiveFrom", p_effectiveFrom, SqlDbType.DateTime, ParameterDirection.Input);
			sqlParameters.Add(p_effectiveFrom_Parameter);
			SqlParameter p_effectiveTill_Parameter = ObjDBManager.CreateSqlParameter("p_effectiveTill", p_effectiveTill, SqlDbType.DateTime, ParameterDirection.Input);
			sqlParameters.Add(p_effectiveTill_Parameter);
			SqlParameter p_deptGroupID_Parameter = ObjDBManager.CreateSqlParameter("p_deptGroupID", p_deptGroupID, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(p_deptGroupID_Parameter);
			SqlParameter p_txn_ts_Parameter = ObjDBManager.CreateSqlParameter("p_txn_ts", p_txn_ts, SqlDbType.BigInt, ParameterDirection.Input);
			sqlParameters.Add(p_txn_ts_Parameter);
			SqlParameter p_isUpdate_Parameter = ObjDBManager.CreateSqlParameter("p_isUpdate", p_isUpdate, SqlDbType.Bit, ParameterDirection.Input);
			sqlParameters.Add(p_isUpdate_Parameter);
			DataSet dset = ObjDBManager.ExecuteStoredProc("InsUpdDeptGroups", sqlParameters);

			return dset;
		}
		
public string InsUpdDeptGroupsAsTask(System.String p_deptGroupCode, 
		                                        System.String p_deptGroupName, 
		                                        System.DateTime? p_effectiveFrom, 
		                                        System.DateTime? p_effectiveTill, 
		                                        System.Int16? p_deptGroupID, 
		                                        System.Int64? p_txn_ts, 
		                                        System.Boolean? p_isUpdate)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter p_deptGroupCode_Parameter = ObjDBManager.CreateSqlParameter("p_deptGroupCode", p_deptGroupCode, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_deptGroupCode_Parameter);
			SqlParameter p_deptGroupName_Parameter = ObjDBManager.CreateSqlParameter("p_deptGroupName", p_deptGroupName, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_deptGroupName_Parameter);
			SqlParameter p_effectiveFrom_Parameter = ObjDBManager.CreateSqlParameter("p_effectiveFrom", p_effectiveFrom, SqlDbType.DateTime, ParameterDirection.Input);
			sqlParameters.Add(p_effectiveFrom_Parameter);
			SqlParameter p_effectiveTill_Parameter = ObjDBManager.CreateSqlParameter("p_effectiveTill", p_effectiveTill, SqlDbType.DateTime, ParameterDirection.Input);
			sqlParameters.Add(p_effectiveTill_Parameter);
			SqlParameter p_deptGroupID_Parameter = ObjDBManager.CreateSqlParameter("p_deptGroupID", p_deptGroupID, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(p_deptGroupID_Parameter);
			SqlParameter p_txn_ts_Parameter = ObjDBManager.CreateSqlParameter("p_txn_ts", p_txn_ts, SqlDbType.BigInt, ParameterDirection.Input);
			sqlParameters.Add(p_txn_ts_Parameter);
			SqlParameter p_isUpdate_Parameter = ObjDBManager.CreateSqlParameter("p_isUpdate", p_isUpdate, SqlDbType.Bit, ParameterDirection.Input);
			sqlParameters.Add(p_isUpdate_Parameter);
			string taskString = ObjDBManager.GetPrintableSQLString("InsUpdDeptGroups", sqlParameters);

			return taskString;
		}
		
		
		
public DataSet InsUpdDeptPTLines(System.Int16? p_departmentID, 
		                                    System.String p_PTLine, 
		                                    System.String p_oldPTLine, 
		                                    System.Int16? p_displayOrder, 
		                                    System.Boolean? p_isUpdate)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter p_departmentID_Parameter = ObjDBManager.CreateSqlParameter("p_departmentID", p_departmentID, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(p_departmentID_Parameter);
			SqlParameter p_PTLine_Parameter = ObjDBManager.CreateSqlParameter("p_PTLine", p_PTLine, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_PTLine_Parameter);
			SqlParameter p_oldPTLine_Parameter = ObjDBManager.CreateSqlParameter("p_oldPTLine", p_oldPTLine, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_oldPTLine_Parameter);
			SqlParameter p_displayOrder_Parameter = ObjDBManager.CreateSqlParameter("p_displayOrder", p_displayOrder, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(p_displayOrder_Parameter);
			SqlParameter p_isUpdate_Parameter = ObjDBManager.CreateSqlParameter("p_isUpdate", p_isUpdate, SqlDbType.Bit, ParameterDirection.Input);
			sqlParameters.Add(p_isUpdate_Parameter);
			DataSet dset = ObjDBManager.ExecuteStoredProc("InsUpdDeptPTLines", sqlParameters);

			return dset;
		}
		
public string InsUpdDeptPTLinesAsTask(System.Int16? p_departmentID, 
		                                            System.String p_PTLine, 
		                                            System.String p_oldPTLine, 
		                                            System.Int16? p_displayOrder, 
		                                            System.Boolean? p_isUpdate)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter p_departmentID_Parameter = ObjDBManager.CreateSqlParameter("p_departmentID", p_departmentID, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(p_departmentID_Parameter);
			SqlParameter p_PTLine_Parameter = ObjDBManager.CreateSqlParameter("p_PTLine", p_PTLine, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_PTLine_Parameter);
			SqlParameter p_oldPTLine_Parameter = ObjDBManager.CreateSqlParameter("p_oldPTLine", p_oldPTLine, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_oldPTLine_Parameter);
			SqlParameter p_displayOrder_Parameter = ObjDBManager.CreateSqlParameter("p_displayOrder", p_displayOrder, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(p_displayOrder_Parameter);
			SqlParameter p_isUpdate_Parameter = ObjDBManager.CreateSqlParameter("p_isUpdate", p_isUpdate, SqlDbType.Bit, ParameterDirection.Input);
			sqlParameters.Add(p_isUpdate_Parameter);
			string taskString = ObjDBManager.GetPrintableSQLString("InsUpdDeptPTLines", sqlParameters);

			return taskString;
		}
		
		
		
public DataSet InsUpdDesignations(System.String p_designationCode, 
		                                        System.String p_designationName, 
		                                        System.Byte? p_minAge, 
		                                        System.Byte? p_maxAge, 
		                                        System.Byte? p_retirementAge, 
		                                        System.DateTime? p_effectiveFrom, 
		                                        System.DateTime? p_effectiveTill, 
		                                        System.Int16? p_designationID, 
		                                        System.Int64? p_txn_ts, 
		                                        System.Boolean? p_isUpdate)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter p_designationCode_Parameter = ObjDBManager.CreateSqlParameter("p_designationCode", p_designationCode, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_designationCode_Parameter);
			SqlParameter p_designationName_Parameter = ObjDBManager.CreateSqlParameter("p_designationName", p_designationName, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_designationName_Parameter);
			SqlParameter p_minAge_Parameter = ObjDBManager.CreateSqlParameter("p_minAge", p_minAge, SqlDbType.TinyInt, ParameterDirection.Input);
			sqlParameters.Add(p_minAge_Parameter);
			SqlParameter p_maxAge_Parameter = ObjDBManager.CreateSqlParameter("p_maxAge", p_maxAge, SqlDbType.TinyInt, ParameterDirection.Input);
			sqlParameters.Add(p_maxAge_Parameter);
			SqlParameter p_retirementAge_Parameter = ObjDBManager.CreateSqlParameter("p_retirementAge", p_retirementAge, SqlDbType.TinyInt, ParameterDirection.Input);
			sqlParameters.Add(p_retirementAge_Parameter);
			SqlParameter p_effectiveFrom_Parameter = ObjDBManager.CreateSqlParameter("p_effectiveFrom", p_effectiveFrom, SqlDbType.DateTime, ParameterDirection.Input);
			sqlParameters.Add(p_effectiveFrom_Parameter);
			SqlParameter p_effectiveTill_Parameter = ObjDBManager.CreateSqlParameter("p_effectiveTill", p_effectiveTill, SqlDbType.DateTime, ParameterDirection.Input);
			sqlParameters.Add(p_effectiveTill_Parameter);
			SqlParameter p_designationID_Parameter = ObjDBManager.CreateSqlParameter("p_designationID", p_designationID, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(p_designationID_Parameter);
			SqlParameter p_txn_ts_Parameter = ObjDBManager.CreateSqlParameter("p_txn_ts", p_txn_ts, SqlDbType.BigInt, ParameterDirection.Input);
			sqlParameters.Add(p_txn_ts_Parameter);
			SqlParameter p_isUpdate_Parameter = ObjDBManager.CreateSqlParameter("p_isUpdate", p_isUpdate, SqlDbType.Bit, ParameterDirection.Input);
			sqlParameters.Add(p_isUpdate_Parameter);
			DataSet dset = ObjDBManager.ExecuteStoredProc("InsUpdDesignations", sqlParameters);

			return dset;
		}
		
public string InsUpdDesignationsAsTask(System.String p_designationCode, 
		                                            System.String p_designationName, 
		                                            System.Byte? p_minAge, 
		                                            System.Byte? p_maxAge, 
		                                            System.Byte? p_retirementAge, 
		                                            System.DateTime? p_effectiveFrom, 
		                                            System.DateTime? p_effectiveTill, 
		                                            System.Int16? p_designationID, 
		                                            System.Int64? p_txn_ts, 
		                                            System.Boolean? p_isUpdate)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter p_designationCode_Parameter = ObjDBManager.CreateSqlParameter("p_designationCode", p_designationCode, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_designationCode_Parameter);
			SqlParameter p_designationName_Parameter = ObjDBManager.CreateSqlParameter("p_designationName", p_designationName, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_designationName_Parameter);
			SqlParameter p_minAge_Parameter = ObjDBManager.CreateSqlParameter("p_minAge", p_minAge, SqlDbType.TinyInt, ParameterDirection.Input);
			sqlParameters.Add(p_minAge_Parameter);
			SqlParameter p_maxAge_Parameter = ObjDBManager.CreateSqlParameter("p_maxAge", p_maxAge, SqlDbType.TinyInt, ParameterDirection.Input);
			sqlParameters.Add(p_maxAge_Parameter);
			SqlParameter p_retirementAge_Parameter = ObjDBManager.CreateSqlParameter("p_retirementAge", p_retirementAge, SqlDbType.TinyInt, ParameterDirection.Input);
			sqlParameters.Add(p_retirementAge_Parameter);
			SqlParameter p_effectiveFrom_Parameter = ObjDBManager.CreateSqlParameter("p_effectiveFrom", p_effectiveFrom, SqlDbType.DateTime, ParameterDirection.Input);
			sqlParameters.Add(p_effectiveFrom_Parameter);
			SqlParameter p_effectiveTill_Parameter = ObjDBManager.CreateSqlParameter("p_effectiveTill", p_effectiveTill, SqlDbType.DateTime, ParameterDirection.Input);
			sqlParameters.Add(p_effectiveTill_Parameter);
			SqlParameter p_designationID_Parameter = ObjDBManager.CreateSqlParameter("p_designationID", p_designationID, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(p_designationID_Parameter);
			SqlParameter p_txn_ts_Parameter = ObjDBManager.CreateSqlParameter("p_txn_ts", p_txn_ts, SqlDbType.BigInt, ParameterDirection.Input);
			sqlParameters.Add(p_txn_ts_Parameter);
			SqlParameter p_isUpdate_Parameter = ObjDBManager.CreateSqlParameter("p_isUpdate", p_isUpdate, SqlDbType.Bit, ParameterDirection.Input);
			sqlParameters.Add(p_isUpdate_Parameter);
			string taskString = ObjDBManager.GetPrintableSQLString("InsUpdDesignations", sqlParameters);

			return taskString;
		}
		
		
		
public DataSet InsUpdDistrictsOrCities(System.String p_distCityCode, 
		                                            System.String p_distCityName, 
		                                            System.Int32? p_stateID, 
		                                            System.DateTime? p_effectiveFrom, 
		                                            System.DateTime? p_effectiveTill, 
		                                            System.Int32? p_distCityID, 
		                                            System.Int64? p_txn_ts, 
		                                            System.Boolean? p_isUpdate)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter p_distCityCode_Parameter = ObjDBManager.CreateSqlParameter("p_distCityCode", p_distCityCode, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_distCityCode_Parameter);
			SqlParameter p_distCityName_Parameter = ObjDBManager.CreateSqlParameter("p_distCityName", p_distCityName, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_distCityName_Parameter);
			SqlParameter p_stateID_Parameter = ObjDBManager.CreateSqlParameter("p_stateID", p_stateID, SqlDbType.Int, ParameterDirection.Input);
			sqlParameters.Add(p_stateID_Parameter);
			SqlParameter p_effectiveFrom_Parameter = ObjDBManager.CreateSqlParameter("p_effectiveFrom", p_effectiveFrom, SqlDbType.DateTime, ParameterDirection.Input);
			sqlParameters.Add(p_effectiveFrom_Parameter);
			SqlParameter p_effectiveTill_Parameter = ObjDBManager.CreateSqlParameter("p_effectiveTill", p_effectiveTill, SqlDbType.DateTime, ParameterDirection.Input);
			sqlParameters.Add(p_effectiveTill_Parameter);
			SqlParameter p_distCityID_Parameter = ObjDBManager.CreateSqlParameter("p_distCityID", p_distCityID, SqlDbType.Int, ParameterDirection.Input);
			sqlParameters.Add(p_distCityID_Parameter);
			SqlParameter p_txn_ts_Parameter = ObjDBManager.CreateSqlParameter("p_txn_ts", p_txn_ts, SqlDbType.BigInt, ParameterDirection.Input);
			sqlParameters.Add(p_txn_ts_Parameter);
			SqlParameter p_isUpdate_Parameter = ObjDBManager.CreateSqlParameter("p_isUpdate", p_isUpdate, SqlDbType.Bit, ParameterDirection.Input);
			sqlParameters.Add(p_isUpdate_Parameter);
			DataSet dset = ObjDBManager.ExecuteStoredProc("InsUpdDistrictsOrCities", sqlParameters);

			return dset;
		}
		
public string InsUpdDistrictsOrCitiesAsTask(System.String p_distCityCode, 
		                                                System.String p_distCityName, 
		                                                System.Int32? p_stateID, 
		                                                System.DateTime? p_effectiveFrom, 
		                                                System.DateTime? p_effectiveTill, 
		                                                System.Int32? p_distCityID, 
		                                                System.Int64? p_txn_ts, 
		                                                System.Boolean? p_isUpdate)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter p_distCityCode_Parameter = ObjDBManager.CreateSqlParameter("p_distCityCode", p_distCityCode, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_distCityCode_Parameter);
			SqlParameter p_distCityName_Parameter = ObjDBManager.CreateSqlParameter("p_distCityName", p_distCityName, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_distCityName_Parameter);
			SqlParameter p_stateID_Parameter = ObjDBManager.CreateSqlParameter("p_stateID", p_stateID, SqlDbType.Int, ParameterDirection.Input);
			sqlParameters.Add(p_stateID_Parameter);
			SqlParameter p_effectiveFrom_Parameter = ObjDBManager.CreateSqlParameter("p_effectiveFrom", p_effectiveFrom, SqlDbType.DateTime, ParameterDirection.Input);
			sqlParameters.Add(p_effectiveFrom_Parameter);
			SqlParameter p_effectiveTill_Parameter = ObjDBManager.CreateSqlParameter("p_effectiveTill", p_effectiveTill, SqlDbType.DateTime, ParameterDirection.Input);
			sqlParameters.Add(p_effectiveTill_Parameter);
			SqlParameter p_distCityID_Parameter = ObjDBManager.CreateSqlParameter("p_distCityID", p_distCityID, SqlDbType.Int, ParameterDirection.Input);
			sqlParameters.Add(p_distCityID_Parameter);
			SqlParameter p_txn_ts_Parameter = ObjDBManager.CreateSqlParameter("p_txn_ts", p_txn_ts, SqlDbType.BigInt, ParameterDirection.Input);
			sqlParameters.Add(p_txn_ts_Parameter);
			SqlParameter p_isUpdate_Parameter = ObjDBManager.CreateSqlParameter("p_isUpdate", p_isUpdate, SqlDbType.Bit, ParameterDirection.Input);
			sqlParameters.Add(p_isUpdate_Parameter);
			string taskString = ObjDBManager.GetPrintableSQLString("InsUpdDistrictsOrCities", sqlParameters);

			return taskString;
		}
		
		
		
public DataSet InsUpdEpabxLines(System.String p_ExtensionNo, 
		                                    System.String p_prevExtensionNo, 
		                                    System.DateTime? p_effectiveFrom, 
		                                    System.DateTime? p_effectiveTill, 
		                                    System.Int64? p_txn_ts, 
		                                    System.Boolean? p_isUpdate)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter p_ExtensionNo_Parameter = ObjDBManager.CreateSqlParameter("p_ExtensionNo", p_ExtensionNo, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_ExtensionNo_Parameter);
			SqlParameter p_prevExtensionNo_Parameter = ObjDBManager.CreateSqlParameter("p_prevExtensionNo", p_prevExtensionNo, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_prevExtensionNo_Parameter);
			SqlParameter p_effectiveFrom_Parameter = ObjDBManager.CreateSqlParameter("p_effectiveFrom", p_effectiveFrom, SqlDbType.DateTime, ParameterDirection.Input);
			sqlParameters.Add(p_effectiveFrom_Parameter);
			SqlParameter p_effectiveTill_Parameter = ObjDBManager.CreateSqlParameter("p_effectiveTill", p_effectiveTill, SqlDbType.DateTime, ParameterDirection.Input);
			sqlParameters.Add(p_effectiveTill_Parameter);
			SqlParameter p_txn_ts_Parameter = ObjDBManager.CreateSqlParameter("p_txn_ts", p_txn_ts, SqlDbType.BigInt, ParameterDirection.Input);
			sqlParameters.Add(p_txn_ts_Parameter);
			SqlParameter p_isUpdate_Parameter = ObjDBManager.CreateSqlParameter("p_isUpdate", p_isUpdate, SqlDbType.Bit, ParameterDirection.Input);
			sqlParameters.Add(p_isUpdate_Parameter);
			DataSet dset = ObjDBManager.ExecuteStoredProc("InsUpdEpabxLines", sqlParameters);

			return dset;
		}
		
public string InsUpdEpabxLinesAsTask(System.String p_ExtensionNo, 
		                                        System.String p_prevExtensionNo, 
		                                        System.DateTime? p_effectiveFrom, 
		                                        System.DateTime? p_effectiveTill, 
		                                        System.Int64? p_txn_ts, 
		                                        System.Boolean? p_isUpdate)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter p_ExtensionNo_Parameter = ObjDBManager.CreateSqlParameter("p_ExtensionNo", p_ExtensionNo, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_ExtensionNo_Parameter);
			SqlParameter p_prevExtensionNo_Parameter = ObjDBManager.CreateSqlParameter("p_prevExtensionNo", p_prevExtensionNo, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_prevExtensionNo_Parameter);
			SqlParameter p_effectiveFrom_Parameter = ObjDBManager.CreateSqlParameter("p_effectiveFrom", p_effectiveFrom, SqlDbType.DateTime, ParameterDirection.Input);
			sqlParameters.Add(p_effectiveFrom_Parameter);
			SqlParameter p_effectiveTill_Parameter = ObjDBManager.CreateSqlParameter("p_effectiveTill", p_effectiveTill, SqlDbType.DateTime, ParameterDirection.Input);
			sqlParameters.Add(p_effectiveTill_Parameter);
			SqlParameter p_txn_ts_Parameter = ObjDBManager.CreateSqlParameter("p_txn_ts", p_txn_ts, SqlDbType.BigInt, ParameterDirection.Input);
			sqlParameters.Add(p_txn_ts_Parameter);
			SqlParameter p_isUpdate_Parameter = ObjDBManager.CreateSqlParameter("p_isUpdate", p_isUpdate, SqlDbType.Bit, ParameterDirection.Input);
			sqlParameters.Add(p_isUpdate_Parameter);
			string taskString = ObjDBManager.GetPrintableSQLString("InsUpdEpabxLines", sqlParameters);

			return taskString;
		}
		
		
		
public DataSet InsUpdGenPersons(System.String p_title, 
		                                    System.String p_firstName, 
		                                    System.String p_middleName, 
		                                    System.String p_lastName, 
		                                    System.String p_deraResident, 
		                                    System.DateTime? p_birthDate, 
		                                    System.String p_gender, 
		                                    System.String p_contactInfo, 
		                                    System.String p_email, 
		                                    System.String p_addInfo, 
		                                    System.String p_package_id, 
		                                    System.String p_screenID, 
		                                    System.Int32? p_initiationID, 
		                                    System.DateTime? p_effectiveFrom, 
		                                    System.DateTime? p_effectiveTill, 
		                                    ref System.Int32 p_personID, 
		                                    System.Int64? p_txn_ts, 
		                                    System.Boolean? p_isUpdate)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter p_title_Parameter = ObjDBManager.CreateSqlParameter("p_title", p_title, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_title_Parameter);
			SqlParameter p_firstName_Parameter = ObjDBManager.CreateSqlParameter("p_firstName", p_firstName, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_firstName_Parameter);
			SqlParameter p_middleName_Parameter = ObjDBManager.CreateSqlParameter("p_middleName", p_middleName, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_middleName_Parameter);
			SqlParameter p_lastName_Parameter = ObjDBManager.CreateSqlParameter("p_lastName", p_lastName, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_lastName_Parameter);
			SqlParameter p_deraResident_Parameter = ObjDBManager.CreateSqlParameter("p_deraResident", p_deraResident, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_deraResident_Parameter);
			SqlParameter p_birthDate_Parameter = ObjDBManager.CreateSqlParameter("p_birthDate", p_birthDate, SqlDbType.SmallDateTime, ParameterDirection.Input);
			sqlParameters.Add(p_birthDate_Parameter);
			SqlParameter p_gender_Parameter = ObjDBManager.CreateSqlParameter("p_gender", p_gender, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_gender_Parameter);
			SqlParameter p_contactInfo_Parameter = ObjDBManager.CreateSqlParameter("p_contactInfo", p_contactInfo, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_contactInfo_Parameter);
			SqlParameter p_email_Parameter = ObjDBManager.CreateSqlParameter("p_email", p_email, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_email_Parameter);
			SqlParameter p_addInfo_Parameter = ObjDBManager.CreateSqlParameter("p_addInfo", p_addInfo, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_addInfo_Parameter);
			SqlParameter p_package_id_Parameter = ObjDBManager.CreateSqlParameter("p_package_id", p_package_id, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_package_id_Parameter);
			SqlParameter p_screenID_Parameter = ObjDBManager.CreateSqlParameter("p_screenID", p_screenID, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_screenID_Parameter);
			SqlParameter p_initiationID_Parameter = ObjDBManager.CreateSqlParameter("p_initiationID", p_initiationID, SqlDbType.Int, ParameterDirection.Input);
			sqlParameters.Add(p_initiationID_Parameter);
			SqlParameter p_effectiveFrom_Parameter = ObjDBManager.CreateSqlParameter("p_effectiveFrom", p_effectiveFrom, SqlDbType.DateTime, ParameterDirection.Input);
			sqlParameters.Add(p_effectiveFrom_Parameter);
			SqlParameter p_effectiveTill_Parameter = ObjDBManager.CreateSqlParameter("p_effectiveTill", p_effectiveTill, SqlDbType.DateTime, ParameterDirection.Input);
			sqlParameters.Add(p_effectiveTill_Parameter);
			SqlParameter p_personID_Parameter = ObjDBManager.CreateSqlParameter("p_personID", p_personID, SqlDbType.Int, ParameterDirection.Output);
			sqlParameters.Add(p_personID_Parameter);
			SqlParameter p_txn_ts_Parameter = ObjDBManager.CreateSqlParameter("p_txn_ts", p_txn_ts, SqlDbType.BigInt, ParameterDirection.Input);
			sqlParameters.Add(p_txn_ts_Parameter);
			SqlParameter p_isUpdate_Parameter = ObjDBManager.CreateSqlParameter("p_isUpdate", p_isUpdate, SqlDbType.Bit, ParameterDirection.Input);
			sqlParameters.Add(p_isUpdate_Parameter);
			DataSet dset = ObjDBManager.ExecuteStoredProc("InsUpdGenPersons", sqlParameters);
			p_personID = (System.Int32)p_personID_Parameter.Value;

			return dset;
		}
		
public string InsUpdGenPersonsAsTask(System.String p_title, 
		                                        System.String p_firstName, 
		                                        System.String p_middleName, 
		                                        System.String p_lastName, 
		                                        System.String p_deraResident, 
		                                        System.DateTime? p_birthDate, 
		                                        System.String p_gender, 
		                                        System.String p_contactInfo, 
		                                        System.String p_email, 
		                                        System.String p_addInfo, 
		                                        System.String p_package_id, 
		                                        System.String p_screenID, 
		                                        System.Int32? p_initiationID, 
		                                        System.DateTime? p_effectiveFrom, 
		                                        System.DateTime? p_effectiveTill, 
		                                        ref System.Int32 p_personID, 
		                                        System.Int64? p_txn_ts, 
		                                        System.Boolean? p_isUpdate)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter p_title_Parameter = ObjDBManager.CreateSqlParameter("p_title", p_title, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_title_Parameter);
			SqlParameter p_firstName_Parameter = ObjDBManager.CreateSqlParameter("p_firstName", p_firstName, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_firstName_Parameter);
			SqlParameter p_middleName_Parameter = ObjDBManager.CreateSqlParameter("p_middleName", p_middleName, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_middleName_Parameter);
			SqlParameter p_lastName_Parameter = ObjDBManager.CreateSqlParameter("p_lastName", p_lastName, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_lastName_Parameter);
			SqlParameter p_deraResident_Parameter = ObjDBManager.CreateSqlParameter("p_deraResident", p_deraResident, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_deraResident_Parameter);
			SqlParameter p_birthDate_Parameter = ObjDBManager.CreateSqlParameter("p_birthDate", p_birthDate, SqlDbType.SmallDateTime, ParameterDirection.Input);
			sqlParameters.Add(p_birthDate_Parameter);
			SqlParameter p_gender_Parameter = ObjDBManager.CreateSqlParameter("p_gender", p_gender, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_gender_Parameter);
			SqlParameter p_contactInfo_Parameter = ObjDBManager.CreateSqlParameter("p_contactInfo", p_contactInfo, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_contactInfo_Parameter);
			SqlParameter p_email_Parameter = ObjDBManager.CreateSqlParameter("p_email", p_email, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_email_Parameter);
			SqlParameter p_addInfo_Parameter = ObjDBManager.CreateSqlParameter("p_addInfo", p_addInfo, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_addInfo_Parameter);
			SqlParameter p_package_id_Parameter = ObjDBManager.CreateSqlParameter("p_package_id", p_package_id, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_package_id_Parameter);
			SqlParameter p_screenID_Parameter = ObjDBManager.CreateSqlParameter("p_screenID", p_screenID, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_screenID_Parameter);
			SqlParameter p_initiationID_Parameter = ObjDBManager.CreateSqlParameter("p_initiationID", p_initiationID, SqlDbType.Int, ParameterDirection.Input);
			sqlParameters.Add(p_initiationID_Parameter);
			SqlParameter p_effectiveFrom_Parameter = ObjDBManager.CreateSqlParameter("p_effectiveFrom", p_effectiveFrom, SqlDbType.DateTime, ParameterDirection.Input);
			sqlParameters.Add(p_effectiveFrom_Parameter);
			SqlParameter p_effectiveTill_Parameter = ObjDBManager.CreateSqlParameter("p_effectiveTill", p_effectiveTill, SqlDbType.DateTime, ParameterDirection.Input);
			sqlParameters.Add(p_effectiveTill_Parameter);
			SqlParameter p_personID_Parameter = ObjDBManager.CreateSqlParameter("p_personID", p_personID, SqlDbType.Int, ParameterDirection.Output);
			sqlParameters.Add(p_personID_Parameter);
			SqlParameter p_txn_ts_Parameter = ObjDBManager.CreateSqlParameter("p_txn_ts", p_txn_ts, SqlDbType.BigInt, ParameterDirection.Input);
			sqlParameters.Add(p_txn_ts_Parameter);
			SqlParameter p_isUpdate_Parameter = ObjDBManager.CreateSqlParameter("p_isUpdate", p_isUpdate, SqlDbType.Bit, ParameterDirection.Input);
			sqlParameters.Add(p_isUpdate_Parameter);
			string taskString = ObjDBManager.GetPrintableSQLString("InsUpdGenPersons", sqlParameters);
			p_personID = (System.Int32)p_personID_Parameter.Value;

			return taskString;
		}
		
		
		
public DataSet InsUpdMeasuringUnits(System.String p_measuringUnitCode, 
		                                        System.String p_measuringUnitName, 
		                                        System.Byte? p_decimals, 
		                                        System.String p_numberFormat, 
		                                        System.DateTime? p_effectiveFrom, 
		                                        System.DateTime? p_effectiveTill, 
		                                        System.Int16? p_measuring_unit_id, 
		                                        System.Int64? p_txn_ts, 
		                                        System.Boolean? p_isUpdate)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter p_measuringUnitCode_Parameter = ObjDBManager.CreateSqlParameter("p_measuringUnitCode", p_measuringUnitCode, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_measuringUnitCode_Parameter);
			SqlParameter p_measuringUnitName_Parameter = ObjDBManager.CreateSqlParameter("p_measuringUnitName", p_measuringUnitName, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_measuringUnitName_Parameter);
			SqlParameter p_decimals_Parameter = ObjDBManager.CreateSqlParameter("p_decimals", p_decimals, SqlDbType.TinyInt, ParameterDirection.Input);
			sqlParameters.Add(p_decimals_Parameter);
			SqlParameter p_numberFormat_Parameter = ObjDBManager.CreateSqlParameter("p_numberFormat", p_numberFormat, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_numberFormat_Parameter);
			SqlParameter p_effectiveFrom_Parameter = ObjDBManager.CreateSqlParameter("p_effectiveFrom", p_effectiveFrom, SqlDbType.DateTime, ParameterDirection.Input);
			sqlParameters.Add(p_effectiveFrom_Parameter);
			SqlParameter p_effectiveTill_Parameter = ObjDBManager.CreateSqlParameter("p_effectiveTill", p_effectiveTill, SqlDbType.DateTime, ParameterDirection.Input);
			sqlParameters.Add(p_effectiveTill_Parameter);
			SqlParameter p_measuring_unit_id_Parameter = ObjDBManager.CreateSqlParameter("p_measuring_unit_id", p_measuring_unit_id, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(p_measuring_unit_id_Parameter);
			SqlParameter p_txn_ts_Parameter = ObjDBManager.CreateSqlParameter("p_txn_ts", p_txn_ts, SqlDbType.BigInt, ParameterDirection.Input);
			sqlParameters.Add(p_txn_ts_Parameter);
			SqlParameter p_isUpdate_Parameter = ObjDBManager.CreateSqlParameter("p_isUpdate", p_isUpdate, SqlDbType.Bit, ParameterDirection.Input);
			sqlParameters.Add(p_isUpdate_Parameter);
			DataSet dset = ObjDBManager.ExecuteStoredProc("InsUpdMeasuringUnits", sqlParameters);

			return dset;
		}
		
public string InsUpdMeasuringUnitsAsTask(System.String p_measuringUnitCode, 
		                                            System.String p_measuringUnitName, 
		                                            System.Byte? p_decimals, 
		                                            System.String p_numberFormat, 
		                                            System.DateTime? p_effectiveFrom, 
		                                            System.DateTime? p_effectiveTill, 
		                                            System.Int16? p_measuring_unit_id, 
		                                            System.Int64? p_txn_ts, 
		                                            System.Boolean? p_isUpdate)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter p_measuringUnitCode_Parameter = ObjDBManager.CreateSqlParameter("p_measuringUnitCode", p_measuringUnitCode, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_measuringUnitCode_Parameter);
			SqlParameter p_measuringUnitName_Parameter = ObjDBManager.CreateSqlParameter("p_measuringUnitName", p_measuringUnitName, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_measuringUnitName_Parameter);
			SqlParameter p_decimals_Parameter = ObjDBManager.CreateSqlParameter("p_decimals", p_decimals, SqlDbType.TinyInt, ParameterDirection.Input);
			sqlParameters.Add(p_decimals_Parameter);
			SqlParameter p_numberFormat_Parameter = ObjDBManager.CreateSqlParameter("p_numberFormat", p_numberFormat, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_numberFormat_Parameter);
			SqlParameter p_effectiveFrom_Parameter = ObjDBManager.CreateSqlParameter("p_effectiveFrom", p_effectiveFrom, SqlDbType.DateTime, ParameterDirection.Input);
			sqlParameters.Add(p_effectiveFrom_Parameter);
			SqlParameter p_effectiveTill_Parameter = ObjDBManager.CreateSqlParameter("p_effectiveTill", p_effectiveTill, SqlDbType.DateTime, ParameterDirection.Input);
			sqlParameters.Add(p_effectiveTill_Parameter);
			SqlParameter p_measuring_unit_id_Parameter = ObjDBManager.CreateSqlParameter("p_measuring_unit_id", p_measuring_unit_id, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(p_measuring_unit_id_Parameter);
			SqlParameter p_txn_ts_Parameter = ObjDBManager.CreateSqlParameter("p_txn_ts", p_txn_ts, SqlDbType.BigInt, ParameterDirection.Input);
			sqlParameters.Add(p_txn_ts_Parameter);
			SqlParameter p_isUpdate_Parameter = ObjDBManager.CreateSqlParameter("p_isUpdate", p_isUpdate, SqlDbType.Bit, ParameterDirection.Input);
			sqlParameters.Add(p_isUpdate_Parameter);
			string taskString = ObjDBManager.GetPrintableSQLString("InsUpdMeasuringUnits", sqlParameters);

			return taskString;
		}
		
		
		
public DataSet InsUpdOccupations(System.String p_occupationCode, 
		                                    System.String p_occupationName, 
		                                    System.DateTime? p_effectiveFrom, 
		                                    System.DateTime? p_effectiveTill, 
		                                    System.Int16? p_occupationID, 
		                                    System.Int64? p_txn_ts, 
		                                    System.Boolean? p_isUpdate)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter p_occupationCode_Parameter = ObjDBManager.CreateSqlParameter("p_occupationCode", p_occupationCode, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_occupationCode_Parameter);
			SqlParameter p_occupationName_Parameter = ObjDBManager.CreateSqlParameter("p_occupationName", p_occupationName, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_occupationName_Parameter);
			SqlParameter p_effectiveFrom_Parameter = ObjDBManager.CreateSqlParameter("p_effectiveFrom", p_effectiveFrom, SqlDbType.DateTime, ParameterDirection.Input);
			sqlParameters.Add(p_effectiveFrom_Parameter);
			SqlParameter p_effectiveTill_Parameter = ObjDBManager.CreateSqlParameter("p_effectiveTill", p_effectiveTill, SqlDbType.DateTime, ParameterDirection.Input);
			sqlParameters.Add(p_effectiveTill_Parameter);
			SqlParameter p_occupationID_Parameter = ObjDBManager.CreateSqlParameter("p_occupationID", p_occupationID, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(p_occupationID_Parameter);
			SqlParameter p_txn_ts_Parameter = ObjDBManager.CreateSqlParameter("p_txn_ts", p_txn_ts, SqlDbType.BigInt, ParameterDirection.Input);
			sqlParameters.Add(p_txn_ts_Parameter);
			SqlParameter p_isUpdate_Parameter = ObjDBManager.CreateSqlParameter("p_isUpdate", p_isUpdate, SqlDbType.Bit, ParameterDirection.Input);
			sqlParameters.Add(p_isUpdate_Parameter);
			DataSet dset = ObjDBManager.ExecuteStoredProc("InsUpdOccupations", sqlParameters);

			return dset;
		}
		
public string InsUpdOccupationsAsTask(System.String p_occupationCode, 
		                                            System.String p_occupationName, 
		                                            System.DateTime? p_effectiveFrom, 
		                                            System.DateTime? p_effectiveTill, 
		                                            System.Int16? p_occupationID, 
		                                            System.Int64? p_txn_ts, 
		                                            System.Boolean? p_isUpdate)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter p_occupationCode_Parameter = ObjDBManager.CreateSqlParameter("p_occupationCode", p_occupationCode, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_occupationCode_Parameter);
			SqlParameter p_occupationName_Parameter = ObjDBManager.CreateSqlParameter("p_occupationName", p_occupationName, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_occupationName_Parameter);
			SqlParameter p_effectiveFrom_Parameter = ObjDBManager.CreateSqlParameter("p_effectiveFrom", p_effectiveFrom, SqlDbType.DateTime, ParameterDirection.Input);
			sqlParameters.Add(p_effectiveFrom_Parameter);
			SqlParameter p_effectiveTill_Parameter = ObjDBManager.CreateSqlParameter("p_effectiveTill", p_effectiveTill, SqlDbType.DateTime, ParameterDirection.Input);
			sqlParameters.Add(p_effectiveTill_Parameter);
			SqlParameter p_occupationID_Parameter = ObjDBManager.CreateSqlParameter("p_occupationID", p_occupationID, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(p_occupationID_Parameter);
			SqlParameter p_txn_ts_Parameter = ObjDBManager.CreateSqlParameter("p_txn_ts", p_txn_ts, SqlDbType.BigInt, ParameterDirection.Input);
			sqlParameters.Add(p_txn_ts_Parameter);
			SqlParameter p_isUpdate_Parameter = ObjDBManager.CreateSqlParameter("p_isUpdate", p_isUpdate, SqlDbType.Bit, ParameterDirection.Input);
			sqlParameters.Add(p_isUpdate_Parameter);
			string taskString = ObjDBManager.GetPrintableSQLString("InsUpdOccupations", sqlParameters);

			return taskString;
		}
		
		
		
public DataSet InsUpdPersons(System.String p_title, 
		                                System.String p_firstName, 
		                                System.String p_middleName, 
		                                System.String p_lastName, 
		                                System.String p_deraResident, 
		                                System.DateTime? p_birthDate, 
		                                System.String p_gender, 
		                                System.String p_contactInfo, 
		                                System.String p_email, 
		                                System.String p_addInfo, 
		                                System.String p_package_id, 
		                                System.String p_screenID, 
		                                System.Int32? p_initiationID, 
		                                System.DateTime? p_effectiveFrom, 
		                                System.DateTime? p_effectiveTill, 
		                                ref System.Int32 p_personID, 
		                                System.Int64? p_txn_ts, 
		                                System.Boolean? p_isUpdate)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter p_title_Parameter = ObjDBManager.CreateSqlParameter("p_title", p_title, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_title_Parameter);
			SqlParameter p_firstName_Parameter = ObjDBManager.CreateSqlParameter("p_firstName", p_firstName, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_firstName_Parameter);
			SqlParameter p_middleName_Parameter = ObjDBManager.CreateSqlParameter("p_middleName", p_middleName, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_middleName_Parameter);
			SqlParameter p_lastName_Parameter = ObjDBManager.CreateSqlParameter("p_lastName", p_lastName, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_lastName_Parameter);
			SqlParameter p_deraResident_Parameter = ObjDBManager.CreateSqlParameter("p_deraResident", p_deraResident, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_deraResident_Parameter);
			SqlParameter p_birthDate_Parameter = ObjDBManager.CreateSqlParameter("p_birthDate", p_birthDate, SqlDbType.SmallDateTime, ParameterDirection.Input);
			sqlParameters.Add(p_birthDate_Parameter);
			SqlParameter p_gender_Parameter = ObjDBManager.CreateSqlParameter("p_gender", p_gender, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_gender_Parameter);
			SqlParameter p_contactInfo_Parameter = ObjDBManager.CreateSqlParameter("p_contactInfo", p_contactInfo, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_contactInfo_Parameter);
			SqlParameter p_email_Parameter = ObjDBManager.CreateSqlParameter("p_email", p_email, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_email_Parameter);
			SqlParameter p_addInfo_Parameter = ObjDBManager.CreateSqlParameter("p_addInfo", p_addInfo, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_addInfo_Parameter);
			SqlParameter p_package_id_Parameter = ObjDBManager.CreateSqlParameter("p_package_id", p_package_id, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_package_id_Parameter);
			SqlParameter p_screenID_Parameter = ObjDBManager.CreateSqlParameter("p_screenID", p_screenID, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_screenID_Parameter);
			SqlParameter p_initiationID_Parameter = ObjDBManager.CreateSqlParameter("p_initiationID", p_initiationID, SqlDbType.Int, ParameterDirection.Input);
			sqlParameters.Add(p_initiationID_Parameter);
			SqlParameter p_effectiveFrom_Parameter = ObjDBManager.CreateSqlParameter("p_effectiveFrom", p_effectiveFrom, SqlDbType.DateTime, ParameterDirection.Input);
			sqlParameters.Add(p_effectiveFrom_Parameter);
			SqlParameter p_effectiveTill_Parameter = ObjDBManager.CreateSqlParameter("p_effectiveTill", p_effectiveTill, SqlDbType.DateTime, ParameterDirection.Input);
			sqlParameters.Add(p_effectiveTill_Parameter);
			SqlParameter p_personID_Parameter = ObjDBManager.CreateSqlParameter("p_personID", p_personID, SqlDbType.Int, ParameterDirection.Output);
			sqlParameters.Add(p_personID_Parameter);
			SqlParameter p_txn_ts_Parameter = ObjDBManager.CreateSqlParameter("p_txn_ts", p_txn_ts, SqlDbType.BigInt, ParameterDirection.Input);
			sqlParameters.Add(p_txn_ts_Parameter);
			SqlParameter p_isUpdate_Parameter = ObjDBManager.CreateSqlParameter("p_isUpdate", p_isUpdate, SqlDbType.Bit, ParameterDirection.Input);
			sqlParameters.Add(p_isUpdate_Parameter);
			DataSet dset = ObjDBManager.ExecuteStoredProc("InsUpdPersons", sqlParameters);
			p_personID = (System.Int32)p_personID_Parameter.Value;

			return dset;
		}
		
public string InsUpdPersonsAsTask(System.String p_title, 
		                                        System.String p_firstName, 
		                                        System.String p_middleName, 
		                                        System.String p_lastName, 
		                                        System.String p_deraResident, 
		                                        System.DateTime? p_birthDate, 
		                                        System.String p_gender, 
		                                        System.String p_contactInfo, 
		                                        System.String p_email, 
		                                        System.String p_addInfo, 
		                                        System.String p_package_id, 
		                                        System.String p_screenID, 
		                                        System.Int32? p_initiationID, 
		                                        System.DateTime? p_effectiveFrom, 
		                                        System.DateTime? p_effectiveTill, 
		                                        ref System.Int32 p_personID, 
		                                        System.Int64? p_txn_ts, 
		                                        System.Boolean? p_isUpdate)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter p_title_Parameter = ObjDBManager.CreateSqlParameter("p_title", p_title, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_title_Parameter);
			SqlParameter p_firstName_Parameter = ObjDBManager.CreateSqlParameter("p_firstName", p_firstName, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_firstName_Parameter);
			SqlParameter p_middleName_Parameter = ObjDBManager.CreateSqlParameter("p_middleName", p_middleName, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_middleName_Parameter);
			SqlParameter p_lastName_Parameter = ObjDBManager.CreateSqlParameter("p_lastName", p_lastName, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_lastName_Parameter);
			SqlParameter p_deraResident_Parameter = ObjDBManager.CreateSqlParameter("p_deraResident", p_deraResident, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_deraResident_Parameter);
			SqlParameter p_birthDate_Parameter = ObjDBManager.CreateSqlParameter("p_birthDate", p_birthDate, SqlDbType.SmallDateTime, ParameterDirection.Input);
			sqlParameters.Add(p_birthDate_Parameter);
			SqlParameter p_gender_Parameter = ObjDBManager.CreateSqlParameter("p_gender", p_gender, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_gender_Parameter);
			SqlParameter p_contactInfo_Parameter = ObjDBManager.CreateSqlParameter("p_contactInfo", p_contactInfo, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_contactInfo_Parameter);
			SqlParameter p_email_Parameter = ObjDBManager.CreateSqlParameter("p_email", p_email, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_email_Parameter);
			SqlParameter p_addInfo_Parameter = ObjDBManager.CreateSqlParameter("p_addInfo", p_addInfo, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_addInfo_Parameter);
			SqlParameter p_package_id_Parameter = ObjDBManager.CreateSqlParameter("p_package_id", p_package_id, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_package_id_Parameter);
			SqlParameter p_screenID_Parameter = ObjDBManager.CreateSqlParameter("p_screenID", p_screenID, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_screenID_Parameter);
			SqlParameter p_initiationID_Parameter = ObjDBManager.CreateSqlParameter("p_initiationID", p_initiationID, SqlDbType.Int, ParameterDirection.Input);
			sqlParameters.Add(p_initiationID_Parameter);
			SqlParameter p_effectiveFrom_Parameter = ObjDBManager.CreateSqlParameter("p_effectiveFrom", p_effectiveFrom, SqlDbType.DateTime, ParameterDirection.Input);
			sqlParameters.Add(p_effectiveFrom_Parameter);
			SqlParameter p_effectiveTill_Parameter = ObjDBManager.CreateSqlParameter("p_effectiveTill", p_effectiveTill, SqlDbType.DateTime, ParameterDirection.Input);
			sqlParameters.Add(p_effectiveTill_Parameter);
			SqlParameter p_personID_Parameter = ObjDBManager.CreateSqlParameter("p_personID", p_personID, SqlDbType.Int, ParameterDirection.Output);
			sqlParameters.Add(p_personID_Parameter);
			SqlParameter p_txn_ts_Parameter = ObjDBManager.CreateSqlParameter("p_txn_ts", p_txn_ts, SqlDbType.BigInt, ParameterDirection.Input);
			sqlParameters.Add(p_txn_ts_Parameter);
			SqlParameter p_isUpdate_Parameter = ObjDBManager.CreateSqlParameter("p_isUpdate", p_isUpdate, SqlDbType.Bit, ParameterDirection.Input);
			sqlParameters.Add(p_isUpdate_Parameter);
			string taskString = ObjDBManager.GetPrintableSQLString("InsUpdPersons", sqlParameters);
			p_personID = (System.Int32)p_personID_Parameter.Value;

			return taskString;
		}
		
		
		
public DataSet InsUpdPostOffices(System.String p_post_office_code, 
		                                    System.String p_post_office_name, 
		                                    System.Int32? p_distCityID, 
		                                    System.String p_pinZipCode, 
		                                    System.String p_STDCode, 
		                                    System.DateTime? p_effectiveFrom, 
		                                    System.DateTime? p_effectiveTill, 
		                                    System.Int32? p_post_office_ID, 
		                                    System.Int64? p_txn_ts, 
		                                    System.Boolean? p_isUpdate)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter p_post_office_code_Parameter = ObjDBManager.CreateSqlParameter("p_post_office_code", p_post_office_code, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_post_office_code_Parameter);
			SqlParameter p_post_office_name_Parameter = ObjDBManager.CreateSqlParameter("p_post_office_name", p_post_office_name, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_post_office_name_Parameter);
			SqlParameter p_distCityID_Parameter = ObjDBManager.CreateSqlParameter("p_distCityID", p_distCityID, SqlDbType.Int, ParameterDirection.Input);
			sqlParameters.Add(p_distCityID_Parameter);
			SqlParameter p_pinZipCode_Parameter = ObjDBManager.CreateSqlParameter("p_pinZipCode", p_pinZipCode, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_pinZipCode_Parameter);
			SqlParameter p_STDCode_Parameter = ObjDBManager.CreateSqlParameter("p_STDCode", p_STDCode, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_STDCode_Parameter);
			SqlParameter p_effectiveFrom_Parameter = ObjDBManager.CreateSqlParameter("p_effectiveFrom", p_effectiveFrom, SqlDbType.DateTime, ParameterDirection.Input);
			sqlParameters.Add(p_effectiveFrom_Parameter);
			SqlParameter p_effectiveTill_Parameter = ObjDBManager.CreateSqlParameter("p_effectiveTill", p_effectiveTill, SqlDbType.DateTime, ParameterDirection.Input);
			sqlParameters.Add(p_effectiveTill_Parameter);
			SqlParameter p_post_office_ID_Parameter = ObjDBManager.CreateSqlParameter("p_post_office_ID", p_post_office_ID, SqlDbType.Int, ParameterDirection.Input);
			sqlParameters.Add(p_post_office_ID_Parameter);
			SqlParameter p_txn_ts_Parameter = ObjDBManager.CreateSqlParameter("p_txn_ts", p_txn_ts, SqlDbType.BigInt, ParameterDirection.Input);
			sqlParameters.Add(p_txn_ts_Parameter);
			SqlParameter p_isUpdate_Parameter = ObjDBManager.CreateSqlParameter("p_isUpdate", p_isUpdate, SqlDbType.Bit, ParameterDirection.Input);
			sqlParameters.Add(p_isUpdate_Parameter);
			DataSet dset = ObjDBManager.ExecuteStoredProc("InsUpdPostOffices", sqlParameters);

			return dset;
		}
		
public string InsUpdPostOfficesAsTask(System.String p_post_office_code, 
		                                            System.String p_post_office_name, 
		                                            System.Int32? p_distCityID, 
		                                            System.String p_pinZipCode, 
		                                            System.String p_STDCode, 
		                                            System.DateTime? p_effectiveFrom, 
		                                            System.DateTime? p_effectiveTill, 
		                                            System.Int32? p_post_office_ID, 
		                                            System.Int64? p_txn_ts, 
		                                            System.Boolean? p_isUpdate)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter p_post_office_code_Parameter = ObjDBManager.CreateSqlParameter("p_post_office_code", p_post_office_code, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_post_office_code_Parameter);
			SqlParameter p_post_office_name_Parameter = ObjDBManager.CreateSqlParameter("p_post_office_name", p_post_office_name, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_post_office_name_Parameter);
			SqlParameter p_distCityID_Parameter = ObjDBManager.CreateSqlParameter("p_distCityID", p_distCityID, SqlDbType.Int, ParameterDirection.Input);
			sqlParameters.Add(p_distCityID_Parameter);
			SqlParameter p_pinZipCode_Parameter = ObjDBManager.CreateSqlParameter("p_pinZipCode", p_pinZipCode, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_pinZipCode_Parameter);
			SqlParameter p_STDCode_Parameter = ObjDBManager.CreateSqlParameter("p_STDCode", p_STDCode, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_STDCode_Parameter);
			SqlParameter p_effectiveFrom_Parameter = ObjDBManager.CreateSqlParameter("p_effectiveFrom", p_effectiveFrom, SqlDbType.DateTime, ParameterDirection.Input);
			sqlParameters.Add(p_effectiveFrom_Parameter);
			SqlParameter p_effectiveTill_Parameter = ObjDBManager.CreateSqlParameter("p_effectiveTill", p_effectiveTill, SqlDbType.DateTime, ParameterDirection.Input);
			sqlParameters.Add(p_effectiveTill_Parameter);
			SqlParameter p_post_office_ID_Parameter = ObjDBManager.CreateSqlParameter("p_post_office_ID", p_post_office_ID, SqlDbType.Int, ParameterDirection.Input);
			sqlParameters.Add(p_post_office_ID_Parameter);
			SqlParameter p_txn_ts_Parameter = ObjDBManager.CreateSqlParameter("p_txn_ts", p_txn_ts, SqlDbType.BigInt, ParameterDirection.Input);
			sqlParameters.Add(p_txn_ts_Parameter);
			SqlParameter p_isUpdate_Parameter = ObjDBManager.CreateSqlParameter("p_isUpdate", p_isUpdate, SqlDbType.Bit, ParameterDirection.Input);
			sqlParameters.Add(p_isUpdate_Parameter);
			string taskString = ObjDBManager.GetPrintableSQLString("InsUpdPostOffices", sqlParameters);

			return taskString;
		}
		
		
		
public DataSet InsUpdPTLines(System.String p_telephoneNo, 
		                                System.String p_prevTelephoneNo, 
		                                System.DateTime? p_effectiveFrom, 
		                                System.DateTime? p_effectiveTill, 
		                                System.Int64? p_txn_ts, 
		                                System.Boolean? p_isUpdate)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter p_telephoneNo_Parameter = ObjDBManager.CreateSqlParameter("p_telephoneNo", p_telephoneNo, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_telephoneNo_Parameter);
			SqlParameter p_prevTelephoneNo_Parameter = ObjDBManager.CreateSqlParameter("p_prevTelephoneNo", p_prevTelephoneNo, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_prevTelephoneNo_Parameter);
			SqlParameter p_effectiveFrom_Parameter = ObjDBManager.CreateSqlParameter("p_effectiveFrom", p_effectiveFrom, SqlDbType.DateTime, ParameterDirection.Input);
			sqlParameters.Add(p_effectiveFrom_Parameter);
			SqlParameter p_effectiveTill_Parameter = ObjDBManager.CreateSqlParameter("p_effectiveTill", p_effectiveTill, SqlDbType.DateTime, ParameterDirection.Input);
			sqlParameters.Add(p_effectiveTill_Parameter);
			SqlParameter p_txn_ts_Parameter = ObjDBManager.CreateSqlParameter("p_txn_ts", p_txn_ts, SqlDbType.BigInt, ParameterDirection.Input);
			sqlParameters.Add(p_txn_ts_Parameter);
			SqlParameter p_isUpdate_Parameter = ObjDBManager.CreateSqlParameter("p_isUpdate", p_isUpdate, SqlDbType.Bit, ParameterDirection.Input);
			sqlParameters.Add(p_isUpdate_Parameter);
			DataSet dset = ObjDBManager.ExecuteStoredProc("InsUpdPTLines", sqlParameters);

			return dset;
		}
		
public string InsUpdPTLinesAsTask(System.String p_telephoneNo, 
		                                        System.String p_prevTelephoneNo, 
		                                        System.DateTime? p_effectiveFrom, 
		                                        System.DateTime? p_effectiveTill, 
		                                        System.Int64? p_txn_ts, 
		                                        System.Boolean? p_isUpdate)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter p_telephoneNo_Parameter = ObjDBManager.CreateSqlParameter("p_telephoneNo", p_telephoneNo, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_telephoneNo_Parameter);
			SqlParameter p_prevTelephoneNo_Parameter = ObjDBManager.CreateSqlParameter("p_prevTelephoneNo", p_prevTelephoneNo, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_prevTelephoneNo_Parameter);
			SqlParameter p_effectiveFrom_Parameter = ObjDBManager.CreateSqlParameter("p_effectiveFrom", p_effectiveFrom, SqlDbType.DateTime, ParameterDirection.Input);
			sqlParameters.Add(p_effectiveFrom_Parameter);
			SqlParameter p_effectiveTill_Parameter = ObjDBManager.CreateSqlParameter("p_effectiveTill", p_effectiveTill, SqlDbType.DateTime, ParameterDirection.Input);
			sqlParameters.Add(p_effectiveTill_Parameter);
			SqlParameter p_txn_ts_Parameter = ObjDBManager.CreateSqlParameter("p_txn_ts", p_txn_ts, SqlDbType.BigInt, ParameterDirection.Input);
			sqlParameters.Add(p_txn_ts_Parameter);
			SqlParameter p_isUpdate_Parameter = ObjDBManager.CreateSqlParameter("p_isUpdate", p_isUpdate, SqlDbType.Bit, ParameterDirection.Input);
			sqlParameters.Add(p_isUpdate_Parameter);
			string taskString = ObjDBManager.GetPrintableSQLString("InsUpdPTLines", sqlParameters);

			return taskString;
		}
		
		
		
public DataSet InsUpdRelations(System.String p_relationName, 
		                                    System.DateTime? p_effectiveFrom, 
		                                    System.DateTime? p_effectiveTill, 
		                                    System.Int16? p_relationId, 
		                                    System.Int64? p_txn_ts, 
		                                    System.Boolean? p_isUpdate)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter p_relationName_Parameter = ObjDBManager.CreateSqlParameter("p_relationName", p_relationName, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_relationName_Parameter);
			SqlParameter p_effectiveFrom_Parameter = ObjDBManager.CreateSqlParameter("p_effectiveFrom", p_effectiveFrom, SqlDbType.DateTime, ParameterDirection.Input);
			sqlParameters.Add(p_effectiveFrom_Parameter);
			SqlParameter p_effectiveTill_Parameter = ObjDBManager.CreateSqlParameter("p_effectiveTill", p_effectiveTill, SqlDbType.DateTime, ParameterDirection.Input);
			sqlParameters.Add(p_effectiveTill_Parameter);
			SqlParameter p_relationId_Parameter = ObjDBManager.CreateSqlParameter("p_relationId", p_relationId, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(p_relationId_Parameter);
			SqlParameter p_txn_ts_Parameter = ObjDBManager.CreateSqlParameter("p_txn_ts", p_txn_ts, SqlDbType.BigInt, ParameterDirection.Input);
			sqlParameters.Add(p_txn_ts_Parameter);
			SqlParameter p_isUpdate_Parameter = ObjDBManager.CreateSqlParameter("p_isUpdate", p_isUpdate, SqlDbType.Bit, ParameterDirection.Input);
			sqlParameters.Add(p_isUpdate_Parameter);
			DataSet dset = ObjDBManager.ExecuteStoredProc("InsUpdRelations", sqlParameters);

			return dset;
		}
		
public string InsUpdRelationsAsTask(System.String p_relationName, 
		                                        System.DateTime? p_effectiveFrom, 
		                                        System.DateTime? p_effectiveTill, 
		                                        System.Int16? p_relationId, 
		                                        System.Int64? p_txn_ts, 
		                                        System.Boolean? p_isUpdate)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter p_relationName_Parameter = ObjDBManager.CreateSqlParameter("p_relationName", p_relationName, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_relationName_Parameter);
			SqlParameter p_effectiveFrom_Parameter = ObjDBManager.CreateSqlParameter("p_effectiveFrom", p_effectiveFrom, SqlDbType.DateTime, ParameterDirection.Input);
			sqlParameters.Add(p_effectiveFrom_Parameter);
			SqlParameter p_effectiveTill_Parameter = ObjDBManager.CreateSqlParameter("p_effectiveTill", p_effectiveTill, SqlDbType.DateTime, ParameterDirection.Input);
			sqlParameters.Add(p_effectiveTill_Parameter);
			SqlParameter p_relationId_Parameter = ObjDBManager.CreateSqlParameter("p_relationId", p_relationId, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(p_relationId_Parameter);
			SqlParameter p_txn_ts_Parameter = ObjDBManager.CreateSqlParameter("p_txn_ts", p_txn_ts, SqlDbType.BigInt, ParameterDirection.Input);
			sqlParameters.Add(p_txn_ts_Parameter);
			SqlParameter p_isUpdate_Parameter = ObjDBManager.CreateSqlParameter("p_isUpdate", p_isUpdate, SqlDbType.Bit, ParameterDirection.Input);
			sqlParameters.Add(p_isUpdate_Parameter);
			string taskString = ObjDBManager.GetPrintableSQLString("InsUpdRelations", sqlParameters);

			return taskString;
		}
		
		
		
public DataSet InsUpdRepresentatives(System.String p_title, 
		                                        System.String p_firstName, 
		                                        System.String p_middleName, 
		                                        System.String p_lastName, 
		                                        System.String p_gender, 
		                                        System.DateTime? p_birthDate, 
		                                        System.String p_email, 
		                                        System.String p_territory, 
		                                        System.String p_address1, 
		                                        System.String p_address2, 
		                                        System.Int32? p_distCityID, 
		                                        System.String p_pinZipCode, 
		                                        System.String p_cell, 
		                                        System.String p_officePhone, 
		                                        System.String p_resPhone, 
		                                        System.String p_officeFax, 
		                                        System.String p_resFax, 
		                                        System.DateTime? p_effectiveFrom, 
		                                        System.DateTime? p_effectiveTill, 
		                                        System.Int64? p_txn_ts, 
		                                        System.Int64? p_per_txn_ts, 
		                                        System.String p_application_id, 
		                                        System.String p_screen_id, 
		                                        System.Int32? p_personID, 
		                                        System.Int32? p_representativeID, 
		                                        System.Boolean? p_isUpdate)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter p_title_Parameter = ObjDBManager.CreateSqlParameter("p_title", p_title, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_title_Parameter);
			SqlParameter p_firstName_Parameter = ObjDBManager.CreateSqlParameter("p_firstName", p_firstName, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_firstName_Parameter);
			SqlParameter p_middleName_Parameter = ObjDBManager.CreateSqlParameter("p_middleName", p_middleName, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_middleName_Parameter);
			SqlParameter p_lastName_Parameter = ObjDBManager.CreateSqlParameter("p_lastName", p_lastName, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_lastName_Parameter);
			SqlParameter p_gender_Parameter = ObjDBManager.CreateSqlParameter("p_gender", p_gender, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_gender_Parameter);
			SqlParameter p_birthDate_Parameter = ObjDBManager.CreateSqlParameter("p_birthDate", p_birthDate, SqlDbType.DateTime, ParameterDirection.Input);
			sqlParameters.Add(p_birthDate_Parameter);
			SqlParameter p_email_Parameter = ObjDBManager.CreateSqlParameter("p_email", p_email, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_email_Parameter);
			SqlParameter p_territory_Parameter = ObjDBManager.CreateSqlParameter("p_territory", p_territory, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_territory_Parameter);
			SqlParameter p_address1_Parameter = ObjDBManager.CreateSqlParameter("p_address1", p_address1, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_address1_Parameter);
			SqlParameter p_address2_Parameter = ObjDBManager.CreateSqlParameter("p_address2", p_address2, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_address2_Parameter);
			SqlParameter p_distCityID_Parameter = ObjDBManager.CreateSqlParameter("p_distCityID", p_distCityID, SqlDbType.Int, ParameterDirection.Input);
			sqlParameters.Add(p_distCityID_Parameter);
			SqlParameter p_pinZipCode_Parameter = ObjDBManager.CreateSqlParameter("p_pinZipCode", p_pinZipCode, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_pinZipCode_Parameter);
			SqlParameter p_cell_Parameter = ObjDBManager.CreateSqlParameter("p_cell", p_cell, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_cell_Parameter);
			SqlParameter p_officePhone_Parameter = ObjDBManager.CreateSqlParameter("p_officePhone", p_officePhone, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_officePhone_Parameter);
			SqlParameter p_resPhone_Parameter = ObjDBManager.CreateSqlParameter("p_resPhone", p_resPhone, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_resPhone_Parameter);
			SqlParameter p_officeFax_Parameter = ObjDBManager.CreateSqlParameter("p_officeFax", p_officeFax, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_officeFax_Parameter);
			SqlParameter p_resFax_Parameter = ObjDBManager.CreateSqlParameter("p_resFax", p_resFax, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_resFax_Parameter);
			SqlParameter p_effectiveFrom_Parameter = ObjDBManager.CreateSqlParameter("p_effectiveFrom", p_effectiveFrom, SqlDbType.DateTime, ParameterDirection.Input);
			sqlParameters.Add(p_effectiveFrom_Parameter);
			SqlParameter p_effectiveTill_Parameter = ObjDBManager.CreateSqlParameter("p_effectiveTill", p_effectiveTill, SqlDbType.DateTime, ParameterDirection.Input);
			sqlParameters.Add(p_effectiveTill_Parameter);
			SqlParameter p_txn_ts_Parameter = ObjDBManager.CreateSqlParameter("p_txn_ts", p_txn_ts, SqlDbType.BigInt, ParameterDirection.Input);
			sqlParameters.Add(p_txn_ts_Parameter);
			SqlParameter p_per_txn_ts_Parameter = ObjDBManager.CreateSqlParameter("p_per_txn_ts", p_per_txn_ts, SqlDbType.BigInt, ParameterDirection.Input);
			sqlParameters.Add(p_per_txn_ts_Parameter);
			SqlParameter p_application_id_Parameter = ObjDBManager.CreateSqlParameter("p_application_id", p_application_id, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_application_id_Parameter);
			SqlParameter p_screen_id_Parameter = ObjDBManager.CreateSqlParameter("p_screen_id", p_screen_id, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_screen_id_Parameter);
			SqlParameter p_personID_Parameter = ObjDBManager.CreateSqlParameter("p_personID", p_personID, SqlDbType.Int, ParameterDirection.Input);
			sqlParameters.Add(p_personID_Parameter);
			SqlParameter p_representativeID_Parameter = ObjDBManager.CreateSqlParameter("p_representativeID", p_representativeID, SqlDbType.Int, ParameterDirection.Input);
			sqlParameters.Add(p_representativeID_Parameter);
			SqlParameter p_isUpdate_Parameter = ObjDBManager.CreateSqlParameter("p_isUpdate", p_isUpdate, SqlDbType.Bit, ParameterDirection.Input);
			sqlParameters.Add(p_isUpdate_Parameter);
			DataSet dset = ObjDBManager.ExecuteStoredProc("InsUpdRepresentatives", sqlParameters);

			return dset;
		}
		
public string InsUpdRepresentativesAsTask(System.String p_title, 
		                                                System.String p_firstName, 
		                                                System.String p_middleName, 
		                                                System.String p_lastName, 
		                                                System.String p_gender, 
		                                                System.DateTime? p_birthDate, 
		                                                System.String p_email, 
		                                                System.String p_territory, 
		                                                System.String p_address1, 
		                                                System.String p_address2, 
		                                                System.Int32? p_distCityID, 
		                                                System.String p_pinZipCode, 
		                                                System.String p_cell, 
		                                                System.String p_officePhone, 
		                                                System.String p_resPhone, 
		                                                System.String p_officeFax, 
		                                                System.String p_resFax, 
		                                                System.DateTime? p_effectiveFrom, 
		                                                System.DateTime? p_effectiveTill, 
		                                                System.Int64? p_txn_ts, 
		                                                System.Int64? p_per_txn_ts, 
		                                                System.String p_application_id, 
		                                                System.String p_screen_id, 
		                                                System.Int32? p_personID, 
		                                                System.Int32? p_representativeID, 
		                                                System.Boolean? p_isUpdate)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter p_title_Parameter = ObjDBManager.CreateSqlParameter("p_title", p_title, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_title_Parameter);
			SqlParameter p_firstName_Parameter = ObjDBManager.CreateSqlParameter("p_firstName", p_firstName, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_firstName_Parameter);
			SqlParameter p_middleName_Parameter = ObjDBManager.CreateSqlParameter("p_middleName", p_middleName, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_middleName_Parameter);
			SqlParameter p_lastName_Parameter = ObjDBManager.CreateSqlParameter("p_lastName", p_lastName, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_lastName_Parameter);
			SqlParameter p_gender_Parameter = ObjDBManager.CreateSqlParameter("p_gender", p_gender, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_gender_Parameter);
			SqlParameter p_birthDate_Parameter = ObjDBManager.CreateSqlParameter("p_birthDate", p_birthDate, SqlDbType.DateTime, ParameterDirection.Input);
			sqlParameters.Add(p_birthDate_Parameter);
			SqlParameter p_email_Parameter = ObjDBManager.CreateSqlParameter("p_email", p_email, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_email_Parameter);
			SqlParameter p_territory_Parameter = ObjDBManager.CreateSqlParameter("p_territory", p_territory, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_territory_Parameter);
			SqlParameter p_address1_Parameter = ObjDBManager.CreateSqlParameter("p_address1", p_address1, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_address1_Parameter);
			SqlParameter p_address2_Parameter = ObjDBManager.CreateSqlParameter("p_address2", p_address2, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_address2_Parameter);
			SqlParameter p_distCityID_Parameter = ObjDBManager.CreateSqlParameter("p_distCityID", p_distCityID, SqlDbType.Int, ParameterDirection.Input);
			sqlParameters.Add(p_distCityID_Parameter);
			SqlParameter p_pinZipCode_Parameter = ObjDBManager.CreateSqlParameter("p_pinZipCode", p_pinZipCode, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_pinZipCode_Parameter);
			SqlParameter p_cell_Parameter = ObjDBManager.CreateSqlParameter("p_cell", p_cell, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_cell_Parameter);
			SqlParameter p_officePhone_Parameter = ObjDBManager.CreateSqlParameter("p_officePhone", p_officePhone, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_officePhone_Parameter);
			SqlParameter p_resPhone_Parameter = ObjDBManager.CreateSqlParameter("p_resPhone", p_resPhone, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_resPhone_Parameter);
			SqlParameter p_officeFax_Parameter = ObjDBManager.CreateSqlParameter("p_officeFax", p_officeFax, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_officeFax_Parameter);
			SqlParameter p_resFax_Parameter = ObjDBManager.CreateSqlParameter("p_resFax", p_resFax, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_resFax_Parameter);
			SqlParameter p_effectiveFrom_Parameter = ObjDBManager.CreateSqlParameter("p_effectiveFrom", p_effectiveFrom, SqlDbType.DateTime, ParameterDirection.Input);
			sqlParameters.Add(p_effectiveFrom_Parameter);
			SqlParameter p_effectiveTill_Parameter = ObjDBManager.CreateSqlParameter("p_effectiveTill", p_effectiveTill, SqlDbType.DateTime, ParameterDirection.Input);
			sqlParameters.Add(p_effectiveTill_Parameter);
			SqlParameter p_txn_ts_Parameter = ObjDBManager.CreateSqlParameter("p_txn_ts", p_txn_ts, SqlDbType.BigInt, ParameterDirection.Input);
			sqlParameters.Add(p_txn_ts_Parameter);
			SqlParameter p_per_txn_ts_Parameter = ObjDBManager.CreateSqlParameter("p_per_txn_ts", p_per_txn_ts, SqlDbType.BigInt, ParameterDirection.Input);
			sqlParameters.Add(p_per_txn_ts_Parameter);
			SqlParameter p_application_id_Parameter = ObjDBManager.CreateSqlParameter("p_application_id", p_application_id, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_application_id_Parameter);
			SqlParameter p_screen_id_Parameter = ObjDBManager.CreateSqlParameter("p_screen_id", p_screen_id, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_screen_id_Parameter);
			SqlParameter p_personID_Parameter = ObjDBManager.CreateSqlParameter("p_personID", p_personID, SqlDbType.Int, ParameterDirection.Input);
			sqlParameters.Add(p_personID_Parameter);
			SqlParameter p_representativeID_Parameter = ObjDBManager.CreateSqlParameter("p_representativeID", p_representativeID, SqlDbType.Int, ParameterDirection.Input);
			sqlParameters.Add(p_representativeID_Parameter);
			SqlParameter p_isUpdate_Parameter = ObjDBManager.CreateSqlParameter("p_isUpdate", p_isUpdate, SqlDbType.Bit, ParameterDirection.Input);
			sqlParameters.Add(p_isUpdate_Parameter);
			string taskString = ObjDBManager.GetPrintableSQLString("InsUpdRepresentatives", sqlParameters);

			return taskString;
		}
		
		
		
public DataSet InsUpdSatsangCentres(System.String p_satsang_centre_code, 
		                                        System.String p_satsang_centre_name, 
		                                        System.String p_satsang_centre_type, 
		                                        System.String p_address_1, 
		                                        System.String p_address_2, 
		                                        System.Int32? p_distCity_id, 
		                                        System.String p_pinZip_code, 
		                                        System.Int32? p_person_id, 
		                                        System.String p_telephone, 
		                                        System.String p_email, 
		                                        System.String p_fax, 
		                                        System.DateTime? p_effectiveFrom, 
		                                        System.DateTime? p_effectiveTill, 
		                                        System.Int32? p_satsang_centre_id, 
		                                        System.Int64? p_txn_ts, 
		                                        System.Boolean? p_isUpdate)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter p_satsang_centre_code_Parameter = ObjDBManager.CreateSqlParameter("p_satsang_centre_code", p_satsang_centre_code, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_satsang_centre_code_Parameter);
			SqlParameter p_satsang_centre_name_Parameter = ObjDBManager.CreateSqlParameter("p_satsang_centre_name", p_satsang_centre_name, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_satsang_centre_name_Parameter);
			SqlParameter p_satsang_centre_type_Parameter = ObjDBManager.CreateSqlParameter("p_satsang_centre_type", p_satsang_centre_type, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_satsang_centre_type_Parameter);
			SqlParameter p_address_1_Parameter = ObjDBManager.CreateSqlParameter("p_address_1", p_address_1, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_address_1_Parameter);
			SqlParameter p_address_2_Parameter = ObjDBManager.CreateSqlParameter("p_address_2", p_address_2, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_address_2_Parameter);
			SqlParameter p_distCity_id_Parameter = ObjDBManager.CreateSqlParameter("p_distCity_id", p_distCity_id, SqlDbType.Int, ParameterDirection.Input);
			sqlParameters.Add(p_distCity_id_Parameter);
			SqlParameter p_pinZip_code_Parameter = ObjDBManager.CreateSqlParameter("p_pinZip_code", p_pinZip_code, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_pinZip_code_Parameter);
			SqlParameter p_person_id_Parameter = ObjDBManager.CreateSqlParameter("p_person_id", p_person_id, SqlDbType.Int, ParameterDirection.Input);
			sqlParameters.Add(p_person_id_Parameter);
			SqlParameter p_telephone_Parameter = ObjDBManager.CreateSqlParameter("p_telephone", p_telephone, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_telephone_Parameter);
			SqlParameter p_email_Parameter = ObjDBManager.CreateSqlParameter("p_email", p_email, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_email_Parameter);
			SqlParameter p_fax_Parameter = ObjDBManager.CreateSqlParameter("p_fax", p_fax, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_fax_Parameter);
			SqlParameter p_effectiveFrom_Parameter = ObjDBManager.CreateSqlParameter("p_effectiveFrom", p_effectiveFrom, SqlDbType.DateTime, ParameterDirection.Input);
			sqlParameters.Add(p_effectiveFrom_Parameter);
			SqlParameter p_effectiveTill_Parameter = ObjDBManager.CreateSqlParameter("p_effectiveTill", p_effectiveTill, SqlDbType.DateTime, ParameterDirection.Input);
			sqlParameters.Add(p_effectiveTill_Parameter);
			SqlParameter p_satsang_centre_id_Parameter = ObjDBManager.CreateSqlParameter("p_satsang_centre_id", p_satsang_centre_id, SqlDbType.Int, ParameterDirection.Input);
			sqlParameters.Add(p_satsang_centre_id_Parameter);
			SqlParameter p_txn_ts_Parameter = ObjDBManager.CreateSqlParameter("p_txn_ts", p_txn_ts, SqlDbType.BigInt, ParameterDirection.Input);
			sqlParameters.Add(p_txn_ts_Parameter);
			SqlParameter p_isUpdate_Parameter = ObjDBManager.CreateSqlParameter("p_isUpdate", p_isUpdate, SqlDbType.Bit, ParameterDirection.Input);
			sqlParameters.Add(p_isUpdate_Parameter);
			DataSet dset = ObjDBManager.ExecuteStoredProc("InsUpdSatsangCentres", sqlParameters);

			return dset;
		}
		
public string InsUpdSatsangCentresAsTask(System.String p_satsang_centre_code, 
		                                            System.String p_satsang_centre_name, 
		                                            System.String p_satsang_centre_type, 
		                                            System.String p_address_1, 
		                                            System.String p_address_2, 
		                                            System.Int32? p_distCity_id, 
		                                            System.String p_pinZip_code, 
		                                            System.Int32? p_person_id, 
		                                            System.String p_telephone, 
		                                            System.String p_email, 
		                                            System.String p_fax, 
		                                            System.DateTime? p_effectiveFrom, 
		                                            System.DateTime? p_effectiveTill, 
		                                            System.Int32? p_satsang_centre_id, 
		                                            System.Int64? p_txn_ts, 
		                                            System.Boolean? p_isUpdate)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter p_satsang_centre_code_Parameter = ObjDBManager.CreateSqlParameter("p_satsang_centre_code", p_satsang_centre_code, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_satsang_centre_code_Parameter);
			SqlParameter p_satsang_centre_name_Parameter = ObjDBManager.CreateSqlParameter("p_satsang_centre_name", p_satsang_centre_name, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_satsang_centre_name_Parameter);
			SqlParameter p_satsang_centre_type_Parameter = ObjDBManager.CreateSqlParameter("p_satsang_centre_type", p_satsang_centre_type, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_satsang_centre_type_Parameter);
			SqlParameter p_address_1_Parameter = ObjDBManager.CreateSqlParameter("p_address_1", p_address_1, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_address_1_Parameter);
			SqlParameter p_address_2_Parameter = ObjDBManager.CreateSqlParameter("p_address_2", p_address_2, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_address_2_Parameter);
			SqlParameter p_distCity_id_Parameter = ObjDBManager.CreateSqlParameter("p_distCity_id", p_distCity_id, SqlDbType.Int, ParameterDirection.Input);
			sqlParameters.Add(p_distCity_id_Parameter);
			SqlParameter p_pinZip_code_Parameter = ObjDBManager.CreateSqlParameter("p_pinZip_code", p_pinZip_code, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_pinZip_code_Parameter);
			SqlParameter p_person_id_Parameter = ObjDBManager.CreateSqlParameter("p_person_id", p_person_id, SqlDbType.Int, ParameterDirection.Input);
			sqlParameters.Add(p_person_id_Parameter);
			SqlParameter p_telephone_Parameter = ObjDBManager.CreateSqlParameter("p_telephone", p_telephone, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_telephone_Parameter);
			SqlParameter p_email_Parameter = ObjDBManager.CreateSqlParameter("p_email", p_email, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_email_Parameter);
			SqlParameter p_fax_Parameter = ObjDBManager.CreateSqlParameter("p_fax", p_fax, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_fax_Parameter);
			SqlParameter p_effectiveFrom_Parameter = ObjDBManager.CreateSqlParameter("p_effectiveFrom", p_effectiveFrom, SqlDbType.DateTime, ParameterDirection.Input);
			sqlParameters.Add(p_effectiveFrom_Parameter);
			SqlParameter p_effectiveTill_Parameter = ObjDBManager.CreateSqlParameter("p_effectiveTill", p_effectiveTill, SqlDbType.DateTime, ParameterDirection.Input);
			sqlParameters.Add(p_effectiveTill_Parameter);
			SqlParameter p_satsang_centre_id_Parameter = ObjDBManager.CreateSqlParameter("p_satsang_centre_id", p_satsang_centre_id, SqlDbType.Int, ParameterDirection.Input);
			sqlParameters.Add(p_satsang_centre_id_Parameter);
			SqlParameter p_txn_ts_Parameter = ObjDBManager.CreateSqlParameter("p_txn_ts", p_txn_ts, SqlDbType.BigInt, ParameterDirection.Input);
			sqlParameters.Add(p_txn_ts_Parameter);
			SqlParameter p_isUpdate_Parameter = ObjDBManager.CreateSqlParameter("p_isUpdate", p_isUpdate, SqlDbType.Bit, ParameterDirection.Input);
			sqlParameters.Add(p_isUpdate_Parameter);
			string taskString = ObjDBManager.GetPrintableSQLString("InsUpdSatsangCentres", sqlParameters);

			return taskString;
		}
		
		
		
public DataSet InsUpdSkills(System.String p_skillName, 
		                                System.DateTime? p_effectiveFrom, 
		                                System.DateTime? p_effectiveTill, 
		                                System.Int16? p_skillID, 
		                                System.Int64? p_txn_ts, 
		                                System.Boolean? is_Update)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter p_skillName_Parameter = ObjDBManager.CreateSqlParameter("p_skillName", p_skillName, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_skillName_Parameter);
			SqlParameter p_effectiveFrom_Parameter = ObjDBManager.CreateSqlParameter("p_effectiveFrom", p_effectiveFrom, SqlDbType.DateTime, ParameterDirection.Input);
			sqlParameters.Add(p_effectiveFrom_Parameter);
			SqlParameter p_effectiveTill_Parameter = ObjDBManager.CreateSqlParameter("p_effectiveTill", p_effectiveTill, SqlDbType.DateTime, ParameterDirection.Input);
			sqlParameters.Add(p_effectiveTill_Parameter);
			SqlParameter p_skillID_Parameter = ObjDBManager.CreateSqlParameter("p_skillID", p_skillID, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(p_skillID_Parameter);
			SqlParameter p_txn_ts_Parameter = ObjDBManager.CreateSqlParameter("p_txn_ts", p_txn_ts, SqlDbType.BigInt, ParameterDirection.Input);
			sqlParameters.Add(p_txn_ts_Parameter);
			SqlParameter is_Update_Parameter = ObjDBManager.CreateSqlParameter("is_Update", is_Update, SqlDbType.Bit, ParameterDirection.Input);
			sqlParameters.Add(is_Update_Parameter);
			DataSet dset = ObjDBManager.ExecuteStoredProc("InsUpdSkills", sqlParameters);

			return dset;
		}
		
public string InsUpdSkillsAsTask(System.String p_skillName, 
		                                    System.DateTime? p_effectiveFrom, 
		                                    System.DateTime? p_effectiveTill, 
		                                    System.Int16? p_skillID, 
		                                    System.Int64? p_txn_ts, 
		                                    System.Boolean? is_Update)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter p_skillName_Parameter = ObjDBManager.CreateSqlParameter("p_skillName", p_skillName, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_skillName_Parameter);
			SqlParameter p_effectiveFrom_Parameter = ObjDBManager.CreateSqlParameter("p_effectiveFrom", p_effectiveFrom, SqlDbType.DateTime, ParameterDirection.Input);
			sqlParameters.Add(p_effectiveFrom_Parameter);
			SqlParameter p_effectiveTill_Parameter = ObjDBManager.CreateSqlParameter("p_effectiveTill", p_effectiveTill, SqlDbType.DateTime, ParameterDirection.Input);
			sqlParameters.Add(p_effectiveTill_Parameter);
			SqlParameter p_skillID_Parameter = ObjDBManager.CreateSqlParameter("p_skillID", p_skillID, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(p_skillID_Parameter);
			SqlParameter p_txn_ts_Parameter = ObjDBManager.CreateSqlParameter("p_txn_ts", p_txn_ts, SqlDbType.BigInt, ParameterDirection.Input);
			sqlParameters.Add(p_txn_ts_Parameter);
			SqlParameter is_Update_Parameter = ObjDBManager.CreateSqlParameter("is_Update", is_Update, SqlDbType.Bit, ParameterDirection.Input);
			sqlParameters.Add(is_Update_Parameter);
			string taskString = ObjDBManager.GetPrintableSQLString("InsUpdSkills", sqlParameters);

			return taskString;
		}
		
		
		
public DataSet InsUpdStates(System.String p_stateCode, 
		                                System.String p_stateName, 
		                                System.Int16? p_countryid, 
		                                System.DateTime? p_effectiveFrom, 
		                                System.DateTime? p_effectiveTill, 
		                                System.Int32? p_stateID, 
		                                System.Int64? p_txn_ts, 
		                                System.Boolean? p_isUpdate)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter p_stateCode_Parameter = ObjDBManager.CreateSqlParameter("p_stateCode", p_stateCode, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_stateCode_Parameter);
			SqlParameter p_stateName_Parameter = ObjDBManager.CreateSqlParameter("p_stateName", p_stateName, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_stateName_Parameter);
			SqlParameter p_countryid_Parameter = ObjDBManager.CreateSqlParameter("p_countryid", p_countryid, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(p_countryid_Parameter);
			SqlParameter p_effectiveFrom_Parameter = ObjDBManager.CreateSqlParameter("p_effectiveFrom", p_effectiveFrom, SqlDbType.DateTime, ParameterDirection.Input);
			sqlParameters.Add(p_effectiveFrom_Parameter);
			SqlParameter p_effectiveTill_Parameter = ObjDBManager.CreateSqlParameter("p_effectiveTill", p_effectiveTill, SqlDbType.DateTime, ParameterDirection.Input);
			sqlParameters.Add(p_effectiveTill_Parameter);
			SqlParameter p_stateID_Parameter = ObjDBManager.CreateSqlParameter("p_stateID", p_stateID, SqlDbType.Int, ParameterDirection.Input);
			sqlParameters.Add(p_stateID_Parameter);
			SqlParameter p_txn_ts_Parameter = ObjDBManager.CreateSqlParameter("p_txn_ts", p_txn_ts, SqlDbType.BigInt, ParameterDirection.Input);
			sqlParameters.Add(p_txn_ts_Parameter);
			SqlParameter p_isUpdate_Parameter = ObjDBManager.CreateSqlParameter("p_isUpdate", p_isUpdate, SqlDbType.Bit, ParameterDirection.Input);
			sqlParameters.Add(p_isUpdate_Parameter);
			DataSet dset = ObjDBManager.ExecuteStoredProc("InsUpdStates", sqlParameters);

			return dset;
		}
		
public string InsUpdStatesAsTask(System.String p_stateCode, 
		                                    System.String p_stateName, 
		                                    System.Int16? p_countryid, 
		                                    System.DateTime? p_effectiveFrom, 
		                                    System.DateTime? p_effectiveTill, 
		                                    System.Int32? p_stateID, 
		                                    System.Int64? p_txn_ts, 
		                                    System.Boolean? p_isUpdate)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter p_stateCode_Parameter = ObjDBManager.CreateSqlParameter("p_stateCode", p_stateCode, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_stateCode_Parameter);
			SqlParameter p_stateName_Parameter = ObjDBManager.CreateSqlParameter("p_stateName", p_stateName, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_stateName_Parameter);
			SqlParameter p_countryid_Parameter = ObjDBManager.CreateSqlParameter("p_countryid", p_countryid, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(p_countryid_Parameter);
			SqlParameter p_effectiveFrom_Parameter = ObjDBManager.CreateSqlParameter("p_effectiveFrom", p_effectiveFrom, SqlDbType.DateTime, ParameterDirection.Input);
			sqlParameters.Add(p_effectiveFrom_Parameter);
			SqlParameter p_effectiveTill_Parameter = ObjDBManager.CreateSqlParameter("p_effectiveTill", p_effectiveTill, SqlDbType.DateTime, ParameterDirection.Input);
			sqlParameters.Add(p_effectiveTill_Parameter);
			SqlParameter p_stateID_Parameter = ObjDBManager.CreateSqlParameter("p_stateID", p_stateID, SqlDbType.Int, ParameterDirection.Input);
			sqlParameters.Add(p_stateID_Parameter);
			SqlParameter p_txn_ts_Parameter = ObjDBManager.CreateSqlParameter("p_txn_ts", p_txn_ts, SqlDbType.BigInt, ParameterDirection.Input);
			sqlParameters.Add(p_txn_ts_Parameter);
			SqlParameter p_isUpdate_Parameter = ObjDBManager.CreateSqlParameter("p_isUpdate", p_isUpdate, SqlDbType.Bit, ParameterDirection.Input);
			sqlParameters.Add(p_isUpdate_Parameter);
			string taskString = ObjDBManager.GetPrintableSQLString("InsUpdStates", sqlParameters);

			return taskString;
		}
		
		
		
public DataSet InsWorkingUnits(System.String in_working_unit_cd, 
		                                    System.String in_working_unit_nm, 
		                                    System.String in_is_root, 
		                                    System.String in_is_leaf, 
		                                    System.Int16? in_society_id, 
		                                    System.String in_is_staff_posted, 
		                                    System.Int16? in_working_unit_entity_id, 
		                                    System.Int16? in_group_working_unit_id, 
		                                    System.DateTime? in_effective_from, 
		                                    System.DateTime? in_effective_till, 
		                                    System.Int16? in_honorary_sewadar_cnt, 
		                                    System.Int16? in_parshadi_sewadar_cnt, 
		                                    ref System.Int16 out_working_unit_id)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter in_working_unit_cd_Parameter = ObjDBManager.CreateSqlParameter("in_working_unit_cd", in_working_unit_cd, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(in_working_unit_cd_Parameter);
			SqlParameter in_working_unit_nm_Parameter = ObjDBManager.CreateSqlParameter("in_working_unit_nm", in_working_unit_nm, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(in_working_unit_nm_Parameter);
			SqlParameter in_is_root_Parameter = ObjDBManager.CreateSqlParameter("in_is_root", in_is_root, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(in_is_root_Parameter);
			SqlParameter in_is_leaf_Parameter = ObjDBManager.CreateSqlParameter("in_is_leaf", in_is_leaf, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(in_is_leaf_Parameter);
			SqlParameter in_society_id_Parameter = ObjDBManager.CreateSqlParameter("in_society_id", in_society_id, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(in_society_id_Parameter);
			SqlParameter in_is_staff_posted_Parameter = ObjDBManager.CreateSqlParameter("in_is_staff_posted", in_is_staff_posted, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(in_is_staff_posted_Parameter);
			SqlParameter in_working_unit_entity_id_Parameter = ObjDBManager.CreateSqlParameter("in_working_unit_entity_id", in_working_unit_entity_id, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(in_working_unit_entity_id_Parameter);
			SqlParameter in_group_working_unit_id_Parameter = ObjDBManager.CreateSqlParameter("in_group_working_unit_id", in_group_working_unit_id, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(in_group_working_unit_id_Parameter);
			SqlParameter in_effective_from_Parameter = ObjDBManager.CreateSqlParameter("in_effective_from", in_effective_from, SqlDbType.DateTime, ParameterDirection.Input);
			sqlParameters.Add(in_effective_from_Parameter);
			SqlParameter in_effective_till_Parameter = ObjDBManager.CreateSqlParameter("in_effective_till", in_effective_till, SqlDbType.DateTime, ParameterDirection.Input);
			sqlParameters.Add(in_effective_till_Parameter);
			SqlParameter in_honorary_sewadar_cnt_Parameter = ObjDBManager.CreateSqlParameter("in_honorary_sewadar_cnt", in_honorary_sewadar_cnt, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(in_honorary_sewadar_cnt_Parameter);
			SqlParameter in_parshadi_sewadar_cnt_Parameter = ObjDBManager.CreateSqlParameter("in_parshadi_sewadar_cnt", in_parshadi_sewadar_cnt, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(in_parshadi_sewadar_cnt_Parameter);
			SqlParameter out_working_unit_id_Parameter = ObjDBManager.CreateSqlParameter("out_working_unit_id", out_working_unit_id, SqlDbType.SmallInt, ParameterDirection.Output);
			sqlParameters.Add(out_working_unit_id_Parameter);
			DataSet dset = ObjDBManager.ExecuteStoredProc("InsWorkingUnits", sqlParameters);
			out_working_unit_id = (System.Int16)out_working_unit_id_Parameter.Value;

			return dset;
		}
		
public string InsWorkingUnitsAsTask(System.String in_working_unit_cd, 
		                                        System.String in_working_unit_nm, 
		                                        System.String in_is_root, 
		                                        System.String in_is_leaf, 
		                                        System.Int16? in_society_id, 
		                                        System.String in_is_staff_posted, 
		                                        System.Int16? in_working_unit_entity_id, 
		                                        System.Int16? in_group_working_unit_id, 
		                                        System.DateTime? in_effective_from, 
		                                        System.DateTime? in_effective_till, 
		                                        System.Int16? in_honorary_sewadar_cnt, 
		                                        System.Int16? in_parshadi_sewadar_cnt, 
		                                        ref System.Int16 out_working_unit_id)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter in_working_unit_cd_Parameter = ObjDBManager.CreateSqlParameter("in_working_unit_cd", in_working_unit_cd, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(in_working_unit_cd_Parameter);
			SqlParameter in_working_unit_nm_Parameter = ObjDBManager.CreateSqlParameter("in_working_unit_nm", in_working_unit_nm, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(in_working_unit_nm_Parameter);
			SqlParameter in_is_root_Parameter = ObjDBManager.CreateSqlParameter("in_is_root", in_is_root, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(in_is_root_Parameter);
			SqlParameter in_is_leaf_Parameter = ObjDBManager.CreateSqlParameter("in_is_leaf", in_is_leaf, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(in_is_leaf_Parameter);
			SqlParameter in_society_id_Parameter = ObjDBManager.CreateSqlParameter("in_society_id", in_society_id, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(in_society_id_Parameter);
			SqlParameter in_is_staff_posted_Parameter = ObjDBManager.CreateSqlParameter("in_is_staff_posted", in_is_staff_posted, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(in_is_staff_posted_Parameter);
			SqlParameter in_working_unit_entity_id_Parameter = ObjDBManager.CreateSqlParameter("in_working_unit_entity_id", in_working_unit_entity_id, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(in_working_unit_entity_id_Parameter);
			SqlParameter in_group_working_unit_id_Parameter = ObjDBManager.CreateSqlParameter("in_group_working_unit_id", in_group_working_unit_id, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(in_group_working_unit_id_Parameter);
			SqlParameter in_effective_from_Parameter = ObjDBManager.CreateSqlParameter("in_effective_from", in_effective_from, SqlDbType.DateTime, ParameterDirection.Input);
			sqlParameters.Add(in_effective_from_Parameter);
			SqlParameter in_effective_till_Parameter = ObjDBManager.CreateSqlParameter("in_effective_till", in_effective_till, SqlDbType.DateTime, ParameterDirection.Input);
			sqlParameters.Add(in_effective_till_Parameter);
			SqlParameter in_honorary_sewadar_cnt_Parameter = ObjDBManager.CreateSqlParameter("in_honorary_sewadar_cnt", in_honorary_sewadar_cnt, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(in_honorary_sewadar_cnt_Parameter);
			SqlParameter in_parshadi_sewadar_cnt_Parameter = ObjDBManager.CreateSqlParameter("in_parshadi_sewadar_cnt", in_parshadi_sewadar_cnt, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(in_parshadi_sewadar_cnt_Parameter);
			SqlParameter out_working_unit_id_Parameter = ObjDBManager.CreateSqlParameter("out_working_unit_id", out_working_unit_id, SqlDbType.SmallInt, ParameterDirection.Output);
			sqlParameters.Add(out_working_unit_id_Parameter);
			string taskString = ObjDBManager.GetPrintableSQLString("InsWorkingUnits", sqlParameters);
			out_working_unit_id = (System.Int16)out_working_unit_id_Parameter.Value;

			return taskString;
		}
		
		
		
public DataSet QryAssistant_Services(System.String ShowCurrent)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter ShowCurrent_Parameter = ObjDBManager.CreateSqlParameter("ShowCurrent", ShowCurrent, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(ShowCurrent_Parameter);
			DataSet dset = ObjDBManager.ExecuteStoredProc("QryAssistant_Services", sqlParameters);

			return dset;
		}
		
public string QryAssistant_ServicesAsTask(System.String ShowCurrent)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter ShowCurrent_Parameter = ObjDBManager.CreateSqlParameter("ShowCurrent", ShowCurrent, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(ShowCurrent_Parameter);
			string taskString = ObjDBManager.GetPrintableSQLString("QryAssistant_Services", sqlParameters);

			return taskString;
		}
		
public DCCSqlDataReader QryAssistant_ServicesAsReader(System.String ShowCurrent)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter ShowCurrent_Parameter = ObjDBManager.CreateSqlParameter("ShowCurrent", ShowCurrent, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(ShowCurrent_Parameter);
			DCCSqlDataReader reader = ObjDBManager.ExecuteReader("QryAssistant_Services", sqlParameters);

			return reader;
		}
		
		
		
public DataSet QryParties(System.Int32? p_party_id, 
		                                System.String p_party_cd, 
		                                System.String p_party_nm, 
		                                System.String p_pan, 
		                                System.String p_address_type_nm, 
		                                System.String p_country_nm, 
		                                System.String p_state_nm, 
		                                System.String p_district_or_city_nm, 
		                                System.String p_role_nm, 
		                                System.String p_application_nm)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter p_party_id_Parameter = ObjDBManager.CreateSqlParameter("p_party_id", p_party_id, SqlDbType.Int, ParameterDirection.Input);
			sqlParameters.Add(p_party_id_Parameter);
			SqlParameter p_party_cd_Parameter = ObjDBManager.CreateSqlParameter("p_party_cd", p_party_cd, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_party_cd_Parameter);
			SqlParameter p_party_nm_Parameter = ObjDBManager.CreateSqlParameter("p_party_nm", p_party_nm, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_party_nm_Parameter);
			SqlParameter p_pan_Parameter = ObjDBManager.CreateSqlParameter("p_pan", p_pan, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_pan_Parameter);
			SqlParameter p_address_type_nm_Parameter = ObjDBManager.CreateSqlParameter("p_address_type_nm", p_address_type_nm, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_address_type_nm_Parameter);
			SqlParameter p_country_nm_Parameter = ObjDBManager.CreateSqlParameter("p_country_nm", p_country_nm, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_country_nm_Parameter);
			SqlParameter p_state_nm_Parameter = ObjDBManager.CreateSqlParameter("p_state_nm", p_state_nm, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_state_nm_Parameter);
			SqlParameter p_district_or_city_nm_Parameter = ObjDBManager.CreateSqlParameter("p_district_or_city_nm", p_district_or_city_nm, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_district_or_city_nm_Parameter);
			SqlParameter p_role_nm_Parameter = ObjDBManager.CreateSqlParameter("p_role_nm", p_role_nm, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_role_nm_Parameter);
			SqlParameter p_application_nm_Parameter = ObjDBManager.CreateSqlParameter("p_application_nm", p_application_nm, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_application_nm_Parameter);
			DataSet dset = ObjDBManager.ExecuteStoredProc("QryParties", sqlParameters);

			return dset;
		}
		
public string QryPartiesAsTask(System.Int32? p_party_id, 
		                                    System.String p_party_cd, 
		                                    System.String p_party_nm, 
		                                    System.String p_pan, 
		                                    System.String p_address_type_nm, 
		                                    System.String p_country_nm, 
		                                    System.String p_state_nm, 
		                                    System.String p_district_or_city_nm, 
		                                    System.String p_role_nm, 
		                                    System.String p_application_nm)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter p_party_id_Parameter = ObjDBManager.CreateSqlParameter("p_party_id", p_party_id, SqlDbType.Int, ParameterDirection.Input);
			sqlParameters.Add(p_party_id_Parameter);
			SqlParameter p_party_cd_Parameter = ObjDBManager.CreateSqlParameter("p_party_cd", p_party_cd, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_party_cd_Parameter);
			SqlParameter p_party_nm_Parameter = ObjDBManager.CreateSqlParameter("p_party_nm", p_party_nm, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_party_nm_Parameter);
			SqlParameter p_pan_Parameter = ObjDBManager.CreateSqlParameter("p_pan", p_pan, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_pan_Parameter);
			SqlParameter p_address_type_nm_Parameter = ObjDBManager.CreateSqlParameter("p_address_type_nm", p_address_type_nm, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_address_type_nm_Parameter);
			SqlParameter p_country_nm_Parameter = ObjDBManager.CreateSqlParameter("p_country_nm", p_country_nm, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_country_nm_Parameter);
			SqlParameter p_state_nm_Parameter = ObjDBManager.CreateSqlParameter("p_state_nm", p_state_nm, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_state_nm_Parameter);
			SqlParameter p_district_or_city_nm_Parameter = ObjDBManager.CreateSqlParameter("p_district_or_city_nm", p_district_or_city_nm, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_district_or_city_nm_Parameter);
			SqlParameter p_role_nm_Parameter = ObjDBManager.CreateSqlParameter("p_role_nm", p_role_nm, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_role_nm_Parameter);
			SqlParameter p_application_nm_Parameter = ObjDBManager.CreateSqlParameter("p_application_nm", p_application_nm, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_application_nm_Parameter);
			string taskString = ObjDBManager.GetPrintableSQLString("QryParties", sqlParameters);

			return taskString;
		}
		
public DCCSqlDataReader QryPartiesAsReader(System.Int32? p_party_id, 
		                                                System.String p_party_cd, 
		                                                System.String p_party_nm, 
		                                                System.String p_pan, 
		                                                System.String p_address_type_nm, 
		                                                System.String p_country_nm, 
		                                                System.String p_state_nm, 
		                                                System.String p_district_or_city_nm, 
		                                                System.String p_role_nm, 
		                                                System.String p_application_nm)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter p_party_id_Parameter = ObjDBManager.CreateSqlParameter("p_party_id", p_party_id, SqlDbType.Int, ParameterDirection.Input);
			sqlParameters.Add(p_party_id_Parameter);
			SqlParameter p_party_cd_Parameter = ObjDBManager.CreateSqlParameter("p_party_cd", p_party_cd, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_party_cd_Parameter);
			SqlParameter p_party_nm_Parameter = ObjDBManager.CreateSqlParameter("p_party_nm", p_party_nm, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_party_nm_Parameter);
			SqlParameter p_pan_Parameter = ObjDBManager.CreateSqlParameter("p_pan", p_pan, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_pan_Parameter);
			SqlParameter p_address_type_nm_Parameter = ObjDBManager.CreateSqlParameter("p_address_type_nm", p_address_type_nm, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_address_type_nm_Parameter);
			SqlParameter p_country_nm_Parameter = ObjDBManager.CreateSqlParameter("p_country_nm", p_country_nm, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_country_nm_Parameter);
			SqlParameter p_state_nm_Parameter = ObjDBManager.CreateSqlParameter("p_state_nm", p_state_nm, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_state_nm_Parameter);
			SqlParameter p_district_or_city_nm_Parameter = ObjDBManager.CreateSqlParameter("p_district_or_city_nm", p_district_or_city_nm, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_district_or_city_nm_Parameter);
			SqlParameter p_role_nm_Parameter = ObjDBManager.CreateSqlParameter("p_role_nm", p_role_nm, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_role_nm_Parameter);
			SqlParameter p_application_nm_Parameter = ObjDBManager.CreateSqlParameter("p_application_nm", p_application_nm, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_application_nm_Parameter);
			DCCSqlDataReader reader = ObjDBManager.ExecuteReader("QryParties", sqlParameters);

			return reader;
		}
		
		
		
public DataSet QryQlfctn_Subjects(System.String ShowCurrent)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter ShowCurrent_Parameter = ObjDBManager.CreateSqlParameter("ShowCurrent", ShowCurrent, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(ShowCurrent_Parameter);
			DataSet dset = ObjDBManager.ExecuteStoredProc("QryQlfctn_Subjects", sqlParameters);

			return dset;
		}
		
public string QryQlfctn_SubjectsAsTask(System.String ShowCurrent)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter ShowCurrent_Parameter = ObjDBManager.CreateSqlParameter("ShowCurrent", ShowCurrent, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(ShowCurrent_Parameter);
			string taskString = ObjDBManager.GetPrintableSQLString("QryQlfctn_Subjects", sqlParameters);

			return taskString;
		}
		
public DCCSqlDataReader QryQlfctn_SubjectsAsReader(System.String ShowCurrent)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter ShowCurrent_Parameter = ObjDBManager.CreateSqlParameter("ShowCurrent", ShowCurrent, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(ShowCurrent_Parameter);
			DCCSqlDataReader reader = ObjDBManager.ExecuteReader("QryQlfctn_Subjects", sqlParameters);

			return reader;
		}
		
		
		
public DataSet Qryqualifications(System.Int16? qualification_id, 
		                                    System.String qualification_type, 
		                                    System.String qualification_cd, 
		                                    System.String qualification_nm, 
		                                    System.String remarks, 
		                                    System.DateTime? effective_from, 
		                                    System.DateTime? effective_till)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter qualification_id_Parameter = ObjDBManager.CreateSqlParameter("qualification_id", qualification_id, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(qualification_id_Parameter);
			SqlParameter qualification_type_Parameter = ObjDBManager.CreateSqlParameter("qualification_type", qualification_type, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(qualification_type_Parameter);
			SqlParameter qualification_cd_Parameter = ObjDBManager.CreateSqlParameter("qualification_cd", qualification_cd, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(qualification_cd_Parameter);
			SqlParameter qualification_nm_Parameter = ObjDBManager.CreateSqlParameter("qualification_nm", qualification_nm, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(qualification_nm_Parameter);
			SqlParameter remarks_Parameter = ObjDBManager.CreateSqlParameter("remarks", remarks, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(remarks_Parameter);
			SqlParameter effective_from_Parameter = ObjDBManager.CreateSqlParameter("effective_from", effective_from, SqlDbType.DateTime, ParameterDirection.Input);
			sqlParameters.Add(effective_from_Parameter);
			SqlParameter effective_till_Parameter = ObjDBManager.CreateSqlParameter("effective_till", effective_till, SqlDbType.DateTime, ParameterDirection.Input);
			sqlParameters.Add(effective_till_Parameter);
			DataSet dset = ObjDBManager.ExecuteStoredProc("Qryqualifications", sqlParameters);

			return dset;
		}
		
public string QryqualificationsAsTask(System.Int16? qualification_id, 
		                                            System.String qualification_type, 
		                                            System.String qualification_cd, 
		                                            System.String qualification_nm, 
		                                            System.String remarks, 
		                                            System.DateTime? effective_from, 
		                                            System.DateTime? effective_till)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter qualification_id_Parameter = ObjDBManager.CreateSqlParameter("qualification_id", qualification_id, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(qualification_id_Parameter);
			SqlParameter qualification_type_Parameter = ObjDBManager.CreateSqlParameter("qualification_type", qualification_type, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(qualification_type_Parameter);
			SqlParameter qualification_cd_Parameter = ObjDBManager.CreateSqlParameter("qualification_cd", qualification_cd, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(qualification_cd_Parameter);
			SqlParameter qualification_nm_Parameter = ObjDBManager.CreateSqlParameter("qualification_nm", qualification_nm, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(qualification_nm_Parameter);
			SqlParameter remarks_Parameter = ObjDBManager.CreateSqlParameter("remarks", remarks, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(remarks_Parameter);
			SqlParameter effective_from_Parameter = ObjDBManager.CreateSqlParameter("effective_from", effective_from, SqlDbType.DateTime, ParameterDirection.Input);
			sqlParameters.Add(effective_from_Parameter);
			SqlParameter effective_till_Parameter = ObjDBManager.CreateSqlParameter("effective_till", effective_till, SqlDbType.DateTime, ParameterDirection.Input);
			sqlParameters.Add(effective_till_Parameter);
			string taskString = ObjDBManager.GetPrintableSQLString("Qryqualifications", sqlParameters);

			return taskString;
		}
		
public DCCSqlDataReader QryqualificationsAsReader(System.Int16? qualification_id, 
		                                                        System.String qualification_type, 
		                                                        System.String qualification_cd, 
		                                                        System.String qualification_nm, 
		                                                        System.String remarks, 
		                                                        System.DateTime? effective_from, 
		                                                        System.DateTime? effective_till)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter qualification_id_Parameter = ObjDBManager.CreateSqlParameter("qualification_id", qualification_id, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(qualification_id_Parameter);
			SqlParameter qualification_type_Parameter = ObjDBManager.CreateSqlParameter("qualification_type", qualification_type, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(qualification_type_Parameter);
			SqlParameter qualification_cd_Parameter = ObjDBManager.CreateSqlParameter("qualification_cd", qualification_cd, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(qualification_cd_Parameter);
			SqlParameter qualification_nm_Parameter = ObjDBManager.CreateSqlParameter("qualification_nm", qualification_nm, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(qualification_nm_Parameter);
			SqlParameter remarks_Parameter = ObjDBManager.CreateSqlParameter("remarks", remarks, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(remarks_Parameter);
			SqlParameter effective_from_Parameter = ObjDBManager.CreateSqlParameter("effective_from", effective_from, SqlDbType.DateTime, ParameterDirection.Input);
			sqlParameters.Add(effective_from_Parameter);
			SqlParameter effective_till_Parameter = ObjDBManager.CreateSqlParameter("effective_till", effective_till, SqlDbType.DateTime, ParameterDirection.Input);
			sqlParameters.Add(effective_till_Parameter);
			DCCSqlDataReader reader = ObjDBManager.ExecuteReader("Qryqualifications", sqlParameters);

			return reader;
		}
		
		
		
public DataSet Qryqualifications_qlfctn_subjects(System.Int16? qualification_id)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter qualification_id_Parameter = ObjDBManager.CreateSqlParameter("qualification_id", qualification_id, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(qualification_id_Parameter);
			DataSet dset = ObjDBManager.ExecuteStoredProc("Qryqualifications_qlfctn_subjects", sqlParameters);

			return dset;
		}
		
public string Qryqualifications_qlfctn_subjectsAsTask(System.Int16? qualification_id)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter qualification_id_Parameter = ObjDBManager.CreateSqlParameter("qualification_id", qualification_id, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(qualification_id_Parameter);
			string taskString = ObjDBManager.GetPrintableSQLString("Qryqualifications_qlfctn_subjects", sqlParameters);

			return taskString;
		}
		
public DCCSqlDataReader Qryqualifications_qlfctn_subjectsAsReader(System.Int16? qualification_id)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter qualification_id_Parameter = ObjDBManager.CreateSqlParameter("qualification_id", qualification_id, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(qualification_id_Parameter);
			DCCSqlDataReader reader = ObjDBManager.ExecuteReader("Qryqualifications_qlfctn_subjects", sqlParameters);

			return reader;
		}
		
		
		
public DataSet QryRoles(System.String p_role_cd, 
		                            System.String p_role_nm, 
		                            System.String p_address_requirement, 
		                            System.DateTime? p_effective_from, 
		                            System.DateTime? p_effective_till)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter p_role_cd_Parameter = ObjDBManager.CreateSqlParameter("p_role_cd", p_role_cd, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_role_cd_Parameter);
			SqlParameter p_role_nm_Parameter = ObjDBManager.CreateSqlParameter("p_role_nm", p_role_nm, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_role_nm_Parameter);
			SqlParameter p_address_requirement_Parameter = ObjDBManager.CreateSqlParameter("p_address_requirement", p_address_requirement, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_address_requirement_Parameter);
			SqlParameter p_effective_from_Parameter = ObjDBManager.CreateSqlParameter("p_effective_from", p_effective_from, SqlDbType.DateTime, ParameterDirection.Input);
			sqlParameters.Add(p_effective_from_Parameter);
			SqlParameter p_effective_till_Parameter = ObjDBManager.CreateSqlParameter("p_effective_till", p_effective_till, SqlDbType.DateTime, ParameterDirection.Input);
			sqlParameters.Add(p_effective_till_Parameter);
			DataSet dset = ObjDBManager.ExecuteStoredProc("QryRoles", sqlParameters);

			return dset;
		}
		
public string QryRolesAsTask(System.String p_role_cd, 
		                                System.String p_role_nm, 
		                                System.String p_address_requirement, 
		                                System.DateTime? p_effective_from, 
		                                System.DateTime? p_effective_till)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter p_role_cd_Parameter = ObjDBManager.CreateSqlParameter("p_role_cd", p_role_cd, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_role_cd_Parameter);
			SqlParameter p_role_nm_Parameter = ObjDBManager.CreateSqlParameter("p_role_nm", p_role_nm, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_role_nm_Parameter);
			SqlParameter p_address_requirement_Parameter = ObjDBManager.CreateSqlParameter("p_address_requirement", p_address_requirement, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_address_requirement_Parameter);
			SqlParameter p_effective_from_Parameter = ObjDBManager.CreateSqlParameter("p_effective_from", p_effective_from, SqlDbType.DateTime, ParameterDirection.Input);
			sqlParameters.Add(p_effective_from_Parameter);
			SqlParameter p_effective_till_Parameter = ObjDBManager.CreateSqlParameter("p_effective_till", p_effective_till, SqlDbType.DateTime, ParameterDirection.Input);
			sqlParameters.Add(p_effective_till_Parameter);
			string taskString = ObjDBManager.GetPrintableSQLString("QryRoles", sqlParameters);

			return taskString;
		}
		
public DCCSqlDataReader QryRolesAsReader(System.String p_role_cd, 
		                                            System.String p_role_nm, 
		                                            System.String p_address_requirement, 
		                                            System.DateTime? p_effective_from, 
		                                            System.DateTime? p_effective_till)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter p_role_cd_Parameter = ObjDBManager.CreateSqlParameter("p_role_cd", p_role_cd, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_role_cd_Parameter);
			SqlParameter p_role_nm_Parameter = ObjDBManager.CreateSqlParameter("p_role_nm", p_role_nm, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_role_nm_Parameter);
			SqlParameter p_address_requirement_Parameter = ObjDBManager.CreateSqlParameter("p_address_requirement", p_address_requirement, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_address_requirement_Parameter);
			SqlParameter p_effective_from_Parameter = ObjDBManager.CreateSqlParameter("p_effective_from", p_effective_from, SqlDbType.DateTime, ParameterDirection.Input);
			sqlParameters.Add(p_effective_from_Parameter);
			SqlParameter p_effective_till_Parameter = ObjDBManager.CreateSqlParameter("p_effective_till", p_effective_till, SqlDbType.DateTime, ParameterDirection.Input);
			sqlParameters.Add(p_effective_till_Parameter);
			DCCSqlDataReader reader = ObjDBManager.ExecuteReader("QryRoles", sqlParameters);

			return reader;
		}
		
		
		
public DataSet QryRolesAppControls(System.String p_role_cd)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter p_role_cd_Parameter = ObjDBManager.CreateSqlParameter("p_role_cd", p_role_cd, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_role_cd_Parameter);
			DataSet dset = ObjDBManager.ExecuteStoredProc("QryRolesAppControls", sqlParameters);

			return dset;
		}
		
public string QryRolesAppControlsAsTask(System.String p_role_cd)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter p_role_cd_Parameter = ObjDBManager.CreateSqlParameter("p_role_cd", p_role_cd, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_role_cd_Parameter);
			string taskString = ObjDBManager.GetPrintableSQLString("QryRolesAppControls", sqlParameters);

			return taskString;
		}
		
public DCCSqlDataReader QryRolesAppControlsAsReader(System.String p_role_cd)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter p_role_cd_Parameter = ObjDBManager.CreateSqlParameter("p_role_cd", p_role_cd, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_role_cd_Parameter);
			DCCSqlDataReader reader = ObjDBManager.ExecuteReader("QryRolesAppControls", sqlParameters);

			return reader;
		}
		
		
		
public DataSet QryStaff(System.Int16? working_unit_id)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter working_unit_id_Parameter = ObjDBManager.CreateSqlParameter("working_unit_id", working_unit_id, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(working_unit_id_Parameter);
			DataSet dset = ObjDBManager.ExecuteStoredProc("QryStaff", sqlParameters);

			return dset;
		}
		
public string QryStaffAsTask(System.Int16? working_unit_id)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter working_unit_id_Parameter = ObjDBManager.CreateSqlParameter("working_unit_id", working_unit_id, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(working_unit_id_Parameter);
			string taskString = ObjDBManager.GetPrintableSQLString("QryStaff", sqlParameters);

			return taskString;
		}
		
public DCCSqlDataReader QryStaffAsReader(System.Int16? working_unit_id)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter working_unit_id_Parameter = ObjDBManager.CreateSqlParameter("working_unit_id", working_unit_id, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(working_unit_id_Parameter);
			DCCSqlDataReader reader = ObjDBManager.ExecuteReader("QryStaff", sqlParameters);

			return reader;
		}
		
		
		
public DataSet Qryworking_units(System.Int16? in_working_unit_id, 
		                                    System.Int16? in_group_working_unit_id)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter in_working_unit_id_Parameter = ObjDBManager.CreateSqlParameter("in_working_unit_id", in_working_unit_id, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(in_working_unit_id_Parameter);
			SqlParameter in_group_working_unit_id_Parameter = ObjDBManager.CreateSqlParameter("in_group_working_unit_id", in_group_working_unit_id, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(in_group_working_unit_id_Parameter);
			DataSet dset = ObjDBManager.ExecuteStoredProc("Qryworking_units", sqlParameters);

			return dset;
		}
		
public string Qryworking_unitsAsTask(System.Int16? in_working_unit_id, 
		                                        System.Int16? in_group_working_unit_id)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter in_working_unit_id_Parameter = ObjDBManager.CreateSqlParameter("in_working_unit_id", in_working_unit_id, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(in_working_unit_id_Parameter);
			SqlParameter in_group_working_unit_id_Parameter = ObjDBManager.CreateSqlParameter("in_group_working_unit_id", in_group_working_unit_id, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(in_group_working_unit_id_Parameter);
			string taskString = ObjDBManager.GetPrintableSQLString("Qryworking_units", sqlParameters);

			return taskString;
		}
		
public DCCSqlDataReader Qryworking_unitsAsReader(System.Int16? in_working_unit_id, 
		                                                    System.Int16? in_group_working_unit_id)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter in_working_unit_id_Parameter = ObjDBManager.CreateSqlParameter("in_working_unit_id", in_working_unit_id, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(in_working_unit_id_Parameter);
			SqlParameter in_group_working_unit_id_Parameter = ObjDBManager.CreateSqlParameter("in_group_working_unit_id", in_group_working_unit_id, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(in_group_working_unit_id_Parameter);
			DCCSqlDataReader reader = ObjDBManager.ExecuteReader("Qryworking_units", sqlParameters);

			return reader;
		}
		
		
		
public DataSet QryWorkingUnitWrapper(System.Int16? in_working_unit_id)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter in_working_unit_id_Parameter = ObjDBManager.CreateSqlParameter("in_working_unit_id", in_working_unit_id, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(in_working_unit_id_Parameter);
			DataSet dset = ObjDBManager.ExecuteStoredProc("QryWorkingUnitWrapper", sqlParameters);

			return dset;
		}
		
public string QryWorkingUnitWrapperAsTask(System.Int16? in_working_unit_id)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter in_working_unit_id_Parameter = ObjDBManager.CreateSqlParameter("in_working_unit_id", in_working_unit_id, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(in_working_unit_id_Parameter);
			string taskString = ObjDBManager.GetPrintableSQLString("QryWorkingUnitWrapper", sqlParameters);

			return taskString;
		}
		
public DCCSqlDataReader QryWorkingUnitWrapperAsReader(System.Int16? in_working_unit_id)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter in_working_unit_id_Parameter = ObjDBManager.CreateSqlParameter("in_working_unit_id", in_working_unit_id, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(in_working_unit_id_Parameter);
			DCCSqlDataReader reader = ObjDBManager.ExecuteReader("QryWorkingUnitWrapper", sqlParameters);

			return reader;
		}
		
		
		
public DataSet Responsibilities_DelPr(System.Int16? in_working_unit_id, 
		                                            System.Int32? in_sewadar_id)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter in_working_unit_id_Parameter = ObjDBManager.CreateSqlParameter("in_working_unit_id", in_working_unit_id, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(in_working_unit_id_Parameter);
			SqlParameter in_sewadar_id_Parameter = ObjDBManager.CreateSqlParameter("in_sewadar_id", in_sewadar_id, SqlDbType.Int, ParameterDirection.Input);
			sqlParameters.Add(in_sewadar_id_Parameter);
			DataSet dset = ObjDBManager.ExecuteStoredProc("Responsibilities_DelPr", sqlParameters);

			return dset;
		}
		
public string Responsibilities_DelPrAsTask(System.Int16? in_working_unit_id, 
		                                                System.Int32? in_sewadar_id)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter in_working_unit_id_Parameter = ObjDBManager.CreateSqlParameter("in_working_unit_id", in_working_unit_id, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(in_working_unit_id_Parameter);
			SqlParameter in_sewadar_id_Parameter = ObjDBManager.CreateSqlParameter("in_sewadar_id", in_sewadar_id, SqlDbType.Int, ParameterDirection.Input);
			sqlParameters.Add(in_sewadar_id_Parameter);
			string taskString = ObjDBManager.GetPrintableSQLString("Responsibilities_DelPr", sqlParameters);

			return taskString;
		}
		
		
		
public DataSet Responsibilities_SelPr(System.Int16? in_working_unit_id)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter in_working_unit_id_Parameter = ObjDBManager.CreateSqlParameter("in_working_unit_id", in_working_unit_id, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(in_working_unit_id_Parameter);
			DataSet dset = ObjDBManager.ExecuteStoredProc("Responsibilities_SelPr", sqlParameters);

			return dset;
		}
		
public string Responsibilities_SelPrAsTask(System.Int16? in_working_unit_id)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter in_working_unit_id_Parameter = ObjDBManager.CreateSqlParameter("in_working_unit_id", in_working_unit_id, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(in_working_unit_id_Parameter);
			string taskString = ObjDBManager.GetPrintableSQLString("Responsibilities_SelPr", sqlParameters);

			return taskString;
		}
		
		
		
public DataSet Responsibilities_UpdPr(System.Int16? in_working_unit_id, 
		                                            System.Int16? in_responsibility_type_id, 
		                                            System.Int32? in_sewadar_id, 
		                                            System.Int32? in_old_sewadar_id, 
		                                            System.Int16? in_responsibility_sq)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter in_working_unit_id_Parameter = ObjDBManager.CreateSqlParameter("in_working_unit_id", in_working_unit_id, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(in_working_unit_id_Parameter);
			SqlParameter in_responsibility_type_id_Parameter = ObjDBManager.CreateSqlParameter("in_responsibility_type_id", in_responsibility_type_id, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(in_responsibility_type_id_Parameter);
			SqlParameter in_sewadar_id_Parameter = ObjDBManager.CreateSqlParameter("in_sewadar_id", in_sewadar_id, SqlDbType.Int, ParameterDirection.Input);
			sqlParameters.Add(in_sewadar_id_Parameter);
			SqlParameter in_old_sewadar_id_Parameter = ObjDBManager.CreateSqlParameter("in_old_sewadar_id", in_old_sewadar_id, SqlDbType.Int, ParameterDirection.Input);
			sqlParameters.Add(in_old_sewadar_id_Parameter);
			SqlParameter in_responsibility_sq_Parameter = ObjDBManager.CreateSqlParameter("in_responsibility_sq", in_responsibility_sq, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(in_responsibility_sq_Parameter);
			DataSet dset = ObjDBManager.ExecuteStoredProc("Responsibilities_UpdPr", sqlParameters);

			return dset;
		}
		
public string Responsibilities_UpdPrAsTask(System.Int16? in_working_unit_id, 
		                                                System.Int16? in_responsibility_type_id, 
		                                                System.Int32? in_sewadar_id, 
		                                                System.Int32? in_old_sewadar_id, 
		                                                System.Int16? in_responsibility_sq)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter in_working_unit_id_Parameter = ObjDBManager.CreateSqlParameter("in_working_unit_id", in_working_unit_id, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(in_working_unit_id_Parameter);
			SqlParameter in_responsibility_type_id_Parameter = ObjDBManager.CreateSqlParameter("in_responsibility_type_id", in_responsibility_type_id, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(in_responsibility_type_id_Parameter);
			SqlParameter in_sewadar_id_Parameter = ObjDBManager.CreateSqlParameter("in_sewadar_id", in_sewadar_id, SqlDbType.Int, ParameterDirection.Input);
			sqlParameters.Add(in_sewadar_id_Parameter);
			SqlParameter in_old_sewadar_id_Parameter = ObjDBManager.CreateSqlParameter("in_old_sewadar_id", in_old_sewadar_id, SqlDbType.Int, ParameterDirection.Input);
			sqlParameters.Add(in_old_sewadar_id_Parameter);
			SqlParameter in_responsibility_sq_Parameter = ObjDBManager.CreateSqlParameter("in_responsibility_sq", in_responsibility_sq, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(in_responsibility_sq_Parameter);
			string taskString = ObjDBManager.GetPrintableSQLString("Responsibilities_UpdPr", sqlParameters);

			return taskString;
		}
		
		
		
public DataSet ResponsibilitiesSequence_UpdPr(System.Int16? in_working_unit_id)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter in_working_unit_id_Parameter = ObjDBManager.CreateSqlParameter("in_working_unit_id", in_working_unit_id, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(in_working_unit_id_Parameter);
			DataSet dset = ObjDBManager.ExecuteStoredProc("ResponsibilitiesSequence_UpdPr", sqlParameters);

			return dset;
		}
		
public string ResponsibilitiesSequence_UpdPrAsTask(System.Int16? in_working_unit_id)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter in_working_unit_id_Parameter = ObjDBManager.CreateSqlParameter("in_working_unit_id", in_working_unit_id, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(in_working_unit_id_Parameter);
			string taskString = ObjDBManager.GetPrintableSQLString("ResponsibilitiesSequence_UpdPr", sqlParameters);

			return taskString;
		}
		
		
		
public DataSet ResponsibilityTypes_DelPr(System.Int16? in_working_unit_id)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter in_working_unit_id_Parameter = ObjDBManager.CreateSqlParameter("in_working_unit_id", in_working_unit_id, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(in_working_unit_id_Parameter);
			DataSet dset = ObjDBManager.ExecuteStoredProc("ResponsibilityTypes_DelPr", sqlParameters);

			return dset;
		}
		
public string ResponsibilityTypes_DelPrAsTask(System.Int16? in_working_unit_id)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter in_working_unit_id_Parameter = ObjDBManager.CreateSqlParameter("in_working_unit_id", in_working_unit_id, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(in_working_unit_id_Parameter);
			string taskString = ObjDBManager.GetPrintableSQLString("ResponsibilityTypes_DelPr", sqlParameters);

			return taskString;
		}
		
		
		
public DataSet ResponsibilityTypes_InsPr(System.Int16? in_working_unit_id, 
		                                            System.String in_responsibility_nm, 
		                                            System.Byte? in_responsibility_cnt, 
		                                            System.Int16? in_responsibility_sq, 
		                                            ref System.Int16 out_responsibility_type_id)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter in_working_unit_id_Parameter = ObjDBManager.CreateSqlParameter("in_working_unit_id", in_working_unit_id, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(in_working_unit_id_Parameter);
			SqlParameter in_responsibility_nm_Parameter = ObjDBManager.CreateSqlParameter("in_responsibility_nm", in_responsibility_nm, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(in_responsibility_nm_Parameter);
			SqlParameter in_responsibility_cnt_Parameter = ObjDBManager.CreateSqlParameter("in_responsibility_cnt", in_responsibility_cnt, SqlDbType.TinyInt, ParameterDirection.Input);
			sqlParameters.Add(in_responsibility_cnt_Parameter);
			SqlParameter in_responsibility_sq_Parameter = ObjDBManager.CreateSqlParameter("in_responsibility_sq", in_responsibility_sq, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(in_responsibility_sq_Parameter);
			SqlParameter out_responsibility_type_id_Parameter = ObjDBManager.CreateSqlParameter("out_responsibility_type_id", out_responsibility_type_id, SqlDbType.SmallInt, ParameterDirection.Output);
			sqlParameters.Add(out_responsibility_type_id_Parameter);
			DataSet dset = ObjDBManager.ExecuteStoredProc("ResponsibilityTypes_InsPr", sqlParameters);
			out_responsibility_type_id = (System.Int16)out_responsibility_type_id_Parameter.Value;

			return dset;
		}
		
public string ResponsibilityTypes_InsPrAsTask(System.Int16? in_working_unit_id, 
		                                                    System.String in_responsibility_nm, 
		                                                    System.Byte? in_responsibility_cnt, 
		                                                    System.Int16? in_responsibility_sq, 
		                                                    ref System.Int16 out_responsibility_type_id)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter in_working_unit_id_Parameter = ObjDBManager.CreateSqlParameter("in_working_unit_id", in_working_unit_id, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(in_working_unit_id_Parameter);
			SqlParameter in_responsibility_nm_Parameter = ObjDBManager.CreateSqlParameter("in_responsibility_nm", in_responsibility_nm, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(in_responsibility_nm_Parameter);
			SqlParameter in_responsibility_cnt_Parameter = ObjDBManager.CreateSqlParameter("in_responsibility_cnt", in_responsibility_cnt, SqlDbType.TinyInt, ParameterDirection.Input);
			sqlParameters.Add(in_responsibility_cnt_Parameter);
			SqlParameter in_responsibility_sq_Parameter = ObjDBManager.CreateSqlParameter("in_responsibility_sq", in_responsibility_sq, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(in_responsibility_sq_Parameter);
			SqlParameter out_responsibility_type_id_Parameter = ObjDBManager.CreateSqlParameter("out_responsibility_type_id", out_responsibility_type_id, SqlDbType.SmallInt, ParameterDirection.Output);
			sqlParameters.Add(out_responsibility_type_id_Parameter);
			string taskString = ObjDBManager.GetPrintableSQLString("ResponsibilityTypes_InsPr", sqlParameters);
			out_responsibility_type_id = (System.Int16)out_responsibility_type_id_Parameter.Value;

			return taskString;
		}
		
		
		
public DataSet ResponsibilityTypes_SelPr(System.Int16? in_working_unit_id)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter in_working_unit_id_Parameter = ObjDBManager.CreateSqlParameter("in_working_unit_id", in_working_unit_id, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(in_working_unit_id_Parameter);
			DataSet dset = ObjDBManager.ExecuteStoredProc("ResponsibilityTypes_SelPr", sqlParameters);

			return dset;
		}
		
public string ResponsibilityTypes_SelPrAsTask(System.Int16? in_working_unit_id)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter in_working_unit_id_Parameter = ObjDBManager.CreateSqlParameter("in_working_unit_id", in_working_unit_id, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(in_working_unit_id_Parameter);
			string taskString = ObjDBManager.GetPrintableSQLString("ResponsibilityTypes_SelPr", sqlParameters);

			return taskString;
		}
		
		
		
public DataSet ResponsibilityTypes_UpdPr(System.Int16? in_working_unit_id, 
		                                            System.String in_responsibility_nm, 
		                                            System.Byte? in_responsibility_cnt, 
		                                            System.Int16? in_responsibility_sq, 
		                                            System.Int16? in_responsibility_type_id)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter in_working_unit_id_Parameter = ObjDBManager.CreateSqlParameter("in_working_unit_id", in_working_unit_id, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(in_working_unit_id_Parameter);
			SqlParameter in_responsibility_nm_Parameter = ObjDBManager.CreateSqlParameter("in_responsibility_nm", in_responsibility_nm, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(in_responsibility_nm_Parameter);
			SqlParameter in_responsibility_cnt_Parameter = ObjDBManager.CreateSqlParameter("in_responsibility_cnt", in_responsibility_cnt, SqlDbType.TinyInt, ParameterDirection.Input);
			sqlParameters.Add(in_responsibility_cnt_Parameter);
			SqlParameter in_responsibility_sq_Parameter = ObjDBManager.CreateSqlParameter("in_responsibility_sq", in_responsibility_sq, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(in_responsibility_sq_Parameter);
			SqlParameter in_responsibility_type_id_Parameter = ObjDBManager.CreateSqlParameter("in_responsibility_type_id", in_responsibility_type_id, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(in_responsibility_type_id_Parameter);
			DataSet dset = ObjDBManager.ExecuteStoredProc("ResponsibilityTypes_UpdPr", sqlParameters);

			return dset;
		}
		
public string ResponsibilityTypes_UpdPrAsTask(System.Int16? in_working_unit_id, 
		                                                    System.String in_responsibility_nm, 
		                                                    System.Byte? in_responsibility_cnt, 
		                                                    System.Int16? in_responsibility_sq, 
		                                                    System.Int16? in_responsibility_type_id)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter in_working_unit_id_Parameter = ObjDBManager.CreateSqlParameter("in_working_unit_id", in_working_unit_id, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(in_working_unit_id_Parameter);
			SqlParameter in_responsibility_nm_Parameter = ObjDBManager.CreateSqlParameter("in_responsibility_nm", in_responsibility_nm, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(in_responsibility_nm_Parameter);
			SqlParameter in_responsibility_cnt_Parameter = ObjDBManager.CreateSqlParameter("in_responsibility_cnt", in_responsibility_cnt, SqlDbType.TinyInt, ParameterDirection.Input);
			sqlParameters.Add(in_responsibility_cnt_Parameter);
			SqlParameter in_responsibility_sq_Parameter = ObjDBManager.CreateSqlParameter("in_responsibility_sq", in_responsibility_sq, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(in_responsibility_sq_Parameter);
			SqlParameter in_responsibility_type_id_Parameter = ObjDBManager.CreateSqlParameter("in_responsibility_type_id", in_responsibility_type_id, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(in_responsibility_type_id_Parameter);
			string taskString = ObjDBManager.GetPrintableSQLString("ResponsibilityTypes_UpdPr", sqlParameters);

			return taskString;
		}
		
		
		
public DataSet SelAddTypes()
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			DataSet dset = ObjDBManager.ExecuteStoredProc("SelAddTypes", sqlParameters);
			return dset;
		}
		
public string SelAddTypesAsTask()
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			string taskString = ObjDBManager.GetPrintableSQLString("SelAddTypes", sqlParameters);
			return taskString;
		}
		
		
		
public DataSet SelCountries(System.String p_stateName)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter p_stateName_Parameter = ObjDBManager.CreateSqlParameter("p_stateName", p_stateName, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_stateName_Parameter);
			DataSet dset = ObjDBManager.ExecuteStoredProc("SelCountries", sqlParameters);

			return dset;
		}
		
public string SelCountriesAsTask(System.String p_stateName)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter p_stateName_Parameter = ObjDBManager.CreateSqlParameter("p_stateName", p_stateName, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_stateName_Parameter);
			string taskString = ObjDBManager.GetPrintableSQLString("SelCountries", sqlParameters);

			return taskString;
		}
		
		
		
public DataSet SelDistCity(System.Int32? p_stateID)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter p_stateID_Parameter = ObjDBManager.CreateSqlParameter("p_stateID", p_stateID, SqlDbType.Int, ParameterDirection.Input);
			sqlParameters.Add(p_stateID_Parameter);
			DataSet dset = ObjDBManager.ExecuteStoredProc("SelDistCity", sqlParameters);

			return dset;
		}
		
public string SelDistCityAsTask(System.Int32? p_stateID)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter p_stateID_Parameter = ObjDBManager.CreateSqlParameter("p_stateID", p_stateID, SqlDbType.Int, ParameterDirection.Input);
			sqlParameters.Add(p_stateID_Parameter);
			string taskString = ObjDBManager.GetPrintableSQLString("SelDistCity", sqlParameters);

			return taskString;
		}
		
		
		
public DataSet SelPartyAddresses(System.Int32? p_party_id, 
		                                    System.String p_application_id)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter p_party_id_Parameter = ObjDBManager.CreateSqlParameter("p_party_id", p_party_id, SqlDbType.Int, ParameterDirection.Input);
			sqlParameters.Add(p_party_id_Parameter);
			SqlParameter p_application_id_Parameter = ObjDBManager.CreateSqlParameter("p_application_id", p_application_id, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_application_id_Parameter);
			DataSet dset = ObjDBManager.ExecuteStoredProc("SelPartyAddresses", sqlParameters);

			return dset;
		}
		
public string SelPartyAddressesAsTask(System.Int32? p_party_id, 
		                                            System.String p_application_id)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter p_party_id_Parameter = ObjDBManager.CreateSqlParameter("p_party_id", p_party_id, SqlDbType.Int, ParameterDirection.Input);
			sqlParameters.Add(p_party_id_Parameter);
			SqlParameter p_application_id_Parameter = ObjDBManager.CreateSqlParameter("p_application_id", p_application_id, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_application_id_Parameter);
			string taskString = ObjDBManager.GetPrintableSQLString("SelPartyAddresses", sqlParameters);

			return taskString;
		}
		
		
		
public DataSet SelPartyRoleApplication(System.Int32? p_party_id)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter p_party_id_Parameter = ObjDBManager.CreateSqlParameter("p_party_id", p_party_id, SqlDbType.Int, ParameterDirection.Input);
			sqlParameters.Add(p_party_id_Parameter);
			DataSet dset = ObjDBManager.ExecuteStoredProc("SelPartyRoleApplication", sqlParameters);

			return dset;
		}
		
public string SelPartyRoleApplicationAsTask(System.Int32? p_party_id)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter p_party_id_Parameter = ObjDBManager.CreateSqlParameter("p_party_id", p_party_id, SqlDbType.Int, ParameterDirection.Input);
			sqlParameters.Add(p_party_id_Parameter);
			string taskString = ObjDBManager.GetPrintableSQLString("SelPartyRoleApplication", sqlParameters);

			return taskString;
		}
		
		
		
public DataSet SelPartyRoles(System.Int32? p_party_id)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter p_party_id_Parameter = ObjDBManager.CreateSqlParameter("p_party_id", p_party_id, SqlDbType.Int, ParameterDirection.Input);
			sqlParameters.Add(p_party_id_Parameter);
			DataSet dset = ObjDBManager.ExecuteStoredProc("SelPartyRoles", sqlParameters);

			return dset;
		}
		
public string SelPartyRolesAsTask(System.Int32? p_party_id)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter p_party_id_Parameter = ObjDBManager.CreateSqlParameter("p_party_id", p_party_id, SqlDbType.Int, ParameterDirection.Input);
			sqlParameters.Add(p_party_id_Parameter);
			string taskString = ObjDBManager.GetPrintableSQLString("SelPartyRoles", sqlParameters);

			return taskString;
		}
		
		
		
public DataSet SelPersons(System.String p_conditionValue, 
		                                System.String p_condition)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter p_conditionValue_Parameter = ObjDBManager.CreateSqlParameter("p_conditionValue", p_conditionValue, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_conditionValue_Parameter);
			SqlParameter p_condition_Parameter = ObjDBManager.CreateSqlParameter("p_condition", p_condition, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_condition_Parameter);
			DataSet dset = ObjDBManager.ExecuteStoredProc("SelPersons", sqlParameters);

			return dset;
		}
		
public string SelPersonsAsTask(System.String p_conditionValue, 
		                                    System.String p_condition)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter p_conditionValue_Parameter = ObjDBManager.CreateSqlParameter("p_conditionValue", p_conditionValue, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_conditionValue_Parameter);
			SqlParameter p_condition_Parameter = ObjDBManager.CreateSqlParameter("p_condition", p_condition, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_condition_Parameter);
			string taskString = ObjDBManager.GetPrintableSQLString("SelPersons", sqlParameters);

			return taskString;
		}
		
		
		
public DataSet SelRoles()
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			DataSet dset = ObjDBManager.ExecuteStoredProc("SelRoles", sqlParameters);
			return dset;
		}
		
public string SelRolesAsTask()
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			string taskString = ObjDBManager.GetPrintableSQLString("SelRoles", sqlParameters);
			return taskString;
		}
		
		
		
public DataSet SelRolesAppControls(System.String p_role_cd, 
		                                        System.String p_current_app_id)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter p_role_cd_Parameter = ObjDBManager.CreateSqlParameter("p_role_cd", p_role_cd, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_role_cd_Parameter);
			SqlParameter p_current_app_id_Parameter = ObjDBManager.CreateSqlParameter("p_current_app_id", p_current_app_id, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_current_app_id_Parameter);
			DataSet dset = ObjDBManager.ExecuteStoredProc("SelRolesAppControls", sqlParameters);

			return dset;
		}
		
public string SelRolesAppControlsAsTask(System.String p_role_cd, 
		                                            System.String p_current_app_id)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter p_role_cd_Parameter = ObjDBManager.CreateSqlParameter("p_role_cd", p_role_cd, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_role_cd_Parameter);
			SqlParameter p_current_app_id_Parameter = ObjDBManager.CreateSqlParameter("p_current_app_id", p_current_app_id, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_current_app_id_Parameter);
			string taskString = ObjDBManager.GetPrintableSQLString("SelRolesAppControls", sqlParameters);

			return taskString;
		}
		
		
		
public DataSet SelStates(System.Int16? p_countryID)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter p_countryID_Parameter = ObjDBManager.CreateSqlParameter("p_countryID", p_countryID, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(p_countryID_Parameter);
			DataSet dset = ObjDBManager.ExecuteStoredProc("SelStates", sqlParameters);

			return dset;
		}
		
public string SelStatesAsTask(System.Int16? p_countryID)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter p_countryID_Parameter = ObjDBManager.CreateSqlParameter("p_countryID", p_countryID, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(p_countryID_Parameter);
			string taskString = ObjDBManager.GetPrintableSQLString("SelStates", sqlParameters);

			return taskString;
		}
		
		
		
public DataSet SewadarResponsibilities_InsPr(System.Int16? in_working_unit_id, 
		                                                System.Int16? in_responsibility_type_id, 
		                                                System.Int32? in_sewadar_id, 
		                                                System.Int16? in_responsibility_sq)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter in_working_unit_id_Parameter = ObjDBManager.CreateSqlParameter("in_working_unit_id", in_working_unit_id, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(in_working_unit_id_Parameter);
			SqlParameter in_responsibility_type_id_Parameter = ObjDBManager.CreateSqlParameter("in_responsibility_type_id", in_responsibility_type_id, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(in_responsibility_type_id_Parameter);
			SqlParameter in_sewadar_id_Parameter = ObjDBManager.CreateSqlParameter("in_sewadar_id", in_sewadar_id, SqlDbType.Int, ParameterDirection.Input);
			sqlParameters.Add(in_sewadar_id_Parameter);
			SqlParameter in_responsibility_sq_Parameter = ObjDBManager.CreateSqlParameter("in_responsibility_sq", in_responsibility_sq, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(in_responsibility_sq_Parameter);
			DataSet dset = ObjDBManager.ExecuteStoredProc("SewadarResponsibilities_InsPr", sqlParameters);

			return dset;
		}
		
public string SewadarResponsibilities_InsPrAsTask(System.Int16? in_working_unit_id, 
		                                                        System.Int16? in_responsibility_type_id, 
		                                                        System.Int32? in_sewadar_id, 
		                                                        System.Int16? in_responsibility_sq)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter in_working_unit_id_Parameter = ObjDBManager.CreateSqlParameter("in_working_unit_id", in_working_unit_id, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(in_working_unit_id_Parameter);
			SqlParameter in_responsibility_type_id_Parameter = ObjDBManager.CreateSqlParameter("in_responsibility_type_id", in_responsibility_type_id, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(in_responsibility_type_id_Parameter);
			SqlParameter in_sewadar_id_Parameter = ObjDBManager.CreateSqlParameter("in_sewadar_id", in_sewadar_id, SqlDbType.Int, ParameterDirection.Input);
			sqlParameters.Add(in_sewadar_id_Parameter);
			SqlParameter in_responsibility_sq_Parameter = ObjDBManager.CreateSqlParameter("in_responsibility_sq", in_responsibility_sq, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(in_responsibility_sq_Parameter);
			string taskString = ObjDBManager.GetPrintableSQLString("SewadarResponsibilities_InsPr", sqlParameters);

			return taskString;
		}
		
		
		
public DataSet SewadarResponsibilities_SelPr(System.Int16? in_working_unit_id)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter in_working_unit_id_Parameter = ObjDBManager.CreateSqlParameter("in_working_unit_id", in_working_unit_id, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(in_working_unit_id_Parameter);
			DataSet dset = ObjDBManager.ExecuteStoredProc("SewadarResponsibilities_SelPr", sqlParameters);

			return dset;
		}
		
public string SewadarResponsibilities_SelPrAsTask(System.Int16? in_working_unit_id)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter in_working_unit_id_Parameter = ObjDBManager.CreateSqlParameter("in_working_unit_id", in_working_unit_id, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(in_working_unit_id_Parameter);
			string taskString = ObjDBManager.GetPrintableSQLString("SewadarResponsibilities_SelPr", sqlParameters);

			return taskString;
		}
		
		
		
public DataSet Strength_SelPr(System.Int16? in_working_unit_id)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter in_working_unit_id_Parameter = ObjDBManager.CreateSqlParameter("in_working_unit_id", in_working_unit_id, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(in_working_unit_id_Parameter);
			DataSet dset = ObjDBManager.ExecuteStoredProc("Strength_SelPr", sqlParameters);

			return dset;
		}
		
public string Strength_SelPrAsTask(System.Int16? in_working_unit_id)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter in_working_unit_id_Parameter = ObjDBManager.CreateSqlParameter("in_working_unit_id", in_working_unit_id, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(in_working_unit_id_Parameter);
			string taskString = ObjDBManager.GetPrintableSQLString("Strength_SelPr", sqlParameters);

			return taskString;
		}
		
		
		
public DataSet Upd_epabx_extensions_WU(System.Int16? in_working_unit_id, 
		                                            System.String in_epabx_extension, 
		                                            System.String in_epabx_extension_old, 
		                                            System.Int16? in_extension_sq)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter in_working_unit_id_Parameter = ObjDBManager.CreateSqlParameter("in_working_unit_id", in_working_unit_id, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(in_working_unit_id_Parameter);
			SqlParameter in_epabx_extension_Parameter = ObjDBManager.CreateSqlParameter("in_epabx_extension", in_epabx_extension, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(in_epabx_extension_Parameter);
			SqlParameter in_epabx_extension_old_Parameter = ObjDBManager.CreateSqlParameter("in_epabx_extension_old", in_epabx_extension_old, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(in_epabx_extension_old_Parameter);
			SqlParameter in_extension_sq_Parameter = ObjDBManager.CreateSqlParameter("in_extension_sq", in_extension_sq, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(in_extension_sq_Parameter);
			DataSet dset = ObjDBManager.ExecuteStoredProc("Upd_epabx_extensions_WU", sqlParameters);

			return dset;
		}
		
public string Upd_epabx_extensions_WUAsTask(System.Int16? in_working_unit_id, 
		                                                System.String in_epabx_extension, 
		                                                System.String in_epabx_extension_old, 
		                                                System.Int16? in_extension_sq)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter in_working_unit_id_Parameter = ObjDBManager.CreateSqlParameter("in_working_unit_id", in_working_unit_id, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(in_working_unit_id_Parameter);
			SqlParameter in_epabx_extension_Parameter = ObjDBManager.CreateSqlParameter("in_epabx_extension", in_epabx_extension, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(in_epabx_extension_Parameter);
			SqlParameter in_epabx_extension_old_Parameter = ObjDBManager.CreateSqlParameter("in_epabx_extension_old", in_epabx_extension_old, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(in_epabx_extension_old_Parameter);
			SqlParameter in_extension_sq_Parameter = ObjDBManager.CreateSqlParameter("in_extension_sq", in_extension_sq, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(in_extension_sq_Parameter);
			string taskString = ObjDBManager.GetPrintableSQLString("Upd_epabx_extensions_WU", sqlParameters);

			return taskString;
		}
		
		
		
public DataSet Upd_epabx_extensions_WU_displayOrder(System.Int16? in_working_unit_id)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter in_working_unit_id_Parameter = ObjDBManager.CreateSqlParameter("in_working_unit_id", in_working_unit_id, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(in_working_unit_id_Parameter);
			DataSet dset = ObjDBManager.ExecuteStoredProc("Upd_epabx_extensions_WU_displayOrder", sqlParameters);

			return dset;
		}
		
public string Upd_epabx_extensions_WU_displayOrderAsTask(System.Int16? in_working_unit_id)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter in_working_unit_id_Parameter = ObjDBManager.CreateSqlParameter("in_working_unit_id", in_working_unit_id, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(in_working_unit_id_Parameter);
			string taskString = ObjDBManager.GetPrintableSQLString("Upd_epabx_extensions_WU_displayOrder", sqlParameters);

			return taskString;
		}
		
		
		
public DataSet Upd_fax_lines_WU(System.Int16? in_working_unit_id, 
		                                    System.String in_fax_line, 
		                                    System.String in_fax_line_old, 
		                                    System.Int16? in_line_sq)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter in_working_unit_id_Parameter = ObjDBManager.CreateSqlParameter("in_working_unit_id", in_working_unit_id, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(in_working_unit_id_Parameter);
			SqlParameter in_fax_line_Parameter = ObjDBManager.CreateSqlParameter("in_fax_line", in_fax_line, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(in_fax_line_Parameter);
			SqlParameter in_fax_line_old_Parameter = ObjDBManager.CreateSqlParameter("in_fax_line_old", in_fax_line_old, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(in_fax_line_old_Parameter);
			SqlParameter in_line_sq_Parameter = ObjDBManager.CreateSqlParameter("in_line_sq", in_line_sq, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(in_line_sq_Parameter);
			DataSet dset = ObjDBManager.ExecuteStoredProc("Upd_fax_lines_WU", sqlParameters);

			return dset;
		}
		
public string Upd_fax_lines_WUAsTask(System.Int16? in_working_unit_id, 
		                                        System.String in_fax_line, 
		                                        System.String in_fax_line_old, 
		                                        System.Int16? in_line_sq)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter in_working_unit_id_Parameter = ObjDBManager.CreateSqlParameter("in_working_unit_id", in_working_unit_id, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(in_working_unit_id_Parameter);
			SqlParameter in_fax_line_Parameter = ObjDBManager.CreateSqlParameter("in_fax_line", in_fax_line, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(in_fax_line_Parameter);
			SqlParameter in_fax_line_old_Parameter = ObjDBManager.CreateSqlParameter("in_fax_line_old", in_fax_line_old, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(in_fax_line_old_Parameter);
			SqlParameter in_line_sq_Parameter = ObjDBManager.CreateSqlParameter("in_line_sq", in_line_sq, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(in_line_sq_Parameter);
			string taskString = ObjDBManager.GetPrintableSQLString("Upd_fax_lines_WU", sqlParameters);

			return taskString;
		}
		
		
		
public DataSet Upd_fax_lines_WU_displayOrder(System.Int16? in_working_unit_id)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter in_working_unit_id_Parameter = ObjDBManager.CreateSqlParameter("in_working_unit_id", in_working_unit_id, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(in_working_unit_id_Parameter);
			DataSet dset = ObjDBManager.ExecuteStoredProc("Upd_fax_lines_WU_displayOrder", sqlParameters);

			return dset;
		}
		
public string Upd_fax_lines_WU_displayOrderAsTask(System.Int16? in_working_unit_id)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter in_working_unit_id_Parameter = ObjDBManager.CreateSqlParameter("in_working_unit_id", in_working_unit_id, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(in_working_unit_id_Parameter);
			string taskString = ObjDBManager.GetPrintableSQLString("Upd_fax_lines_WU_displayOrder", sqlParameters);

			return taskString;
		}
		
		
		
public DataSet Upd_p_and_t_lines_WU(System.Int16? in_working_unit_id, 
		                                        System.String in_p_and_t_line, 
		                                        System.String in_p_and_t_line_old, 
		                                        System.Int16? in_line_sq)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter in_working_unit_id_Parameter = ObjDBManager.CreateSqlParameter("in_working_unit_id", in_working_unit_id, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(in_working_unit_id_Parameter);
			SqlParameter in_p_and_t_line_Parameter = ObjDBManager.CreateSqlParameter("in_p_and_t_line", in_p_and_t_line, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(in_p_and_t_line_Parameter);
			SqlParameter in_p_and_t_line_old_Parameter = ObjDBManager.CreateSqlParameter("in_p_and_t_line_old", in_p_and_t_line_old, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(in_p_and_t_line_old_Parameter);
			SqlParameter in_line_sq_Parameter = ObjDBManager.CreateSqlParameter("in_line_sq", in_line_sq, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(in_line_sq_Parameter);
			DataSet dset = ObjDBManager.ExecuteStoredProc("Upd_p_and_t_lines_WU", sqlParameters);

			return dset;
		}
		
public string Upd_p_and_t_lines_WUAsTask(System.Int16? in_working_unit_id, 
		                                            System.String in_p_and_t_line, 
		                                            System.String in_p_and_t_line_old, 
		                                            System.Int16? in_line_sq)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter in_working_unit_id_Parameter = ObjDBManager.CreateSqlParameter("in_working_unit_id", in_working_unit_id, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(in_working_unit_id_Parameter);
			SqlParameter in_p_and_t_line_Parameter = ObjDBManager.CreateSqlParameter("in_p_and_t_line", in_p_and_t_line, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(in_p_and_t_line_Parameter);
			SqlParameter in_p_and_t_line_old_Parameter = ObjDBManager.CreateSqlParameter("in_p_and_t_line_old", in_p_and_t_line_old, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(in_p_and_t_line_old_Parameter);
			SqlParameter in_line_sq_Parameter = ObjDBManager.CreateSqlParameter("in_line_sq", in_line_sq, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(in_line_sq_Parameter);
			string taskString = ObjDBManager.GetPrintableSQLString("Upd_p_and_t_lines_WU", sqlParameters);

			return taskString;
		}
		
		
		
public DataSet Upd_p_and_t_lines_WU_displayOrder(System.Int16? in_working_unit_id)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter in_working_unit_id_Parameter = ObjDBManager.CreateSqlParameter("in_working_unit_id", in_working_unit_id, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(in_working_unit_id_Parameter);
			DataSet dset = ObjDBManager.ExecuteStoredProc("Upd_p_and_t_lines_WU_displayOrder", sqlParameters);

			return dset;
		}
		
public string Upd_p_and_t_lines_WU_displayOrderAsTask(System.Int16? in_working_unit_id)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter in_working_unit_id_Parameter = ObjDBManager.CreateSqlParameter("in_working_unit_id", in_working_unit_id, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(in_working_unit_id_Parameter);
			string taskString = ObjDBManager.GetPrintableSQLString("Upd_p_and_t_lines_WU_displayOrder", sqlParameters);

			return taskString;
		}
		
		
		
public DataSet UpdAssistant_Services(System.Int16? assistant_service_id, 
		                                        System.String assistant_service_nm, 
		                                        System.DateTime? effective_from, 
		                                        System.DateTime? effective_till)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter assistant_service_id_Parameter = ObjDBManager.CreateSqlParameter("assistant_service_id", assistant_service_id, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(assistant_service_id_Parameter);
			SqlParameter assistant_service_nm_Parameter = ObjDBManager.CreateSqlParameter("assistant_service_nm", assistant_service_nm, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(assistant_service_nm_Parameter);
			SqlParameter effective_from_Parameter = ObjDBManager.CreateSqlParameter("effective_from", effective_from, SqlDbType.DateTime, ParameterDirection.Input);
			sqlParameters.Add(effective_from_Parameter);
			SqlParameter effective_till_Parameter = ObjDBManager.CreateSqlParameter("effective_till", effective_till, SqlDbType.DateTime, ParameterDirection.Input);
			sqlParameters.Add(effective_till_Parameter);
			DataSet dset = ObjDBManager.ExecuteStoredProc("UpdAssistant_Services", sqlParameters);

			return dset;
		}
		
public string UpdAssistant_ServicesAsTask(System.Int16? assistant_service_id, 
		                                                System.String assistant_service_nm, 
		                                                System.DateTime? effective_from, 
		                                                System.DateTime? effective_till)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter assistant_service_id_Parameter = ObjDBManager.CreateSqlParameter("assistant_service_id", assistant_service_id, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(assistant_service_id_Parameter);
			SqlParameter assistant_service_nm_Parameter = ObjDBManager.CreateSqlParameter("assistant_service_nm", assistant_service_nm, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(assistant_service_nm_Parameter);
			SqlParameter effective_from_Parameter = ObjDBManager.CreateSqlParameter("effective_from", effective_from, SqlDbType.DateTime, ParameterDirection.Input);
			sqlParameters.Add(effective_from_Parameter);
			SqlParameter effective_till_Parameter = ObjDBManager.CreateSqlParameter("effective_till", effective_till, SqlDbType.DateTime, ParameterDirection.Input);
			sqlParameters.Add(effective_till_Parameter);
			string taskString = ObjDBManager.GetPrintableSQLString("UpdAssistant_Services", sqlParameters);

			return taskString;
		}
		
		
		
public DataSet UpdInitiationPlace(System.Int16? p_place_id, 
		                                        System.String p_place_nm, 
		                                        System.DateTime? p_effectiveFrom, 
		                                        System.DateTime? p_effectiveTill, 
		                                        System.Int64? p_txn_ts)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter p_place_id_Parameter = ObjDBManager.CreateSqlParameter("p_place_id", p_place_id, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(p_place_id_Parameter);
			SqlParameter p_place_nm_Parameter = ObjDBManager.CreateSqlParameter("p_place_nm", p_place_nm, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_place_nm_Parameter);
			SqlParameter p_effectiveFrom_Parameter = ObjDBManager.CreateSqlParameter("p_effectiveFrom", p_effectiveFrom, SqlDbType.DateTime, ParameterDirection.Input);
			sqlParameters.Add(p_effectiveFrom_Parameter);
			SqlParameter p_effectiveTill_Parameter = ObjDBManager.CreateSqlParameter("p_effectiveTill", p_effectiveTill, SqlDbType.DateTime, ParameterDirection.Input);
			sqlParameters.Add(p_effectiveTill_Parameter);
			SqlParameter p_txn_ts_Parameter = ObjDBManager.CreateSqlParameter("p_txn_ts", p_txn_ts, SqlDbType.BigInt, ParameterDirection.Input);
			sqlParameters.Add(p_txn_ts_Parameter);
			DataSet dset = ObjDBManager.ExecuteStoredProc("UpdInitiationPlace", sqlParameters);

			return dset;
		}
		
public string UpdInitiationPlaceAsTask(System.Int16? p_place_id, 
		                                            System.String p_place_nm, 
		                                            System.DateTime? p_effectiveFrom, 
		                                            System.DateTime? p_effectiveTill, 
		                                            System.Int64? p_txn_ts)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter p_place_id_Parameter = ObjDBManager.CreateSqlParameter("p_place_id", p_place_id, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(p_place_id_Parameter);
			SqlParameter p_place_nm_Parameter = ObjDBManager.CreateSqlParameter("p_place_nm", p_place_nm, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_place_nm_Parameter);
			SqlParameter p_effectiveFrom_Parameter = ObjDBManager.CreateSqlParameter("p_effectiveFrom", p_effectiveFrom, SqlDbType.DateTime, ParameterDirection.Input);
			sqlParameters.Add(p_effectiveFrom_Parameter);
			SqlParameter p_effectiveTill_Parameter = ObjDBManager.CreateSqlParameter("p_effectiveTill", p_effectiveTill, SqlDbType.DateTime, ParameterDirection.Input);
			sqlParameters.Add(p_effectiveTill_Parameter);
			SqlParameter p_txn_ts_Parameter = ObjDBManager.CreateSqlParameter("p_txn_ts", p_txn_ts, SqlDbType.BigInt, ParameterDirection.Input);
			sqlParameters.Add(p_txn_ts_Parameter);
			string taskString = ObjDBManager.GetPrintableSQLString("UpdInitiationPlace", sqlParameters);

			return taskString;
		}
		
		
		
public DataSet UpdLanguages(System.Int32? p_language_id, 
		                                System.String p_language_cd, 
		                                System.String p_language_nm, 
		                                System.DateTime? p_effectiveFrom, 
		                                System.DateTime? p_effectiveTill, 
		                                System.Int64? p_txn_ts)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter p_language_id_Parameter = ObjDBManager.CreateSqlParameter("p_language_id", p_language_id, SqlDbType.Int, ParameterDirection.Input);
			sqlParameters.Add(p_language_id_Parameter);
			SqlParameter p_language_cd_Parameter = ObjDBManager.CreateSqlParameter("p_language_cd", p_language_cd, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_language_cd_Parameter);
			SqlParameter p_language_nm_Parameter = ObjDBManager.CreateSqlParameter("p_language_nm", p_language_nm, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_language_nm_Parameter);
			SqlParameter p_effectiveFrom_Parameter = ObjDBManager.CreateSqlParameter("p_effectiveFrom", p_effectiveFrom, SqlDbType.DateTime, ParameterDirection.Input);
			sqlParameters.Add(p_effectiveFrom_Parameter);
			SqlParameter p_effectiveTill_Parameter = ObjDBManager.CreateSqlParameter("p_effectiveTill", p_effectiveTill, SqlDbType.DateTime, ParameterDirection.Input);
			sqlParameters.Add(p_effectiveTill_Parameter);
			SqlParameter p_txn_ts_Parameter = ObjDBManager.CreateSqlParameter("p_txn_ts", p_txn_ts, SqlDbType.BigInt, ParameterDirection.Input);
			sqlParameters.Add(p_txn_ts_Parameter);
			DataSet dset = ObjDBManager.ExecuteStoredProc("UpdLanguages", sqlParameters);

			return dset;
		}
		
public string UpdLanguagesAsTask(System.Int32? p_language_id, 
		                                    System.String p_language_cd, 
		                                    System.String p_language_nm, 
		                                    System.DateTime? p_effectiveFrom, 
		                                    System.DateTime? p_effectiveTill, 
		                                    System.Int64? p_txn_ts)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter p_language_id_Parameter = ObjDBManager.CreateSqlParameter("p_language_id", p_language_id, SqlDbType.Int, ParameterDirection.Input);
			sqlParameters.Add(p_language_id_Parameter);
			SqlParameter p_language_cd_Parameter = ObjDBManager.CreateSqlParameter("p_language_cd", p_language_cd, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_language_cd_Parameter);
			SqlParameter p_language_nm_Parameter = ObjDBManager.CreateSqlParameter("p_language_nm", p_language_nm, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_language_nm_Parameter);
			SqlParameter p_effectiveFrom_Parameter = ObjDBManager.CreateSqlParameter("p_effectiveFrom", p_effectiveFrom, SqlDbType.DateTime, ParameterDirection.Input);
			sqlParameters.Add(p_effectiveFrom_Parameter);
			SqlParameter p_effectiveTill_Parameter = ObjDBManager.CreateSqlParameter("p_effectiveTill", p_effectiveTill, SqlDbType.DateTime, ParameterDirection.Input);
			sqlParameters.Add(p_effectiveTill_Parameter);
			SqlParameter p_txn_ts_Parameter = ObjDBManager.CreateSqlParameter("p_txn_ts", p_txn_ts, SqlDbType.BigInt, ParameterDirection.Input);
			sqlParameters.Add(p_txn_ts_Parameter);
			string taskString = ObjDBManager.GetPrintableSQLString("UpdLanguages", sqlParameters);

			return taskString;
		}
		
		
		
public DataSet UpdParties(System.Int32? p_party_id, 
		                                System.String p_party_cd, 
		                                System.String p_party_nm, 
		                                System.String p_pan, 
		                                System.String p_party_contact_nm, 
		                                System.String p_party_contact_designation, 
		                                System.Int64? p_txn_ts, 
		                                System.String p_application_id)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter p_party_id_Parameter = ObjDBManager.CreateSqlParameter("p_party_id", p_party_id, SqlDbType.Int, ParameterDirection.Input);
			sqlParameters.Add(p_party_id_Parameter);
			SqlParameter p_party_cd_Parameter = ObjDBManager.CreateSqlParameter("p_party_cd", p_party_cd, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_party_cd_Parameter);
			SqlParameter p_party_nm_Parameter = ObjDBManager.CreateSqlParameter("p_party_nm", p_party_nm, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_party_nm_Parameter);
			SqlParameter p_pan_Parameter = ObjDBManager.CreateSqlParameter("p_pan", p_pan, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_pan_Parameter);
			SqlParameter p_party_contact_nm_Parameter = ObjDBManager.CreateSqlParameter("p_party_contact_nm", p_party_contact_nm, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_party_contact_nm_Parameter);
			SqlParameter p_party_contact_designation_Parameter = ObjDBManager.CreateSqlParameter("p_party_contact_designation", p_party_contact_designation, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_party_contact_designation_Parameter);
			SqlParameter p_txn_ts_Parameter = ObjDBManager.CreateSqlParameter("p_txn_ts", p_txn_ts, SqlDbType.BigInt, ParameterDirection.Input);
			sqlParameters.Add(p_txn_ts_Parameter);
			SqlParameter p_application_id_Parameter = ObjDBManager.CreateSqlParameter("p_application_id", p_application_id, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_application_id_Parameter);
			DataSet dset = ObjDBManager.ExecuteStoredProc("UpdParties", sqlParameters);

			return dset;
		}
		
public string UpdPartiesAsTask(System.Int32? p_party_id, 
		                                    System.String p_party_cd, 
		                                    System.String p_party_nm, 
		                                    System.String p_pan, 
		                                    System.String p_party_contact_nm, 
		                                    System.String p_party_contact_designation, 
		                                    System.Int64? p_txn_ts, 
		                                    System.String p_application_id)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter p_party_id_Parameter = ObjDBManager.CreateSqlParameter("p_party_id", p_party_id, SqlDbType.Int, ParameterDirection.Input);
			sqlParameters.Add(p_party_id_Parameter);
			SqlParameter p_party_cd_Parameter = ObjDBManager.CreateSqlParameter("p_party_cd", p_party_cd, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_party_cd_Parameter);
			SqlParameter p_party_nm_Parameter = ObjDBManager.CreateSqlParameter("p_party_nm", p_party_nm, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_party_nm_Parameter);
			SqlParameter p_pan_Parameter = ObjDBManager.CreateSqlParameter("p_pan", p_pan, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_pan_Parameter);
			SqlParameter p_party_contact_nm_Parameter = ObjDBManager.CreateSqlParameter("p_party_contact_nm", p_party_contact_nm, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_party_contact_nm_Parameter);
			SqlParameter p_party_contact_designation_Parameter = ObjDBManager.CreateSqlParameter("p_party_contact_designation", p_party_contact_designation, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_party_contact_designation_Parameter);
			SqlParameter p_txn_ts_Parameter = ObjDBManager.CreateSqlParameter("p_txn_ts", p_txn_ts, SqlDbType.BigInt, ParameterDirection.Input);
			sqlParameters.Add(p_txn_ts_Parameter);
			SqlParameter p_application_id_Parameter = ObjDBManager.CreateSqlParameter("p_application_id", p_application_id, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_application_id_Parameter);
			string taskString = ObjDBManager.GetPrintableSQLString("UpdParties", sqlParameters);

			return taskString;
		}
		
		
		
public DataSet UpdPartyAddresses(System.Int32? p_party_address_id, 
		                                    System.Int32? p_party_id, 
		                                    System.String p_address_type_nm, 
		                                    System.Byte? p_address_no, 
		                                    System.String p_contact_nm, 
		                                    System.String p_contact_designation, 
		                                    System.String p_address_line_1, 
		                                    System.String p_address_line_2, 
		                                    System.Int16? p_country_id, 
		                                    System.Int32? p_state_id, 
		                                    System.Int32? p_district_or_city_id, 
		                                    System.Int32? p_post_office_id, 
		                                    System.String p_pin_or_zip_code, 
		                                    System.String p_cell_phones, 
		                                    System.String p_telephones, 
		                                    System.String p_email_addresses, 
		                                    System.String p_fax_lines, 
		                                    System.DateTime? p_effective_from, 
		                                    System.DateTime? p_effective_till, 
		                                    System.String p_application_id)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter p_party_address_id_Parameter = ObjDBManager.CreateSqlParameter("p_party_address_id", p_party_address_id, SqlDbType.Int, ParameterDirection.Input);
			sqlParameters.Add(p_party_address_id_Parameter);
			SqlParameter p_party_id_Parameter = ObjDBManager.CreateSqlParameter("p_party_id", p_party_id, SqlDbType.Int, ParameterDirection.Input);
			sqlParameters.Add(p_party_id_Parameter);
			SqlParameter p_address_type_nm_Parameter = ObjDBManager.CreateSqlParameter("p_address_type_nm", p_address_type_nm, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_address_type_nm_Parameter);
			SqlParameter p_address_no_Parameter = ObjDBManager.CreateSqlParameter("p_address_no", p_address_no, SqlDbType.TinyInt, ParameterDirection.Input);
			sqlParameters.Add(p_address_no_Parameter);
			SqlParameter p_contact_nm_Parameter = ObjDBManager.CreateSqlParameter("p_contact_nm", p_contact_nm, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_contact_nm_Parameter);
			SqlParameter p_contact_designation_Parameter = ObjDBManager.CreateSqlParameter("p_contact_designation", p_contact_designation, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_contact_designation_Parameter);
			SqlParameter p_address_line_1_Parameter = ObjDBManager.CreateSqlParameter("p_address_line_1", p_address_line_1, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_address_line_1_Parameter);
			SqlParameter p_address_line_2_Parameter = ObjDBManager.CreateSqlParameter("p_address_line_2", p_address_line_2, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_address_line_2_Parameter);
			SqlParameter p_country_id_Parameter = ObjDBManager.CreateSqlParameter("p_country_id", p_country_id, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(p_country_id_Parameter);
			SqlParameter p_state_id_Parameter = ObjDBManager.CreateSqlParameter("p_state_id", p_state_id, SqlDbType.Int, ParameterDirection.Input);
			sqlParameters.Add(p_state_id_Parameter);
			SqlParameter p_district_or_city_id_Parameter = ObjDBManager.CreateSqlParameter("p_district_or_city_id", p_district_or_city_id, SqlDbType.Int, ParameterDirection.Input);
			sqlParameters.Add(p_district_or_city_id_Parameter);
			SqlParameter p_post_office_id_Parameter = ObjDBManager.CreateSqlParameter("p_post_office_id", p_post_office_id, SqlDbType.Int, ParameterDirection.Input);
			sqlParameters.Add(p_post_office_id_Parameter);
			SqlParameter p_pin_or_zip_code_Parameter = ObjDBManager.CreateSqlParameter("p_pin_or_zip_code", p_pin_or_zip_code, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_pin_or_zip_code_Parameter);
			SqlParameter p_cell_phones_Parameter = ObjDBManager.CreateSqlParameter("p_cell_phones", p_cell_phones, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_cell_phones_Parameter);
			SqlParameter p_telephones_Parameter = ObjDBManager.CreateSqlParameter("p_telephones", p_telephones, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_telephones_Parameter);
			SqlParameter p_email_addresses_Parameter = ObjDBManager.CreateSqlParameter("p_email_addresses", p_email_addresses, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_email_addresses_Parameter);
			SqlParameter p_fax_lines_Parameter = ObjDBManager.CreateSqlParameter("p_fax_lines", p_fax_lines, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_fax_lines_Parameter);
			SqlParameter p_effective_from_Parameter = ObjDBManager.CreateSqlParameter("p_effective_from", p_effective_from, SqlDbType.DateTime, ParameterDirection.Input);
			sqlParameters.Add(p_effective_from_Parameter);
			SqlParameter p_effective_till_Parameter = ObjDBManager.CreateSqlParameter("p_effective_till", p_effective_till, SqlDbType.DateTime, ParameterDirection.Input);
			sqlParameters.Add(p_effective_till_Parameter);
			SqlParameter p_application_id_Parameter = ObjDBManager.CreateSqlParameter("p_application_id", p_application_id, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_application_id_Parameter);
			DataSet dset = ObjDBManager.ExecuteStoredProc("UpdPartyAddresses", sqlParameters);

			return dset;
		}
		
public string UpdPartyAddressesAsTask(System.Int32? p_party_address_id, 
		                                            System.Int32? p_party_id, 
		                                            System.String p_address_type_nm, 
		                                            System.Byte? p_address_no, 
		                                            System.String p_contact_nm, 
		                                            System.String p_contact_designation, 
		                                            System.String p_address_line_1, 
		                                            System.String p_address_line_2, 
		                                            System.Int16? p_country_id, 
		                                            System.Int32? p_state_id, 
		                                            System.Int32? p_district_or_city_id, 
		                                            System.Int32? p_post_office_id, 
		                                            System.String p_pin_or_zip_code, 
		                                            System.String p_cell_phones, 
		                                            System.String p_telephones, 
		                                            System.String p_email_addresses, 
		                                            System.String p_fax_lines, 
		                                            System.DateTime? p_effective_from, 
		                                            System.DateTime? p_effective_till, 
		                                            System.String p_application_id)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter p_party_address_id_Parameter = ObjDBManager.CreateSqlParameter("p_party_address_id", p_party_address_id, SqlDbType.Int, ParameterDirection.Input);
			sqlParameters.Add(p_party_address_id_Parameter);
			SqlParameter p_party_id_Parameter = ObjDBManager.CreateSqlParameter("p_party_id", p_party_id, SqlDbType.Int, ParameterDirection.Input);
			sqlParameters.Add(p_party_id_Parameter);
			SqlParameter p_address_type_nm_Parameter = ObjDBManager.CreateSqlParameter("p_address_type_nm", p_address_type_nm, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_address_type_nm_Parameter);
			SqlParameter p_address_no_Parameter = ObjDBManager.CreateSqlParameter("p_address_no", p_address_no, SqlDbType.TinyInt, ParameterDirection.Input);
			sqlParameters.Add(p_address_no_Parameter);
			SqlParameter p_contact_nm_Parameter = ObjDBManager.CreateSqlParameter("p_contact_nm", p_contact_nm, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_contact_nm_Parameter);
			SqlParameter p_contact_designation_Parameter = ObjDBManager.CreateSqlParameter("p_contact_designation", p_contact_designation, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_contact_designation_Parameter);
			SqlParameter p_address_line_1_Parameter = ObjDBManager.CreateSqlParameter("p_address_line_1", p_address_line_1, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_address_line_1_Parameter);
			SqlParameter p_address_line_2_Parameter = ObjDBManager.CreateSqlParameter("p_address_line_2", p_address_line_2, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_address_line_2_Parameter);
			SqlParameter p_country_id_Parameter = ObjDBManager.CreateSqlParameter("p_country_id", p_country_id, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(p_country_id_Parameter);
			SqlParameter p_state_id_Parameter = ObjDBManager.CreateSqlParameter("p_state_id", p_state_id, SqlDbType.Int, ParameterDirection.Input);
			sqlParameters.Add(p_state_id_Parameter);
			SqlParameter p_district_or_city_id_Parameter = ObjDBManager.CreateSqlParameter("p_district_or_city_id", p_district_or_city_id, SqlDbType.Int, ParameterDirection.Input);
			sqlParameters.Add(p_district_or_city_id_Parameter);
			SqlParameter p_post_office_id_Parameter = ObjDBManager.CreateSqlParameter("p_post_office_id", p_post_office_id, SqlDbType.Int, ParameterDirection.Input);
			sqlParameters.Add(p_post_office_id_Parameter);
			SqlParameter p_pin_or_zip_code_Parameter = ObjDBManager.CreateSqlParameter("p_pin_or_zip_code", p_pin_or_zip_code, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_pin_or_zip_code_Parameter);
			SqlParameter p_cell_phones_Parameter = ObjDBManager.CreateSqlParameter("p_cell_phones", p_cell_phones, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_cell_phones_Parameter);
			SqlParameter p_telephones_Parameter = ObjDBManager.CreateSqlParameter("p_telephones", p_telephones, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_telephones_Parameter);
			SqlParameter p_email_addresses_Parameter = ObjDBManager.CreateSqlParameter("p_email_addresses", p_email_addresses, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_email_addresses_Parameter);
			SqlParameter p_fax_lines_Parameter = ObjDBManager.CreateSqlParameter("p_fax_lines", p_fax_lines, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_fax_lines_Parameter);
			SqlParameter p_effective_from_Parameter = ObjDBManager.CreateSqlParameter("p_effective_from", p_effective_from, SqlDbType.DateTime, ParameterDirection.Input);
			sqlParameters.Add(p_effective_from_Parameter);
			SqlParameter p_effective_till_Parameter = ObjDBManager.CreateSqlParameter("p_effective_till", p_effective_till, SqlDbType.DateTime, ParameterDirection.Input);
			sqlParameters.Add(p_effective_till_Parameter);
			SqlParameter p_application_id_Parameter = ObjDBManager.CreateSqlParameter("p_application_id", p_application_id, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_application_id_Parameter);
			string taskString = ObjDBManager.GetPrintableSQLString("UpdPartyAddresses", sqlParameters);

			return taskString;
		}
		
		
		
public DataSet UpdPartyRoleApplication(System.Int32? p_party_id, 
		                                            System.String p_old_role_cd, 
		                                            System.String p_role_cd, 
		                                            System.String p_application_id, 
		                                            System.String p_old_application_id, 
		                                            System.String p_is_read, 
		                                            System.String p_is_update)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter p_party_id_Parameter = ObjDBManager.CreateSqlParameter("p_party_id", p_party_id, SqlDbType.Int, ParameterDirection.Input);
			sqlParameters.Add(p_party_id_Parameter);
			SqlParameter p_old_role_cd_Parameter = ObjDBManager.CreateSqlParameter("p_old_role_cd", p_old_role_cd, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_old_role_cd_Parameter);
			SqlParameter p_role_cd_Parameter = ObjDBManager.CreateSqlParameter("p_role_cd", p_role_cd, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_role_cd_Parameter);
			SqlParameter p_application_id_Parameter = ObjDBManager.CreateSqlParameter("p_application_id", p_application_id, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_application_id_Parameter);
			SqlParameter p_old_application_id_Parameter = ObjDBManager.CreateSqlParameter("p_old_application_id", p_old_application_id, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_old_application_id_Parameter);
			SqlParameter p_is_read_Parameter = ObjDBManager.CreateSqlParameter("p_is_read", p_is_read, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_is_read_Parameter);
			SqlParameter p_is_update_Parameter = ObjDBManager.CreateSqlParameter("p_is_update", p_is_update, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_is_update_Parameter);
			DataSet dset = ObjDBManager.ExecuteStoredProc("UpdPartyRoleApplication", sqlParameters);

			return dset;
		}
		
public string UpdPartyRoleApplicationAsTask(System.Int32? p_party_id, 
		                                                System.String p_old_role_cd, 
		                                                System.String p_role_cd, 
		                                                System.String p_application_id, 
		                                                System.String p_old_application_id, 
		                                                System.String p_is_read, 
		                                                System.String p_is_update)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter p_party_id_Parameter = ObjDBManager.CreateSqlParameter("p_party_id", p_party_id, SqlDbType.Int, ParameterDirection.Input);
			sqlParameters.Add(p_party_id_Parameter);
			SqlParameter p_old_role_cd_Parameter = ObjDBManager.CreateSqlParameter("p_old_role_cd", p_old_role_cd, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_old_role_cd_Parameter);
			SqlParameter p_role_cd_Parameter = ObjDBManager.CreateSqlParameter("p_role_cd", p_role_cd, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_role_cd_Parameter);
			SqlParameter p_application_id_Parameter = ObjDBManager.CreateSqlParameter("p_application_id", p_application_id, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_application_id_Parameter);
			SqlParameter p_old_application_id_Parameter = ObjDBManager.CreateSqlParameter("p_old_application_id", p_old_application_id, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_old_application_id_Parameter);
			SqlParameter p_is_read_Parameter = ObjDBManager.CreateSqlParameter("p_is_read", p_is_read, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_is_read_Parameter);
			SqlParameter p_is_update_Parameter = ObjDBManager.CreateSqlParameter("p_is_update", p_is_update, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_is_update_Parameter);
			string taskString = ObjDBManager.GetPrintableSQLString("UpdPartyRoleApplication", sqlParameters);

			return taskString;
		}
		
		
		
public DataSet UpdPartyRoles(System.Int32? p_party_id, 
		                                System.String p_old_role_cd, 
		                                System.String p_role_cd, 
		                                System.String p_address_type_nm, 
		                                System.String p_owner_application_id, 
		                                System.DateTime? p_effective_from, 
		                                System.DateTime? p_effective_till, 
		                                System.String p_application_id)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter p_party_id_Parameter = ObjDBManager.CreateSqlParameter("p_party_id", p_party_id, SqlDbType.Int, ParameterDirection.Input);
			sqlParameters.Add(p_party_id_Parameter);
			SqlParameter p_old_role_cd_Parameter = ObjDBManager.CreateSqlParameter("p_old_role_cd", p_old_role_cd, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_old_role_cd_Parameter);
			SqlParameter p_role_cd_Parameter = ObjDBManager.CreateSqlParameter("p_role_cd", p_role_cd, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_role_cd_Parameter);
			SqlParameter p_address_type_nm_Parameter = ObjDBManager.CreateSqlParameter("p_address_type_nm", p_address_type_nm, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_address_type_nm_Parameter);
			SqlParameter p_owner_application_id_Parameter = ObjDBManager.CreateSqlParameter("p_owner_application_id", p_owner_application_id, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_owner_application_id_Parameter);
			SqlParameter p_effective_from_Parameter = ObjDBManager.CreateSqlParameter("p_effective_from", p_effective_from, SqlDbType.DateTime, ParameterDirection.Input);
			sqlParameters.Add(p_effective_from_Parameter);
			SqlParameter p_effective_till_Parameter = ObjDBManager.CreateSqlParameter("p_effective_till", p_effective_till, SqlDbType.DateTime, ParameterDirection.Input);
			sqlParameters.Add(p_effective_till_Parameter);
			SqlParameter p_application_id_Parameter = ObjDBManager.CreateSqlParameter("p_application_id", p_application_id, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_application_id_Parameter);
			DataSet dset = ObjDBManager.ExecuteStoredProc("UpdPartyRoles", sqlParameters);

			return dset;
		}
		
public string UpdPartyRolesAsTask(System.Int32? p_party_id, 
		                                        System.String p_old_role_cd, 
		                                        System.String p_role_cd, 
		                                        System.String p_address_type_nm, 
		                                        System.String p_owner_application_id, 
		                                        System.DateTime? p_effective_from, 
		                                        System.DateTime? p_effective_till, 
		                                        System.String p_application_id)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter p_party_id_Parameter = ObjDBManager.CreateSqlParameter("p_party_id", p_party_id, SqlDbType.Int, ParameterDirection.Input);
			sqlParameters.Add(p_party_id_Parameter);
			SqlParameter p_old_role_cd_Parameter = ObjDBManager.CreateSqlParameter("p_old_role_cd", p_old_role_cd, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_old_role_cd_Parameter);
			SqlParameter p_role_cd_Parameter = ObjDBManager.CreateSqlParameter("p_role_cd", p_role_cd, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_role_cd_Parameter);
			SqlParameter p_address_type_nm_Parameter = ObjDBManager.CreateSqlParameter("p_address_type_nm", p_address_type_nm, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_address_type_nm_Parameter);
			SqlParameter p_owner_application_id_Parameter = ObjDBManager.CreateSqlParameter("p_owner_application_id", p_owner_application_id, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_owner_application_id_Parameter);
			SqlParameter p_effective_from_Parameter = ObjDBManager.CreateSqlParameter("p_effective_from", p_effective_from, SqlDbType.DateTime, ParameterDirection.Input);
			sqlParameters.Add(p_effective_from_Parameter);
			SqlParameter p_effective_till_Parameter = ObjDBManager.CreateSqlParameter("p_effective_till", p_effective_till, SqlDbType.DateTime, ParameterDirection.Input);
			sqlParameters.Add(p_effective_till_Parameter);
			SqlParameter p_application_id_Parameter = ObjDBManager.CreateSqlParameter("p_application_id", p_application_id, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_application_id_Parameter);
			string taskString = ObjDBManager.GetPrintableSQLString("UpdPartyRoles", sqlParameters);

			return taskString;
		}
		
		
		
public DataSet UpdPartyRolesChk(System.String p_role_cd, 
		                                    System.String p_update_party_roles)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter p_role_cd_Parameter = ObjDBManager.CreateSqlParameter("p_role_cd", p_role_cd, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_role_cd_Parameter);
			SqlParameter p_update_party_roles_Parameter = ObjDBManager.CreateSqlParameter("p_update_party_roles", p_update_party_roles, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_update_party_roles_Parameter);
			DataSet dset = ObjDBManager.ExecuteStoredProc("UpdPartyRolesChk", sqlParameters);

			return dset;
		}
		
public string UpdPartyRolesChkAsTask(System.String p_role_cd, 
		                                        System.String p_update_party_roles)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter p_role_cd_Parameter = ObjDBManager.CreateSqlParameter("p_role_cd", p_role_cd, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_role_cd_Parameter);
			SqlParameter p_update_party_roles_Parameter = ObjDBManager.CreateSqlParameter("p_update_party_roles", p_update_party_roles, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_update_party_roles_Parameter);
			string taskString = ObjDBManager.GetPrintableSQLString("UpdPartyRolesChk", sqlParameters);

			return taskString;
		}
		
		
		
public DataSet Updqlfctn_subjects(System.Int16? qlfctn_subject_id, 
		                                        System.String qlfctn_subject_cd, 
		                                        System.String qlfctn_subject_nm, 
		                                        System.String description, 
		                                        System.DateTime? effective_From, 
		                                        System.DateTime? effective_Till)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter qlfctn_subject_id_Parameter = ObjDBManager.CreateSqlParameter("qlfctn_subject_id", qlfctn_subject_id, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(qlfctn_subject_id_Parameter);
			SqlParameter qlfctn_subject_cd_Parameter = ObjDBManager.CreateSqlParameter("qlfctn_subject_cd", qlfctn_subject_cd, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(qlfctn_subject_cd_Parameter);
			SqlParameter qlfctn_subject_nm_Parameter = ObjDBManager.CreateSqlParameter("qlfctn_subject_nm", qlfctn_subject_nm, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(qlfctn_subject_nm_Parameter);
			SqlParameter description_Parameter = ObjDBManager.CreateSqlParameter("description", description, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(description_Parameter);
			SqlParameter effective_From_Parameter = ObjDBManager.CreateSqlParameter("effective_From", effective_From, SqlDbType.DateTime, ParameterDirection.Input);
			sqlParameters.Add(effective_From_Parameter);
			SqlParameter effective_Till_Parameter = ObjDBManager.CreateSqlParameter("effective_Till", effective_Till, SqlDbType.DateTime, ParameterDirection.Input);
			sqlParameters.Add(effective_Till_Parameter);
			DataSet dset = ObjDBManager.ExecuteStoredProc("Updqlfctn_subjects", sqlParameters);

			return dset;
		}
		
public string Updqlfctn_subjectsAsTask(System.Int16? qlfctn_subject_id, 
		                                            System.String qlfctn_subject_cd, 
		                                            System.String qlfctn_subject_nm, 
		                                            System.String description, 
		                                            System.DateTime? effective_From, 
		                                            System.DateTime? effective_Till)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter qlfctn_subject_id_Parameter = ObjDBManager.CreateSqlParameter("qlfctn_subject_id", qlfctn_subject_id, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(qlfctn_subject_id_Parameter);
			SqlParameter qlfctn_subject_cd_Parameter = ObjDBManager.CreateSqlParameter("qlfctn_subject_cd", qlfctn_subject_cd, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(qlfctn_subject_cd_Parameter);
			SqlParameter qlfctn_subject_nm_Parameter = ObjDBManager.CreateSqlParameter("qlfctn_subject_nm", qlfctn_subject_nm, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(qlfctn_subject_nm_Parameter);
			SqlParameter description_Parameter = ObjDBManager.CreateSqlParameter("description", description, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(description_Parameter);
			SqlParameter effective_From_Parameter = ObjDBManager.CreateSqlParameter("effective_From", effective_From, SqlDbType.DateTime, ParameterDirection.Input);
			sqlParameters.Add(effective_From_Parameter);
			SqlParameter effective_Till_Parameter = ObjDBManager.CreateSqlParameter("effective_Till", effective_Till, SqlDbType.DateTime, ParameterDirection.Input);
			sqlParameters.Add(effective_Till_Parameter);
			string taskString = ObjDBManager.GetPrintableSQLString("Updqlfctn_subjects", sqlParameters);

			return taskString;
		}
		
		
		
public DataSet Updqualifications(System.Int16? Qualification_id, 
		                                    System.String Qualification_type, 
		                                    System.String Qualification_cd, 
		                                    System.String Qualification_nm, 
		                                    System.String Remarks, 
		                                    System.DateTime? effective_from, 
		                                    System.DateTime? effective_till, 
		                                    System.Byte[] txn_ts)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter Qualification_id_Parameter = ObjDBManager.CreateSqlParameter("Qualification_id", Qualification_id, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(Qualification_id_Parameter);
			SqlParameter Qualification_type_Parameter = ObjDBManager.CreateSqlParameter("Qualification_type", Qualification_type, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(Qualification_type_Parameter);
			SqlParameter Qualification_cd_Parameter = ObjDBManager.CreateSqlParameter("Qualification_cd", Qualification_cd, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(Qualification_cd_Parameter);
			SqlParameter Qualification_nm_Parameter = ObjDBManager.CreateSqlParameter("Qualification_nm", Qualification_nm, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(Qualification_nm_Parameter);
			SqlParameter Remarks_Parameter = ObjDBManager.CreateSqlParameter("Remarks", Remarks, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(Remarks_Parameter);
			SqlParameter effective_from_Parameter = ObjDBManager.CreateSqlParameter("effective_from", effective_from, SqlDbType.DateTime, ParameterDirection.Input);
			sqlParameters.Add(effective_from_Parameter);
			SqlParameter effective_till_Parameter = ObjDBManager.CreateSqlParameter("effective_till", effective_till, SqlDbType.DateTime, ParameterDirection.Input);
			sqlParameters.Add(effective_till_Parameter);
			SqlParameter txn_ts_Parameter = ObjDBManager.CreateSqlParameter("txn_ts", txn_ts, SqlDbType.Timestamp, ParameterDirection.Input);
			sqlParameters.Add(txn_ts_Parameter);
			DataSet dset = ObjDBManager.ExecuteStoredProc("Updqualifications", sqlParameters);

			return dset;
		}
		
public string UpdqualificationsAsTask(System.Int16? Qualification_id, 
		                                            System.String Qualification_type, 
		                                            System.String Qualification_cd, 
		                                            System.String Qualification_nm, 
		                                            System.String Remarks, 
		                                            System.DateTime? effective_from, 
		                                            System.DateTime? effective_till, 
		                                            System.Byte[] txn_ts)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter Qualification_id_Parameter = ObjDBManager.CreateSqlParameter("Qualification_id", Qualification_id, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(Qualification_id_Parameter);
			SqlParameter Qualification_type_Parameter = ObjDBManager.CreateSqlParameter("Qualification_type", Qualification_type, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(Qualification_type_Parameter);
			SqlParameter Qualification_cd_Parameter = ObjDBManager.CreateSqlParameter("Qualification_cd", Qualification_cd, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(Qualification_cd_Parameter);
			SqlParameter Qualification_nm_Parameter = ObjDBManager.CreateSqlParameter("Qualification_nm", Qualification_nm, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(Qualification_nm_Parameter);
			SqlParameter Remarks_Parameter = ObjDBManager.CreateSqlParameter("Remarks", Remarks, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(Remarks_Parameter);
			SqlParameter effective_from_Parameter = ObjDBManager.CreateSqlParameter("effective_from", effective_from, SqlDbType.DateTime, ParameterDirection.Input);
			sqlParameters.Add(effective_from_Parameter);
			SqlParameter effective_till_Parameter = ObjDBManager.CreateSqlParameter("effective_till", effective_till, SqlDbType.DateTime, ParameterDirection.Input);
			sqlParameters.Add(effective_till_Parameter);
			SqlParameter txn_ts_Parameter = ObjDBManager.CreateSqlParameter("txn_ts", txn_ts, SqlDbType.Timestamp, ParameterDirection.Input);
			sqlParameters.Add(txn_ts_Parameter);
			string taskString = ObjDBManager.GetPrintableSQLString("Updqualifications", sqlParameters);

			return taskString;
		}
		
		
		
public DataSet Updqualifications_qlfctn_subjects(System.Int16? qualification_id, 
		                                                    System.Int16? Oldqlfctn_subject_id, 
		                                                    System.Int16? qlfctn_subject_id, 
		                                                    System.DateTime? effective_from, 
		                                                    System.DateTime? effective_till)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter qualification_id_Parameter = ObjDBManager.CreateSqlParameter("qualification_id", qualification_id, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(qualification_id_Parameter);
			SqlParameter Oldqlfctn_subject_id_Parameter = ObjDBManager.CreateSqlParameter("Oldqlfctn_subject_id", Oldqlfctn_subject_id, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(Oldqlfctn_subject_id_Parameter);
			SqlParameter qlfctn_subject_id_Parameter = ObjDBManager.CreateSqlParameter("qlfctn_subject_id", qlfctn_subject_id, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(qlfctn_subject_id_Parameter);
			SqlParameter effective_from_Parameter = ObjDBManager.CreateSqlParameter("effective_from", effective_from, SqlDbType.DateTime, ParameterDirection.Input);
			sqlParameters.Add(effective_from_Parameter);
			SqlParameter effective_till_Parameter = ObjDBManager.CreateSqlParameter("effective_till", effective_till, SqlDbType.DateTime, ParameterDirection.Input);
			sqlParameters.Add(effective_till_Parameter);
			DataSet dset = ObjDBManager.ExecuteStoredProc("Updqualifications_qlfctn_subjects", sqlParameters);

			return dset;
		}
		
public string Updqualifications_qlfctn_subjectsAsTask(System.Int16? qualification_id, 
		                                                            System.Int16? Oldqlfctn_subject_id, 
		                                                            System.Int16? qlfctn_subject_id, 
		                                                            System.DateTime? effective_from, 
		                                                            System.DateTime? effective_till)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter qualification_id_Parameter = ObjDBManager.CreateSqlParameter("qualification_id", qualification_id, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(qualification_id_Parameter);
			SqlParameter Oldqlfctn_subject_id_Parameter = ObjDBManager.CreateSqlParameter("Oldqlfctn_subject_id", Oldqlfctn_subject_id, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(Oldqlfctn_subject_id_Parameter);
			SqlParameter qlfctn_subject_id_Parameter = ObjDBManager.CreateSqlParameter("qlfctn_subject_id", qlfctn_subject_id, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(qlfctn_subject_id_Parameter);
			SqlParameter effective_from_Parameter = ObjDBManager.CreateSqlParameter("effective_from", effective_from, SqlDbType.DateTime, ParameterDirection.Input);
			sqlParameters.Add(effective_from_Parameter);
			SqlParameter effective_till_Parameter = ObjDBManager.CreateSqlParameter("effective_till", effective_till, SqlDbType.DateTime, ParameterDirection.Input);
			sqlParameters.Add(effective_till_Parameter);
			string taskString = ObjDBManager.GetPrintableSQLString("Updqualifications_qlfctn_subjects", sqlParameters);

			return taskString;
		}
		
		
		
public DataSet UpdRoles(System.String p_role_cd, 
		                            System.String p_role_nm, 
		                            System.String p_address_requirement, 
		                            System.DateTime? p_effective_from, 
		                            System.DateTime? p_effective_till, 
		                            System.Int64? p_txn_ts)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter p_role_cd_Parameter = ObjDBManager.CreateSqlParameter("p_role_cd", p_role_cd, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_role_cd_Parameter);
			SqlParameter p_role_nm_Parameter = ObjDBManager.CreateSqlParameter("p_role_nm", p_role_nm, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_role_nm_Parameter);
			SqlParameter p_address_requirement_Parameter = ObjDBManager.CreateSqlParameter("p_address_requirement", p_address_requirement, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_address_requirement_Parameter);
			SqlParameter p_effective_from_Parameter = ObjDBManager.CreateSqlParameter("p_effective_from", p_effective_from, SqlDbType.DateTime, ParameterDirection.Input);
			sqlParameters.Add(p_effective_from_Parameter);
			SqlParameter p_effective_till_Parameter = ObjDBManager.CreateSqlParameter("p_effective_till", p_effective_till, SqlDbType.DateTime, ParameterDirection.Input);
			sqlParameters.Add(p_effective_till_Parameter);
			SqlParameter p_txn_ts_Parameter = ObjDBManager.CreateSqlParameter("p_txn_ts", p_txn_ts, SqlDbType.BigInt, ParameterDirection.Input);
			sqlParameters.Add(p_txn_ts_Parameter);
			DataSet dset = ObjDBManager.ExecuteStoredProc("UpdRoles", sqlParameters);

			return dset;
		}
		
public string UpdRolesAsTask(System.String p_role_cd, 
		                                System.String p_role_nm, 
		                                System.String p_address_requirement, 
		                                System.DateTime? p_effective_from, 
		                                System.DateTime? p_effective_till, 
		                                System.Int64? p_txn_ts)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter p_role_cd_Parameter = ObjDBManager.CreateSqlParameter("p_role_cd", p_role_cd, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_role_cd_Parameter);
			SqlParameter p_role_nm_Parameter = ObjDBManager.CreateSqlParameter("p_role_nm", p_role_nm, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_role_nm_Parameter);
			SqlParameter p_address_requirement_Parameter = ObjDBManager.CreateSqlParameter("p_address_requirement", p_address_requirement, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_address_requirement_Parameter);
			SqlParameter p_effective_from_Parameter = ObjDBManager.CreateSqlParameter("p_effective_from", p_effective_from, SqlDbType.DateTime, ParameterDirection.Input);
			sqlParameters.Add(p_effective_from_Parameter);
			SqlParameter p_effective_till_Parameter = ObjDBManager.CreateSqlParameter("p_effective_till", p_effective_till, SqlDbType.DateTime, ParameterDirection.Input);
			sqlParameters.Add(p_effective_till_Parameter);
			SqlParameter p_txn_ts_Parameter = ObjDBManager.CreateSqlParameter("p_txn_ts", p_txn_ts, SqlDbType.BigInt, ParameterDirection.Input);
			sqlParameters.Add(p_txn_ts_Parameter);
			string taskString = ObjDBManager.GetPrintableSQLString("UpdRoles", sqlParameters);

			return taskString;
		}
		
		
		
public DataSet UpdRolesAppControls(System.String p_role_cd, 
		                                        System.String p_old_owner_app_id, 
		                                        System.String p_owner_application_id, 
		                                        System.String p_old_application_id, 
		                                        System.String p_application_id, 
		                                        System.String p_is_read, 
		                                        System.String p_is_update)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter p_role_cd_Parameter = ObjDBManager.CreateSqlParameter("p_role_cd", p_role_cd, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_role_cd_Parameter);
			SqlParameter p_old_owner_app_id_Parameter = ObjDBManager.CreateSqlParameter("p_old_owner_app_id", p_old_owner_app_id, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_old_owner_app_id_Parameter);
			SqlParameter p_owner_application_id_Parameter = ObjDBManager.CreateSqlParameter("p_owner_application_id", p_owner_application_id, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_owner_application_id_Parameter);
			SqlParameter p_old_application_id_Parameter = ObjDBManager.CreateSqlParameter("p_old_application_id", p_old_application_id, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_old_application_id_Parameter);
			SqlParameter p_application_id_Parameter = ObjDBManager.CreateSqlParameter("p_application_id", p_application_id, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_application_id_Parameter);
			SqlParameter p_is_read_Parameter = ObjDBManager.CreateSqlParameter("p_is_read", p_is_read, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_is_read_Parameter);
			SqlParameter p_is_update_Parameter = ObjDBManager.CreateSqlParameter("p_is_update", p_is_update, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_is_update_Parameter);
			DataSet dset = ObjDBManager.ExecuteStoredProc("UpdRolesAppControls", sqlParameters);

			return dset;
		}
		
public string UpdRolesAppControlsAsTask(System.String p_role_cd, 
		                                            System.String p_old_owner_app_id, 
		                                            System.String p_owner_application_id, 
		                                            System.String p_old_application_id, 
		                                            System.String p_application_id, 
		                                            System.String p_is_read, 
		                                            System.String p_is_update)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter p_role_cd_Parameter = ObjDBManager.CreateSqlParameter("p_role_cd", p_role_cd, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_role_cd_Parameter);
			SqlParameter p_old_owner_app_id_Parameter = ObjDBManager.CreateSqlParameter("p_old_owner_app_id", p_old_owner_app_id, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_old_owner_app_id_Parameter);
			SqlParameter p_owner_application_id_Parameter = ObjDBManager.CreateSqlParameter("p_owner_application_id", p_owner_application_id, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_owner_application_id_Parameter);
			SqlParameter p_old_application_id_Parameter = ObjDBManager.CreateSqlParameter("p_old_application_id", p_old_application_id, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_old_application_id_Parameter);
			SqlParameter p_application_id_Parameter = ObjDBManager.CreateSqlParameter("p_application_id", p_application_id, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_application_id_Parameter);
			SqlParameter p_is_read_Parameter = ObjDBManager.CreateSqlParameter("p_is_read", p_is_read, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_is_read_Parameter);
			SqlParameter p_is_update_Parameter = ObjDBManager.CreateSqlParameter("p_is_update", p_is_update, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(p_is_update_Parameter);
			string taskString = ObjDBManager.GetPrintableSQLString("UpdRolesAppControls", sqlParameters);

			return taskString;
		}
		
		
		
public DataSet UpdSewadarTypes(System.Int32? p_sewadartype_id, 
		                                    System.String p_sewadartype_nm, 
		                                    System.DateTime? p_effectiveFrom, 
		                                    System.DateTime? p_effectiveTill, 
		                                    System.Int64? p_txn_ts)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter p_sewadartype_id_Parameter = ObjDBManager.CreateSqlParameter("p_sewadartype_id", p_sewadartype_id, SqlDbType.Int, ParameterDirection.Input);
			sqlParameters.Add(p_sewadartype_id_Parameter);
			SqlParameter p_sewadartype_nm_Parameter = ObjDBManager.CreateSqlParameter("p_sewadartype_nm", p_sewadartype_nm, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_sewadartype_nm_Parameter);
			SqlParameter p_effectiveFrom_Parameter = ObjDBManager.CreateSqlParameter("p_effectiveFrom", p_effectiveFrom, SqlDbType.DateTime, ParameterDirection.Input);
			sqlParameters.Add(p_effectiveFrom_Parameter);
			SqlParameter p_effectiveTill_Parameter = ObjDBManager.CreateSqlParameter("p_effectiveTill", p_effectiveTill, SqlDbType.DateTime, ParameterDirection.Input);
			sqlParameters.Add(p_effectiveTill_Parameter);
			SqlParameter p_txn_ts_Parameter = ObjDBManager.CreateSqlParameter("p_txn_ts", p_txn_ts, SqlDbType.BigInt, ParameterDirection.Input);
			sqlParameters.Add(p_txn_ts_Parameter);
			DataSet dset = ObjDBManager.ExecuteStoredProc("UpdSewadarTypes", sqlParameters);

			return dset;
		}
		
public string UpdSewadarTypesAsTask(System.Int32? p_sewadartype_id, 
		                                        System.String p_sewadartype_nm, 
		                                        System.DateTime? p_effectiveFrom, 
		                                        System.DateTime? p_effectiveTill, 
		                                        System.Int64? p_txn_ts)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter p_sewadartype_id_Parameter = ObjDBManager.CreateSqlParameter("p_sewadartype_id", p_sewadartype_id, SqlDbType.Int, ParameterDirection.Input);
			sqlParameters.Add(p_sewadartype_id_Parameter);
			SqlParameter p_sewadartype_nm_Parameter = ObjDBManager.CreateSqlParameter("p_sewadartype_nm", p_sewadartype_nm, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(p_sewadartype_nm_Parameter);
			SqlParameter p_effectiveFrom_Parameter = ObjDBManager.CreateSqlParameter("p_effectiveFrom", p_effectiveFrom, SqlDbType.DateTime, ParameterDirection.Input);
			sqlParameters.Add(p_effectiveFrom_Parameter);
			SqlParameter p_effectiveTill_Parameter = ObjDBManager.CreateSqlParameter("p_effectiveTill", p_effectiveTill, SqlDbType.DateTime, ParameterDirection.Input);
			sqlParameters.Add(p_effectiveTill_Parameter);
			SqlParameter p_txn_ts_Parameter = ObjDBManager.CreateSqlParameter("p_txn_ts", p_txn_ts, SqlDbType.BigInt, ParameterDirection.Input);
			sqlParameters.Add(p_txn_ts_Parameter);
			string taskString = ObjDBManager.GetPrintableSQLString("UpdSewadarTypes", sqlParameters);

			return taskString;
		}
		
		
		
public DataSet UpdWorkingUnitNameAndCode(System.Int16? in_working_unit_id, 
		                                            System.String in_working_unit_cd, 
		                                            System.String in_working_unit_nm, 
		                                            System.Int16? in_society_id, 
		                                            System.Int16? in_working_unit_entity_id, 
		                                            System.Byte[] in_txn_ts)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter in_working_unit_id_Parameter = ObjDBManager.CreateSqlParameter("in_working_unit_id", in_working_unit_id, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(in_working_unit_id_Parameter);
			SqlParameter in_working_unit_cd_Parameter = ObjDBManager.CreateSqlParameter("in_working_unit_cd", in_working_unit_cd, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(in_working_unit_cd_Parameter);
			SqlParameter in_working_unit_nm_Parameter = ObjDBManager.CreateSqlParameter("in_working_unit_nm", in_working_unit_nm, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(in_working_unit_nm_Parameter);
			SqlParameter in_society_id_Parameter = ObjDBManager.CreateSqlParameter("in_society_id", in_society_id, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(in_society_id_Parameter);
			SqlParameter in_working_unit_entity_id_Parameter = ObjDBManager.CreateSqlParameter("in_working_unit_entity_id", in_working_unit_entity_id, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(in_working_unit_entity_id_Parameter);
			SqlParameter in_txn_ts_Parameter = ObjDBManager.CreateSqlParameter("in_txn_ts", in_txn_ts, SqlDbType.Timestamp, ParameterDirection.Input);
			sqlParameters.Add(in_txn_ts_Parameter);
			DataSet dset = ObjDBManager.ExecuteStoredProc("UpdWorkingUnitNameAndCode", sqlParameters);

			return dset;
		}
		
public string UpdWorkingUnitNameAndCodeAsTask(System.Int16? in_working_unit_id, 
		                                                    System.String in_working_unit_cd, 
		                                                    System.String in_working_unit_nm, 
		                                                    System.Int16? in_society_id, 
		                                                    System.Int16? in_working_unit_entity_id, 
		                                                    System.Byte[] in_txn_ts)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter in_working_unit_id_Parameter = ObjDBManager.CreateSqlParameter("in_working_unit_id", in_working_unit_id, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(in_working_unit_id_Parameter);
			SqlParameter in_working_unit_cd_Parameter = ObjDBManager.CreateSqlParameter("in_working_unit_cd", in_working_unit_cd, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(in_working_unit_cd_Parameter);
			SqlParameter in_working_unit_nm_Parameter = ObjDBManager.CreateSqlParameter("in_working_unit_nm", in_working_unit_nm, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(in_working_unit_nm_Parameter);
			SqlParameter in_society_id_Parameter = ObjDBManager.CreateSqlParameter("in_society_id", in_society_id, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(in_society_id_Parameter);
			SqlParameter in_working_unit_entity_id_Parameter = ObjDBManager.CreateSqlParameter("in_working_unit_entity_id", in_working_unit_entity_id, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(in_working_unit_entity_id_Parameter);
			SqlParameter in_txn_ts_Parameter = ObjDBManager.CreateSqlParameter("in_txn_ts", in_txn_ts, SqlDbType.Timestamp, ParameterDirection.Input);
			sqlParameters.Add(in_txn_ts_Parameter);
			string taskString = ObjDBManager.GetPrintableSQLString("UpdWorkingUnitNameAndCode", sqlParameters);

			return taskString;
		}
		
		
		
public DataSet UpdWorkingUnits(System.Int16? in_working_unit_id, 
		                                    System.String in_working_unit_cd, 
		                                    System.String in_working_unit_nm, 
		                                    System.String in_is_root, 
		                                    System.String in_is_leaf, 
		                                    System.Int16? in_society_id, 
		                                    System.String in_is_staff_posted, 
		                                    System.Int16? in_working_unit_entity_id, 
		                                    System.Int16? in_group_working_unit_id, 
		                                    System.DateTime? in_effective_from, 
		                                    System.DateTime? in_effective_till, 
		                                    System.Int16? in_honorary_sewadar_cnt, 
		                                    System.Int16? in_parshadi_sewadar_cnt, 
		                                    System.Byte[] in_txn_ts)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter in_working_unit_id_Parameter = ObjDBManager.CreateSqlParameter("in_working_unit_id", in_working_unit_id, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(in_working_unit_id_Parameter);
			SqlParameter in_working_unit_cd_Parameter = ObjDBManager.CreateSqlParameter("in_working_unit_cd", in_working_unit_cd, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(in_working_unit_cd_Parameter);
			SqlParameter in_working_unit_nm_Parameter = ObjDBManager.CreateSqlParameter("in_working_unit_nm", in_working_unit_nm, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(in_working_unit_nm_Parameter);
			SqlParameter in_is_root_Parameter = ObjDBManager.CreateSqlParameter("in_is_root", in_is_root, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(in_is_root_Parameter);
			SqlParameter in_is_leaf_Parameter = ObjDBManager.CreateSqlParameter("in_is_leaf", in_is_leaf, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(in_is_leaf_Parameter);
			SqlParameter in_society_id_Parameter = ObjDBManager.CreateSqlParameter("in_society_id", in_society_id, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(in_society_id_Parameter);
			SqlParameter in_is_staff_posted_Parameter = ObjDBManager.CreateSqlParameter("in_is_staff_posted", in_is_staff_posted, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(in_is_staff_posted_Parameter);
			SqlParameter in_working_unit_entity_id_Parameter = ObjDBManager.CreateSqlParameter("in_working_unit_entity_id", in_working_unit_entity_id, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(in_working_unit_entity_id_Parameter);
			SqlParameter in_group_working_unit_id_Parameter = ObjDBManager.CreateSqlParameter("in_group_working_unit_id", in_group_working_unit_id, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(in_group_working_unit_id_Parameter);
			SqlParameter in_effective_from_Parameter = ObjDBManager.CreateSqlParameter("in_effective_from", in_effective_from, SqlDbType.DateTime, ParameterDirection.Input);
			sqlParameters.Add(in_effective_from_Parameter);
			SqlParameter in_effective_till_Parameter = ObjDBManager.CreateSqlParameter("in_effective_till", in_effective_till, SqlDbType.DateTime, ParameterDirection.Input);
			sqlParameters.Add(in_effective_till_Parameter);
			SqlParameter in_honorary_sewadar_cnt_Parameter = ObjDBManager.CreateSqlParameter("in_honorary_sewadar_cnt", in_honorary_sewadar_cnt, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(in_honorary_sewadar_cnt_Parameter);
			SqlParameter in_parshadi_sewadar_cnt_Parameter = ObjDBManager.CreateSqlParameter("in_parshadi_sewadar_cnt", in_parshadi_sewadar_cnt, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(in_parshadi_sewadar_cnt_Parameter);
			SqlParameter in_txn_ts_Parameter = ObjDBManager.CreateSqlParameter("in_txn_ts", in_txn_ts, SqlDbType.Timestamp, ParameterDirection.Input);
			sqlParameters.Add(in_txn_ts_Parameter);
			DataSet dset = ObjDBManager.ExecuteStoredProc("UpdWorkingUnits", sqlParameters);

			return dset;
		}
		
public string UpdWorkingUnitsAsTask(System.Int16? in_working_unit_id, 
		                                        System.String in_working_unit_cd, 
		                                        System.String in_working_unit_nm, 
		                                        System.String in_is_root, 
		                                        System.String in_is_leaf, 
		                                        System.Int16? in_society_id, 
		                                        System.String in_is_staff_posted, 
		                                        System.Int16? in_working_unit_entity_id, 
		                                        System.Int16? in_group_working_unit_id, 
		                                        System.DateTime? in_effective_from, 
		                                        System.DateTime? in_effective_till, 
		                                        System.Int16? in_honorary_sewadar_cnt, 
		                                        System.Int16? in_parshadi_sewadar_cnt, 
		                                        System.Byte[] in_txn_ts)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter in_working_unit_id_Parameter = ObjDBManager.CreateSqlParameter("in_working_unit_id", in_working_unit_id, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(in_working_unit_id_Parameter);
			SqlParameter in_working_unit_cd_Parameter = ObjDBManager.CreateSqlParameter("in_working_unit_cd", in_working_unit_cd, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(in_working_unit_cd_Parameter);
			SqlParameter in_working_unit_nm_Parameter = ObjDBManager.CreateSqlParameter("in_working_unit_nm", in_working_unit_nm, SqlDbType.VarChar, ParameterDirection.Input);
			sqlParameters.Add(in_working_unit_nm_Parameter);
			SqlParameter in_is_root_Parameter = ObjDBManager.CreateSqlParameter("in_is_root", in_is_root, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(in_is_root_Parameter);
			SqlParameter in_is_leaf_Parameter = ObjDBManager.CreateSqlParameter("in_is_leaf", in_is_leaf, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(in_is_leaf_Parameter);
			SqlParameter in_society_id_Parameter = ObjDBManager.CreateSqlParameter("in_society_id", in_society_id, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(in_society_id_Parameter);
			SqlParameter in_is_staff_posted_Parameter = ObjDBManager.CreateSqlParameter("in_is_staff_posted", in_is_staff_posted, SqlDbType.Char, ParameterDirection.Input);
			sqlParameters.Add(in_is_staff_posted_Parameter);
			SqlParameter in_working_unit_entity_id_Parameter = ObjDBManager.CreateSqlParameter("in_working_unit_entity_id", in_working_unit_entity_id, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(in_working_unit_entity_id_Parameter);
			SqlParameter in_group_working_unit_id_Parameter = ObjDBManager.CreateSqlParameter("in_group_working_unit_id", in_group_working_unit_id, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(in_group_working_unit_id_Parameter);
			SqlParameter in_effective_from_Parameter = ObjDBManager.CreateSqlParameter("in_effective_from", in_effective_from, SqlDbType.DateTime, ParameterDirection.Input);
			sqlParameters.Add(in_effective_from_Parameter);
			SqlParameter in_effective_till_Parameter = ObjDBManager.CreateSqlParameter("in_effective_till", in_effective_till, SqlDbType.DateTime, ParameterDirection.Input);
			sqlParameters.Add(in_effective_till_Parameter);
			SqlParameter in_honorary_sewadar_cnt_Parameter = ObjDBManager.CreateSqlParameter("in_honorary_sewadar_cnt", in_honorary_sewadar_cnt, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(in_honorary_sewadar_cnt_Parameter);
			SqlParameter in_parshadi_sewadar_cnt_Parameter = ObjDBManager.CreateSqlParameter("in_parshadi_sewadar_cnt", in_parshadi_sewadar_cnt, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(in_parshadi_sewadar_cnt_Parameter);
			SqlParameter in_txn_ts_Parameter = ObjDBManager.CreateSqlParameter("in_txn_ts", in_txn_ts, SqlDbType.Timestamp, ParameterDirection.Input);
			sqlParameters.Add(in_txn_ts_Parameter);
			string taskString = ObjDBManager.GetPrintableSQLString("UpdWorkingUnits", sqlParameters);

			return taskString;
		}
		
		
		
		
		
public DataSet WorkingUnitsResponsibilities_SelPr(System.Int16? in_working_unit_id, 
		                                                        System.Int16? in_parent_working_unit_id)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter in_working_unit_id_Parameter = ObjDBManager.CreateSqlParameter("in_working_unit_id", in_working_unit_id, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(in_working_unit_id_Parameter);
			SqlParameter in_parent_working_unit_id_Parameter = ObjDBManager.CreateSqlParameter("in_parent_working_unit_id", in_parent_working_unit_id, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(in_parent_working_unit_id_Parameter);
			DataSet dset = ObjDBManager.ExecuteStoredProc("WorkingUnitsResponsibilities_SelPr", sqlParameters);

			return dset;
		}
		
public string WorkingUnitsResponsibilities_SelPrAsTask(System.Int16? in_working_unit_id, 
		                                                            System.Int16? in_parent_working_unit_id)
		{
			List<SqlParameter> sqlParameters = new List<SqlParameter>();
			SqlParameter in_working_unit_id_Parameter = ObjDBManager.CreateSqlParameter("in_working_unit_id", in_working_unit_id, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(in_working_unit_id_Parameter);
			SqlParameter in_parent_working_unit_id_Parameter = ObjDBManager.CreateSqlParameter("in_parent_working_unit_id", in_parent_working_unit_id, SqlDbType.SmallInt, ParameterDirection.Input);
			sqlParameters.Add(in_parent_working_unit_id_Parameter);
			string taskString = ObjDBManager.GetPrintableSQLString("WorkingUnitsResponsibilities_SelPr", sqlParameters);

			return taskString;
		}
	}
	
	
	public class ViewqualificationsSQLSelectQuery : SQLSelectQuery
	{
		public SQLSelectQueryWhereClauseCondition qualification_id = new SQLSelectQueryWhereClauseCondition("qualification_id", typeof(System.Int16));
		public SQLSelectQueryWhereClauseCondition qualification_type = new SQLSelectQueryWhereClauseCondition("qualification_type", typeof(System.String));
		public SQLSelectQueryWhereClauseCondition qualification_cd = new SQLSelectQueryWhereClauseCondition("qualification_cd", typeof(System.String));
		public SQLSelectQueryWhereClauseCondition qualification_nm = new SQLSelectQueryWhereClauseCondition("qualification_nm", typeof(System.String));
		public SQLSelectQueryWhereClauseCondition remarks = new SQLSelectQueryWhereClauseCondition("remarks", typeof(System.String));
		public SQLSelectQueryWhereClauseCondition effective_from = new SQLSelectQueryWhereClauseCondition("effective_from", typeof(System.DateTime));
		public SQLSelectQueryWhereClauseCondition effective_till = new SQLSelectQueryWhereClauseCondition("effective_till", typeof(System.DateTime));
		public SQLSelectQueryWhereClauseCondition txn_ts = new SQLSelectQueryWhereClauseCondition("txn_ts", typeof(System.Byte[]));
		public ViewqualificationsSQLSelectQuery()
		{
			this.SqlObjectName = "Viewqualifications";
			this.SQLObjectType = SQLObjectTypes.View;

			this.lstConditions.Add(qualification_id);
			this.lstConditions.Add(qualification_type);
			this.lstConditions.Add(qualification_cd);
			this.lstConditions.Add(qualification_nm);
			this.lstConditions.Add(remarks);
			this.lstConditions.Add(effective_from);
			this.lstConditions.Add(effective_till);
			this.lstConditions.Add(txn_ts);
		}
	}
}
