// Generated on : 13 Oct 14 - 11:46:42
///This code is auto generated by CDF.
///Please don't alter the contents of this file

using System.Collections.Generic;
using System;
using System.Data;
using System.Data.SqlClient;
using DCC.UMB.WDF.DB;
using System.Text;
using System.Linq;
namespace DCC.CDB.DBFacade
{
	public partial class CDB_APPDbFacade:IDBFacade
	{
		private List<string> dbTasks = new List<string>();
		public DbManager ObjDBManager { get; private set; }
		public DataSet ExecuteSql(string sql){return ObjDBManager.ExecuteSQL(sql);}
		public DCCSqlDataReader ExecuteSelectQuery(SQLSelectQuery sqlSelectQuery){return ObjDBManager.ExecuteReaderSQL(sqlSelectQuery.GetSQLSelectQuery());}
		public DataSet ExecuteSelectQueryDataSet(SQLSelectQuery sqlSelectQuery){return ObjDBManager.ExecuteSQL(sqlSelectQuery.GetSQLSelectQuery());}
		public void BeginTrans() { ObjDBManager.BeginTrans(); }
		public void CommitTrans() { ObjDBManager.CommitTrans(); }
		public void RollbackTrans() { ObjDBManager.RollbackTrans(); }
		public void AddDbTask(string task){this.dbTasks.Add(task);}
		public void AddDbTasks(List<string> tasks) { this.dbTasks.AddRange(tasks); }
		public void ClearDbTasks(){this.dbTasks.Clear();}
		ParameterDirection IN = ParameterDirection.Input;
		ParameterDirection OUT = ParameterDirection.Output;
		ParameterDirection INOUT = ParameterDirection.InputOutput;
		SqlDbType BIGINT = SqlDbType.BigInt, BINARY = SqlDbType.Binary, BIT = SqlDbType.Bit,CHAR = SqlDbType.Char,DATE = SqlDbType.Date,
		DATETIME = SqlDbType.DateTime,DATETIME2 = SqlDbType.DateTime2,DATETIMEOFFSET = SqlDbType.DateTimeOffset,DECIMAL = SqlDbType.Decimal,
		FLOAT = SqlDbType.Float,IMAGE = SqlDbType.Image,INT = SqlDbType.Int,MONEY = SqlDbType.Money,NCHAR = SqlDbType.NChar,NTEXT = SqlDbType.NText,
		NVARCHAR = SqlDbType.NVarChar,REAL = SqlDbType.Real,SMALLDATETIME = SqlDbType.SmallDateTime,SMALLINT = SqlDbType.SmallInt,SMALLMONEY = SqlDbType.SmallMoney,
		STRUCTURED = SqlDbType.Structured,TEXT = SqlDbType.Text,TIME = SqlDbType.Time,TIMESTAMP = SqlDbType.Timestamp,TINYINT = SqlDbType.TinyInt,
		UDT = SqlDbType.Udt,UNIQUEIDENTIFIER = SqlDbType.UniqueIdentifier,VARBINARY = SqlDbType.VarBinary,VARCHAR = SqlDbType.VarChar,
		VARIANT = SqlDbType.Variant,XML = SqlDbType.Xml;
		private void csp(string parameterName, object paramValue, SqlDbType parameterType, ParameterDirection direction, List<SqlParameter> p) { p.Add(ObjDBManager.CreateSqlParameter(parameterName, paramValue, parameterType, direction)); }
		private string gps(string procName, List<SqlParameter> parms) { return ObjDBManager.GetPrintableSQLString(procName, parms); }
		private DataSet esp(string procName, List<SqlParameter> parms) { return ObjDBManager.ExecuteStoredProc(procName, parms); }
		public CDB_APPDbFacade(string conStringName, string dbName, string userId, string serverName, string password) { this.ObjDBManager = new DbManager(conStringName, dbName, userId, serverName, password); }
		public DataSet ExecuteDbTasks()
		{
			try
			{
				StringBuilder sb = new StringBuilder();
				if (this.dbTasks.Count == 0) { this.AddDbTask("select 'No tasks were defined'"); }
				foreach(string task in this.dbTasks)
				{
					if (string.IsNullOrEmpty(task)) continue;
					sb.Append(task + ";");
					sb.AppendLine();
					sb.AppendLine();
				}
				return ObjDBManager.ExecuteSQL(sb.ToString(), 100);
			}
			finally
			{
				this.dbTasks.Clear();
			}
		}
		
		
		
		
		
		
		
		
		
		
		
		
		
private List<SqlParameter> DeleteCountrie_Params(Int16? country_id, 
		                                                    Byte[] txn_ts)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("country_id", country_id, SMALLINT, IN, p);
			csp("txn_ts", txn_ts, TIMESTAMP, IN, p);
			return p;
		}
		
public DataSet DeleteCountrie(Int16? country_id, 
		                                    Byte[] txn_ts)
		{
			List<SqlParameter> prms = DeleteCountrie_Params(country_id, txn_ts);
			DataSet dset = esp("DeleteCountrie", prms);

			return dset;
		}
		
public string DeleteCountrieAsTask(Int16? country_id, 
		                                        Byte[] txn_ts)
		{
			List<SqlParameter> prms = DeleteCountrie_Params(country_id, txn_ts);
			return gps("DeleteCountrie", prms);

		}
		
		
		
private List<SqlParameter> DeleteLevel1AddressComponent_Params(Int32? level_1_address_component_id, 
		                                                                    Byte[] txn_ts)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("level_1_address_component_id", level_1_address_component_id, INT, IN, p);
			csp("txn_ts", txn_ts, TIMESTAMP, IN, p);
			return p;
		}
		
public DataSet DeleteLevel1AddressComponent(Int32? level_1_address_component_id, 
		                                                Byte[] txn_ts)
		{
			List<SqlParameter> prms = DeleteLevel1AddressComponent_Params(level_1_address_component_id, txn_ts);
			DataSet dset = esp("DeleteLevel1AddressComponent", prms);

			return dset;
		}
		
public string DeleteLevel1AddressComponentAsTask(Int32? level_1_address_component_id, 
		                                                    Byte[] txn_ts)
		{
			List<SqlParameter> prms = DeleteLevel1AddressComponent_Params(level_1_address_component_id, txn_ts);
			return gps("DeleteLevel1AddressComponent", prms);

		}
		
		
		
private List<SqlParameter> DeleteLevel2AddressComponent_Params(Int32? level_2_address_component_id, 
		                                                                    Byte[] txn_ts)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("level_2_address_component_id", level_2_address_component_id, INT, IN, p);
			csp("txn_ts", txn_ts, TIMESTAMP, IN, p);
			return p;
		}
		
public DataSet DeleteLevel2AddressComponent(Int32? level_2_address_component_id, 
		                                                Byte[] txn_ts)
		{
			List<SqlParameter> prms = DeleteLevel2AddressComponent_Params(level_2_address_component_id, txn_ts);
			DataSet dset = esp("DeleteLevel2AddressComponent", prms);

			return dset;
		}
		
public string DeleteLevel2AddressComponentAsTask(Int32? level_2_address_component_id, 
		                                                    Byte[] txn_ts)
		{
			List<SqlParameter> prms = DeleteLevel2AddressComponent_Params(level_2_address_component_id, txn_ts);
			return gps("DeleteLevel2AddressComponent", prms);

		}
		
		
		
private List<SqlParameter> DeleteLevel3AddressComponent_Params(Int32? level_3_address_component_id, 
		                                                                    Byte[] txn_ts)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("level_3_address_component_id", level_3_address_component_id, INT, IN, p);
			csp("txn_ts", txn_ts, TIMESTAMP, IN, p);
			return p;
		}
		
public DataSet DeleteLevel3AddressComponent(Int32? level_3_address_component_id, 
		                                                Byte[] txn_ts)
		{
			List<SqlParameter> prms = DeleteLevel3AddressComponent_Params(level_3_address_component_id, txn_ts);
			DataSet dset = esp("DeleteLevel3AddressComponent", prms);

			return dset;
		}
		
public string DeleteLevel3AddressComponentAsTask(Int32? level_3_address_component_id, 
		                                                    Byte[] txn_ts)
		{
			List<SqlParameter> prms = DeleteLevel3AddressComponent_Params(level_3_address_component_id, txn_ts);
			return gps("DeleteLevel3AddressComponent", prms);

		}
		
		
		
private List<SqlParameter> DeleteRelation_Params(Int16? relation_id, 
		                                                    Byte[] txn_ts)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("relation_id", relation_id, SMALLINT, IN, p);
			csp("txn_ts", txn_ts, TIMESTAMP, IN, p);
			return p;
		}
		
public DataSet DeleteRelation(Int16? relation_id, 
		                                    Byte[] txn_ts)
		{
			List<SqlParameter> prms = DeleteRelation_Params(relation_id, txn_ts);
			DataSet dset = esp("DeleteRelation", prms);

			return dset;
		}
		
public string DeleteRelationAsTask(Int16? relation_id, 
		                                        Byte[] txn_ts)
		{
			List<SqlParameter> prms = DeleteRelation_Params(relation_id, txn_ts);
			return gps("DeleteRelation", prms);

		}
		
		
		
private List<SqlParameter> DeleteWorkingUnit_Params(Int16? working_unit_id, 
		                                                        Byte[] txn_ts)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("working_unit_id", working_unit_id, SMALLINT, IN, p);
			csp("txn_ts", txn_ts, TIMESTAMP, IN, p);
			return p;
		}
		
public DataSet DeleteWorkingUnit(Int16? working_unit_id, 
		                                    Byte[] txn_ts)
		{
			List<SqlParameter> prms = DeleteWorkingUnit_Params(working_unit_id, txn_ts);
			DataSet dset = esp("DeleteWorkingUnit", prms);

			return dset;
		}
		
public string DeleteWorkingUnitAsTask(Int16? working_unit_id, 
		                                            Byte[] txn_ts)
		{
			List<SqlParameter> prms = DeleteWorkingUnit_Params(working_unit_id, txn_ts);
			return gps("DeleteWorkingUnit", prms);

		}
		
		
		
private List<SqlParameter> DeleteWorkingUnitEntitie_Params(Int16? entity_id, 
		                                                                String entity_singular_nm, 
		                                                                String entity_plural_nm, 
		                                                                DateTime? effective_from, 
		                                                                DateTime? effective_till)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("entity_id", entity_id, SMALLINT, IN, p);
			csp("entity_singular_nm", entity_singular_nm, VARCHAR, IN, p);
			csp("entity_plural_nm", entity_plural_nm, VARCHAR, IN, p);
			csp("effective_from", effective_from, DATETIME, IN, p);
			csp("effective_till", effective_till, DATETIME, IN, p);
			return p;
		}
		
public DataSet DeleteWorkingUnitEntitie(Int16? entity_id, 
		                                            String entity_singular_nm, 
		                                            String entity_plural_nm, 
		                                            DateTime? effective_from, 
		                                            DateTime? effective_till)
		{
			List<SqlParameter> prms = DeleteWorkingUnitEntitie_Params(entity_id, entity_singular_nm, entity_plural_nm, effective_from, effective_till);
			DataSet dset = esp("DeleteWorkingUnitEntitie", prms);

			return dset;
		}
		
public string DeleteWorkingUnitEntitieAsTask(Int16? entity_id, 
		                                                String entity_singular_nm, 
		                                                String entity_plural_nm, 
		                                                DateTime? effective_from, 
		                                                DateTime? effective_till)
		{
			List<SqlParameter> prms = DeleteWorkingUnitEntitie_Params(entity_id, entity_singular_nm, entity_plural_nm, effective_from, effective_till);
			return gps("DeleteWorkingUnitEntitie", prms);

		}
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
private List<SqlParameter> GetFullWorkingUnitPath_Params(Int16? working_unit_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("working_unit_id", working_unit_id, SMALLINT, IN, p);
			return p;
		}
		
public System.String GetFullWorkingUnitPath(Int16? working_unit_id)
		{
			List<SqlParameter> prms = GetFullWorkingUnitPath_Params(working_unit_id);
			string commaSeparatedParameters = ObjDBManager.GetCommaSeparatedParameters(prms);
			Object obj = ObjDBManager.ExecuteScalar("SELECT dbo.GetFullWorkingUnitPath(" + commaSeparatedParameters + ")");

			return obj == null || obj == DBNull.Value ? null : (System.String)obj;
		}
		
		
		
		
		
		
		
private List<SqlParameter> InsertCountrie_Params(ref Int16 country_id, 
		                                                    String country_cd, 
		                                                    String country_nm, 
		                                                    String isd_code, 
		                                                    Decimal? gmt_diff, 
		                                                    DateTime? effective_from, 
		                                                    DateTime? effective_till, 
		                                                    Boolean? is_authentic, 
		                                                    String level_1_address_component, 
		                                                    String level_2_address_component, 
		                                                    String level_3_address_component)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("country_id", country_id, SMALLINT, INOUT, p);
			csp("country_cd", country_cd, VARCHAR, IN, p);
			csp("country_nm", country_nm, VARCHAR, IN, p);
			csp("isd_code", isd_code, VARCHAR, IN, p);
			csp("gmt_diff", gmt_diff, DECIMAL, IN, p);
			csp("effective_from", effective_from, DATETIME, IN, p);
			csp("effective_till", effective_till, DATETIME, IN, p);
			csp("is_authentic", is_authentic, BIT, IN, p);
			csp("level_1_address_component", level_1_address_component, VARCHAR, IN, p);
			csp("level_2_address_component", level_2_address_component, VARCHAR, IN, p);
			csp("level_3_address_component", level_3_address_component, VARCHAR, IN, p);
			return p;
		}
		
public DataSet InsertCountrie(ref Int16 country_id, 
		                                    String country_cd, 
		                                    String country_nm, 
		                                    String isd_code, 
		                                    Decimal? gmt_diff, 
		                                    DateTime? effective_from, 
		                                    DateTime? effective_till, 
		                                    Boolean? is_authentic, 
		                                    String level_1_address_component, 
		                                    String level_2_address_component, 
		                                    String level_3_address_component)
		{
			List<SqlParameter> prms = InsertCountrie_Params(ref country_id, country_cd, country_nm, isd_code, gmt_diff, effective_from, effective_till, is_authentic, level_1_address_component, level_2_address_component, level_3_address_component);
			DataSet dset = esp("InsertCountrie", prms);
			country_id = (System.Int16)prms.FirstOrDefault(p => p.ParameterName == "country_id").Value;

			return dset;
		}
		
public string InsertCountrieAsTask(ref Int16 country_id, 
		                                        String country_cd, 
		                                        String country_nm, 
		                                        String isd_code, 
		                                        Decimal? gmt_diff, 
		                                        DateTime? effective_from, 
		                                        DateTime? effective_till, 
		                                        Boolean? is_authentic, 
		                                        String level_1_address_component, 
		                                        String level_2_address_component, 
		                                        String level_3_address_component)
		{
			List<SqlParameter> prms = InsertCountrie_Params(ref country_id, country_cd, country_nm, isd_code, gmt_diff, effective_from, effective_till, is_authentic, level_1_address_component, level_2_address_component, level_3_address_component);
			return gps("InsertCountrie", prms);

		}
		
		
		
private List<SqlParameter> InsertLevel1AddressComponent_Params(ref Int32 level_1_address_component_id, 
		                                                                    String level_1_address_component_cd, 
		                                                                    String level_1_address_component_nm, 
		                                                                    Int16? country_id, 
		                                                                    Boolean? is_authentic, 
		                                                                    DateTime? effective_from, 
		                                                                    DateTime? effective_till, 
		                                                                    Int32? state_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("level_1_address_component_id", level_1_address_component_id, INT, INOUT, p);
			csp("level_1_address_component_cd", level_1_address_component_cd, VARCHAR, IN, p);
			csp("level_1_address_component_nm", level_1_address_component_nm, VARCHAR, IN, p);
			csp("country_id", country_id, SMALLINT, IN, p);
			csp("is_authentic", is_authentic, BIT, IN, p);
			csp("effective_from", effective_from, DATE, IN, p);
			csp("effective_till", effective_till, DATE, IN, p);
			csp("state_id", state_id, INT, IN, p);
			return p;
		}
		
public DataSet InsertLevel1AddressComponent(ref Int32 level_1_address_component_id, 
		                                                String level_1_address_component_cd, 
		                                                String level_1_address_component_nm, 
		                                                Int16? country_id, 
		                                                Boolean? is_authentic, 
		                                                DateTime? effective_from, 
		                                                DateTime? effective_till, 
		                                                Int32? state_id)
		{
			List<SqlParameter> prms = InsertLevel1AddressComponent_Params(ref level_1_address_component_id, level_1_address_component_cd, level_1_address_component_nm, country_id, is_authentic, effective_from, effective_till, state_id);
			DataSet dset = esp("InsertLevel1AddressComponent", prms);
			level_1_address_component_id = (System.Int32)prms.FirstOrDefault(p => p.ParameterName == "level_1_address_component_id").Value;

			return dset;
		}
		
public string InsertLevel1AddressComponentAsTask(ref Int32 level_1_address_component_id, 
		                                                    String level_1_address_component_cd, 
		                                                    String level_1_address_component_nm, 
		                                                    Int16? country_id, 
		                                                    Boolean? is_authentic, 
		                                                    DateTime? effective_from, 
		                                                    DateTime? effective_till, 
		                                                    Int32? state_id)
		{
			List<SqlParameter> prms = InsertLevel1AddressComponent_Params(ref level_1_address_component_id, level_1_address_component_cd, level_1_address_component_nm, country_id, is_authentic, effective_from, effective_till, state_id);
			return gps("InsertLevel1AddressComponent", prms);

		}
		
		
		
private List<SqlParameter> InsertLevel2AddressComponent_Params(ref Int32 level_2_address_component_id, 
		                                                                    String level_2_address_component_cd, 
		                                                                    String level_2_address_component_nm, 
		                                                                    Int32? level_1_address_component_id, 
		                                                                    Boolean? is_authentic, 
		                                                                    DateTime? effective_from, 
		                                                                    DateTime? effective_till, 
		                                                                    Int32? district_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("level_2_address_component_id", level_2_address_component_id, INT, INOUT, p);
			csp("level_2_address_component_cd", level_2_address_component_cd, VARCHAR, IN, p);
			csp("level_2_address_component_nm", level_2_address_component_nm, VARCHAR, IN, p);
			csp("level_1_address_component_id", level_1_address_component_id, INT, IN, p);
			csp("is_authentic", is_authentic, BIT, IN, p);
			csp("effective_from", effective_from, DATE, IN, p);
			csp("effective_till", effective_till, DATE, IN, p);
			csp("district_id", district_id, INT, IN, p);
			return p;
		}
		
public DataSet InsertLevel2AddressComponent(ref Int32 level_2_address_component_id, 
		                                                String level_2_address_component_cd, 
		                                                String level_2_address_component_nm, 
		                                                Int32? level_1_address_component_id, 
		                                                Boolean? is_authentic, 
		                                                DateTime? effective_from, 
		                                                DateTime? effective_till, 
		                                                Int32? district_id)
		{
			List<SqlParameter> prms = InsertLevel2AddressComponent_Params(ref level_2_address_component_id, level_2_address_component_cd, level_2_address_component_nm, level_1_address_component_id, is_authentic, effective_from, effective_till, district_id);
			DataSet dset = esp("InsertLevel2AddressComponent", prms);
			level_2_address_component_id = (System.Int32)prms.FirstOrDefault(p => p.ParameterName == "level_2_address_component_id").Value;

			return dset;
		}
		
public string InsertLevel2AddressComponentAsTask(ref Int32 level_2_address_component_id, 
		                                                    String level_2_address_component_cd, 
		                                                    String level_2_address_component_nm, 
		                                                    Int32? level_1_address_component_id, 
		                                                    Boolean? is_authentic, 
		                                                    DateTime? effective_from, 
		                                                    DateTime? effective_till, 
		                                                    Int32? district_id)
		{
			List<SqlParameter> prms = InsertLevel2AddressComponent_Params(ref level_2_address_component_id, level_2_address_component_cd, level_2_address_component_nm, level_1_address_component_id, is_authentic, effective_from, effective_till, district_id);
			return gps("InsertLevel2AddressComponent", prms);

		}
		
		
		
private List<SqlParameter> InsertLevel3AddressComponent_Params(ref Int32 level_3_address_component_id, 
		                                                                    String level_3_address_component_cd, 
		                                                                    String level_3_address_component_nm, 
		                                                                    Int32? level_2_address_component_id, 
		                                                                    Boolean? is_authentic, 
		                                                                    DateTime? effective_from, 
		                                                                    DateTime? effective_till, 
		                                                                    Int32? post_office_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("level_3_address_component_id", level_3_address_component_id, INT, INOUT, p);
			csp("level_3_address_component_cd", level_3_address_component_cd, VARCHAR, IN, p);
			csp("level_3_address_component_nm", level_3_address_component_nm, VARCHAR, IN, p);
			csp("level_2_address_component_id", level_2_address_component_id, INT, IN, p);
			csp("is_authentic", is_authentic, BIT, IN, p);
			csp("effective_from", effective_from, DATE, IN, p);
			csp("effective_till", effective_till, DATE, IN, p);
			csp("post_office_id", post_office_id, INT, IN, p);
			return p;
		}
		
public DataSet InsertLevel3AddressComponent(ref Int32 level_3_address_component_id, 
		                                                String level_3_address_component_cd, 
		                                                String level_3_address_component_nm, 
		                                                Int32? level_2_address_component_id, 
		                                                Boolean? is_authentic, 
		                                                DateTime? effective_from, 
		                                                DateTime? effective_till, 
		                                                Int32? post_office_id)
		{
			List<SqlParameter> prms = InsertLevel3AddressComponent_Params(ref level_3_address_component_id, level_3_address_component_cd, level_3_address_component_nm, level_2_address_component_id, is_authentic, effective_from, effective_till, post_office_id);
			DataSet dset = esp("InsertLevel3AddressComponent", prms);
			level_3_address_component_id = (System.Int32)prms.FirstOrDefault(p => p.ParameterName == "level_3_address_component_id").Value;

			return dset;
		}
		
public string InsertLevel3AddressComponentAsTask(ref Int32 level_3_address_component_id, 
		                                                    String level_3_address_component_cd, 
		                                                    String level_3_address_component_nm, 
		                                                    Int32? level_2_address_component_id, 
		                                                    Boolean? is_authentic, 
		                                                    DateTime? effective_from, 
		                                                    DateTime? effective_till, 
		                                                    Int32? post_office_id)
		{
			List<SqlParameter> prms = InsertLevel3AddressComponent_Params(ref level_3_address_component_id, level_3_address_component_cd, level_3_address_component_nm, level_2_address_component_id, is_authentic, effective_from, effective_till, post_office_id);
			return gps("InsertLevel3AddressComponent", prms);

		}
		
		
		
private List<SqlParameter> InsertRelation_Params(ref Int16 relation_id, 
		                                                    String relation_nm, 
		                                                    DateTime? effective_from, 
		                                                    DateTime? effective_till)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("relation_id", relation_id, SMALLINT, INOUT, p);
			csp("relation_nm", relation_nm, VARCHAR, IN, p);
			csp("effective_from", effective_from, DATETIME, IN, p);
			csp("effective_till", effective_till, DATETIME, IN, p);
			return p;
		}
		
public DataSet InsertRelation(ref Int16 relation_id, 
		                                    String relation_nm, 
		                                    DateTime? effective_from, 
		                                    DateTime? effective_till)
		{
			List<SqlParameter> prms = InsertRelation_Params(ref relation_id, relation_nm, effective_from, effective_till);
			DataSet dset = esp("InsertRelation", prms);
			relation_id = (System.Int16)prms.FirstOrDefault(p => p.ParameterName == "relation_id").Value;

			return dset;
		}
		
public string InsertRelationAsTask(ref Int16 relation_id, 
		                                        String relation_nm, 
		                                        DateTime? effective_from, 
		                                        DateTime? effective_till)
		{
			List<SqlParameter> prms = InsertRelation_Params(ref relation_id, relation_nm, effective_from, effective_till);
			return gps("InsertRelation", prms);

		}
		
		
		
private List<SqlParameter> InsertWorkingUnit_Params(ref Int16 working_unit_id, 
		                                                        String working_unit_cd, 
		                                                        String working_unit_nm, 
		                                                        String is_root, 
		                                                        String is_leaf, 
		                                                        Int16? society_id, 
		                                                        String is_staff_posted, 
		                                                        Int16? working_unit_entity_id, 
		                                                        Int16? group_working_unit_id, 
		                                                        DateTime? effective_from, 
		                                                        DateTime? effective_till)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("working_unit_id", working_unit_id, SMALLINT, INOUT, p);
			csp("working_unit_cd", working_unit_cd, VARCHAR, IN, p);
			csp("working_unit_nm", working_unit_nm, VARCHAR, IN, p);
			csp("is_root", is_root, CHAR, IN, p);
			csp("is_leaf", is_leaf, CHAR, IN, p);
			csp("society_id", society_id, SMALLINT, IN, p);
			csp("is_staff_posted", is_staff_posted, CHAR, IN, p);
			csp("working_unit_entity_id", working_unit_entity_id, SMALLINT, IN, p);
			csp("group_working_unit_id", group_working_unit_id, SMALLINT, IN, p);
			csp("effective_from", effective_from, DATETIME, IN, p);
			csp("effective_till", effective_till, DATETIME, IN, p);
			return p;
		}
		
public DataSet InsertWorkingUnit(ref Int16 working_unit_id, 
		                                    String working_unit_cd, 
		                                    String working_unit_nm, 
		                                    String is_root, 
		                                    String is_leaf, 
		                                    Int16? society_id, 
		                                    String is_staff_posted, 
		                                    Int16? working_unit_entity_id, 
		                                    Int16? group_working_unit_id, 
		                                    DateTime? effective_from, 
		                                    DateTime? effective_till)
		{
			List<SqlParameter> prms = InsertWorkingUnit_Params(ref working_unit_id, working_unit_cd, working_unit_nm, is_root, is_leaf, society_id, is_staff_posted, working_unit_entity_id, group_working_unit_id, effective_from, effective_till);
			DataSet dset = esp("InsertWorkingUnit", prms);
			working_unit_id = (System.Int16)prms.FirstOrDefault(p => p.ParameterName == "working_unit_id").Value;

			return dset;
		}
		
public string InsertWorkingUnitAsTask(ref Int16 working_unit_id, 
		                                            String working_unit_cd, 
		                                            String working_unit_nm, 
		                                            String is_root, 
		                                            String is_leaf, 
		                                            Int16? society_id, 
		                                            String is_staff_posted, 
		                                            Int16? working_unit_entity_id, 
		                                            Int16? group_working_unit_id, 
		                                            DateTime? effective_from, 
		                                            DateTime? effective_till)
		{
			List<SqlParameter> prms = InsertWorkingUnit_Params(ref working_unit_id, working_unit_cd, working_unit_nm, is_root, is_leaf, society_id, is_staff_posted, working_unit_entity_id, group_working_unit_id, effective_from, effective_till);
			return gps("InsertWorkingUnit", prms);

		}
		
		
		
private List<SqlParameter> InsertWorkingUnitEntitie_Params(ref Int16 entity_id, 
		                                                                String entity_singular_nm, 
		                                                                String entity_plural_nm, 
		                                                                DateTime? effective_from, 
		                                                                DateTime? effective_till)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("entity_id", entity_id, SMALLINT, INOUT, p);
			csp("entity_singular_nm", entity_singular_nm, VARCHAR, IN, p);
			csp("entity_plural_nm", entity_plural_nm, VARCHAR, IN, p);
			csp("effective_from", effective_from, DATETIME, IN, p);
			csp("effective_till", effective_till, DATETIME, IN, p);
			return p;
		}
		
public DataSet InsertWorkingUnitEntitie(ref Int16 entity_id, 
		                                            String entity_singular_nm, 
		                                            String entity_plural_nm, 
		                                            DateTime? effective_from, 
		                                            DateTime? effective_till)
		{
			List<SqlParameter> prms = InsertWorkingUnitEntitie_Params(ref entity_id, entity_singular_nm, entity_plural_nm, effective_from, effective_till);
			DataSet dset = esp("InsertWorkingUnitEntitie", prms);
			entity_id = (System.Int16)prms.FirstOrDefault(p => p.ParameterName == "entity_id").Value;

			return dset;
		}
		
public string InsertWorkingUnitEntitieAsTask(ref Int16 entity_id, 
		                                                String entity_singular_nm, 
		                                                String entity_plural_nm, 
		                                                DateTime? effective_from, 
		                                                DateTime? effective_till)
		{
			List<SqlParameter> prms = InsertWorkingUnitEntitie_Params(ref entity_id, entity_singular_nm, entity_plural_nm, effective_from, effective_till);
			return gps("InsertWorkingUnitEntitie", prms);

		}
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
private List<SqlParameter> QueryCountrie_Params(Int16? country_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("country_id", country_id, SMALLINT, IN, p);
			return p;
		}
		
public DataSet QueryCountrie(Int16? country_id)
		{
			List<SqlParameter> prms = QueryCountrie_Params(country_id);
			DataSet dset = esp("QueryCountrie", prms);

			return dset;
		}
		
public string QueryCountrieAsTask(Int16? country_id)
		{
			List<SqlParameter> prms = QueryCountrie_Params(country_id);
			return gps("QueryCountrie", prms);

		}
		
		
		
private List<SqlParameter> QueryLevel1AddressComponent_Params(Int32? level_1_address_component_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("level_1_address_component_id", level_1_address_component_id, INT, IN, p);
			return p;
		}
		
public DataSet QueryLevel1AddressComponent(Int32? level_1_address_component_id)
		{
			List<SqlParameter> prms = QueryLevel1AddressComponent_Params(level_1_address_component_id);
			DataSet dset = esp("QueryLevel1AddressComponent", prms);

			return dset;
		}
		
public string QueryLevel1AddressComponentAsTask(Int32? level_1_address_component_id)
		{
			List<SqlParameter> prms = QueryLevel1AddressComponent_Params(level_1_address_component_id);
			return gps("QueryLevel1AddressComponent", prms);

		}
		
		
		
private List<SqlParameter> QueryLevel2AddressComponent_Params(Int32? level_2_address_component_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("level_2_address_component_id", level_2_address_component_id, INT, IN, p);
			return p;
		}
		
public DataSet QueryLevel2AddressComponent(Int32? level_2_address_component_id)
		{
			List<SqlParameter> prms = QueryLevel2AddressComponent_Params(level_2_address_component_id);
			DataSet dset = esp("QueryLevel2AddressComponent", prms);

			return dset;
		}
		
public string QueryLevel2AddressComponentAsTask(Int32? level_2_address_component_id)
		{
			List<SqlParameter> prms = QueryLevel2AddressComponent_Params(level_2_address_component_id);
			return gps("QueryLevel2AddressComponent", prms);

		}
		
		
		
private List<SqlParameter> QueryLevel3AddressComponent_Params(Int32? level_3_address_component_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("level_3_address_component_id", level_3_address_component_id, INT, IN, p);
			return p;
		}
		
public DataSet QueryLevel3AddressComponent(Int32? level_3_address_component_id)
		{
			List<SqlParameter> prms = QueryLevel3AddressComponent_Params(level_3_address_component_id);
			DataSet dset = esp("QueryLevel3AddressComponent", prms);

			return dset;
		}
		
public string QueryLevel3AddressComponentAsTask(Int32? level_3_address_component_id)
		{
			List<SqlParameter> prms = QueryLevel3AddressComponent_Params(level_3_address_component_id);
			return gps("QueryLevel3AddressComponent", prms);

		}
		
		
		
private List<SqlParameter> QueryRelation_Params(Int16? relation_id, 
		                                                    String relation_nm)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("relation_id", relation_id, SMALLINT, IN, p);
			csp("relation_nm", relation_nm, VARCHAR, IN, p);
			return p;
		}
		
public DataSet QueryRelation(Int16? relation_id, 
		                                String relation_nm)
		{
			List<SqlParameter> prms = QueryRelation_Params(relation_id, relation_nm);
			DataSet dset = esp("QueryRelation", prms);

			return dset;
		}
		
public string QueryRelationAsTask(Int16? relation_id, 
		                                        String relation_nm)
		{
			List<SqlParameter> prms = QueryRelation_Params(relation_id, relation_nm);
			return gps("QueryRelation", prms);

		}
		
		
		
private List<SqlParameter> QueryWorkingUnit_Params(Int16? working_unit_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("working_unit_id", working_unit_id, SMALLINT, IN, p);
			return p;
		}
		
public DataSet QueryWorkingUnit(Int16? working_unit_id)
		{
			List<SqlParameter> prms = QueryWorkingUnit_Params(working_unit_id);
			DataSet dset = esp("QueryWorkingUnit", prms);

			return dset;
		}
		
public string QueryWorkingUnitAsTask(Int16? working_unit_id)
		{
			List<SqlParameter> prms = QueryWorkingUnit_Params(working_unit_id);
			return gps("QueryWorkingUnit", prms);

		}
		
		
		
private List<SqlParameter> QueryWorkingUnitEntitie_Params(Int16? entity_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("entity_id", entity_id, SMALLINT, IN, p);
			return p;
		}
		
public DataSet QueryWorkingUnitEntitie(Int16? entity_id)
		{
			List<SqlParameter> prms = QueryWorkingUnitEntitie_Params(entity_id);
			DataSet dset = esp("QueryWorkingUnitEntitie", prms);

			return dset;
		}
		
public string QueryWorkingUnitEntitieAsTask(Int16? entity_id)
		{
			List<SqlParameter> prms = QueryWorkingUnitEntitie_Params(entity_id);
			return gps("QueryWorkingUnitEntitie", prms);

		}
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
private List<SqlParameter> UpdateCountrie_Params(Int16? country_id, 
		                                                    String country_cd, 
		                                                    String country_nm, 
		                                                    String isd_code, 
		                                                    Decimal? gmt_diff, 
		                                                    Byte[] txn_ts, 
		                                                    DateTime? effective_from, 
		                                                    DateTime? effective_till, 
		                                                    Boolean? is_authentic, 
		                                                    String level_1_address_component, 
		                                                    String level_2_address_component, 
		                                                    String level_3_address_component)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("country_id", country_id, SMALLINT, IN, p);
			csp("country_cd", country_cd, VARCHAR, IN, p);
			csp("country_nm", country_nm, VARCHAR, IN, p);
			csp("isd_code", isd_code, VARCHAR, IN, p);
			csp("gmt_diff", gmt_diff, DECIMAL, IN, p);
			csp("txn_ts", txn_ts, TIMESTAMP, IN, p);
			csp("effective_from", effective_from, DATETIME, IN, p);
			csp("effective_till", effective_till, DATETIME, IN, p);
			csp("is_authentic", is_authentic, BIT, IN, p);
			csp("level_1_address_component", level_1_address_component, VARCHAR, IN, p);
			csp("level_2_address_component", level_2_address_component, VARCHAR, IN, p);
			csp("level_3_address_component", level_3_address_component, VARCHAR, IN, p);
			return p;
		}
		
public DataSet UpdateCountrie(Int16? country_id, 
		                                    String country_cd, 
		                                    String country_nm, 
		                                    String isd_code, 
		                                    Decimal? gmt_diff, 
		                                    Byte[] txn_ts, 
		                                    DateTime? effective_from, 
		                                    DateTime? effective_till, 
		                                    Boolean? is_authentic, 
		                                    String level_1_address_component, 
		                                    String level_2_address_component, 
		                                    String level_3_address_component)
		{
			List<SqlParameter> prms = UpdateCountrie_Params(country_id, country_cd, country_nm, isd_code, gmt_diff, txn_ts, effective_from, effective_till, is_authentic, level_1_address_component, level_2_address_component, level_3_address_component);
			DataSet dset = esp("UpdateCountrie", prms);

			return dset;
		}
		
public string UpdateCountrieAsTask(Int16? country_id, 
		                                        String country_cd, 
		                                        String country_nm, 
		                                        String isd_code, 
		                                        Decimal? gmt_diff, 
		                                        Byte[] txn_ts, 
		                                        DateTime? effective_from, 
		                                        DateTime? effective_till, 
		                                        Boolean? is_authentic, 
		                                        String level_1_address_component, 
		                                        String level_2_address_component, 
		                                        String level_3_address_component)
		{
			List<SqlParameter> prms = UpdateCountrie_Params(country_id, country_cd, country_nm, isd_code, gmt_diff, txn_ts, effective_from, effective_till, is_authentic, level_1_address_component, level_2_address_component, level_3_address_component);
			return gps("UpdateCountrie", prms);

		}
		
		
		
private List<SqlParameter> UpdateLevel1AddressComponent_Params(Int32? level_1_address_component_id, 
		                                                                    String level_1_address_component_cd, 
		                                                                    String level_1_address_component_nm, 
		                                                                    Int16? country_id, 
		                                                                    Boolean? is_authentic, 
		                                                                    Byte[] txn_ts, 
		                                                                    DateTime? effective_from, 
		                                                                    DateTime? effective_till, 
		                                                                    Int32? state_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("level_1_address_component_id", level_1_address_component_id, INT, IN, p);
			csp("level_1_address_component_cd", level_1_address_component_cd, VARCHAR, IN, p);
			csp("level_1_address_component_nm", level_1_address_component_nm, VARCHAR, IN, p);
			csp("country_id", country_id, SMALLINT, IN, p);
			csp("is_authentic", is_authentic, BIT, IN, p);
			csp("txn_ts", txn_ts, TIMESTAMP, IN, p);
			csp("effective_from", effective_from, DATE, IN, p);
			csp("effective_till", effective_till, DATE, IN, p);
			csp("state_id", state_id, INT, IN, p);
			return p;
		}
		
public DataSet UpdateLevel1AddressComponent(Int32? level_1_address_component_id, 
		                                                String level_1_address_component_cd, 
		                                                String level_1_address_component_nm, 
		                                                Int16? country_id, 
		                                                Boolean? is_authentic, 
		                                                Byte[] txn_ts, 
		                                                DateTime? effective_from, 
		                                                DateTime? effective_till, 
		                                                Int32? state_id)
		{
			List<SqlParameter> prms = UpdateLevel1AddressComponent_Params(level_1_address_component_id, level_1_address_component_cd, level_1_address_component_nm, country_id, is_authentic, txn_ts, effective_from, effective_till, state_id);
			DataSet dset = esp("UpdateLevel1AddressComponent", prms);

			return dset;
		}
		
public string UpdateLevel1AddressComponentAsTask(Int32? level_1_address_component_id, 
		                                                    String level_1_address_component_cd, 
		                                                    String level_1_address_component_nm, 
		                                                    Int16? country_id, 
		                                                    Boolean? is_authentic, 
		                                                    Byte[] txn_ts, 
		                                                    DateTime? effective_from, 
		                                                    DateTime? effective_till, 
		                                                    Int32? state_id)
		{
			List<SqlParameter> prms = UpdateLevel1AddressComponent_Params(level_1_address_component_id, level_1_address_component_cd, level_1_address_component_nm, country_id, is_authentic, txn_ts, effective_from, effective_till, state_id);
			return gps("UpdateLevel1AddressComponent", prms);

		}
		
		
		
private List<SqlParameter> UpdateLevel2AddressComponent_Params(Int32? level_2_address_component_id, 
		                                                                    String level_2_address_component_cd, 
		                                                                    String level_2_address_component_nm, 
		                                                                    Int32? level_1_address_component_id, 
		                                                                    Boolean? is_authentic, 
		                                                                    Byte[] txn_ts, 
		                                                                    DateTime? effective_from, 
		                                                                    DateTime? effective_till, 
		                                                                    Int32? district_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("level_2_address_component_id", level_2_address_component_id, INT, IN, p);
			csp("level_2_address_component_cd", level_2_address_component_cd, VARCHAR, IN, p);
			csp("level_2_address_component_nm", level_2_address_component_nm, VARCHAR, IN, p);
			csp("level_1_address_component_id", level_1_address_component_id, INT, IN, p);
			csp("is_authentic", is_authentic, BIT, IN, p);
			csp("txn_ts", txn_ts, TIMESTAMP, IN, p);
			csp("effective_from", effective_from, DATE, IN, p);
			csp("effective_till", effective_till, DATE, IN, p);
			csp("district_id", district_id, INT, IN, p);
			return p;
		}
		
public DataSet UpdateLevel2AddressComponent(Int32? level_2_address_component_id, 
		                                                String level_2_address_component_cd, 
		                                                String level_2_address_component_nm, 
		                                                Int32? level_1_address_component_id, 
		                                                Boolean? is_authentic, 
		                                                Byte[] txn_ts, 
		                                                DateTime? effective_from, 
		                                                DateTime? effective_till, 
		                                                Int32? district_id)
		{
			List<SqlParameter> prms = UpdateLevel2AddressComponent_Params(level_2_address_component_id, level_2_address_component_cd, level_2_address_component_nm, level_1_address_component_id, is_authentic, txn_ts, effective_from, effective_till, district_id);
			DataSet dset = esp("UpdateLevel2AddressComponent", prms);

			return dset;
		}
		
public string UpdateLevel2AddressComponentAsTask(Int32? level_2_address_component_id, 
		                                                    String level_2_address_component_cd, 
		                                                    String level_2_address_component_nm, 
		                                                    Int32? level_1_address_component_id, 
		                                                    Boolean? is_authentic, 
		                                                    Byte[] txn_ts, 
		                                                    DateTime? effective_from, 
		                                                    DateTime? effective_till, 
		                                                    Int32? district_id)
		{
			List<SqlParameter> prms = UpdateLevel2AddressComponent_Params(level_2_address_component_id, level_2_address_component_cd, level_2_address_component_nm, level_1_address_component_id, is_authentic, txn_ts, effective_from, effective_till, district_id);
			return gps("UpdateLevel2AddressComponent", prms);

		}
		
		
		
private List<SqlParameter> UpdateLevel3AddressComponent_Params(Int32? level_3_address_component_id, 
		                                                                    String level_3_address_component_cd, 
		                                                                    String level_3_address_component_nm, 
		                                                                    Int32? level_2_address_component_id, 
		                                                                    Boolean? is_authentic, 
		                                                                    Byte[] txn_ts, 
		                                                                    DateTime? effective_from, 
		                                                                    DateTime? effective_till, 
		                                                                    Int32? post_office_id)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("level_3_address_component_id", level_3_address_component_id, INT, IN, p);
			csp("level_3_address_component_cd", level_3_address_component_cd, VARCHAR, IN, p);
			csp("level_3_address_component_nm", level_3_address_component_nm, VARCHAR, IN, p);
			csp("level_2_address_component_id", level_2_address_component_id, INT, IN, p);
			csp("is_authentic", is_authentic, BIT, IN, p);
			csp("txn_ts", txn_ts, TIMESTAMP, IN, p);
			csp("effective_from", effective_from, DATE, IN, p);
			csp("effective_till", effective_till, DATE, IN, p);
			csp("post_office_id", post_office_id, INT, IN, p);
			return p;
		}
		
public DataSet UpdateLevel3AddressComponent(Int32? level_3_address_component_id, 
		                                                String level_3_address_component_cd, 
		                                                String level_3_address_component_nm, 
		                                                Int32? level_2_address_component_id, 
		                                                Boolean? is_authentic, 
		                                                Byte[] txn_ts, 
		                                                DateTime? effective_from, 
		                                                DateTime? effective_till, 
		                                                Int32? post_office_id)
		{
			List<SqlParameter> prms = UpdateLevel3AddressComponent_Params(level_3_address_component_id, level_3_address_component_cd, level_3_address_component_nm, level_2_address_component_id, is_authentic, txn_ts, effective_from, effective_till, post_office_id);
			DataSet dset = esp("UpdateLevel3AddressComponent", prms);

			return dset;
		}
		
public string UpdateLevel3AddressComponentAsTask(Int32? level_3_address_component_id, 
		                                                    String level_3_address_component_cd, 
		                                                    String level_3_address_component_nm, 
		                                                    Int32? level_2_address_component_id, 
		                                                    Boolean? is_authentic, 
		                                                    Byte[] txn_ts, 
		                                                    DateTime? effective_from, 
		                                                    DateTime? effective_till, 
		                                                    Int32? post_office_id)
		{
			List<SqlParameter> prms = UpdateLevel3AddressComponent_Params(level_3_address_component_id, level_3_address_component_cd, level_3_address_component_nm, level_2_address_component_id, is_authentic, txn_ts, effective_from, effective_till, post_office_id);
			return gps("UpdateLevel3AddressComponent", prms);

		}
		
		
		
private List<SqlParameter> UpdateRelation_Params(Int16? relation_id, 
		                                                    String relation_nm, 
		                                                    Byte[] txn_ts, 
		                                                    DateTime? effective_from, 
		                                                    DateTime? effective_till)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("relation_id", relation_id, SMALLINT, IN, p);
			csp("relation_nm", relation_nm, VARCHAR, IN, p);
			csp("txn_ts", txn_ts, TIMESTAMP, IN, p);
			csp("effective_from", effective_from, DATETIME, IN, p);
			csp("effective_till", effective_till, DATETIME, IN, p);
			return p;
		}
		
public DataSet UpdateRelation(Int16? relation_id, 
		                                    String relation_nm, 
		                                    Byte[] txn_ts, 
		                                    DateTime? effective_from, 
		                                    DateTime? effective_till)
		{
			List<SqlParameter> prms = UpdateRelation_Params(relation_id, relation_nm, txn_ts, effective_from, effective_till);
			DataSet dset = esp("UpdateRelation", prms);

			return dset;
		}
		
public string UpdateRelationAsTask(Int16? relation_id, 
		                                        String relation_nm, 
		                                        Byte[] txn_ts, 
		                                        DateTime? effective_from, 
		                                        DateTime? effective_till)
		{
			List<SqlParameter> prms = UpdateRelation_Params(relation_id, relation_nm, txn_ts, effective_from, effective_till);
			return gps("UpdateRelation", prms);

		}
		
		
		
private List<SqlParameter> UpdateWorkingUnit_Params(Int16? working_unit_id, 
		                                                        String working_unit_cd, 
		                                                        String working_unit_nm, 
		                                                        String is_root, 
		                                                        String is_leaf, 
		                                                        Int16? society_id, 
		                                                        String is_staff_posted, 
		                                                        Int16? working_unit_entity_id, 
		                                                        Int16? group_working_unit_id, 
		                                                        DateTime? effective_from, 
		                                                        DateTime? effective_till, 
		                                                        Byte[] txn_ts)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("working_unit_id", working_unit_id, SMALLINT, IN, p);
			csp("working_unit_cd", working_unit_cd, VARCHAR, IN, p);
			csp("working_unit_nm", working_unit_nm, VARCHAR, IN, p);
			csp("is_root", is_root, CHAR, IN, p);
			csp("is_leaf", is_leaf, CHAR, IN, p);
			csp("society_id", society_id, SMALLINT, IN, p);
			csp("is_staff_posted", is_staff_posted, CHAR, IN, p);
			csp("working_unit_entity_id", working_unit_entity_id, SMALLINT, IN, p);
			csp("group_working_unit_id", group_working_unit_id, SMALLINT, IN, p);
			csp("effective_from", effective_from, DATETIME, IN, p);
			csp("effective_till", effective_till, DATETIME, IN, p);
			csp("txn_ts", txn_ts, TIMESTAMP, IN, p);
			return p;
		}
		
public DataSet UpdateWorkingUnit(Int16? working_unit_id, 
		                                    String working_unit_cd, 
		                                    String working_unit_nm, 
		                                    String is_root, 
		                                    String is_leaf, 
		                                    Int16? society_id, 
		                                    String is_staff_posted, 
		                                    Int16? working_unit_entity_id, 
		                                    Int16? group_working_unit_id, 
		                                    DateTime? effective_from, 
		                                    DateTime? effective_till, 
		                                    Byte[] txn_ts)
		{
			List<SqlParameter> prms = UpdateWorkingUnit_Params(working_unit_id, working_unit_cd, working_unit_nm, is_root, is_leaf, society_id, is_staff_posted, working_unit_entity_id, group_working_unit_id, effective_from, effective_till, txn_ts);
			DataSet dset = esp("UpdateWorkingUnit", prms);

			return dset;
		}
		
public string UpdateWorkingUnitAsTask(Int16? working_unit_id, 
		                                            String working_unit_cd, 
		                                            String working_unit_nm, 
		                                            String is_root, 
		                                            String is_leaf, 
		                                            Int16? society_id, 
		                                            String is_staff_posted, 
		                                            Int16? working_unit_entity_id, 
		                                            Int16? group_working_unit_id, 
		                                            DateTime? effective_from, 
		                                            DateTime? effective_till, 
		                                            Byte[] txn_ts)
		{
			List<SqlParameter> prms = UpdateWorkingUnit_Params(working_unit_id, working_unit_cd, working_unit_nm, is_root, is_leaf, society_id, is_staff_posted, working_unit_entity_id, group_working_unit_id, effective_from, effective_till, txn_ts);
			return gps("UpdateWorkingUnit", prms);

		}
		
		
		
private List<SqlParameter> UpdateWorkingUnitEntitie_Params(Int16? entity_id, 
		                                                                String entity_singular_nm, 
		                                                                String entity_plural_nm, 
		                                                                DateTime? effective_from, 
		                                                                DateTime? effective_till)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("entity_id", entity_id, SMALLINT, IN, p);
			csp("entity_singular_nm", entity_singular_nm, VARCHAR, IN, p);
			csp("entity_plural_nm", entity_plural_nm, VARCHAR, IN, p);
			csp("effective_from", effective_from, DATETIME, IN, p);
			csp("effective_till", effective_till, DATETIME, IN, p);
			return p;
		}
		
public DataSet UpdateWorkingUnitEntitie(Int16? entity_id, 
		                                            String entity_singular_nm, 
		                                            String entity_plural_nm, 
		                                            DateTime? effective_from, 
		                                            DateTime? effective_till)
		{
			List<SqlParameter> prms = UpdateWorkingUnitEntitie_Params(entity_id, entity_singular_nm, entity_plural_nm, effective_from, effective_till);
			DataSet dset = esp("UpdateWorkingUnitEntitie", prms);

			return dset;
		}
		
public string UpdateWorkingUnitEntitieAsTask(Int16? entity_id, 
		                                                String entity_singular_nm, 
		                                                String entity_plural_nm, 
		                                                DateTime? effective_from, 
		                                                DateTime? effective_till)
		{
			List<SqlParameter> prms = UpdateWorkingUnitEntitie_Params(entity_id, entity_singular_nm, entity_plural_nm, effective_from, effective_till);
			return gps("UpdateWorkingUnitEntitie", prms);

		}
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
private List<SqlParameter> Wdf_GetEntitiesInfo_Params()
		{
			List<SqlParameter> p = new List<SqlParameter>();
			return p;
		}
		
public DataSet Wdf_GetEntitiesInfo()
		{
			List<SqlParameter> prms = Wdf_GetEntitiesInfo_Params();
			DataSet dset = esp("Wdf_GetEntitiesInfo", prms);
			return dset;
		}
		
public string Wdf_GetEntitiesInfoAsTask()
		{
			List<SqlParameter> prms = Wdf_GetEntitiesInfo_Params();
			return gps("Wdf_GetEntitiesInfo", prms);
		}
		
		
		
private List<SqlParameter> Wdf_getPrimaryKeyReferenceTable_Params(String table_nm, 
		                                                                        String column_nm)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("table_nm", table_nm, VARCHAR, IN, p);
			csp("column_nm", column_nm, VARCHAR, IN, p);
			return p;
		}
		
public System.String Wdf_getPrimaryKeyReferenceTable(String table_nm, 
		                                                        String column_nm)
		{
			List<SqlParameter> prms = Wdf_getPrimaryKeyReferenceTable_Params(table_nm, column_nm);
			string commaSeparatedParameters = ObjDBManager.GetCommaSeparatedParameters(prms);
			Object obj = ObjDBManager.ExecuteScalar("SELECT dbo.Wdf_getPrimaryKeyReferenceTable(" + commaSeparatedParameters + ")");

			return obj == null || obj == DBNull.Value ? null : (System.String)obj;
		}
		
		
		
private List<SqlParameter> Wdf_isColumnForeignKey_Params(String table_nm, 
		                                                            String column_nm)
		{
			List<SqlParameter> p = new List<SqlParameter>();
			csp("table_nm", table_nm, VARCHAR, IN, p);
			csp("column_nm", column_nm, VARCHAR, IN, p);
			return p;
		}
		
public System.Boolean? Wdf_isColumnForeignKey(String table_nm, 
		                                                    String column_nm)
		{
			List<SqlParameter> prms = Wdf_isColumnForeignKey_Params(table_nm, column_nm);
			string commaSeparatedParameters = ObjDBManager.GetCommaSeparatedParameters(prms);
			Object obj = ObjDBManager.ExecuteScalar("SELECT dbo.Wdf_isColumnForeignKey(" + commaSeparatedParameters + ")");

			return (obj == null || obj == DBNull.Value) ? null : (System.Boolean?)obj;
		}
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	}
	
	
	public class Address_typesSQLSelectQuery : SQLSelectQuery
	{
		public Cndn address_type_id = new Cndn("address_type_id", typeof(Int32));
		public Cndn address_type_cd = new Cndn("address_type_cd", typeof(String));
		public Cndn address_type_nm = new Cndn("address_type_nm", typeof(String));
		public Cndn effective_from = new Cndn("effective_from", typeof(DateTime));
		public Cndn effective_till = new Cndn("effective_till", typeof(DateTime));
		public Address_typesSQLSelectQuery()
		{
			SqlObjectName = "Address_types";

			lst.Add(address_type_id);
			lst.Add(address_type_cd);
			lst.Add(address_type_nm);
			lst.Add(effective_from);
			lst.Add(effective_till);
		}
	}
	
	
	public class Assistant_servicesSQLSelectQuery : SQLSelectQuery
	{
		public Cndn assistant_service_id = new Cndn("assistant_service_id", typeof(Int16));
		public Cndn assistant_service_nm = new Cndn("assistant_service_nm", typeof(String));
		public Cndn effective_from = new Cndn("effective_from", typeof(DateTime));
		public Cndn effective_till = new Cndn("effective_till", typeof(DateTime));
		public Assistant_servicesSQLSelectQuery()
		{
			SqlObjectName = "Assistant_services";

			lst.Add(assistant_service_id);
			lst.Add(assistant_service_nm);
			lst.Add(effective_from);
			lst.Add(effective_till);
		}
	}
	
	
	public class Audit_logsSQLSelectQuery : SQLSelectQuery
	{
		public Cndn audit_log_id = new Cndn("audit_log_id", typeof(Int32));
		public Cndn session_id = new Cndn("session_id", typeof(Int32));
		public Cndn application_id = new Cndn("application_id", typeof(String));
		public Cndn user_no = new Cndn("user_no", typeof(Int32));
		public Cndn user_role_id = new Cndn("user_role_id", typeof(String));
		public Cndn operation = new Cndn("operation", typeof(String));
		public Cndn screen_id = new Cndn("screen_id", typeof(String));
		public Cndn object_id = new Cndn("object_id", typeof(String));
		public Cndn qualification_id = new Cndn("qualification_id", typeof(Int16));
		public Cndn operation_dts = new Cndn("operation_dts", typeof(DateTime));
		public Audit_logsSQLSelectQuery()
		{
			SqlObjectName = "Audit_logs";

			lst.Add(audit_log_id);
			lst.Add(session_id);
			lst.Add(application_id);
			lst.Add(user_no);
			lst.Add(user_role_id);
			lst.Add(operation);
			lst.Add(screen_id);
			lst.Add(object_id);
			lst.Add(qualification_id);
			lst.Add(operation_dts);
		}
	}
	
	
	public class CamerasSQLSelectQuery : SQLSelectQuery
	{
		public Cndn camera_id = new Cndn("camera_id", typeof(Int16));
		public Cndn camera_model_nm = new Cndn("camera_model_nm", typeof(String));
		public Cndn picture_quality = new Cndn("picture_quality", typeof(String));
		public Cndn flash_mode = new Cndn("flash_mode", typeof(String));
		public Cndn zoom_position = new Cndn("zoom_position", typeof(Int16));
		public Cndn transfer_size = new Cndn("transfer_size", typeof(String));
		public Cndn rotation_angle = new Cndn("rotation_angle", typeof(Int16));
		public Cndn txn_ts = new Cndn("txn_ts", typeof(Byte[]));
		public Cndn effective_from = new Cndn("effective_from", typeof(DateTime));
		public Cndn effective_till = new Cndn("effective_till", typeof(DateTime));
		public CamerasSQLSelectQuery()
		{
			SqlObjectName = "Cameras";

			lst.Add(camera_id);
			lst.Add(camera_model_nm);
			lst.Add(picture_quality);
			lst.Add(flash_mode);
			lst.Add(zoom_position);
			lst.Add(transfer_size);
			lst.Add(rotation_angle);
			lst.Add(txn_ts);
			lst.Add(effective_from);
			lst.Add(effective_till);
		}
	}
	
	
	public class CountriesSQLSelectQuery : SQLSelectQuery
	{
		public Cndn country_id = new Cndn("country_id", typeof(Int16));
		public Cndn country_cd = new Cndn("country_cd", typeof(String));
		public Cndn country_nm = new Cndn("country_nm", typeof(String));
		public Cndn isd_code = new Cndn("isd_code", typeof(String));
		public Cndn gmt_diff = new Cndn("gmt_diff", typeof(Decimal));
		public Cndn txn_ts = new Cndn("txn_ts", typeof(Byte[]));
		public Cndn effective_from = new Cndn("effective_from", typeof(DateTime));
		public Cndn effective_till = new Cndn("effective_till", typeof(DateTime));
		public Cndn is_authentic = new Cndn("is_authentic", typeof(Boolean));
		public Cndn level_1_address_component = new Cndn("level_1_address_component", typeof(String));
		public Cndn level_2_address_component = new Cndn("level_2_address_component", typeof(String));
		public Cndn level_3_address_component = new Cndn("level_3_address_component", typeof(String));
		public CountriesSQLSelectQuery()
		{
			SqlObjectName = "Countries";

			lst.Add(country_id);
			lst.Add(country_cd);
			lst.Add(country_nm);
			lst.Add(isd_code);
			lst.Add(gmt_diff);
			lst.Add(txn_ts);
			lst.Add(effective_from);
			lst.Add(effective_till);
			lst.Add(is_authentic);
			lst.Add(level_1_address_component);
			lst.Add(level_2_address_component);
			lst.Add(level_3_address_component);
		}
	}
	
	
	public class CurrenciesSQLSelectQuery : SQLSelectQuery
	{
		public Cndn currency_id = new Cndn("currency_id", typeof(Int16));
		public Cndn currency_nm = new Cndn("currency_nm", typeof(String));
		public Cndn currency_abbr = new Cndn("currency_abbr", typeof(String));
		public Cndn effective_from = new Cndn("effective_from", typeof(DateTime));
		public Cndn effective_till = new Cndn("effective_till", typeof(DateTime));
		public Cndn currency_cd = new Cndn("currency_cd", typeof(String));
		public CurrenciesSQLSelectQuery()
		{
			SqlObjectName = "Currencies";

			lst.Add(currency_id);
			lst.Add(currency_nm);
			lst.Add(currency_abbr);
			lst.Add(effective_from);
			lst.Add(effective_till);
			lst.Add(currency_cd);
		}
	}
	
	
	public class Department_epabx_extensionsSQLSelectQuery : SQLSelectQuery
	{
		public Cndn department_id = new Cndn("department_id", typeof(Int16));
		public Cndn epabx_extension = new Cndn("epabx_extension", typeof(String));
		public Cndn display_order = new Cndn("display_order", typeof(Int16));
		public Department_epabx_extensionsSQLSelectQuery()
		{
			SqlObjectName = "Department_epabx_extensions";

			lst.Add(department_id);
			lst.Add(epabx_extension);
			lst.Add(display_order);
		}
	}
	
	
	public class Department_groupsSQLSelectQuery : SQLSelectQuery
	{
		public Cndn department_group_id = new Cndn("department_group_id", typeof(Int16));
		public Cndn department_group_cd = new Cndn("department_group_cd", typeof(String));
		public Cndn department_group_nm = new Cndn("department_group_nm", typeof(String));
		public Cndn txn_ts = new Cndn("txn_ts", typeof(Byte[]));
		public Cndn effective_from = new Cndn("effective_from", typeof(DateTime));
		public Cndn effective_till = new Cndn("effective_till", typeof(DateTime));
		public Department_groupsSQLSelectQuery()
		{
			SqlObjectName = "Department_groups";

			lst.Add(department_group_id);
			lst.Add(department_group_cd);
			lst.Add(department_group_nm);
			lst.Add(txn_ts);
			lst.Add(effective_from);
			lst.Add(effective_till);
		}
	}
	
	
	public class Department_p_and_t_linesSQLSelectQuery : SQLSelectQuery
	{
		public Cndn department_id = new Cndn("department_id", typeof(Int16));
		public Cndn p_and_t_line = new Cndn("p_and_t_line", typeof(String));
		public Cndn display_order = new Cndn("display_order", typeof(Int16));
		public Department_p_and_t_linesSQLSelectQuery()
		{
			SqlObjectName = "Department_p_and_t_lines";

			lst.Add(department_id);
			lst.Add(p_and_t_line);
			lst.Add(display_order);
		}
	}
	
	
	public class Department_personsSQLSelectQuery : SQLSelectQuery
	{
		public Cndn person_id = new Cndn("person_id", typeof(Int32));
		public Cndn department_id = new Cndn("department_id", typeof(Int16));
		public Cndn designation_id = new Cndn("designation_id", typeof(Int16));
		public Cndn sewadarstatus_id = new Cndn("sewadarstatus_id", typeof(Int32));
		public Cndn sewadartype_id = new Cndn("sewadartype_id", typeof(Int32));
		public Cndn effective_from = new Cndn("effective_from", typeof(DateTime));
		public Cndn effective_till = new Cndn("effective_till", typeof(DateTime));
		public Department_personsSQLSelectQuery()
		{
			SqlObjectName = "Department_persons";

			lst.Add(person_id);
			lst.Add(department_id);
			lst.Add(designation_id);
			lst.Add(sewadarstatus_id);
			lst.Add(sewadartype_id);
			lst.Add(effective_from);
			lst.Add(effective_till);
		}
	}
	
	
	public class DepartmentsSQLSelectQuery : SQLSelectQuery
	{
		public Cndn department_id = new Cndn("department_id", typeof(Int16));
		public Cndn department_cd = new Cndn("department_cd", typeof(String));
		public Cndn department_nm = new Cndn("department_nm", typeof(String));
		public Cndn department_group_id = new Cndn("department_group_id", typeof(Int16));
		public Cndn fax_line = new Cndn("fax_line", typeof(String));
		public Cndn txn_ts = new Cndn("txn_ts", typeof(Byte[]));
		public Cndn effective_from = new Cndn("effective_from", typeof(DateTime));
		public Cndn effective_till = new Cndn("effective_till", typeof(DateTime));
		public Cndn is_section = new Cndn("is_section", typeof(String));
		public Cndn is_department = new Cndn("is_department", typeof(String));
		public DepartmentsSQLSelectQuery()
		{
			SqlObjectName = "Departments";

			lst.Add(department_id);
			lst.Add(department_cd);
			lst.Add(department_nm);
			lst.Add(department_group_id);
			lst.Add(fax_line);
			lst.Add(txn_ts);
			lst.Add(effective_from);
			lst.Add(effective_till);
			lst.Add(is_section);
			lst.Add(is_department);
		}
	}
	
	
	public class DesignationsSQLSelectQuery : SQLSelectQuery
	{
		public Cndn designation_id = new Cndn("designation_id", typeof(Int16));
		public Cndn designation_cd = new Cndn("designation_cd", typeof(String));
		public Cndn designation_nm = new Cndn("designation_nm", typeof(String));
		public Cndn designation_sq = new Cndn("designation_sq", typeof(Int16));
		public Cndn minimum_age = new Cndn("minimum_age", typeof(Byte));
		public Cndn maximum_starting_age = new Cndn("maximum_starting_age", typeof(Byte));
		public Cndn retirement_age = new Cndn("retirement_age", typeof(Byte));
		public Cndn txn_ts = new Cndn("txn_ts", typeof(Byte[]));
		public Cndn effective_from = new Cndn("effective_from", typeof(DateTime));
		public Cndn effective_till = new Cndn("effective_till", typeof(DateTime));
		public DesignationsSQLSelectQuery()
		{
			SqlObjectName = "Designations";

			lst.Add(designation_id);
			lst.Add(designation_cd);
			lst.Add(designation_nm);
			lst.Add(designation_sq);
			lst.Add(minimum_age);
			lst.Add(maximum_starting_age);
			lst.Add(retirement_age);
			lst.Add(txn_ts);
			lst.Add(effective_from);
			lst.Add(effective_till);
		}
	}
	
	
	public class Districts_or_citiesSQLSelectQuery : SQLSelectQuery
	{
		public Cndn district_or_city_id = new Cndn("district_or_city_id", typeof(Int32));
		public Cndn district_cd = new Cndn("district_cd", typeof(String));
		public Cndn district_nm = new Cndn("district_nm", typeof(String));
		public Cndn state_id = new Cndn("state_id", typeof(Int32));
		public Cndn txn_ts = new Cndn("txn_ts", typeof(Byte[]));
		public Cndn effective_from = new Cndn("effective_from", typeof(DateTime));
		public Cndn effective_till = new Cndn("effective_till", typeof(DateTime));
		public Districts_or_citiesSQLSelectQuery()
		{
			SqlObjectName = "Districts_or_cities";

			lst.Add(district_or_city_id);
			lst.Add(district_cd);
			lst.Add(district_nm);
			lst.Add(state_id);
			lst.Add(txn_ts);
			lst.Add(effective_from);
			lst.Add(effective_till);
		}
	}
	
	
	public class Document_typesSQLSelectQuery : SQLSelectQuery
	{
		public Cndn document_type_id = new Cndn("document_type_id", typeof(Byte));
		public Cndn document_type_nm = new Cndn("document_type_nm", typeof(String));
		public Cndn effective_from = new Cndn("effective_from", typeof(DateTime));
		public Cndn effective_till = new Cndn("effective_till", typeof(DateTime));
		public Document_typesSQLSelectQuery()
		{
			SqlObjectName = "Document_types";

			lst.Add(document_type_id);
			lst.Add(document_type_nm);
			lst.Add(effective_from);
			lst.Add(effective_till);
		}
	}
	
	
	public class DtpropertiesSQLSelectQuery : SQLSelectQuery
	{
		public Cndn id = new Cndn("id", typeof(Int32));
		public Cndn objectid = new Cndn("objectid", typeof(Int32));
		public Cndn property = new Cndn("property", typeof(String));
		public Cndn value = new Cndn("value", typeof(String));
		public Cndn uvalue = new Cndn("uvalue", typeof(String));
		public Cndn lvalue = new Cndn("lvalue", typeof(Byte[]));
		public Cndn version = new Cndn("version", typeof(Int32));
		public DtpropertiesSQLSelectQuery()
		{
			SqlObjectName = "Dtproperties";

			lst.Add(id);
			lst.Add(objectid);
			lst.Add(property);
			lst.Add(value);
			lst.Add(uvalue);
			lst.Add(lvalue);
			lst.Add(version);
		}
	}
	
	
	public class Epabx_linesSQLSelectQuery : SQLSelectQuery
	{
		public Cndn extension_no = new Cndn("extension_no", typeof(String));
		public Cndn txn_ts = new Cndn("txn_ts", typeof(Byte[]));
		public Cndn effective_from = new Cndn("effective_from", typeof(DateTime));
		public Cndn effective_till = new Cndn("effective_till", typeof(DateTime));
		public Epabx_linesSQLSelectQuery()
		{
			SqlObjectName = "Epabx_lines";

			lst.Add(extension_no);
			lst.Add(txn_ts);
			lst.Add(effective_from);
			lst.Add(effective_till);
		}
	}
	
	
	public class Hospital_unitsSQLSelectQuery : SQLSelectQuery
	{
		public Cndn hospital_unit_id = new Cndn("hospital_unit_id", typeof(Int16));
		public Cndn hospital_unit_nm = new Cndn("hospital_unit_nm", typeof(String));
		public Cndn effective_from = new Cndn("effective_from", typeof(DateTime));
		public Cndn effective_till = new Cndn("effective_till", typeof(DateTime));
		public Hospital_unitsSQLSelectQuery()
		{
			SqlObjectName = "Hospital_units";

			lst.Add(hospital_unit_id);
			lst.Add(hospital_unit_nm);
			lst.Add(effective_from);
			lst.Add(effective_till);
		}
	}
	
	
	public class Initiation_placesSQLSelectQuery : SQLSelectQuery
	{
		public Cndn place_id = new Cndn("place_id", typeof(Int16));
		public Cndn place_nm = new Cndn("place_nm", typeof(String));
		public Cndn txn_ts = new Cndn("txn_ts", typeof(Byte[]));
		public Cndn effective_from = new Cndn("effective_from", typeof(DateTime));
		public Cndn effective_till = new Cndn("effective_till", typeof(DateTime));
		public Initiation_placesSQLSelectQuery()
		{
			SqlObjectName = "Initiation_places";

			lst.Add(place_id);
			lst.Add(place_nm);
			lst.Add(txn_ts);
			lst.Add(effective_from);
			lst.Add(effective_till);
		}
	}
	
	
	public class LanguagesSQLSelectQuery : SQLSelectQuery
	{
		public Cndn Language_Id = new Cndn("Language_Id", typeof(Int32));
		public Cndn Language_Cd = new Cndn("Language_Cd", typeof(String));
		public Cndn Language_Nm = new Cndn("Language_Nm", typeof(String));
		public Cndn Txn_Ts = new Cndn("Txn_Ts", typeof(Byte[]));
		public Cndn Effective_from = new Cndn("Effective_from", typeof(DateTime));
		public Cndn Effective_till = new Cndn("Effective_till", typeof(DateTime));
		public LanguagesSQLSelectQuery()
		{
			SqlObjectName = "Languages";

			lst.Add(Language_Id);
			lst.Add(Language_Cd);
			lst.Add(Language_Nm);
			lst.Add(Txn_Ts);
			lst.Add(Effective_from);
			lst.Add(Effective_till);
		}
	}
	
	
	public class Level_1_address_componentsSQLSelectQuery : SQLSelectQuery
	{
		public Cndn level_1_address_component_id = new Cndn("level_1_address_component_id", typeof(Int32));
		public Cndn level_1_address_component_cd = new Cndn("level_1_address_component_cd", typeof(String));
		public Cndn level_1_address_component_nm = new Cndn("level_1_address_component_nm", typeof(String));
		public Cndn country_id = new Cndn("country_id", typeof(Int16));
		public Cndn is_authentic = new Cndn("is_authentic", typeof(Boolean));
		public Cndn txn_ts = new Cndn("txn_ts", typeof(Byte[]));
		public Cndn effective_from = new Cndn("effective_from", typeof(DateTime));
		public Cndn effective_till = new Cndn("effective_till", typeof(DateTime));
		public Cndn state_id = new Cndn("state_id", typeof(Int32));
		public Level_1_address_componentsSQLSelectQuery()
		{
			SqlObjectName = "Level_1_address_components";

			lst.Add(level_1_address_component_id);
			lst.Add(level_1_address_component_cd);
			lst.Add(level_1_address_component_nm);
			lst.Add(country_id);
			lst.Add(is_authentic);
			lst.Add(txn_ts);
			lst.Add(effective_from);
			lst.Add(effective_till);
			lst.Add(state_id);
		}
	}
	
	
	public class Level_2_address_componentsSQLSelectQuery : SQLSelectQuery
	{
		public Cndn level_2_address_component_id = new Cndn("level_2_address_component_id", typeof(Int32));
		public Cndn level_2_address_component_cd = new Cndn("level_2_address_component_cd", typeof(String));
		public Cndn level_2_address_component_nm = new Cndn("level_2_address_component_nm", typeof(String));
		public Cndn level_1_address_component_id = new Cndn("level_1_address_component_id", typeof(Int32));
		public Cndn is_authentic = new Cndn("is_authentic", typeof(Boolean));
		public Cndn txn_ts = new Cndn("txn_ts", typeof(Byte[]));
		public Cndn effective_from = new Cndn("effective_from", typeof(DateTime));
		public Cndn effective_till = new Cndn("effective_till", typeof(DateTime));
		public Cndn district_id = new Cndn("district_id", typeof(Int32));
		public Level_2_address_componentsSQLSelectQuery()
		{
			SqlObjectName = "Level_2_address_components";

			lst.Add(level_2_address_component_id);
			lst.Add(level_2_address_component_cd);
			lst.Add(level_2_address_component_nm);
			lst.Add(level_1_address_component_id);
			lst.Add(is_authentic);
			lst.Add(txn_ts);
			lst.Add(effective_from);
			lst.Add(effective_till);
			lst.Add(district_id);
		}
	}
	
	
	public class Level_3_address_componentsSQLSelectQuery : SQLSelectQuery
	{
		public Cndn level_3_address_component_id = new Cndn("level_3_address_component_id", typeof(Int32));
		public Cndn level_3_address_component_cd = new Cndn("level_3_address_component_cd", typeof(String));
		public Cndn level_3_address_component_nm = new Cndn("level_3_address_component_nm", typeof(String));
		public Cndn level_2_address_component_id = new Cndn("level_2_address_component_id", typeof(Int32));
		public Cndn is_authentic = new Cndn("is_authentic", typeof(Boolean));
		public Cndn txn_ts = new Cndn("txn_ts", typeof(Byte[]));
		public Cndn effective_from = new Cndn("effective_from", typeof(DateTime));
		public Cndn effective_till = new Cndn("effective_till", typeof(DateTime));
		public Cndn post_office_id = new Cndn("post_office_id", typeof(Int32));
		public Level_3_address_componentsSQLSelectQuery()
		{
			SqlObjectName = "Level_3_address_components";

			lst.Add(level_3_address_component_id);
			lst.Add(level_3_address_component_cd);
			lst.Add(level_3_address_component_nm);
			lst.Add(level_2_address_component_id);
			lst.Add(is_authentic);
			lst.Add(txn_ts);
			lst.Add(effective_from);
			lst.Add(effective_till);
			lst.Add(post_office_id);
		}
	}
	
	
	public class Marital_statusSQLSelectQuery : SQLSelectQuery
	{
		public Cndn marital_status = new Cndn("marital_status", typeof(String));
		public Cndn effective_from = new Cndn("effective_from", typeof(DateTime));
		public Cndn effective_till = new Cndn("effective_till", typeof(DateTime));
		public Marital_statusSQLSelectQuery()
		{
			SqlObjectName = "Marital_status";

			lst.Add(marital_status);
			lst.Add(effective_from);
			lst.Add(effective_till);
		}
	}
	
	
	public class Md_entitiesSQLSelectQuery : SQLSelectQuery
	{
		public Cndn entity_id = new Cndn("entity_id", typeof(Int32));
		public Cndn entity_nm = new Cndn("entity_nm", typeof(String));
		public Cndn entity_db = new Cndn("entity_db", typeof(String));
		public Cndn entity_tbl = new Cndn("entity_tbl", typeof(String));
		public Cndn entity_id_column = new Cndn("entity_id_column", typeof(String));
		public Cndn entity_nm_column = new Cndn("entity_nm_column", typeof(String));
		public Cndn effective_from_dt_column = new Cndn("effective_from_dt_column", typeof(String));
		public Cndn effective_till_dt_column = new Cndn("effective_till_dt_column", typeof(String));
		public Cndn active_column = new Cndn("active_column", typeof(String));
		public Cndn active_value = new Cndn("active_value", typeof(String));
		public Cndn inactive_value = new Cndn("inactive_value", typeof(String));
		public Cndn additional_info_column = new Cndn("additional_info_column", typeof(String));
		public Cndn additional_info_label = new Cndn("additional_info_label", typeof(String));
		public Md_entitiesSQLSelectQuery()
		{
			SqlObjectName = "Md_entities";

			lst.Add(entity_id);
			lst.Add(entity_nm);
			lst.Add(entity_db);
			lst.Add(entity_tbl);
			lst.Add(entity_id_column);
			lst.Add(entity_nm_column);
			lst.Add(effective_from_dt_column);
			lst.Add(effective_till_dt_column);
			lst.Add(active_column);
			lst.Add(active_value);
			lst.Add(inactive_value);
			lst.Add(additional_info_column);
			lst.Add(additional_info_label);
		}
	}
	
	
	public class Md_entities_operations_instances_logSQLSelectQuery : SQLSelectQuery
	{
		public Cndn entity_operation_id = new Cndn("entity_operation_id", typeof(Int32));
		public Cndn entity_reference_id = new Cndn("entity_reference_id", typeof(Int32));
		public Cndn pk_column_1_value = new Cndn("pk_column_1_value", typeof(String));
		public Cndn pk_column_2_value = new Cndn("pk_column_2_value", typeof(String));
		public Cndn pk_column_3_value = new Cndn("pk_column_3_value", typeof(String));
		public Cndn pk_column_4_value = new Cndn("pk_column_4_value", typeof(String));
		public Cndn pk_column_5_value = new Cndn("pk_column_5_value", typeof(String));
		public Cndn pk_column_6_value = new Cndn("pk_column_6_value", typeof(String));
		public Cndn pk_column_7_value = new Cndn("pk_column_7_value", typeof(String));
		public Cndn pk_column_8_value = new Cndn("pk_column_8_value", typeof(String));
		public Cndn pk_column_9_value = new Cndn("pk_column_9_value", typeof(String));
		public Md_entities_operations_instances_logSQLSelectQuery()
		{
			SqlObjectName = "Md_entities_operations_instances_log";

			lst.Add(entity_operation_id);
			lst.Add(entity_reference_id);
			lst.Add(pk_column_1_value);
			lst.Add(pk_column_2_value);
			lst.Add(pk_column_3_value);
			lst.Add(pk_column_4_value);
			lst.Add(pk_column_5_value);
			lst.Add(pk_column_6_value);
			lst.Add(pk_column_7_value);
			lst.Add(pk_column_8_value);
			lst.Add(pk_column_9_value);
		}
	}
	
	
	public class Md_entities_operations_logSQLSelectQuery : SQLSelectQuery
	{
		public Cndn entity_operation_id = new Cndn("entity_operation_id", typeof(Int32));
		public Cndn entity_id = new Cndn("entity_id", typeof(Int32));
		public Cndn user_no = new Cndn("user_no", typeof(Int32));
		public Cndn user_role_id = new Cndn("user_role_id", typeof(String));
		public Cndn operation = new Cndn("operation", typeof(String));
		public Cndn operation_start_dtm = new Cndn("operation_start_dtm", typeof(DateTime));
		public Cndn operation_finish_dtm = new Cndn("operation_finish_dtm", typeof(DateTime));
		public Cndn old_value = new Cndn("old_value", typeof(String));
		public Cndn new_value = new Cndn("new_value", typeof(String));
		public Cndn occurrences_replaced = new Cndn("occurrences_replaced", typeof(Int32));
		public Cndn references_affected = new Cndn("references_affected", typeof(String));
		public Md_entities_operations_logSQLSelectQuery()
		{
			SqlObjectName = "Md_entities_operations_log";

			lst.Add(entity_operation_id);
			lst.Add(entity_id);
			lst.Add(user_no);
			lst.Add(user_role_id);
			lst.Add(operation);
			lst.Add(operation_start_dtm);
			lst.Add(operation_finish_dtm);
			lst.Add(old_value);
			lst.Add(new_value);
			lst.Add(occurrences_replaced);
			lst.Add(references_affected);
		}
	}
	
	
	public class Md_entities_referencesSQLSelectQuery : SQLSelectQuery
	{
		public Cndn entity_reference_id = new Cndn("entity_reference_id", typeof(Int32));
		public Cndn entity_id = new Cndn("entity_id", typeof(Int32));
		public Cndn reference_db = new Cndn("reference_db", typeof(String));
		public Cndn reference_tbl = new Cndn("reference_tbl", typeof(String));
		public Cndn reference_column = new Cndn("reference_column", typeof(String));
		public Cndn reflect_change = new Cndn("reflect_change", typeof(Boolean));
		public Cndn retain_original = new Cndn("retain_original", typeof(Boolean));
		public Md_entities_referencesSQLSelectQuery()
		{
			SqlObjectName = "Md_entities_references";

			lst.Add(entity_reference_id);
			lst.Add(entity_id);
			lst.Add(reference_db);
			lst.Add(reference_tbl);
			lst.Add(reference_column);
			lst.Add(reflect_change);
			lst.Add(retain_original);
		}
	}
	
	
	public class Md_entities_references_pk_columnsSQLSelectQuery : SQLSelectQuery
	{
		public Cndn entity_reference_id = new Cndn("entity_reference_id", typeof(Int32));
		public Cndn pk_column_nm = new Cndn("pk_column_nm", typeof(String));
		public Cndn pk_column_sq = new Cndn("pk_column_sq", typeof(Byte));
		public Md_entities_references_pk_columnsSQLSelectQuery()
		{
			SqlObjectName = "Md_entities_references_pk_columns";

			lst.Add(entity_reference_id);
			lst.Add(pk_column_nm);
			lst.Add(pk_column_sq);
		}
	}
	
	
	public class Md_preceding_entitiesSQLSelectQuery : SQLSelectQuery
	{
		public Cndn entity_id = new Cndn("entity_id", typeof(Int32));
		public Cndn entity_id_column = new Cndn("entity_id_column", typeof(String));
		public Cndn preceding_entity_nm = new Cndn("preceding_entity_nm", typeof(String));
		public Cndn preceding_entity_db = new Cndn("preceding_entity_db", typeof(String));
		public Cndn preceding_entity_tbl = new Cndn("preceding_entity_tbl", typeof(String));
		public Cndn preceding_entity_id_column = new Cndn("preceding_entity_id_column", typeof(String));
		public Cndn preceding_entity_nm_column = new Cndn("preceding_entity_nm_column", typeof(String));
		public Cndn display_order = new Cndn("display_order", typeof(Int16));
		public Md_preceding_entitiesSQLSelectQuery()
		{
			SqlObjectName = "Md_preceding_entities";

			lst.Add(entity_id);
			lst.Add(entity_id_column);
			lst.Add(preceding_entity_nm);
			lst.Add(preceding_entity_db);
			lst.Add(preceding_entity_tbl);
			lst.Add(preceding_entity_id_column);
			lst.Add(preceding_entity_nm_column);
			lst.Add(display_order);
		}
	}
	
	
	public class Md_user_roles_entitiesSQLSelectQuery : SQLSelectQuery
	{
		public Cndn user_role_id = new Cndn("user_role_id", typeof(String));
		public Cndn entity_id = new Cndn("entity_id", typeof(Int32));
		public Md_user_roles_entitiesSQLSelectQuery()
		{
			SqlObjectName = "Md_user_roles_entities";

			lst.Add(user_role_id);
			lst.Add(entity_id);
		}
	}
	
	
	public class Measuring_unitsSQLSelectQuery : SQLSelectQuery
	{
		public Cndn measuring_unit_id = new Cndn("measuring_unit_id", typeof(Int16));
		public Cndn measuring_unit_cd = new Cndn("measuring_unit_cd", typeof(String));
		public Cndn measuring_unit_nm = new Cndn("measuring_unit_nm", typeof(String));
		public Cndn unit_decimals = new Cndn("unit_decimals", typeof(Byte));
		public Cndn number_format_type = new Cndn("number_format_type", typeof(String));
		public Cndn txn_ts = new Cndn("txn_ts", typeof(Byte[]));
		public Cndn effective_from = new Cndn("effective_from", typeof(DateTime));
		public Cndn effective_till = new Cndn("effective_till", typeof(DateTime));
		public Cndn type_of_unit = new Cndn("type_of_unit", typeof(String));
		public Cndn tolerance_short = new Cndn("tolerance_short", typeof(Decimal));
		public Cndn tolerance_overage = new Cndn("tolerance_overage", typeof(Decimal));
		public Measuring_unitsSQLSelectQuery()
		{
			SqlObjectName = "Measuring_units";

			lst.Add(measuring_unit_id);
			lst.Add(measuring_unit_cd);
			lst.Add(measuring_unit_nm);
			lst.Add(unit_decimals);
			lst.Add(number_format_type);
			lst.Add(txn_ts);
			lst.Add(effective_from);
			lst.Add(effective_till);
			lst.Add(type_of_unit);
			lst.Add(tolerance_short);
			lst.Add(tolerance_overage);
		}
	}
	
	
	public class OccupationsSQLSelectQuery : SQLSelectQuery
	{
		public Cndn occupation_id = new Cndn("occupation_id", typeof(Int16));
		public Cndn occupation_cd = new Cndn("occupation_cd", typeof(String));
		public Cndn occupation_nm = new Cndn("occupation_nm", typeof(String));
		public Cndn txn_ts = new Cndn("txn_ts", typeof(Byte[]));
		public Cndn effective_from = new Cndn("effective_from", typeof(DateTime));
		public Cndn effective_till = new Cndn("effective_till", typeof(DateTime));
		public OccupationsSQLSelectQuery()
		{
			SqlObjectName = "Occupations";

			lst.Add(occupation_id);
			lst.Add(occupation_cd);
			lst.Add(occupation_nm);
			lst.Add(txn_ts);
			lst.Add(effective_from);
			lst.Add(effective_till);
		}
	}
	
	
	public class P_and_t_linesSQLSelectQuery : SQLSelectQuery
	{
		public Cndn telephone_no = new Cndn("telephone_no", typeof(String));
		public Cndn txn_ts = new Cndn("txn_ts", typeof(Byte[]));
		public Cndn effective_from = new Cndn("effective_from", typeof(DateTime));
		public Cndn effective_till = new Cndn("effective_till", typeof(DateTime));
		public P_and_t_linesSQLSelectQuery()
		{
			SqlObjectName = "P_and_t_lines";

			lst.Add(telephone_no);
			lst.Add(txn_ts);
			lst.Add(effective_from);
			lst.Add(effective_till);
		}
	}
	
	
	public class PartiesSQLSelectQuery : SQLSelectQuery
	{
		public Cndn party_id = new Cndn("party_id", typeof(Int32));
		public Cndn party_cd = new Cndn("party_cd", typeof(String));
		public Cndn party_nm = new Cndn("party_nm", typeof(String));
		public Cndn pan = new Cndn("pan", typeof(String));
		public Cndn party_contact_nm = new Cndn("party_contact_nm", typeof(String));
		public Cndn party_contact_designation = new Cndn("party_contact_designation", typeof(String));
		public Cndn txn_ts = new Cndn("txn_ts", typeof(Byte[]));
		public PartiesSQLSelectQuery()
		{
			SqlObjectName = "Parties";

			lst.Add(party_id);
			lst.Add(party_cd);
			lst.Add(party_nm);
			lst.Add(pan);
			lst.Add(party_contact_nm);
			lst.Add(party_contact_designation);
			lst.Add(txn_ts);
		}
	}
	
	
	public class Party_addressesSQLSelectQuery : SQLSelectQuery
	{
		public Cndn party_address_id = new Cndn("party_address_id", typeof(Int32));
		public Cndn party_id = new Cndn("party_id", typeof(Int32));
		public Cndn address_type_id = new Cndn("address_type_id", typeof(Int32));
		public Cndn address_no = new Cndn("address_no", typeof(Byte));
		public Cndn contact_nm = new Cndn("contact_nm", typeof(String));
		public Cndn contact_designation = new Cndn("contact_designation", typeof(String));
		public Cndn address_line_1 = new Cndn("address_line_1", typeof(String));
		public Cndn address_line_2 = new Cndn("address_line_2", typeof(String));
		public Cndn state_id = new Cndn("state_id", typeof(Int32));
		public Cndn district_or_city_id = new Cndn("district_or_city_id", typeof(Int32));
		public Cndn post_office_id = new Cndn("post_office_id", typeof(Int32));
		public Cndn pin_or_zip_code = new Cndn("pin_or_zip_code", typeof(String));
		public Cndn country_id = new Cndn("country_id", typeof(Int16));
		public Cndn cell_phones = new Cndn("cell_phones", typeof(String));
		public Cndn telephones = new Cndn("telephones", typeof(String));
		public Cndn email_addresses = new Cndn("email_addresses", typeof(String));
		public Cndn fax_lines = new Cndn("fax_lines", typeof(String));
		public Cndn effective_from = new Cndn("effective_from", typeof(DateTime));
		public Cndn effective_till = new Cndn("effective_till", typeof(DateTime));
		public Cndn website = new Cndn("website", typeof(String));
		public Cndn other_info = new Cndn("other_info", typeof(String));
		public Party_addressesSQLSelectQuery()
		{
			SqlObjectName = "Party_addresses";

			lst.Add(party_address_id);
			lst.Add(party_id);
			lst.Add(address_type_id);
			lst.Add(address_no);
			lst.Add(contact_nm);
			lst.Add(contact_designation);
			lst.Add(address_line_1);
			lst.Add(address_line_2);
			lst.Add(state_id);
			lst.Add(district_or_city_id);
			lst.Add(post_office_id);
			lst.Add(pin_or_zip_code);
			lst.Add(country_id);
			lst.Add(cell_phones);
			lst.Add(telephones);
			lst.Add(email_addresses);
			lst.Add(fax_lines);
			lst.Add(effective_from);
			lst.Add(effective_till);
			lst.Add(website);
			lst.Add(other_info);
		}
	}
	
	
	public class Party_role_applicationsSQLSelectQuery : SQLSelectQuery
	{
		public Cndn party_id = new Cndn("party_id", typeof(Int32));
		public Cndn role_cd = new Cndn("role_cd", typeof(String));
		public Cndn application_id = new Cndn("application_id", typeof(String));
		public Cndn is_read = new Cndn("is_read", typeof(String));
		public Cndn is_update = new Cndn("is_update", typeof(String));
		public Party_role_applicationsSQLSelectQuery()
		{
			SqlObjectName = "Party_role_applications";

			lst.Add(party_id);
			lst.Add(role_cd);
			lst.Add(application_id);
			lst.Add(is_read);
			lst.Add(is_update);
		}
	}
	
	
	public class Party_rolesSQLSelectQuery : SQLSelectQuery
	{
		public Cndn party_id = new Cndn("party_id", typeof(Int32));
		public Cndn role_cd = new Cndn("role_cd", typeof(String));
		public Cndn default_address_id = new Cndn("default_address_id", typeof(Int32));
		public Cndn owner_application_id = new Cndn("owner_application_id", typeof(String));
		public Cndn effective_from = new Cndn("effective_from", typeof(DateTime));
		public Cndn effective_till = new Cndn("effective_till", typeof(DateTime));
		public Party_rolesSQLSelectQuery()
		{
			SqlObjectName = "Party_roles";

			lst.Add(party_id);
			lst.Add(role_cd);
			lst.Add(default_address_id);
			lst.Add(owner_application_id);
			lst.Add(effective_from);
			lst.Add(effective_till);
		}
	}
	
	
	public class PatronsSQLSelectQuery : SQLSelectQuery
	{
		public Cndn patron_id = new Cndn("patron_id", typeof(Byte));
		public Cndn patron_nm = new Cndn("patron_nm", typeof(String));
		public Cndn effective_from = new Cndn("effective_from", typeof(DateTime));
		public Cndn effective_till = new Cndn("effective_till", typeof(DateTime));
		public Cndn initiation_from = new Cndn("initiation_from", typeof(DateTime));
		public Cndn initiation_till = new Cndn("initiation_till", typeof(DateTime));
		public PatronsSQLSelectQuery()
		{
			SqlObjectName = "Patrons";

			lst.Add(patron_id);
			lst.Add(patron_nm);
			lst.Add(effective_from);
			lst.Add(effective_till);
			lst.Add(initiation_from);
			lst.Add(initiation_till);
		}
	}
	
	
	public class Person_titlesSQLSelectQuery : SQLSelectQuery
	{
		public Cndn person_title = new Cndn("person_title", typeof(String));
		public Person_titlesSQLSelectQuery()
		{
			SqlObjectName = "Person_titles";

			lst.Add(person_title);
		}
	}
	
	
	public class PersonsSQLSelectQuery : SQLSelectQuery
	{
		public Cndn person_id = new Cndn("person_id", typeof(Int32));
		public Cndn title = new Cndn("title", typeof(String));
		public Cndn first_nm = new Cndn("first_nm", typeof(String));
		public Cndn middle_nm = new Cndn("middle_nm", typeof(String));
		public Cndn last_nm = new Cndn("last_nm", typeof(String));
		public Cndn gender = new Cndn("gender", typeof(String));
		public Cndn is_dera_resident = new Cndn("is_dera_resident", typeof(String));
		public Cndn contact_information = new Cndn("contact_information", typeof(String));
		public Cndn email_addresses = new Cndn("email_addresses", typeof(String));
		public Cndn birth_dtm = new Cndn("birth_dtm", typeof(DateTime));
		public Cndn additional_information = new Cndn("additional_information", typeof(String));
		public Cndn application_id = new Cndn("application_id", typeof(String));
		public Cndn screen_id = new Cndn("screen_id", typeof(String));
		public Cndn initiation_id = new Cndn("initiation_id", typeof(Int32));
		public Cndn effective_from = new Cndn("effective_from", typeof(DateTime));
		public Cndn effective_till = new Cndn("effective_till", typeof(DateTime));
		public Cndn txn_ts = new Cndn("txn_ts", typeof(Byte[]));
		public PersonsSQLSelectQuery()
		{
			SqlObjectName = "Persons";

			lst.Add(person_id);
			lst.Add(title);
			lst.Add(first_nm);
			lst.Add(middle_nm);
			lst.Add(last_nm);
			lst.Add(gender);
			lst.Add(is_dera_resident);
			lst.Add(contact_information);
			lst.Add(email_addresses);
			lst.Add(birth_dtm);
			lst.Add(additional_information);
			lst.Add(application_id);
			lst.Add(screen_id);
			lst.Add(initiation_id);
			lst.Add(effective_from);
			lst.Add(effective_till);
			lst.Add(txn_ts);
		}
	}
	
	
	public class Phone_typesSQLSelectQuery : SQLSelectQuery
	{
		public Cndn phone_type_id = new Cndn("phone_type_id", typeof(Int16));
		public Cndn phone_type_nm = new Cndn("phone_type_nm", typeof(String));
		public Cndn effective_from = new Cndn("effective_from", typeof(DateTime));
		public Cndn effective_till = new Cndn("effective_till", typeof(DateTime));
		public Phone_typesSQLSelectQuery()
		{
			SqlObjectName = "Phone_types";

			lst.Add(phone_type_id);
			lst.Add(phone_type_nm);
			lst.Add(effective_from);
			lst.Add(effective_till);
		}
	}
	
	
	public class Post_officesSQLSelectQuery : SQLSelectQuery
	{
		public Cndn post_office_id = new Cndn("post_office_id", typeof(Int32));
		public Cndn post_office_cd = new Cndn("post_office_cd", typeof(String));
		public Cndn post_office_nm = new Cndn("post_office_nm", typeof(String));
		public Cndn district_or_city_id = new Cndn("district_or_city_id", typeof(Int32));
		public Cndn pin_or_zip_code = new Cndn("pin_or_zip_code", typeof(String));
		public Cndn std_code = new Cndn("std_code", typeof(String));
		public Cndn txn_ts = new Cndn("txn_ts", typeof(Byte[]));
		public Cndn effective_from = new Cndn("effective_from", typeof(DateTime));
		public Cndn effective_till = new Cndn("effective_till", typeof(DateTime));
		public Post_officesSQLSelectQuery()
		{
			SqlObjectName = "Post_offices";

			lst.Add(post_office_id);
			lst.Add(post_office_cd);
			lst.Add(post_office_nm);
			lst.Add(district_or_city_id);
			lst.Add(pin_or_zip_code);
			lst.Add(std_code);
			lst.Add(txn_ts);
			lst.Add(effective_from);
			lst.Add(effective_till);
		}
	}
	
	
	public class Qlfctn_subjectsSQLSelectQuery : SQLSelectQuery
	{
		public Cndn qlfctn_subject_id = new Cndn("qlfctn_subject_id", typeof(Int16));
		public Cndn qlfctn_subject_cd = new Cndn("qlfctn_subject_cd", typeof(String));
		public Cndn qlfctn_subject_nm = new Cndn("qlfctn_subject_nm", typeof(String));
		public Cndn description = new Cndn("description", typeof(String));
		public Cndn effective_from = new Cndn("effective_from", typeof(DateTime));
		public Cndn effective_till = new Cndn("effective_till", typeof(DateTime));
		public Qlfctn_subjectsSQLSelectQuery()
		{
			SqlObjectName = "Qlfctn_subjects";

			lst.Add(qlfctn_subject_id);
			lst.Add(qlfctn_subject_cd);
			lst.Add(qlfctn_subject_nm);
			lst.Add(description);
			lst.Add(effective_from);
			lst.Add(effective_till);
		}
	}
	
	
	public class Qualification_typesSQLSelectQuery : SQLSelectQuery
	{
		public Cndn qualification_type = new Cndn("qualification_type", typeof(String));
		public Cndn qualification_type_sq = new Cndn("qualification_type_sq", typeof(Int16));
		public Cndn effective_from = new Cndn("effective_from", typeof(DateTime));
		public Cndn effective_till = new Cndn("effective_till", typeof(DateTime));
		public Qualification_typesSQLSelectQuery()
		{
			SqlObjectName = "Qualification_types";

			lst.Add(qualification_type);
			lst.Add(qualification_type_sq);
			lst.Add(effective_from);
			lst.Add(effective_till);
		}
	}
	
	
	public class QualificationsSQLSelectQuery : SQLSelectQuery
	{
		public Cndn qualification_id = new Cndn("qualification_id", typeof(Int16));
		public Cndn qualification_type = new Cndn("qualification_type", typeof(String));
		public Cndn qualification_cd = new Cndn("qualification_cd", typeof(String));
		public Cndn qualification_nm = new Cndn("qualification_nm", typeof(String));
		public Cndn remarks = new Cndn("remarks", typeof(String));
		public Cndn effective_from = new Cndn("effective_from", typeof(DateTime));
		public Cndn effective_till = new Cndn("effective_till", typeof(DateTime));
		public Cndn txn_ts = new Cndn("txn_ts", typeof(Byte[]));
		public QualificationsSQLSelectQuery()
		{
			SqlObjectName = "Qualifications";

			lst.Add(qualification_id);
			lst.Add(qualification_type);
			lst.Add(qualification_cd);
			lst.Add(qualification_nm);
			lst.Add(remarks);
			lst.Add(effective_from);
			lst.Add(effective_till);
			lst.Add(txn_ts);
		}
	}
	
	
	public class Qualifications_qlfctn_subjectsSQLSelectQuery : SQLSelectQuery
	{
		public Cndn qualification_id = new Cndn("qualification_id", typeof(Int16));
		public Cndn qlfctn_subject_id = new Cndn("qlfctn_subject_id", typeof(Int16));
		public Cndn effective_from = new Cndn("effective_from", typeof(DateTime));
		public Cndn effective_till = new Cndn("effective_till", typeof(DateTime));
		public Qualifications_qlfctn_subjectsSQLSelectQuery()
		{
			SqlObjectName = "Qualifications_qlfctn_subjects";

			lst.Add(qualification_id);
			lst.Add(qlfctn_subject_id);
			lst.Add(effective_from);
			lst.Add(effective_till);
		}
	}
	
	
	public class RelationsSQLSelectQuery : SQLSelectQuery
	{
		public Cndn relation_id = new Cndn("relation_id", typeof(Int16));
		public Cndn relation_nm = new Cndn("relation_nm", typeof(String));
		public Cndn txn_ts = new Cndn("txn_ts", typeof(Byte[]));
		public Cndn effective_from = new Cndn("effective_from", typeof(DateTime));
		public Cndn effective_till = new Cndn("effective_till", typeof(DateTime));
		public RelationsSQLSelectQuery()
		{
			SqlObjectName = "Relations";

			lst.Add(relation_id);
			lst.Add(relation_nm);
			lst.Add(txn_ts);
			lst.Add(effective_from);
			lst.Add(effective_till);
		}
	}
	
	
	public class RepresentativesSQLSelectQuery : SQLSelectQuery
	{
		public Cndn representative_id = new Cndn("representative_id", typeof(Int32));
		public Cndn person_id = new Cndn("person_id", typeof(Int32));
		public Cndn address_line_1 = new Cndn("address_line_1", typeof(String));
		public Cndn address_line_2 = new Cndn("address_line_2", typeof(String));
		public Cndn district_or_city_id = new Cndn("district_or_city_id", typeof(Int32));
		public Cndn pin_or_zip_code = new Cndn("pin_or_zip_code", typeof(String));
		public Cndn telephones_office = new Cndn("telephones_office", typeof(String));
		public Cndn telephones_residence = new Cndn("telephones_residence", typeof(String));
		public Cndn cell_phone_no = new Cndn("cell_phone_no", typeof(String));
		public Cndn fax_lines_office = new Cndn("fax_lines_office", typeof(String));
		public Cndn fax_lines_residence = new Cndn("fax_lines_residence", typeof(String));
		public Cndn territory = new Cndn("territory", typeof(String));
		public Cndn txn_ts = new Cndn("txn_ts", typeof(Byte[]));
		public Cndn effective_from = new Cndn("effective_from", typeof(DateTime));
		public Cndn effective_till = new Cndn("effective_till", typeof(DateTime));
		public RepresentativesSQLSelectQuery()
		{
			SqlObjectName = "Representatives";

			lst.Add(representative_id);
			lst.Add(person_id);
			lst.Add(address_line_1);
			lst.Add(address_line_2);
			lst.Add(district_or_city_id);
			lst.Add(pin_or_zip_code);
			lst.Add(telephones_office);
			lst.Add(telephones_residence);
			lst.Add(cell_phone_no);
			lst.Add(fax_lines_office);
			lst.Add(fax_lines_residence);
			lst.Add(territory);
			lst.Add(txn_ts);
			lst.Add(effective_from);
			lst.Add(effective_till);
		}
	}
	
	
	public class Responsibility_typesSQLSelectQuery : SQLSelectQuery
	{
		public Cndn responsibility_type_id = new Cndn("responsibility_type_id", typeof(Int16));
		public Cndn working_unit_id = new Cndn("working_unit_id", typeof(Int16));
		public Cndn responsibility_nm = new Cndn("responsibility_nm", typeof(String));
		public Cndn responsibility_cnt = new Cndn("responsibility_cnt", typeof(Byte));
		public Cndn responsibility_sq = new Cndn("responsibility_sq", typeof(Int16));
		public Responsibility_typesSQLSelectQuery()
		{
			SqlObjectName = "Responsibility_types";

			lst.Add(responsibility_type_id);
			lst.Add(working_unit_id);
			lst.Add(responsibility_nm);
			lst.Add(responsibility_cnt);
			lst.Add(responsibility_sq);
		}
	}
	
	
	public class RolesSQLSelectQuery : SQLSelectQuery
	{
		public Cndn role_cd = new Cndn("role_cd", typeof(String));
		public Cndn role_nm = new Cndn("role_nm", typeof(String));
		public Cndn address_requirement = new Cndn("address_requirement", typeof(String));
		public Cndn txn_ts = new Cndn("txn_ts", typeof(Byte[]));
		public Cndn effective_from = new Cndn("effective_from", typeof(DateTime));
		public Cndn effective_till = new Cndn("effective_till", typeof(DateTime));
		public RolesSQLSelectQuery()
		{
			SqlObjectName = "Roles";

			lst.Add(role_cd);
			lst.Add(role_nm);
			lst.Add(address_requirement);
			lst.Add(txn_ts);
			lst.Add(effective_from);
			lst.Add(effective_till);
		}
	}
	
	
	public class Roles_application_controlsSQLSelectQuery : SQLSelectQuery
	{
		public Cndn role_cd = new Cndn("role_cd", typeof(String));
		public Cndn owner_application_id = new Cndn("owner_application_id", typeof(String));
		public Cndn application_id = new Cndn("application_id", typeof(String));
		public Cndn is_read = new Cndn("is_read", typeof(String));
		public Cndn is_update = new Cndn("is_update", typeof(String));
		public Roles_application_controlsSQLSelectQuery()
		{
			SqlObjectName = "Roles_application_controls";

			lst.Add(role_cd);
			lst.Add(owner_application_id);
			lst.Add(application_id);
			lst.Add(is_read);
			lst.Add(is_update);
		}
	}
	
	
	public class Satsang_centre_typesSQLSelectQuery : SQLSelectQuery
	{
		public Cndn satsang_centre_type = new Cndn("satsang_centre_type", typeof(String));
		public Satsang_centre_typesSQLSelectQuery()
		{
			SqlObjectName = "Satsang_centre_types";

			lst.Add(satsang_centre_type);
		}
	}
	
	
	public class Satsang_centresSQLSelectQuery : SQLSelectQuery
	{
		public Cndn satsang_centre_id = new Cndn("satsang_centre_id", typeof(Int32));
		public Cndn satsang_centre_cd = new Cndn("satsang_centre_cd", typeof(String));
		public Cndn satsang_centre_nm = new Cndn("satsang_centre_nm", typeof(String));
		public Cndn satsang_centre_type = new Cndn("satsang_centre_type", typeof(String));
		public Cndn address_line_1 = new Cndn("address_line_1", typeof(String));
		public Cndn address_line_2 = new Cndn("address_line_2", typeof(String));
		public Cndn district_or_city_id = new Cndn("district_or_city_id", typeof(Int32));
		public Cndn pin_or_zip_code = new Cndn("pin_or_zip_code", typeof(String));
		public Cndn secretary = new Cndn("secretary", typeof(Int32));
		public Cndn telephones = new Cndn("telephones", typeof(String));
		public Cndn email_addresses = new Cndn("email_addresses", typeof(String));
		public Cndn fax_lines = new Cndn("fax_lines", typeof(String));
		public Cndn txn_ts = new Cndn("txn_ts", typeof(Byte[]));
		public Cndn effective_from = new Cndn("effective_from", typeof(DateTime));
		public Cndn effective_till = new Cndn("effective_till", typeof(DateTime));
		public Cndn file_no = new Cndn("file_no", typeof(String));
		public Cndn area_nm = new Cndn("area_nm", typeof(String));
		public Satsang_centresSQLSelectQuery()
		{
			SqlObjectName = "Satsang_centres";

			lst.Add(satsang_centre_id);
			lst.Add(satsang_centre_cd);
			lst.Add(satsang_centre_nm);
			lst.Add(satsang_centre_type);
			lst.Add(address_line_1);
			lst.Add(address_line_2);
			lst.Add(district_or_city_id);
			lst.Add(pin_or_zip_code);
			lst.Add(secretary);
			lst.Add(telephones);
			lst.Add(email_addresses);
			lst.Add(fax_lines);
			lst.Add(txn_ts);
			lst.Add(effective_from);
			lst.Add(effective_till);
			lst.Add(file_no);
			lst.Add(area_nm);
		}
	}
	
	
	public class Satsang_programmesSQLSelectQuery : SQLSelectQuery
	{
		public Cndn satsang_centre_id = new Cndn("satsang_centre_id", typeof(Int32));
		public Cndn satsang_date = new Cndn("satsang_date", typeof(DateTime));
		public Satsang_programmesSQLSelectQuery()
		{
			SqlObjectName = "Satsang_programmes";

			lst.Add(satsang_centre_id);
			lst.Add(satsang_date);
		}
	}
	
	
	public class Sewadar_StatusSQLSelectQuery : SQLSelectQuery
	{
		public Cndn sewadarstatus_id = new Cndn("sewadarstatus_id", typeof(Int32));
		public Cndn sewadarstatus_nm = new Cndn("sewadarstatus_nm", typeof(String));
		public Cndn txn_ts = new Cndn("txn_ts", typeof(Byte[]));
		public Cndn effective_from = new Cndn("effective_from", typeof(DateTime));
		public Cndn effective_till = new Cndn("effective_till", typeof(DateTime));
		public Sewadar_StatusSQLSelectQuery()
		{
			SqlObjectName = "Sewadar_Status";

			lst.Add(sewadarstatus_id);
			lst.Add(sewadarstatus_nm);
			lst.Add(txn_ts);
			lst.Add(effective_from);
			lst.Add(effective_till);
		}
	}
	
	
	public class Sewadar_typesSQLSelectQuery : SQLSelectQuery
	{
		public Cndn sewadartype_id = new Cndn("sewadartype_id", typeof(Int32));
		public Cndn sewadartype_nm = new Cndn("sewadartype_nm", typeof(String));
		public Cndn txn_ts = new Cndn("txn_ts", typeof(Byte[]));
		public Cndn effective_from = new Cndn("effective_from", typeof(DateTime));
		public Cndn effective_till = new Cndn("effective_till", typeof(DateTime));
		public Cndn is_used_in_RMS = new Cndn("is_used_in_RMS", typeof(String));
		public Sewadar_typesSQLSelectQuery()
		{
			SqlObjectName = "Sewadar_types";

			lst.Add(sewadartype_id);
			lst.Add(sewadartype_nm);
			lst.Add(txn_ts);
			lst.Add(effective_from);
			lst.Add(effective_till);
			lst.Add(is_used_in_RMS);
		}
	}
	
	
	public class SkillsSQLSelectQuery : SQLSelectQuery
	{
		public Cndn skill_id = new Cndn("skill_id", typeof(Int16));
		public Cndn skill_nm = new Cndn("skill_nm", typeof(String));
		public Cndn txn_ts = new Cndn("txn_ts", typeof(Byte[]));
		public Cndn effective_from = new Cndn("effective_from", typeof(DateTime));
		public Cndn effective_till = new Cndn("effective_till", typeof(DateTime));
		public SkillsSQLSelectQuery()
		{
			SqlObjectName = "Skills";

			lst.Add(skill_id);
			lst.Add(skill_nm);
			lst.Add(txn_ts);
			lst.Add(effective_from);
			lst.Add(effective_till);
		}
	}
	
	
	public class SocietiesSQLSelectQuery : SQLSelectQuery
	{
		public Cndn society_id = new Cndn("society_id", typeof(Int16));
		public Cndn society_cd = new Cndn("society_cd", typeof(String));
		public Cndn society_nm = new Cndn("society_nm", typeof(String));
		public Cndn effective_from = new Cndn("effective_from", typeof(DateTime));
		public Cndn effective_till = new Cndn("effective_till", typeof(DateTime));
		public SocietiesSQLSelectQuery()
		{
			SqlObjectName = "Societies";

			lst.Add(society_id);
			lst.Add(society_cd);
			lst.Add(society_nm);
			lst.Add(effective_from);
			lst.Add(effective_till);
		}
	}
	
	
	public class StatesSQLSelectQuery : SQLSelectQuery
	{
		public Cndn state_id = new Cndn("state_id", typeof(Int32));
		public Cndn state_cd = new Cndn("state_cd", typeof(String));
		public Cndn state_nm = new Cndn("state_nm", typeof(String));
		public Cndn country_id = new Cndn("country_id", typeof(Int16));
		public Cndn txn_ts = new Cndn("txn_ts", typeof(Byte[]));
		public Cndn effective_from = new Cndn("effective_from", typeof(DateTime));
		public Cndn effective_till = new Cndn("effective_till", typeof(DateTime));
		public StatesSQLSelectQuery()
		{
			SqlObjectName = "States";

			lst.Add(state_id);
			lst.Add(state_cd);
			lst.Add(state_nm);
			lst.Add(country_id);
			lst.Add(txn_ts);
			lst.Add(effective_from);
			lst.Add(effective_till);
		}
	}
	
	
	public class Sync_add_typeSQLSelectQuery : SQLSelectQuery
	{
		public Cndn address_type = new Cndn("address_type", typeof(String));
		public Cndn mps_type_id = new Cndn("mps_type_id", typeof(Int32));
		public Cndn cdb_type_id = new Cndn("cdb_type_id", typeof(Int32));
		public Sync_add_typeSQLSelectQuery()
		{
			SqlObjectName = "Sync_add_type";

			lst.Add(address_type);
			lst.Add(mps_type_id);
			lst.Add(cdb_type_id);
		}
	}
	
	
	public class Sync_citySQLSelectQuery : SQLSelectQuery
	{
		public Cndn mps_party_nm = new Cndn("mps_party_nm", typeof(String));
		public Cndn mps_city_id = new Cndn("mps_city_id", typeof(Int32));
		public Cndn mps_city_nm = new Cndn("mps_city_nm", typeof(String));
		public Cndn cdb_city_id = new Cndn("cdb_city_id", typeof(Int32));
		public Cndn cdb_city_nm = new Cndn("cdb_city_nm", typeof(String));
		public Sync_citySQLSelectQuery()
		{
			SqlObjectName = "Sync_city";

			lst.Add(mps_party_nm);
			lst.Add(mps_city_id);
			lst.Add(mps_city_nm);
			lst.Add(cdb_city_id);
			lst.Add(cdb_city_nm);
		}
	}
	
	
	public class Sync_city_manuallySQLSelectQuery : SQLSelectQuery
	{
		public Cndn mps_city_id = new Cndn("mps_city_id", typeof(Int32));
		public Cndn mps_city_nm = new Cndn("mps_city_nm", typeof(String));
		public Cndn cdb_city_id = new Cndn("cdb_city_id", typeof(Int32));
		public Cndn cdb_city_nm = new Cndn("cdb_city_nm", typeof(String));
		public Cndn post_office_id = new Cndn("post_office_id", typeof(Int32));
		public Sync_city_manuallySQLSelectQuery()
		{
			SqlObjectName = "Sync_city_manually";

			lst.Add(mps_city_id);
			lst.Add(mps_city_nm);
			lst.Add(cdb_city_id);
			lst.Add(cdb_city_nm);
			lst.Add(post_office_id);
		}
	}
	
	
	public class Sync_partySQLSelectQuery : SQLSelectQuery
	{
		public Cndn party_nm = new Cndn("party_nm", typeof(String));
		public Cndn mps_party_id = new Cndn("mps_party_id", typeof(Int32));
		public Cndn cdb_party_id = new Cndn("cdb_party_id", typeof(Int32));
		public Sync_partySQLSelectQuery()
		{
			SqlObjectName = "Sync_party";

			lst.Add(party_nm);
			lst.Add(mps_party_id);
			lst.Add(cdb_party_id);
		}
	}
	
	
	public class TemppersonsSQLSelectQuery : SQLSelectQuery
	{
		public Cndn title = new Cndn("title", typeof(String));
		public Cndn first_nm = new Cndn("first_nm", typeof(String));
		public Cndn last_nm = new Cndn("last_nm", typeof(String));
		public Cndn gender = new Cndn("gender", typeof(String));
		public Cndn birth_dtm = new Cndn("birth_dtm", typeof(DateTime));
		public Cndn cou = new Cndn("cou", typeof(Int32));
		public TemppersonsSQLSelectQuery()
		{
			SqlObjectName = "Temppersons";

			lst.Add(title);
			lst.Add(first_nm);
			lst.Add(last_nm);
			lst.Add(gender);
			lst.Add(birth_dtm);
			lst.Add(cou);
		}
	}
	
	
	public class Unsync_addressSQLSelectQuery : SQLSelectQuery
	{
		public Cndn mps_party_id = new Cndn("mps_party_id", typeof(Int32));
		public Cndn mps_add_type_id = new Cndn("mps_add_type_id", typeof(Int32));
		public Unsync_addressSQLSelectQuery()
		{
			SqlObjectName = "Unsync_address";

			lst.Add(mps_party_id);
			lst.Add(mps_add_type_id);
		}
	}
	
	
	public class ViewCountrieSQLSelectQuery : SQLSelectQuery
	{
		public Cndn country_id = new Cndn("country_id", typeof(Int16));
		public Cndn country_cd = new Cndn("country_cd", typeof(String));
		public Cndn country_nm = new Cndn("country_nm", typeof(String));
		public Cndn isd_code = new Cndn("isd_code", typeof(String));
		public Cndn gmt_diff = new Cndn("gmt_diff", typeof(Decimal));
		public Cndn txn_ts = new Cndn("txn_ts", typeof(Byte[]));
		public Cndn effective_from = new Cndn("effective_from", typeof(DateTime));
		public Cndn effective_till = new Cndn("effective_till", typeof(DateTime));
		public Cndn is_authentic = new Cndn("is_authentic", typeof(Boolean));
		public Cndn level_1_address_component = new Cndn("level_1_address_component", typeof(String));
		public Cndn level_2_address_component = new Cndn("level_2_address_component", typeof(String));
		public Cndn level_3_address_component = new Cndn("level_3_address_component", typeof(String));
		public ViewCountrieSQLSelectQuery()
		{
			SqlObjectName = "ViewCountrie";
			SQLObjectType = SQLObjectTypes.View;

			lst.Add(country_id);
			lst.Add(country_cd);
			lst.Add(country_nm);
			lst.Add(isd_code);
			lst.Add(gmt_diff);
			lst.Add(txn_ts);
			lst.Add(effective_from);
			lst.Add(effective_till);
			lst.Add(is_authentic);
			lst.Add(level_1_address_component);
			lst.Add(level_2_address_component);
			lst.Add(level_3_address_component);
		}
	}
	
	
	public class ViewLevel1AddressComponentSQLSelectQuery : SQLSelectQuery
	{
		public Cndn level_1_address_component_id = new Cndn("level_1_address_component_id", typeof(Int32));
		public Cndn level_1_address_component_cd = new Cndn("level_1_address_component_cd", typeof(String));
		public Cndn level_1_address_component_nm = new Cndn("level_1_address_component_nm", typeof(String));
		public Cndn country_id = new Cndn("country_id", typeof(Int16));
		public Cndn country_id_display = new Cndn("country_id_display", typeof(String));
		public Cndn is_authentic = new Cndn("is_authentic", typeof(Boolean));
		public Cndn txn_ts = new Cndn("txn_ts", typeof(Byte[]));
		public Cndn effective_from = new Cndn("effective_from", typeof(DateTime));
		public Cndn effective_till = new Cndn("effective_till", typeof(DateTime));
		public Cndn state_id = new Cndn("state_id", typeof(Int32));
		public ViewLevel1AddressComponentSQLSelectQuery()
		{
			SqlObjectName = "ViewLevel1AddressComponent";
			SQLObjectType = SQLObjectTypes.View;

			lst.Add(level_1_address_component_id);
			lst.Add(level_1_address_component_cd);
			lst.Add(level_1_address_component_nm);
			lst.Add(country_id);
			lst.Add(country_id_display);
			lst.Add(is_authentic);
			lst.Add(txn_ts);
			lst.Add(effective_from);
			lst.Add(effective_till);
			lst.Add(state_id);
		}
	}
	
	
	public class ViewLevel2AddressComponentSQLSelectQuery : SQLSelectQuery
	{
		public Cndn level_2_address_component_id = new Cndn("level_2_address_component_id", typeof(Int32));
		public Cndn level_2_address_component_cd = new Cndn("level_2_address_component_cd", typeof(String));
		public Cndn level_2_address_component_nm = new Cndn("level_2_address_component_nm", typeof(String));
		public Cndn level_1_address_component_id = new Cndn("level_1_address_component_id", typeof(Int32));
		public Cndn level_1_address_component_id_display = new Cndn("level_1_address_component_id_display", typeof(String));
		public Cndn country_nm = new Cndn("country_nm", typeof(String));
		public Cndn is_authentic = new Cndn("is_authentic", typeof(Boolean));
		public Cndn txn_ts = new Cndn("txn_ts", typeof(Byte[]));
		public Cndn effective_from = new Cndn("effective_from", typeof(DateTime));
		public Cndn effective_till = new Cndn("effective_till", typeof(DateTime));
		public Cndn district_id = new Cndn("district_id", typeof(Int32));
		public ViewLevel2AddressComponentSQLSelectQuery()
		{
			SqlObjectName = "ViewLevel2AddressComponent";
			SQLObjectType = SQLObjectTypes.View;

			lst.Add(level_2_address_component_id);
			lst.Add(level_2_address_component_cd);
			lst.Add(level_2_address_component_nm);
			lst.Add(level_1_address_component_id);
			lst.Add(level_1_address_component_id_display);
			lst.Add(country_nm);
			lst.Add(is_authentic);
			lst.Add(txn_ts);
			lst.Add(effective_from);
			lst.Add(effective_till);
			lst.Add(district_id);
		}
	}
	
	
	public class ViewLevel3AddressComponentSQLSelectQuery : SQLSelectQuery
	{
		public Cndn level_3_address_component_id = new Cndn("level_3_address_component_id", typeof(Int32));
		public Cndn level_3_address_component_cd = new Cndn("level_3_address_component_cd", typeof(String));
		public Cndn level_3_address_component_nm = new Cndn("level_3_address_component_nm", typeof(String));
		public Cndn level_2_address_component_id = new Cndn("level_2_address_component_id", typeof(Int32));
		public Cndn level_2_address_component_id_display = new Cndn("level_2_address_component_id_display", typeof(String));
		public Cndn level_1_address_component_nm = new Cndn("level_1_address_component_nm", typeof(String));
		public Cndn country_nm = new Cndn("country_nm", typeof(String));
		public Cndn is_authentic = new Cndn("is_authentic", typeof(Boolean));
		public Cndn txn_ts = new Cndn("txn_ts", typeof(Byte[]));
		public Cndn effective_from = new Cndn("effective_from", typeof(DateTime));
		public Cndn effective_till = new Cndn("effective_till", typeof(DateTime));
		public Cndn post_office_id = new Cndn("post_office_id", typeof(Int32));
		public ViewLevel3AddressComponentSQLSelectQuery()
		{
			SqlObjectName = "ViewLevel3AddressComponent";
			SQLObjectType = SQLObjectTypes.View;

			lst.Add(level_3_address_component_id);
			lst.Add(level_3_address_component_cd);
			lst.Add(level_3_address_component_nm);
			lst.Add(level_2_address_component_id);
			lst.Add(level_2_address_component_id_display);
			lst.Add(level_1_address_component_nm);
			lst.Add(country_nm);
			lst.Add(is_authentic);
			lst.Add(txn_ts);
			lst.Add(effective_from);
			lst.Add(effective_till);
			lst.Add(post_office_id);
		}
	}
	
	
	public class ViewQualificationSubjectsSQLSelectQuery : SQLSelectQuery
	{
		public Cndn qlfctn_subject_id = new Cndn("qlfctn_subject_id", typeof(Int16));
		public Cndn qlfctn_subject_cd = new Cndn("qlfctn_subject_cd", typeof(String));
		public Cndn qlfctn_subject_nm = new Cndn("qlfctn_subject_nm", typeof(String));
		public Cndn description = new Cndn("description", typeof(String));
		public Cndn effective_from = new Cndn("effective_from", typeof(DateTime));
		public Cndn effective_till = new Cndn("effective_till", typeof(DateTime));
		public Cndn qualification_id = new Cndn("qualification_id", typeof(Int16));
		public ViewQualificationSubjectsSQLSelectQuery()
		{
			SqlObjectName = "ViewQualificationSubjects";
			SQLObjectType = SQLObjectTypes.View;

			lst.Add(qlfctn_subject_id);
			lst.Add(qlfctn_subject_cd);
			lst.Add(qlfctn_subject_nm);
			lst.Add(description);
			lst.Add(effective_from);
			lst.Add(effective_till);
			lst.Add(qualification_id);
		}
	}
	
	
	public class ViewRelationsSQLSelectQuery : SQLSelectQuery
	{
		public Cndn relation_id = new Cndn("relation_id", typeof(Int16));
		public Cndn relation_nm = new Cndn("relation_nm", typeof(String));
		public Cndn txn_ts = new Cndn("txn_ts", typeof(Byte[]));
		public Cndn effective_from = new Cndn("effective_from", typeof(DateTime));
		public Cndn effective_till = new Cndn("effective_till", typeof(DateTime));
		public ViewRelationsSQLSelectQuery()
		{
			SqlObjectName = "ViewRelations";
			SQLObjectType = SQLObjectTypes.View;

			lst.Add(relation_id);
			lst.Add(relation_nm);
			lst.Add(txn_ts);
			lst.Add(effective_from);
			lst.Add(effective_till);
		}
	}
	
	
	public class ViewSatsangCentresSQLSelectQuery : SQLSelectQuery
	{
		public Cndn satsang_centre_id = new Cndn("satsang_centre_id", typeof(Int32));
		public Cndn satsang_centre_cd = new Cndn("satsang_centre_cd", typeof(String));
		public Cndn satsang_centre_nm = new Cndn("satsang_centre_nm", typeof(String));
		public Cndn satsang_centre_type = new Cndn("satsang_centre_type", typeof(String));
		public Cndn address_line_1 = new Cndn("address_line_1", typeof(String));
		public Cndn address_line_2 = new Cndn("address_line_2", typeof(String));
		public Cndn district_or_city_id = new Cndn("district_or_city_id", typeof(Int32));
		public Cndn pin_or_zip_code = new Cndn("pin_or_zip_code", typeof(String));
		public Cndn secretary = new Cndn("secretary", typeof(Int32));
		public Cndn telephones = new Cndn("telephones", typeof(String));
		public Cndn email_addresses = new Cndn("email_addresses", typeof(String));
		public Cndn fax_lines = new Cndn("fax_lines", typeof(String));
		public Cndn txn_ts = new Cndn("txn_ts", typeof(Byte[]));
		public Cndn effective_from = new Cndn("effective_from", typeof(DateTime));
		public Cndn effective_till = new Cndn("effective_till", typeof(DateTime));
		public Cndn file_no = new Cndn("file_no", typeof(String));
		public Cndn area_id = new Cndn("area_id", typeof(Int16));
		public Cndn area_nm = new Cndn("area_nm", typeof(String));
		public Cndn status = new Cndn("status", typeof(String));
		public Cndn zone_id = new Cndn("zone_id", typeof(Byte));
		public ViewSatsangCentresSQLSelectQuery()
		{
			SqlObjectName = "ViewSatsangCentres";
			SQLObjectType = SQLObjectTypes.View;

			lst.Add(satsang_centre_id);
			lst.Add(satsang_centre_cd);
			lst.Add(satsang_centre_nm);
			lst.Add(satsang_centre_type);
			lst.Add(address_line_1);
			lst.Add(address_line_2);
			lst.Add(district_or_city_id);
			lst.Add(pin_or_zip_code);
			lst.Add(secretary);
			lst.Add(telephones);
			lst.Add(email_addresses);
			lst.Add(fax_lines);
			lst.Add(txn_ts);
			lst.Add(effective_from);
			lst.Add(effective_till);
			lst.Add(file_no);
			lst.Add(area_id);
			lst.Add(area_nm);
			lst.Add(status);
			lst.Add(zone_id);
		}
	}
	
	
	public class ViewWorkingUnitSQLSelectQuery : SQLSelectQuery
	{
		public Cndn working_unit_id = new Cndn("working_unit_id", typeof(Int16));
		public Cndn working_unit_cd = new Cndn("working_unit_cd", typeof(String));
		public Cndn working_unit_nm = new Cndn("working_unit_nm", typeof(String));
		public Cndn is_root = new Cndn("is_root", typeof(String));
		public Cndn is_leaf = new Cndn("is_leaf", typeof(String));
		public Cndn society_id = new Cndn("society_id", typeof(Int16));
		public Cndn society_id_display = new Cndn("society_id_display", typeof(String));
		public Cndn is_staff_posted = new Cndn("is_staff_posted", typeof(String));
		public Cndn working_unit_entity_id = new Cndn("working_unit_entity_id", typeof(Int16));
		public Cndn working_unit_entity_id_display = new Cndn("working_unit_entity_id_display", typeof(String));
		public Cndn group_working_unit_id = new Cndn("group_working_unit_id", typeof(Int16));
		public Cndn group_working_unit_id_display = new Cndn("group_working_unit_id_display", typeof(String));
		public Cndn effective_from = new Cndn("effective_from", typeof(DateTime));
		public Cndn effective_till = new Cndn("effective_till", typeof(DateTime));
		public Cndn txn_ts = new Cndn("txn_ts", typeof(Byte[]));
		public ViewWorkingUnitSQLSelectQuery()
		{
			SqlObjectName = "ViewWorkingUnit";
			SQLObjectType = SQLObjectTypes.View;

			lst.Add(working_unit_id);
			lst.Add(working_unit_cd);
			lst.Add(working_unit_nm);
			lst.Add(is_root);
			lst.Add(is_leaf);
			lst.Add(society_id);
			lst.Add(society_id_display);
			lst.Add(is_staff_posted);
			lst.Add(working_unit_entity_id);
			lst.Add(working_unit_entity_id_display);
			lst.Add(group_working_unit_id);
			lst.Add(group_working_unit_id_display);
			lst.Add(effective_from);
			lst.Add(effective_till);
			lst.Add(txn_ts);
		}
	}
	
	
	public class ViewWorkingUnitEntitiesSQLSelectQuery : SQLSelectQuery
	{
		public Cndn entity_id = new Cndn("entity_id", typeof(Int16));
		public Cndn entity_singular_nm = new Cndn("entity_singular_nm", typeof(String));
		public Cndn entity_plural_nm = new Cndn("entity_plural_nm", typeof(String));
		public Cndn effective_from = new Cndn("effective_from", typeof(DateTime));
		public Cndn effective_till = new Cndn("effective_till", typeof(DateTime));
		public ViewWorkingUnitEntitiesSQLSelectQuery()
		{
			SqlObjectName = "ViewWorkingUnitEntities";
			SQLObjectType = SQLObjectTypes.View;

			lst.Add(entity_id);
			lst.Add(entity_singular_nm);
			lst.Add(entity_plural_nm);
			lst.Add(effective_from);
			lst.Add(effective_till);
		}
	}
	
	
	public class Working_unit_entitiesSQLSelectQuery : SQLSelectQuery
	{
		public Cndn entity_id = new Cndn("entity_id", typeof(Int16));
		public Cndn entity_singular_nm = new Cndn("entity_singular_nm", typeof(String));
		public Cndn entity_plural_nm = new Cndn("entity_plural_nm", typeof(String));
		public Cndn effective_from = new Cndn("effective_from", typeof(DateTime));
		public Cndn effective_till = new Cndn("effective_till", typeof(DateTime));
		public Working_unit_entitiesSQLSelectQuery()
		{
			SqlObjectName = "Working_unit_entities";

			lst.Add(entity_id);
			lst.Add(entity_singular_nm);
			lst.Add(entity_plural_nm);
			lst.Add(effective_from);
			lst.Add(effective_till);
		}
	}
	
	
	public class Working_unit_epabx_extensionsSQLSelectQuery : SQLSelectQuery
	{
		public Cndn working_unit_id = new Cndn("working_unit_id", typeof(Int16));
		public Cndn epabx_extension = new Cndn("epabx_extension", typeof(String));
		public Cndn extension_sq = new Cndn("extension_sq", typeof(Int16));
		public Working_unit_epabx_extensionsSQLSelectQuery()
		{
			SqlObjectName = "Working_unit_epabx_extensions";

			lst.Add(working_unit_id);
			lst.Add(epabx_extension);
			lst.Add(extension_sq);
		}
	}
	
	
	public class Working_unit_fax_linesSQLSelectQuery : SQLSelectQuery
	{
		public Cndn working_unit_id = new Cndn("working_unit_id", typeof(Int16));
		public Cndn fax_line = new Cndn("fax_line", typeof(String));
		public Cndn line_sq = new Cndn("line_sq", typeof(Int16));
		public Working_unit_fax_linesSQLSelectQuery()
		{
			SqlObjectName = "Working_unit_fax_lines";

			lst.Add(working_unit_id);
			lst.Add(fax_line);
			lst.Add(line_sq);
		}
	}
	
	
	public class Working_unit_p_and_t_linesSQLSelectQuery : SQLSelectQuery
	{
		public Cndn working_unit_id = new Cndn("working_unit_id", typeof(Int16));
		public Cndn p_and_t_line = new Cndn("p_and_t_line", typeof(String));
		public Cndn line_sq = new Cndn("line_sq", typeof(Int16));
		public Working_unit_p_and_t_linesSQLSelectQuery()
		{
			SqlObjectName = "Working_unit_p_and_t_lines";

			lst.Add(working_unit_id);
			lst.Add(p_and_t_line);
			lst.Add(line_sq);
		}
	}
	
	
	public class Working_unit_responsibilitiesSQLSelectQuery : SQLSelectQuery
	{
		public Cndn working_unit_id = new Cndn("working_unit_id", typeof(Int16));
		public Cndn sewadar_id = new Cndn("sewadar_id", typeof(Int32));
		public Cndn responsibility_type_id = new Cndn("responsibility_type_id", typeof(Int16));
		public Cndn responsibility_sq = new Cndn("responsibility_sq", typeof(Int16));
		public Working_unit_responsibilitiesSQLSelectQuery()
		{
			SqlObjectName = "Working_unit_responsibilities";

			lst.Add(working_unit_id);
			lst.Add(sewadar_id);
			lst.Add(responsibility_type_id);
			lst.Add(responsibility_sq);
		}
	}
	
	
	public class Working_unit_sanctioned_strengthSQLSelectQuery : SQLSelectQuery
	{
		public Cndn working_unit_id = new Cndn("working_unit_id", typeof(Int16));
		public Cndn honorary_sewadar_cnt = new Cndn("honorary_sewadar_cnt", typeof(Int16));
		public Cndn parshadi_sewadar_cnt = new Cndn("parshadi_sewadar_cnt", typeof(Int16));
		public Working_unit_sanctioned_strengthSQLSelectQuery()
		{
			SqlObjectName = "Working_unit_sanctioned_strength";

			lst.Add(working_unit_id);
			lst.Add(honorary_sewadar_cnt);
			lst.Add(parshadi_sewadar_cnt);
		}
	}
	
	
	public class Working_unitsSQLSelectQuery : SQLSelectQuery
	{
		public Cndn working_unit_id = new Cndn("working_unit_id", typeof(Int16));
		public Cndn working_unit_cd = new Cndn("working_unit_cd", typeof(String));
		public Cndn working_unit_nm = new Cndn("working_unit_nm", typeof(String));
		public Cndn is_root = new Cndn("is_root", typeof(String));
		public Cndn is_leaf = new Cndn("is_leaf", typeof(String));
		public Cndn society_id = new Cndn("society_id", typeof(Int16));
		public Cndn is_staff_posted = new Cndn("is_staff_posted", typeof(String));
		public Cndn working_unit_entity_id = new Cndn("working_unit_entity_id", typeof(Int16));
		public Cndn group_working_unit_id = new Cndn("group_working_unit_id", typeof(Int16));
		public Cndn effective_from = new Cndn("effective_from", typeof(DateTime));
		public Cndn effective_till = new Cndn("effective_till", typeof(DateTime));
		public Cndn txn_ts = new Cndn("txn_ts", typeof(Byte[]));
		public Working_unitsSQLSelectQuery()
		{
			SqlObjectName = "Working_units";

			lst.Add(working_unit_id);
			lst.Add(working_unit_cd);
			lst.Add(working_unit_nm);
			lst.Add(is_root);
			lst.Add(is_leaf);
			lst.Add(society_id);
			lst.Add(is_staff_posted);
			lst.Add(working_unit_entity_id);
			lst.Add(group_working_unit_id);
			lst.Add(effective_from);
			lst.Add(effective_till);
			lst.Add(txn_ts);
		}
	}
}
