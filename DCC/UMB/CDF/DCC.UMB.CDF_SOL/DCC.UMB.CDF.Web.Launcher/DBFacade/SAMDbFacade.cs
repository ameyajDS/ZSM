///This code is auto generated by CDF.
///Please don't alter the contents of this file

using System.Collections.Generic;
using System;
using System.Data;
using System.Data.SqlClient;
using DCC.UMB.CDF.DB;
using System.Text;
using System.Linq;
namespace DCC.DBFacade
{
    public class SAMDbFacade
    {
        private List<string> dbTasks = new List<string>();
        public IDbManager ObjDBManager = null;
        public DCCSqlDataReader ExecuteSelectQuery(SQLSelectQuery sqlSelectQuery) { return ObjDBManager.ExecuteReaderSQL(sqlSelectQuery.GetSQLSelectQuery()); }
        public void BeginTrans() { ObjDBManager.BeginTrans(); }
        public void CommitTrans() { ObjDBManager.CommitTrans(); }
        public void RollbackTrans() { ObjDBManager.RollbackTrans(); }
        public void AddDbTask(string task) { this.dbTasks.Add(task); }
        public void AddDbTasks(List<string> tasks) { this.dbTasks.AddRange(tasks); }
        public void ClearDbTasks() { this.dbTasks.Clear(); }
        ParameterDirection IN = ParameterDirection.Input;
        ParameterDirection OUT = ParameterDirection.Output;
        SqlDbType BIGINT = SqlDbType.BigInt, BINARY = SqlDbType.Binary, BIT = SqlDbType.Bit, CHAR = SqlDbType.Char, DATE = SqlDbType.Date,
        DATETIME = SqlDbType.DateTime, DATETIME2 = SqlDbType.DateTime2, DATETIMEOFFSET = SqlDbType.DateTimeOffset, DECIMAL = SqlDbType.Decimal,
        FLOAT = SqlDbType.Float, IMAGE = SqlDbType.Image, INT = SqlDbType.Int, MONEY = SqlDbType.Money, NCHAR = SqlDbType.NChar, NTEXT = SqlDbType.NText,
        NVARCHAR = SqlDbType.NVarChar, REAL = SqlDbType.Real, SMALLDATETIME = SqlDbType.SmallDateTime, SMALLINT = SqlDbType.SmallInt, SMALLMONEY = SqlDbType.SmallMoney,
        STRUCTURED = SqlDbType.Structured, TEXT = SqlDbType.Text, TIME = SqlDbType.Time, TIMESTAMP = SqlDbType.Timestamp, TINYINT = SqlDbType.TinyInt,
        UDT = SqlDbType.Udt, UNIQUEIDENTIFIER = SqlDbType.UniqueIdentifier, VARBINARY = SqlDbType.VarBinary, VARCHAR = SqlDbType.VarChar,
        VARIANT = SqlDbType.Variant, XML = SqlDbType.Xml;
        private void csp(string parameterName, object paramValue, SqlDbType parameterType, ParameterDirection direction, List<SqlParameter> p) { p.Add(ObjDBManager.CreateSqlParameter(parameterName, paramValue, parameterType, direction)); }
        private string gps(string procName, List<SqlParameter> parms) { return ObjDBManager.GetPrintableSQLString(procName, parms); }
        private DataSet esp(string procName, List<SqlParameter> parms) { return ObjDBManager.ExecuteStoredProc(procName, parms); }
        public SAMDbFacade(string applicationID) { this.ObjDBManager = DCC.UMB.CDF.Utils.UtilityManager.CreateDBManagerInstance(applicationID); }
        public DataSet ExecuteDbTasks()
        {
            try
            {
                StringBuilder sb = new StringBuilder();
                if (this.dbTasks.Count == 0) { this.AddDbTask("select 'No tasks were defined'"); }
                foreach (string task in this.dbTasks)
                {
                    sb.Append(task + ";");
                    sb.AppendLine();
                    sb.AppendLine();
                }
                return ObjDBManager.ExecuteSQL(sb.ToString());
            }
            finally
            {
                this.dbTasks.Clear();
            }
        }

        private List<SqlParameter> ChangeIdentity_Params(String p_package_id,
                                                                    String p_user_role_id)
        {
            List<SqlParameter> p = new List<SqlParameter>();
            csp("p_package_id", p_package_id, CHAR, IN, p);
            csp("p_user_role_id", p_user_role_id, VARCHAR, IN, p);
            return p;
        }

        public DataSet ChangeIdentity(String p_package_id,
                                                    String p_user_role_id)
        {
            List<SqlParameter> prms = ChangeIdentity_Params(p_package_id, p_user_role_id);
            DataSet dset = esp("ChangeIdentity", prms);

            return dset;
        }

        public string ChangeIdentityAsTask(String p_package_id,
                                                        String p_user_role_id)
        {
            List<SqlParameter> prms = ChangeIdentity_Params(p_package_id, p_user_role_id);
            return gps("ChangeIdentity", prms);

        }



        private List<SqlParameter> ClearUserSessions_Params(Int32? p_user_no)
        {
            List<SqlParameter> p = new List<SqlParameter>();
            csp("p_user_no", p_user_no, INT, IN, p);
            return p;
        }

        public DataSet ClearUserSessions(Int32? p_user_no)
        {
            List<SqlParameter> prms = ClearUserSessions_Params(p_user_no);
            DataSet dset = esp("ClearUserSessions", prms);

            return dset;
        }

        public string ClearUserSessionsAsTask(Int32? p_user_no)
        {
            List<SqlParameter> prms = ClearUserSessions_Params(p_user_no);
            return gps("ClearUserSessions", prms);

        }



        private List<SqlParameter> CloseSession_Params(Int32? p_user_no,
                                                                    String p_application_id,
                                                                    Int32? p_session_id)
        {
            List<SqlParameter> p = new List<SqlParameter>();
            csp("p_user_no", p_user_no, INT, IN, p);
            csp("p_application_id", p_application_id, CHAR, IN, p);
            csp("p_session_id", p_session_id, INT, IN, p);
            return p;
        }

        public DataSet CloseSession(Int32? p_user_no,
                                                String p_application_id,
                                                Int32? p_session_id)
        {
            List<SqlParameter> prms = CloseSession_Params(p_user_no, p_application_id, p_session_id);
            DataSet dset = esp("CloseSession", prms);

            return dset;
        }

        public string CloseSessionAsTask(Int32? p_user_no,
                                                    String p_application_id,
                                                    Int32? p_session_id)
        {
            List<SqlParameter> prms = CloseSession_Params(p_user_no, p_application_id, p_session_id);
            return gps("CloseSession", prms);

        }



        private List<SqlParameter> ComputeHousingLocationDisplayText_Params(Int32? inputId)
        {
            List<SqlParameter> p = new List<SqlParameter>();
            csp("inputId", inputId, INT, IN, p);
            return p;
        }

        public System.String ComputeHousingLocationDisplayText(Int32? inputId)
        {
            List<SqlParameter> prms = ComputeHousingLocationDisplayText_Params(inputId);
            string commaSeparatedParameters = ObjDBManager.GetCommaSeparatedParameters(prms);
            Object obj = ObjDBManager.ExecuteScalar("SELECT dbo.ComputeHousingLocationDisplayText(" + commaSeparatedParameters + ")");

            return obj == null || obj == DBNull.Value ? null : (System.String)obj;
        }



        private List<SqlParameter> CreateRole_Params(String p_package_id,
                                                                String p_user_role_id,
                                                                String p_user_role_nm,
                                                                String p_executable_nm)
        {
            List<SqlParameter> p = new List<SqlParameter>();
            csp("p_package_id", p_package_id, CHAR, IN, p);
            csp("p_user_role_id", p_user_role_id, VARCHAR, IN, p);
            csp("p_user_role_nm", p_user_role_nm, VARCHAR, IN, p);
            csp("p_executable_nm", p_executable_nm, VARCHAR, IN, p);
            return p;
        }

        public DataSet CreateRole(String p_package_id,
                                                String p_user_role_id,
                                                String p_user_role_nm,
                                                String p_executable_nm)
        {
            List<SqlParameter> prms = CreateRole_Params(p_package_id, p_user_role_id, p_user_role_nm, p_executable_nm);
            DataSet dset = esp("CreateRole", prms);

            return dset;
        }

        public string CreateRoleAsTask(String p_package_id,
                                                    String p_user_role_id,
                                                    String p_user_role_nm,
                                                    String p_executable_nm)
        {
            List<SqlParameter> prms = CreateRole_Params(p_package_id, p_user_role_id, p_user_role_nm, p_executable_nm);
            return gps("CreateRole", prms);

        }



        private List<SqlParameter> CreateUser_Params(String p_user_id,
                                                                String p_user_nm,
                                                                String p_password,
                                                                String p_application_id,
                                                                String p_user_role_id,
                                                                ref Int32 p_user_no)
        {
            List<SqlParameter> p = new List<SqlParameter>();
            csp("p_user_id", p_user_id, VARCHAR, IN, p);
            csp("p_user_nm", p_user_nm, VARCHAR, IN, p);
            csp("p_password", p_password, VARCHAR, IN, p);
            csp("p_application_id", p_application_id, CHAR, IN, p);
            csp("p_user_role_id", p_user_role_id, VARCHAR, IN, p);
            csp("p_user_no", p_user_no, INT, OUT, p);
            return p;
        }

        public DataSet CreateUser(String p_user_id,
                                                String p_user_nm,
                                                String p_password,
                                                String p_application_id,
                                                String p_user_role_id,
                                                ref Int32 p_user_no)
        {
            List<SqlParameter> prms = CreateUser_Params(p_user_id, p_user_nm, p_password, p_application_id, p_user_role_id, ref p_user_no);
            DataSet dset = esp("CreateUser", prms);
            p_user_no = (System.Int32)prms.FirstOrDefault(p => p.ParameterName == "p_user_no").Value;

            return dset;
        }

        public string CreateUserAsTask(String p_user_id,
                                                    String p_user_nm,
                                                    String p_password,
                                                    String p_application_id,
                                                    String p_user_role_id,
                                                    ref Int32 p_user_no)
        {
            List<SqlParameter> prms = CreateUser_Params(p_user_id, p_user_nm, p_password, p_application_id, p_user_role_id, ref p_user_no);
            return gps("CreateUser", prms);

        }



        private List<SqlParameter> DeleteUser_Params(String p_user_id)
        {
            List<SqlParameter> p = new List<SqlParameter>();
            csp("p_user_id", p_user_id, VARCHAR, IN, p);
            return p;
        }

        public DataSet DeleteUser(String p_user_id)
        {
            List<SqlParameter> prms = DeleteUser_Params(p_user_id);
            DataSet dset = esp("DeleteUser", prms);

            return dset;
        }

        public string DeleteUserAsTask(String p_user_id)
        {
            List<SqlParameter> prms = DeleteUser_Params(p_user_id);
            return gps("DeleteUser", prms);

        }



        private List<SqlParameter> DelUserRoleGrantedAction_Params(String package_id,
                                                                                String user_role_id,
                                                                                String screen_id,
                                                                                String action_id)
        {
            List<SqlParameter> p = new List<SqlParameter>();
            csp("package_id", package_id, CHAR, IN, p);
            csp("user_role_id", user_role_id, VARCHAR, IN, p);
            csp("screen_id", screen_id, CHAR, IN, p);
            csp("action_id", action_id, VARCHAR, IN, p);
            return p;
        }

        public DataSet DelUserRoleGrantedAction(String package_id,
                                                            String user_role_id,
                                                            String screen_id,
                                                            String action_id)
        {
            List<SqlParameter> prms = DelUserRoleGrantedAction_Params(package_id, user_role_id, screen_id, action_id);
            DataSet dset = esp("DelUserRoleGrantedAction", prms);

            return dset;
        }

        public string DelUserRoleGrantedActionAsTask(String package_id,
                                                                String user_role_id,
                                                                String screen_id,
                                                                String action_id)
        {
            List<SqlParameter> prms = DelUserRoleGrantedAction_Params(package_id, user_role_id, screen_id, action_id);
            return gps("DelUserRoleGrantedAction", prms);

        }



        private List<SqlParameter> DelUserRolePrivilege_Params(String package_id,
                                                                            String user_role_id,
                                                                            String screen_id)
        {
            List<SqlParameter> p = new List<SqlParameter>();
            csp("package_id", package_id, CHAR, IN, p);
            csp("user_role_id", user_role_id, VARCHAR, IN, p);
            csp("screen_id", screen_id, CHAR, IN, p);
            return p;
        }

        public DataSet DelUserRolePrivilege(String package_id,
                                                        String user_role_id,
                                                        String screen_id)
        {
            List<SqlParameter> prms = DelUserRolePrivilege_Params(package_id, user_role_id, screen_id);
            DataSet dset = esp("DelUserRolePrivilege", prms);

            return dset;
        }

        public string DelUserRolePrivilegeAsTask(String package_id,
                                                            String user_role_id,
                                                            String screen_id)
        {
            List<SqlParameter> prms = DelUserRolePrivilege_Params(package_id, user_role_id, screen_id);
            return gps("DelUserRolePrivilege", prms);

        }



        private List<SqlParameter> DropRole_Params(String p_package_id,
                                                                String p_user_role_id)
        {
            List<SqlParameter> p = new List<SqlParameter>();
            csp("p_package_id", p_package_id, CHAR, IN, p);
            csp("p_user_role_id", p_user_role_id, VARCHAR, IN, p);
            return p;
        }

        public DataSet DropRole(String p_package_id,
                                            String p_user_role_id)
        {
            List<SqlParameter> prms = DropRole_Params(p_package_id, p_user_role_id);
            DataSet dset = esp("DropRole", prms);

            return dset;
        }

        public string DropRoleAsTask(String p_package_id,
                                                String p_user_role_id)
        {
            List<SqlParameter> prms = DropRole_Params(p_package_id, p_user_role_id);
            return gps("DropRole", prms);

        }



        private List<SqlParameter> GetActiveSessions_Params(Int32? p_user_no,
                                                                        ref Int32 p_sessions_cnt,
                                                                        ref String p_application_id)
        {
            List<SqlParameter> p = new List<SqlParameter>();
            csp("p_user_no", p_user_no, INT, IN, p);
            csp("p_sessions_cnt", p_sessions_cnt, INT, OUT, p);
            csp("p_application_id", p_application_id, CHAR, OUT, p);
            return p;
        }

        public DataSet GetActiveSessions(Int32? p_user_no,
                                                    ref Int32 p_sessions_cnt,
                                                    ref String p_application_id)
        {
            List<SqlParameter> prms = GetActiveSessions_Params(p_user_no, ref p_sessions_cnt, ref p_application_id);
            DataSet dset = esp("GetActiveSessions", prms);
            p_sessions_cnt = (System.Int32)prms.FirstOrDefault(p => p.ParameterName == "p_sessions_cnt").Value;
            p_application_id = (System.String)prms.FirstOrDefault(p => p.ParameterName == "p_application_id").Value;

            return dset;
        }

        public string GetActiveSessionsAsTask(Int32? p_user_no,
                                                            ref Int32 p_sessions_cnt,
                                                            ref String p_application_id)
        {
            List<SqlParameter> prms = GetActiveSessions_Params(p_user_no, ref p_sessions_cnt, ref p_application_id);
            return gps("GetActiveSessions", prms);

        }



        private List<SqlParameter> GetApplicationServerDatabase_Params(String p_application_id)
        {
            List<SqlParameter> p = new List<SqlParameter>();
            csp("p_application_id", p_application_id, CHAR, IN, p);
            return p;
        }

        public DataSet GetApplicationServerDatabase(String p_application_id)
        {
            List<SqlParameter> prms = GetApplicationServerDatabase_Params(p_application_id);
            DataSet dset = esp("GetApplicationServerDatabase", prms);

            return dset;
        }

        public string GetApplicationServerDatabaseAsTask(String p_application_id)
        {
            List<SqlParameter> prms = GetApplicationServerDatabase_Params(p_application_id);
            return gps("GetApplicationServerDatabase", prms);

        }



        private List<SqlParameter> GetApplicationUserRoles_Params(String p_package_id,
                                                                                String p_application_id)
        {
            List<SqlParameter> p = new List<SqlParameter>();
            csp("p_package_id", p_package_id, VARCHAR, IN, p);
            csp("p_application_id", p_application_id, VARCHAR, IN, p);
            return p;
        }

        public DataSet GetApplicationUserRoles(String p_package_id,
                                                            String p_application_id)
        {
            List<SqlParameter> prms = GetApplicationUserRoles_Params(p_package_id, p_application_id);
            DataSet dset = esp("GetApplicationUserRoles", prms);

            return dset;
        }

        public string GetApplicationUserRolesAsTask(String p_package_id,
                                                                String p_application_id)
        {
            List<SqlParameter> prms = GetApplicationUserRoles_Params(p_package_id, p_application_id);
            return gps("GetApplicationUserRoles", prms);

        }



        private List<SqlParameter> GetAuditInformationDetails_Params(String p_package_id,
                                                                                String p_application_id)
        {
            List<SqlParameter> p = new List<SqlParameter>();
            csp("p_package_id", p_package_id, CHAR, IN, p);
            csp("p_application_id", p_application_id, CHAR, IN, p);
            return p;
        }

        public DataSet GetAuditInformationDetails(String p_package_id,
                                                                String p_application_id)
        {
            List<SqlParameter> prms = GetAuditInformationDetails_Params(p_package_id, p_application_id);
            DataSet dset = esp("GetAuditInformationDetails", prms);

            return dset;
        }

        public string GetAuditInformationDetailsAsTask(String p_package_id,
                                                                    String p_application_id)
        {
            List<SqlParameter> prms = GetAuditInformationDetails_Params(p_package_id, p_application_id);
            return gps("GetAuditInformationDetails", prms);

        }



        private List<SqlParameter> GetIdentity_Params(ref String p_user_role_identity,
                                                                    ref String p_encrypted_id)
        {
            List<SqlParameter> p = new List<SqlParameter>();
            csp("p_user_role_identity", p_user_role_identity, VARCHAR, OUT, p);
            csp("p_encrypted_id", p_encrypted_id, VARCHAR, OUT, p);
            return p;
        }

        public DataSet GetIdentity(ref String p_user_role_identity,
                                                ref String p_encrypted_id)
        {
            List<SqlParameter> prms = GetIdentity_Params(ref p_user_role_identity, ref p_encrypted_id);
            DataSet dset = esp("GetIdentity", prms);
            p_user_role_identity = (System.String)prms.FirstOrDefault(p => p.ParameterName == "p_user_role_identity").Value;
            p_encrypted_id = (System.String)prms.FirstOrDefault(p => p.ParameterName == "p_encrypted_id").Value;

            return dset;
        }

        public string GetIdentityAsTask(ref String p_user_role_identity,
                                                    ref String p_encrypted_id)
        {
            List<SqlParameter> prms = GetIdentity_Params(ref p_user_role_identity, ref p_encrypted_id);
            return gps("GetIdentity", prms);

        }



        private List<SqlParameter> GetIntIds_Params(String idsXml,
                                                                Int32? dummy_value_if_empty_xml)
        {
            List<SqlParameter> p = new List<SqlParameter>();
            csp("idsXml", idsXml, VARCHAR, IN, p);
            csp("dummy_value_if_empty_xml", dummy_value_if_empty_xml, INT, IN, p);
            return p;
        }

        public DataSet GetIntIds(String idsXml,
                                            Int32? dummy_value_if_empty_xml)
        {
            List<SqlParameter> prms = GetIntIds_Params(idsXml, dummy_value_if_empty_xml);
            DataSet dset = esp("GetIntIds", prms);

            return dset;
        }

        public string GetIntIdsAsTask(String idsXml,
                                                    Int32? dummy_value_if_empty_xml)
        {
            List<SqlParameter> prms = GetIntIds_Params(idsXml, dummy_value_if_empty_xml);
            return gps("GetIntIds", prms);

        }



        private List<SqlParameter> GetMessageDetails_Params(Int32? p_session_id)
        {
            List<SqlParameter> p = new List<SqlParameter>();
            csp("p_session_id", p_session_id, INT, IN, p);
            return p;
        }

        public DataSet GetMessageDetails(Int32? p_session_id)
        {
            List<SqlParameter> prms = GetMessageDetails_Params(p_session_id);
            DataSet dset = esp("GetMessageDetails", prms);

            return dset;
        }

        public string GetMessageDetailsAsTask(Int32? p_session_id)
        {
            List<SqlParameter> prms = GetMessageDetails_Params(p_session_id);
            return gps("GetMessageDetails", prms);

        }



        private List<SqlParameter> GetOtherMachineSessions_Params(Int32? p_user_no,
                                                                                String p_current_machine_nm,
                                                                                ref Int32 p_sessions_cnt,
                                                                                ref String p_application_id,
                                                                                ref String p_machine_nm)
        {
            List<SqlParameter> p = new List<SqlParameter>();
            csp("p_user_no", p_user_no, INT, IN, p);
            csp("p_current_machine_nm", p_current_machine_nm, VARCHAR, IN, p);
            csp("p_sessions_cnt", p_sessions_cnt, INT, OUT, p);
            csp("p_application_id", p_application_id, CHAR, OUT, p);
            csp("p_machine_nm", p_machine_nm, VARCHAR, OUT, p);
            return p;
        }

        public DataSet GetOtherMachineSessions(Int32? p_user_no,
                                                            String p_current_machine_nm,
                                                            ref Int32 p_sessions_cnt,
                                                            ref String p_application_id,
                                                            ref String p_machine_nm)
        {
            List<SqlParameter> prms = GetOtherMachineSessions_Params(p_user_no, p_current_machine_nm, ref p_sessions_cnt, ref p_application_id, ref p_machine_nm);
            DataSet dset = esp("GetOtherMachineSessions", prms);
            p_sessions_cnt = (System.Int32)prms.FirstOrDefault(p => p.ParameterName == "p_sessions_cnt").Value;
            p_application_id = (System.String)prms.FirstOrDefault(p => p.ParameterName == "p_application_id").Value;
            p_machine_nm = (System.String)prms.FirstOrDefault(p => p.ParameterName == "p_machine_nm").Value;

            return dset;
        }

        public string GetOtherMachineSessionsAsTask(Int32? p_user_no,
                                                                String p_current_machine_nm,
                                                                ref Int32 p_sessions_cnt,
                                                                ref String p_application_id,
                                                                ref String p_machine_nm)
        {
            List<SqlParameter> prms = GetOtherMachineSessions_Params(p_user_no, p_current_machine_nm, ref p_sessions_cnt, ref p_application_id, ref p_machine_nm);
            return gps("GetOtherMachineSessions", prms);

        }



        private List<SqlParameter> GetPackageDatabases_Params(String p_package_id)
        {
            List<SqlParameter> p = new List<SqlParameter>();
            csp("p_package_id", p_package_id, CHAR, IN, p);
            return p;
        }

        public DataSet GetPackageDatabases(String p_package_id)
        {
            List<SqlParameter> prms = GetPackageDatabases_Params(p_package_id);
            DataSet dset = esp("GetPackageDatabases", prms);

            return dset;
        }

        public string GetPackageDatabasesAsTask(String p_package_id)
        {
            List<SqlParameter> prms = GetPackageDatabases_Params(p_package_id);
            return gps("GetPackageDatabases", prms);

        }



        private List<SqlParameter> GetPackageExecutables_Params(String p_package_id)
        {
            List<SqlParameter> p = new List<SqlParameter>();
            csp("p_package_id", p_package_id, CHAR, IN, p);
            return p;
        }

        public DataSet GetPackageExecutables(String p_package_id)
        {
            List<SqlParameter> prms = GetPackageExecutables_Params(p_package_id);
            DataSet dset = esp("GetPackageExecutables", prms);

            return dset;
        }

        public string GetPackageExecutablesAsTask(String p_package_id)
        {
            List<SqlParameter> prms = GetPackageExecutables_Params(p_package_id);
            return gps("GetPackageExecutables", prms);

        }



        private List<SqlParameter> GetPackages_Params(String p_package_id,
                                                                    String p_package_nm)
        {
            List<SqlParameter> p = new List<SqlParameter>();
            csp("p_package_id", p_package_id, VARCHAR, IN, p);
            csp("p_package_nm", p_package_nm, VARCHAR, IN, p);
            return p;
        }

        public DataSet GetPackages(String p_package_id,
                                                String p_package_nm)
        {
            List<SqlParameter> prms = GetPackages_Params(p_package_id, p_package_nm);
            DataSet dset = esp("GetPackages", prms);

            return dset;
        }

        public string GetPackagesAsTask(String p_package_id,
                                                    String p_package_nm)
        {
            List<SqlParameter> prms = GetPackages_Params(p_package_id, p_package_nm);
            return gps("GetPackages", prms);

        }



        private List<SqlParameter> GetPackageUserRoles_Params(String p_package_id)
        {
            List<SqlParameter> p = new List<SqlParameter>();
            csp("p_package_id", p_package_id, VARCHAR, IN, p);
            return p;
        }

        public DataSet GetPackageUserRoles(String p_package_id)
        {
            List<SqlParameter> prms = GetPackageUserRoles_Params(p_package_id);
            DataSet dset = esp("GetPackageUserRoles", prms);

            return dset;
        }

        public string GetPackageUserRolesAsTask(String p_package_id)
        {
            List<SqlParameter> prms = GetPackageUserRoles_Params(p_package_id);
            return gps("GetPackageUserRoles", prms);

        }



        private List<SqlParameter> GetTextIds_Params(String idsXml,
                                                                String dummy_value_if_empty_xml)
        {
            List<SqlParameter> p = new List<SqlParameter>();
            csp("idsXml", idsXml, VARCHAR, IN, p);
            csp("dummy_value_if_empty_xml", dummy_value_if_empty_xml, VARCHAR, IN, p);
            return p;
        }

        public DataSet GetTextIds(String idsXml,
                                                String dummy_value_if_empty_xml)
        {
            List<SqlParameter> prms = GetTextIds_Params(idsXml, dummy_value_if_empty_xml);
            DataSet dset = esp("GetTextIds", prms);

            return dset;
        }

        public string GetTextIdsAsTask(String idsXml,
                                                    String dummy_value_if_empty_xml)
        {
            List<SqlParameter> prms = GetTextIds_Params(idsXml, dummy_value_if_empty_xml);
            return gps("GetTextIds", prms);

        }



        private List<SqlParameter> GetUserDetails_Params(String p_user_id)
        {
            List<SqlParameter> p = new List<SqlParameter>();
            csp("p_user_id", p_user_id, VARCHAR, IN, p);
            return p;
        }

        public DataSet GetUserDetails(String p_user_id)
        {
            List<SqlParameter> prms = GetUserDetails_Params(p_user_id);
            DataSet dset = esp("GetUserDetails", prms);

            return dset;
        }

        public string GetUserDetailsAsTask(String p_user_id)
        {
            List<SqlParameter> prms = GetUserDetails_Params(p_user_id);
            return gps("GetUserDetails", prms);

        }



        private List<SqlParameter> GetUserRoleIdentity_Params(String p_user_role_id,
                                                                            ref String p_user_role_identity)
        {
            List<SqlParameter> p = new List<SqlParameter>();
            csp("p_user_role_id", p_user_role_id, VARCHAR, IN, p);
            csp("p_user_role_identity", p_user_role_identity, VARCHAR, OUT, p);
            return p;
        }

        public DataSet GetUserRoleIdentity(String p_user_role_id,
                                                        ref String p_user_role_identity)
        {
            List<SqlParameter> prms = GetUserRoleIdentity_Params(p_user_role_id, ref p_user_role_identity);
            DataSet dset = esp("GetUserRoleIdentity", prms);
            p_user_role_identity = (System.String)prms.FirstOrDefault(p => p.ParameterName == "p_user_role_identity").Value;

            return dset;
        }

        public string GetUserRoleIdentityAsTask(String p_user_role_id,
                                                            ref String p_user_role_identity)
        {
            List<SqlParameter> prms = GetUserRoleIdentity_Params(p_user_role_id, ref p_user_role_identity);
            return gps("GetUserRoleIdentity", prms);

        }



        private List<SqlParameter> IdentifyUserRole_Params(String p_package_id,
                                                                        String p_user_role_id,
                                                                        ref String p_user_role_identity)
        {
            List<SqlParameter> p = new List<SqlParameter>();
            csp("p_package_id", p_package_id, CHAR, IN, p);
            csp("p_user_role_id", p_user_role_id, VARCHAR, IN, p);
            csp("p_user_role_identity", p_user_role_identity, VARCHAR, OUT, p);
            return p;
        }

        public DataSet IdentifyUserRole(String p_package_id,
                                                    String p_user_role_id,
                                                    ref String p_user_role_identity)
        {
            List<SqlParameter> prms = IdentifyUserRole_Params(p_package_id, p_user_role_id, ref p_user_role_identity);
            DataSet dset = esp("IdentifyUserRole", prms);
            p_user_role_identity = (System.String)prms.FirstOrDefault(p => p.ParameterName == "p_user_role_identity").Value;

            return dset;
        }

        public string IdentifyUserRoleAsTask(String p_package_id,
                                                        String p_user_role_id,
                                                        ref String p_user_role_identity)
        {
            List<SqlParameter> prms = IdentifyUserRole_Params(p_package_id, p_user_role_id, ref p_user_role_identity);
            return gps("IdentifyUserRole", prms);

        }



        private List<SqlParameter> InitialiseSession_Params(Int32? p_user_no,
                                                                        String p_machine_nm,
                                                                        String p_application_id,
                                                                        String p_user_role_id,
                                                                        ref String p_is_query_session,
                                                                        ref Int32 p_session_id)
        {
            List<SqlParameter> p = new List<SqlParameter>();
            csp("p_user_no", p_user_no, INT, IN, p);
            csp("p_machine_nm", p_machine_nm, VARCHAR, IN, p);
            csp("p_application_id", p_application_id, CHAR, IN, p);
            csp("p_user_role_id", p_user_role_id, VARCHAR, IN, p);
            csp("p_is_query_session", p_is_query_session, CHAR, OUT, p);
            csp("p_session_id", p_session_id, INT, OUT, p);
            return p;
        }

        public DataSet InitialiseSession(Int32? p_user_no,
                                                    String p_machine_nm,
                                                    String p_application_id,
                                                    String p_user_role_id,
                                                    ref String p_is_query_session,
                                                    ref Int32 p_session_id)
        {
            List<SqlParameter> prms = InitialiseSession_Params(p_user_no, p_machine_nm, p_application_id, p_user_role_id, ref p_is_query_session, ref p_session_id);
            DataSet dset = esp("InitialiseSession", prms);
            p_is_query_session = (System.String)prms.FirstOrDefault(p => p.ParameterName == "p_is_query_session").Value;
            p_session_id = (System.Int32)prms.FirstOrDefault(p => p.ParameterName == "p_session_id").Value;

            return dset;
        }

        public string InitialiseSessionAsTask(Int32? p_user_no,
                                                            String p_machine_nm,
                                                            String p_application_id,
                                                            String p_user_role_id,
                                                            ref String p_is_query_session,
                                                            ref Int32 p_session_id)
        {
            List<SqlParameter> prms = InitialiseSession_Params(p_user_no, p_machine_nm, p_application_id, p_user_role_id, ref p_is_query_session, ref p_session_id);
            return gps("InitialiseSession", prms);

        }



        private List<SqlParameter> InsApplication_Params(String application_id,
                                                                    String application_nm,
                                                                    String package_id,
                                                                    String database_nm,
                                                                    DateTime? implementation_dt,
                                                                    String error_log_level,
                                                                    Byte? log_file_size_in_mb,
                                                                    String report_title,
                                                                    String report_footer,
                                                                    String path_1,
                                                                    String path_2,
                                                                    String path_3,
                                                                    String argument_1,
                                                                    String argument_2,
                                                                    String argument_3,
                                                                    String argument_4,
                                                                    String argument_5)
        {
            List<SqlParameter> p = new List<SqlParameter>();
            csp("application_id", application_id, CHAR, IN, p);
            csp("application_nm", application_nm, VARCHAR, IN, p);
            csp("package_id", package_id, CHAR, IN, p);
            csp("database_nm", database_nm, VARCHAR, IN, p);
            csp("implementation_dt", implementation_dt, SMALLDATETIME, IN, p);
            csp("error_log_level", error_log_level, VARCHAR, IN, p);
            csp("log_file_size_in_mb", log_file_size_in_mb, TINYINT, IN, p);
            csp("report_title", report_title, VARCHAR, IN, p);
            csp("report_footer", report_footer, VARCHAR, IN, p);
            csp("path_1", path_1, VARCHAR, IN, p);
            csp("path_2", path_2, VARCHAR, IN, p);
            csp("path_3", path_3, VARCHAR, IN, p);
            csp("argument_1", argument_1, VARCHAR, IN, p);
            csp("argument_2", argument_2, VARCHAR, IN, p);
            csp("argument_3", argument_3, VARCHAR, IN, p);
            csp("argument_4", argument_4, VARCHAR, IN, p);
            csp("argument_5", argument_5, VARCHAR, IN, p);
            return p;
        }

        public DataSet InsApplication(String application_id,
                                                    String application_nm,
                                                    String package_id,
                                                    String database_nm,
                                                    DateTime? implementation_dt,
                                                    String error_log_level,
                                                    Byte? log_file_size_in_mb,
                                                    String report_title,
                                                    String report_footer,
                                                    String path_1,
                                                    String path_2,
                                                    String path_3,
                                                    String argument_1,
                                                    String argument_2,
                                                    String argument_3,
                                                    String argument_4,
                                                    String argument_5)
        {
            List<SqlParameter> prms = InsApplication_Params(application_id, application_nm, package_id, database_nm, implementation_dt, error_log_level, log_file_size_in_mb, report_title, report_footer, path_1, path_2, path_3, argument_1, argument_2, argument_3, argument_4, argument_5);
            DataSet dset = esp("InsApplication", prms);

            return dset;
        }

        public string InsApplicationAsTask(String application_id,
                                                        String application_nm,
                                                        String package_id,
                                                        String database_nm,
                                                        DateTime? implementation_dt,
                                                        String error_log_level,
                                                        Byte? log_file_size_in_mb,
                                                        String report_title,
                                                        String report_footer,
                                                        String path_1,
                                                        String path_2,
                                                        String path_3,
                                                        String argument_1,
                                                        String argument_2,
                                                        String argument_3,
                                                        String argument_4,
                                                        String argument_5)
        {
            List<SqlParameter> prms = InsApplication_Params(application_id, application_nm, package_id, database_nm, implementation_dt, error_log_level, log_file_size_in_mb, report_title, report_footer, path_1, path_2, path_3, argument_1, argument_2, argument_3, argument_4, argument_5);
            return gps("InsApplication", prms);

        }



        private List<SqlParameter> InsApplicationScreenAudit_Params(String application_id,
                                                                                String screen_id,
                                                                                String is_insert_logged,
                                                                                String is_update_logged,
                                                                                String is_delete_logged,
                                                                                String is_action_logged,
                                                                                String is_print_logged,
                                                                                String is_update_changes_logged,
                                                                                String is_delete_changes_logged)
        {
            List<SqlParameter> p = new List<SqlParameter>();
            csp("application_id", application_id, CHAR, IN, p);
            csp("screen_id", screen_id, CHAR, IN, p);
            csp("is_insert_logged", is_insert_logged, CHAR, IN, p);
            csp("is_update_logged", is_update_logged, CHAR, IN, p);
            csp("is_delete_logged", is_delete_logged, CHAR, IN, p);
            csp("is_action_logged", is_action_logged, CHAR, IN, p);
            csp("is_print_logged", is_print_logged, CHAR, IN, p);
            csp("is_update_changes_logged", is_update_changes_logged, CHAR, IN, p);
            csp("is_delete_changes_logged", is_delete_changes_logged, CHAR, IN, p);
            return p;
        }

        public DataSet InsApplicationScreenAudit(String application_id,
                                                            String screen_id,
                                                            String is_insert_logged,
                                                            String is_update_logged,
                                                            String is_delete_logged,
                                                            String is_action_logged,
                                                            String is_print_logged,
                                                            String is_update_changes_logged,
                                                            String is_delete_changes_logged)
        {
            List<SqlParameter> prms = InsApplicationScreenAudit_Params(application_id, screen_id, is_insert_logged, is_update_logged, is_delete_logged, is_action_logged, is_print_logged, is_update_changes_logged, is_delete_changes_logged);
            DataSet dset = esp("InsApplicationScreenAudit", prms);

            return dset;
        }

        public string InsApplicationScreenAuditAsTask(String application_id,
                                                                    String screen_id,
                                                                    String is_insert_logged,
                                                                    String is_update_logged,
                                                                    String is_delete_logged,
                                                                    String is_action_logged,
                                                                    String is_print_logged,
                                                                    String is_update_changes_logged,
                                                                    String is_delete_changes_logged)
        {
            List<SqlParameter> prms = InsApplicationScreenAudit_Params(application_id, screen_id, is_insert_logged, is_update_logged, is_delete_logged, is_action_logged, is_print_logged, is_update_changes_logged, is_delete_changes_logged);
            return gps("InsApplicationScreenAudit", prms);

        }



        private List<SqlParameter> InsLogMessage_Params(Int32? session_id,
                                                                    String message_cd,
                                                                    String severity_level,
                                                                    DateTime? message_dts,
                                                                    String screen_id,
                                                                    String screen_mode,
                                                                    String message_information,
                                                                    String other_information,
                                                                    String stack_trace)
        {
            List<SqlParameter> p = new List<SqlParameter>();
            csp("session_id", session_id, INT, IN, p);
            csp("message_cd", message_cd, VARCHAR, IN, p);
            csp("severity_level", severity_level, CHAR, IN, p);
            csp("message_dts", message_dts, DATETIME, IN, p);
            csp("screen_id", screen_id, CHAR, IN, p);
            csp("screen_mode", screen_mode, CHAR, IN, p);
            csp("message_information", message_information, VARCHAR, IN, p);
            csp("other_information", other_information, VARCHAR, IN, p);
            csp("stack_trace", stack_trace, VARCHAR, IN, p);
            return p;
        }

        public DataSet InsLogMessage(Int32? session_id,
                                                String message_cd,
                                                String severity_level,
                                                DateTime? message_dts,
                                                String screen_id,
                                                String screen_mode,
                                                String message_information,
                                                String other_information,
                                                String stack_trace)
        {
            List<SqlParameter> prms = InsLogMessage_Params(session_id, message_cd, severity_level, message_dts, screen_id, screen_mode, message_information, other_information, stack_trace);
            DataSet dset = esp("InsLogMessage", prms);

            return dset;
        }

        public string InsLogMessageAsTask(Int32? session_id,
                                                        String message_cd,
                                                        String severity_level,
                                                        DateTime? message_dts,
                                                        String screen_id,
                                                        String screen_mode,
                                                        String message_information,
                                                        String other_information,
                                                        String stack_trace)
        {
            List<SqlParameter> prms = InsLogMessage_Params(session_id, message_cd, severity_level, message_dts, screen_id, screen_mode, message_information, other_information, stack_trace);
            return gps("InsLogMessage", prms);

        }



        private List<SqlParameter> InsPackage_Params(String package_id,
                                                                String package_nm,
                                                                Decimal? version_no,
                                                                DateTime? version_dt,
                                                                String server_distribution_root,
                                                                String client_default_root)
        {
            List<SqlParameter> p = new List<SqlParameter>();
            csp("package_id", package_id, CHAR, IN, p);
            csp("package_nm", package_nm, VARCHAR, IN, p);
            csp("version_no", version_no, DECIMAL, IN, p);
            csp("version_dt", version_dt, SMALLDATETIME, IN, p);
            csp("server_distribution_root", server_distribution_root, VARCHAR, IN, p);
            csp("client_default_root", client_default_root, VARCHAR, IN, p);
            return p;
        }

        public DataSet InsPackage(String package_id,
                                                String package_nm,
                                                Decimal? version_no,
                                                DateTime? version_dt,
                                                String server_distribution_root,
                                                String client_default_root)
        {
            List<SqlParameter> prms = InsPackage_Params(package_id, package_nm, version_no, version_dt, server_distribution_root, client_default_root);
            DataSet dset = esp("InsPackage", prms);

            return dset;
        }

        public string InsPackageAsTask(String package_id,
                                                    String package_nm,
                                                    Decimal? version_no,
                                                    DateTime? version_dt,
                                                    String server_distribution_root,
                                                    String client_default_root)
        {
            List<SqlParameter> prms = InsPackage_Params(package_id, package_nm, version_no, version_dt, server_distribution_root, client_default_root);
            return gps("InsPackage", prms);

        }



        private List<SqlParameter> InsPackageDatabase_Params(String package_id,
                                                                        String database_nm,
                                                                        String server_nm,
                                                                        String dsn_nm,
                                                                        String backup_path)
        {
            List<SqlParameter> p = new List<SqlParameter>();
            csp("package_id", package_id, CHAR, IN, p);
            csp("database_nm", database_nm, VARCHAR, IN, p);
            csp("server_nm", server_nm, VARCHAR, IN, p);
            csp("dsn_nm", dsn_nm, VARCHAR, IN, p);
            csp("backup_path", backup_path, VARCHAR, IN, p);
            return p;
        }

        public DataSet InsPackageDatabase(String package_id,
                                                        String database_nm,
                                                        String server_nm,
                                                        String dsn_nm,
                                                        String backup_path)
        {
            List<SqlParameter> prms = InsPackageDatabase_Params(package_id, database_nm, server_nm, dsn_nm, backup_path);
            DataSet dset = esp("InsPackageDatabase", prms);

            return dset;
        }

        public string InsPackageDatabaseAsTask(String package_id,
                                                            String database_nm,
                                                            String server_nm,
                                                            String dsn_nm,
                                                            String backup_path)
        {
            List<SqlParameter> prms = InsPackageDatabase_Params(package_id, database_nm, server_nm, dsn_nm, backup_path);
            return gps("InsPackageDatabase", prms);

        }



        private List<SqlParameter> InsPackageMenu_Params(String package_id,
                                                                    String menu_group_id,
                                                                    String menu_nm,
                                                                    String menu_dsc,
                                                                    String ctrl_key_accessor,
                                                                    Int16? display_order)
        {
            List<SqlParameter> p = new List<SqlParameter>();
            csp("package_id", package_id, CHAR, IN, p);
            csp("menu_group_id", menu_group_id, VARCHAR, IN, p);
            csp("menu_nm", menu_nm, VARCHAR, IN, p);
            csp("menu_dsc", menu_dsc, VARCHAR, IN, p);
            csp("ctrl_key_accessor", ctrl_key_accessor, CHAR, IN, p);
            csp("display_order", display_order, SMALLINT, IN, p);
            return p;
        }

        public DataSet InsPackageMenu(String package_id,
                                                    String menu_group_id,
                                                    String menu_nm,
                                                    String menu_dsc,
                                                    String ctrl_key_accessor,
                                                    Int16? display_order)
        {
            List<SqlParameter> prms = InsPackageMenu_Params(package_id, menu_group_id, menu_nm, menu_dsc, ctrl_key_accessor, display_order);
            DataSet dset = esp("InsPackageMenu", prms);

            return dset;
        }

        public string InsPackageMenuAsTask(String package_id,
                                                        String menu_group_id,
                                                        String menu_nm,
                                                        String menu_dsc,
                                                        String ctrl_key_accessor,
                                                        Int16? display_order)
        {
            List<SqlParameter> prms = InsPackageMenu_Params(package_id, menu_group_id, menu_nm, menu_dsc, ctrl_key_accessor, display_order);
            return gps("InsPackageMenu", prms);

        }



        private List<SqlParameter> InsPackageMenuGroup_Params(String package_id,
                                                                            String menu_group_id,
                                                                            String parent_menu_group_id,
                                                                            String menu_group_nm,
                                                                            String menu_group_dsc,
                                                                            String ctrl_key_accessor,
                                                                            Int16? display_order)
        {
            List<SqlParameter> p = new List<SqlParameter>();
            csp("package_id", package_id, CHAR, IN, p);
            csp("menu_group_id", menu_group_id, VARCHAR, IN, p);
            csp("parent_menu_group_id", parent_menu_group_id, VARCHAR, IN, p);
            csp("menu_group_nm", menu_group_nm, VARCHAR, IN, p);
            csp("menu_group_dsc", menu_group_dsc, VARCHAR, IN, p);
            csp("ctrl_key_accessor", ctrl_key_accessor, CHAR, IN, p);
            csp("display_order", display_order, SMALLINT, IN, p);
            return p;
        }

        public DataSet InsPackageMenuGroup(String package_id,
                                                        String menu_group_id,
                                                        String parent_menu_group_id,
                                                        String menu_group_nm,
                                                        String menu_group_dsc,
                                                        String ctrl_key_accessor,
                                                        Int16? display_order)
        {
            List<SqlParameter> prms = InsPackageMenuGroup_Params(package_id, menu_group_id, parent_menu_group_id, menu_group_nm, menu_group_dsc, ctrl_key_accessor, display_order);
            DataSet dset = esp("InsPackageMenuGroup", prms);

            return dset;
        }

        public string InsPackageMenuGroupAsTask(String package_id,
                                                            String menu_group_id,
                                                            String parent_menu_group_id,
                                                            String menu_group_nm,
                                                            String menu_group_dsc,
                                                            String ctrl_key_accessor,
                                                            Int16? display_order)
        {
            List<SqlParameter> prms = InsPackageMenuGroup_Params(package_id, menu_group_id, parent_menu_group_id, menu_group_nm, menu_group_dsc, ctrl_key_accessor, display_order);
            return gps("InsPackageMenuGroup", prms);

        }



        private List<SqlParameter> InsPackageScreen_Params(String package_id,
                                                                        String screen_id,
                                                                        String screen_nm,
                                                                        String is_select_supported,
                                                                        String is_insert_supported,
                                                                        String is_update_supported,
                                                                        String is_delete_supported,
                                                                        String is_print_supported,
                                                                        String is_update_changes_supported,
                                                                        String is_delete_changes_supported,
                                                                        String is_partial_save_supported)
        {
            List<SqlParameter> p = new List<SqlParameter>();
            csp("package_id", package_id, CHAR, IN, p);
            csp("screen_id", screen_id, CHAR, IN, p);
            csp("screen_nm", screen_nm, VARCHAR, IN, p);
            csp("is_select_supported", is_select_supported, CHAR, IN, p);
            csp("is_insert_supported", is_insert_supported, CHAR, IN, p);
            csp("is_update_supported", is_update_supported, CHAR, IN, p);
            csp("is_delete_supported", is_delete_supported, CHAR, IN, p);
            csp("is_print_supported", is_print_supported, CHAR, IN, p);
            csp("is_update_changes_supported", is_update_changes_supported, CHAR, IN, p);
            csp("is_delete_changes_supported", is_delete_changes_supported, CHAR, IN, p);
            csp("is_partial_save_supported", is_partial_save_supported, CHAR, IN, p);
            return p;
        }

        public DataSet InsPackageScreen(String package_id,
                                                    String screen_id,
                                                    String screen_nm,
                                                    String is_select_supported,
                                                    String is_insert_supported,
                                                    String is_update_supported,
                                                    String is_delete_supported,
                                                    String is_print_supported,
                                                    String is_update_changes_supported,
                                                    String is_delete_changes_supported,
                                                    String is_partial_save_supported)
        {
            List<SqlParameter> prms = InsPackageScreen_Params(package_id, screen_id, screen_nm, is_select_supported, is_insert_supported, is_update_supported, is_delete_supported, is_print_supported, is_update_changes_supported, is_delete_changes_supported, is_partial_save_supported);
            DataSet dset = esp("InsPackageScreen", prms);

            return dset;
        }

        public string InsPackageScreenAsTask(String package_id,
                                                        String screen_id,
                                                        String screen_nm,
                                                        String is_select_supported,
                                                        String is_insert_supported,
                                                        String is_update_supported,
                                                        String is_delete_supported,
                                                        String is_print_supported,
                                                        String is_update_changes_supported,
                                                        String is_delete_changes_supported,
                                                        String is_partial_save_supported)
        {
            List<SqlParameter> prms = InsPackageScreen_Params(package_id, screen_id, screen_nm, is_select_supported, is_insert_supported, is_update_supported, is_delete_supported, is_print_supported, is_update_changes_supported, is_delete_changes_supported, is_partial_save_supported);
            return gps("InsPackageScreen", prms);

        }



        private List<SqlParameter> InsPackageScreenAction_Params(String package_id,
                                                                            String screen_id,
                                                                            String action_id,
                                                                            Int16? display_order)
        {
            List<SqlParameter> p = new List<SqlParameter>();
            csp("package_id", package_id, CHAR, IN, p);
            csp("screen_id", screen_id, CHAR, IN, p);
            csp("action_id", action_id, VARCHAR, IN, p);
            csp("display_order", display_order, SMALLINT, IN, p);
            return p;
        }

        public DataSet InsPackageScreenAction(String package_id,
                                                            String screen_id,
                                                            String action_id,
                                                            Int16? display_order)
        {
            List<SqlParameter> prms = InsPackageScreenAction_Params(package_id, screen_id, action_id, display_order);
            DataSet dset = esp("InsPackageScreenAction", prms);

            return dset;
        }

        public string InsPackageScreenActionAsTask(String package_id,
                                                                String screen_id,
                                                                String action_id,
                                                                Int16? display_order)
        {
            List<SqlParameter> prms = InsPackageScreenAction_Params(package_id, screen_id, action_id, display_order);
            return gps("InsPackageScreenAction", prms);

        }



        private List<SqlParameter> InsUpdRevUserPrivileges_Params(String p_user_id,
                                                                                String p_user_role_id,
                                                                                String p_application_id,
                                                                                String p_is_backup_allowed,
                                                                                String p_mode)
        {
            List<SqlParameter> p = new List<SqlParameter>();
            csp("p_user_id", p_user_id, VARCHAR, IN, p);
            csp("p_user_role_id", p_user_role_id, VARCHAR, IN, p);
            csp("p_application_id", p_application_id, CHAR, IN, p);
            csp("p_is_backup_allowed", p_is_backup_allowed, CHAR, IN, p);
            csp("p_mode", p_mode, CHAR, IN, p);
            return p;
        }

        public DataSet InsUpdRevUserPrivileges(String p_user_id,
                                                            String p_user_role_id,
                                                            String p_application_id,
                                                            String p_is_backup_allowed,
                                                            String p_mode)
        {
            List<SqlParameter> prms = InsUpdRevUserPrivileges_Params(p_user_id, p_user_role_id, p_application_id, p_is_backup_allowed, p_mode);
            DataSet dset = esp("InsUpdRevUserPrivileges", prms);

            return dset;
        }

        public string InsUpdRevUserPrivilegesAsTask(String p_user_id,
                                                                String p_user_role_id,
                                                                String p_application_id,
                                                                String p_is_backup_allowed,
                                                                String p_mode)
        {
            List<SqlParameter> prms = InsUpdRevUserPrivileges_Params(p_user_id, p_user_role_id, p_application_id, p_is_backup_allowed, p_mode);
            return gps("InsUpdRevUserPrivileges", prms);

        }



        private List<SqlParameter> InsUserRoleGrantedAction_Params(String package_id,
                                                                                String user_role_id,
                                                                                String screen_id,
                                                                                String action_id,
                                                                                Int32? display_order)
        {
            List<SqlParameter> p = new List<SqlParameter>();
            csp("package_id", package_id, CHAR, IN, p);
            csp("user_role_id", user_role_id, VARCHAR, IN, p);
            csp("screen_id", screen_id, CHAR, IN, p);
            csp("action_id", action_id, VARCHAR, IN, p);
            csp("display_order", display_order, INT, IN, p);
            return p;
        }

        public DataSet InsUserRoleGrantedAction(String package_id,
                                                            String user_role_id,
                                                            String screen_id,
                                                            String action_id,
                                                            Int32? display_order)
        {
            List<SqlParameter> prms = InsUserRoleGrantedAction_Params(package_id, user_role_id, screen_id, action_id, display_order);
            DataSet dset = esp("InsUserRoleGrantedAction", prms);

            return dset;
        }

        public string InsUserRoleGrantedActionAsTask(String package_id,
                                                                String user_role_id,
                                                                String screen_id,
                                                                String action_id,
                                                                Int32? display_order)
        {
            List<SqlParameter> prms = InsUserRoleGrantedAction_Params(package_id, user_role_id, screen_id, action_id, display_order);
            return gps("InsUserRoleGrantedAction", prms);

        }



        private List<SqlParameter> InsUserRoleMenu_Params(String user_role_id,
                                                                        String menu_group_id,
                                                                        String menu_nm,
                                                                        String menu_dsc,
                                                                        String ctrl_key_accessor,
                                                                        Int16? display_order)
        {
            List<SqlParameter> p = new List<SqlParameter>();
            csp("user_role_id", user_role_id, VARCHAR, IN, p);
            csp("menu_group_id", menu_group_id, VARCHAR, IN, p);
            csp("menu_nm", menu_nm, VARCHAR, IN, p);
            csp("menu_dsc", menu_dsc, VARCHAR, IN, p);
            csp("ctrl_key_accessor", ctrl_key_accessor, CHAR, IN, p);
            csp("display_order", display_order, SMALLINT, IN, p);
            return p;
        }

        public DataSet InsUserRoleMenu(String user_role_id,
                                                    String menu_group_id,
                                                    String menu_nm,
                                                    String menu_dsc,
                                                    String ctrl_key_accessor,
                                                    Int16? display_order)
        {
            List<SqlParameter> prms = InsUserRoleMenu_Params(user_role_id, menu_group_id, menu_nm, menu_dsc, ctrl_key_accessor, display_order);
            DataSet dset = esp("InsUserRoleMenu", prms);

            return dset;
        }

        public string InsUserRoleMenuAsTask(String user_role_id,
                                                        String menu_group_id,
                                                        String menu_nm,
                                                        String menu_dsc,
                                                        String ctrl_key_accessor,
                                                        Int16? display_order)
        {
            List<SqlParameter> prms = InsUserRoleMenu_Params(user_role_id, menu_group_id, menu_nm, menu_dsc, ctrl_key_accessor, display_order);
            return gps("InsUserRoleMenu", prms);

        }



        private List<SqlParameter> InsUserRoleMenuGroup_Params(String user_role_id,
                                                                            String menu_group_id,
                                                                            String parent_menu_group_id,
                                                                            String menu_group_nm,
                                                                            String menu_group_dsc,
                                                                            String ctrl_key_accessor,
                                                                            Int16? display_order)
        {
            List<SqlParameter> p = new List<SqlParameter>();
            csp("user_role_id", user_role_id, VARCHAR, IN, p);
            csp("menu_group_id", menu_group_id, VARCHAR, IN, p);
            csp("parent_menu_group_id", parent_menu_group_id, VARCHAR, IN, p);
            csp("menu_group_nm", menu_group_nm, VARCHAR, IN, p);
            csp("menu_group_dsc", menu_group_dsc, VARCHAR, IN, p);
            csp("ctrl_key_accessor", ctrl_key_accessor, CHAR, IN, p);
            csp("display_order", display_order, SMALLINT, IN, p);
            return p;
        }

        public DataSet InsUserRoleMenuGroup(String user_role_id,
                                                        String menu_group_id,
                                                        String parent_menu_group_id,
                                                        String menu_group_nm,
                                                        String menu_group_dsc,
                                                        String ctrl_key_accessor,
                                                        Int16? display_order)
        {
            List<SqlParameter> prms = InsUserRoleMenuGroup_Params(user_role_id, menu_group_id, parent_menu_group_id, menu_group_nm, menu_group_dsc, ctrl_key_accessor, display_order);
            DataSet dset = esp("InsUserRoleMenuGroup", prms);

            return dset;
        }

        public string InsUserRoleMenuGroupAsTask(String user_role_id,
                                                            String menu_group_id,
                                                            String parent_menu_group_id,
                                                            String menu_group_nm,
                                                            String menu_group_dsc,
                                                            String ctrl_key_accessor,
                                                            Int16? display_order)
        {
            List<SqlParameter> prms = InsUserRoleMenuGroup_Params(user_role_id, menu_group_id, parent_menu_group_id, menu_group_nm, menu_group_dsc, ctrl_key_accessor, display_order);
            return gps("InsUserRoleMenuGroup", prms);

        }



        private List<SqlParameter> InsUserRolePrivilege_Params(String package_id,
                                                                            String user_role_id,
                                                                            String screen_id,
                                                                            String is_select_granted,
                                                                            String is_insert_granted,
                                                                            String is_update_granted,
                                                                            String is_delete_granted,
                                                                            String is_print_granted)
        {
            List<SqlParameter> p = new List<SqlParameter>();
            csp("package_id", package_id, CHAR, IN, p);
            csp("user_role_id", user_role_id, VARCHAR, IN, p);
            csp("screen_id", screen_id, CHAR, IN, p);
            csp("is_select_granted", is_select_granted, CHAR, IN, p);
            csp("is_insert_granted", is_insert_granted, CHAR, IN, p);
            csp("is_update_granted", is_update_granted, CHAR, IN, p);
            csp("is_delete_granted", is_delete_granted, CHAR, IN, p);
            csp("is_print_granted", is_print_granted, CHAR, IN, p);
            return p;
        }

        public DataSet InsUserRolePrivilege(String package_id,
                                                        String user_role_id,
                                                        String screen_id,
                                                        String is_select_granted,
                                                        String is_insert_granted,
                                                        String is_update_granted,
                                                        String is_delete_granted,
                                                        String is_print_granted)
        {
            List<SqlParameter> prms = InsUserRolePrivilege_Params(package_id, user_role_id, screen_id, is_select_granted, is_insert_granted, is_update_granted, is_delete_granted, is_print_granted);
            DataSet dset = esp("InsUserRolePrivilege", prms);

            return dset;
        }

        public string InsUserRolePrivilegeAsTask(String package_id,
                                                            String user_role_id,
                                                            String screen_id,
                                                            String is_select_granted,
                                                            String is_insert_granted,
                                                            String is_update_granted,
                                                            String is_delete_granted,
                                                            String is_print_granted)
        {
            List<SqlParameter> prms = InsUserRolePrivilege_Params(package_id, user_role_id, screen_id, is_select_granted, is_insert_granted, is_update_granted, is_delete_granted, is_print_granted);
            return gps("InsUserRolePrivilege", prms);

        }



        private List<SqlParameter> LogOperation_Params(Int32? p_session_id,
                                                                    String p_package_id,
                                                                    String p_application_id,
                                                                    Int32? p_user_no,
                                                                    String p_user_role_id,
                                                                    String p_operation,
                                                                    String p_screen_id,
                                                                    String p_object_id,
                                                                    String p_obj_user_id,
                                                                    String p_obj_application_id,
                                                                    String p_obj_user_role_id)
        {
            List<SqlParameter> p = new List<SqlParameter>();
            csp("p_session_id", p_session_id, INT, IN, p);
            csp("p_package_id", p_package_id, CHAR, IN, p);
            csp("p_application_id", p_application_id, CHAR, IN, p);
            csp("p_user_no", p_user_no, INT, IN, p);
            csp("p_user_role_id", p_user_role_id, VARCHAR, IN, p);
            csp("p_operation", p_operation, CHAR, IN, p);
            csp("p_screen_id", p_screen_id, CHAR, IN, p);
            csp("p_object_id", p_object_id, VARCHAR, IN, p);
            csp("p_obj_user_id", p_obj_user_id, VARCHAR, IN, p);
            csp("p_obj_application_id", p_obj_application_id, CHAR, IN, p);
            csp("p_obj_user_role_id", p_obj_user_role_id, VARCHAR, IN, p);
            return p;
        }

        public DataSet LogOperation(Int32? p_session_id,
                                                String p_package_id,
                                                String p_application_id,
                                                Int32? p_user_no,
                                                String p_user_role_id,
                                                String p_operation,
                                                String p_screen_id,
                                                String p_object_id,
                                                String p_obj_user_id,
                                                String p_obj_application_id,
                                                String p_obj_user_role_id)
        {
            List<SqlParameter> prms = LogOperation_Params(p_session_id, p_package_id, p_application_id, p_user_no, p_user_role_id, p_operation, p_screen_id, p_object_id, p_obj_user_id, p_obj_application_id, p_obj_user_role_id);
            DataSet dset = esp("LogOperation", prms);

            return dset;
        }

        public string LogOperationAsTask(Int32? p_session_id,
                                                    String p_package_id,
                                                    String p_application_id,
                                                    Int32? p_user_no,
                                                    String p_user_role_id,
                                                    String p_operation,
                                                    String p_screen_id,
                                                    String p_object_id,
                                                    String p_obj_user_id,
                                                    String p_obj_application_id,
                                                    String p_obj_user_role_id)
        {
            List<SqlParameter> prms = LogOperation_Params(p_session_id, p_package_id, p_application_id, p_user_no, p_user_role_id, p_operation, p_screen_id, p_object_id, p_obj_user_id, p_obj_application_id, p_obj_user_role_id);
            return gps("LogOperation", prms);

        }



        private List<SqlParameter> QryApplicationContext_Params(String user_role_id)
        {
            List<SqlParameter> p = new List<SqlParameter>();
            csp("user_role_id", user_role_id, VARCHAR, IN, p);
            return p;
        }

        public DataSet QryApplicationContext(String user_role_id)
        {
            List<SqlParameter> prms = QryApplicationContext_Params(user_role_id);
            DataSet dset = esp("QryApplicationContext", prms);

            return dset;
        }

        public string QryApplicationContextAsTask(String user_role_id)
        {
            List<SqlParameter> prms = QryApplicationContext_Params(user_role_id);
            return gps("QryApplicationContext", prms);

        }

        public DCCSqlDataReader QryApplicationContextAsReader(String user_role_id)
        {
            List<SqlParameter> prms = QryApplicationContext_Params(user_role_id);
            DCCSqlDataReader reader = ObjDBManager.ExecuteReader("QryApplicationContext", prms);

            return reader;
        }



        private List<SqlParameter> QryPackageMenuGroups_Params(Int32? p_group_id,
                                                                            String p_package_id,
                                                                            Int32? p_parent_group_id,
                                                                            String group_nm,
                                                                            String group_desc,
                                                                            String ctrl_key_accessor,
                                                                            Int16? display_order)
        {
            List<SqlParameter> p = new List<SqlParameter>();
            csp("p_group_id", p_group_id, INT, IN, p);
            csp("p_package_id", p_package_id, CHAR, IN, p);
            csp("p_parent_group_id", p_parent_group_id, INT, IN, p);
            csp("group_nm", group_nm, VARCHAR, IN, p);
            csp("group_desc", group_desc, VARCHAR, IN, p);
            csp("ctrl_key_accessor", ctrl_key_accessor, CHAR, IN, p);
            csp("display_order", display_order, SMALLINT, IN, p);
            return p;
        }

        public DataSet QryPackageMenuGroups(Int32? p_group_id,
                                                        String p_package_id,
                                                        Int32? p_parent_group_id,
                                                        String group_nm,
                                                        String group_desc,
                                                        String ctrl_key_accessor,
                                                        Int16? display_order)
        {
            List<SqlParameter> prms = QryPackageMenuGroups_Params(p_group_id, p_package_id, p_parent_group_id, group_nm, group_desc, ctrl_key_accessor, display_order);
            DataSet dset = esp("QryPackageMenuGroups", prms);

            return dset;
        }

        public string QryPackageMenuGroupsAsTask(Int32? p_group_id,
                                                            String p_package_id,
                                                            Int32? p_parent_group_id,
                                                            String group_nm,
                                                            String group_desc,
                                                            String ctrl_key_accessor,
                                                            Int16? display_order)
        {
            List<SqlParameter> prms = QryPackageMenuGroups_Params(p_group_id, p_package_id, p_parent_group_id, group_nm, group_desc, ctrl_key_accessor, display_order);
            return gps("QryPackageMenuGroups", prms);

        }

        public DCCSqlDataReader QryPackageMenuGroupsAsReader(Int32? p_group_id,
                                                                        String p_package_id,
                                                                        Int32? p_parent_group_id,
                                                                        String group_nm,
                                                                        String group_desc,
                                                                        String ctrl_key_accessor,
                                                                        Int16? display_order)
        {
            List<SqlParameter> prms = QryPackageMenuGroups_Params(p_group_id, p_package_id, p_parent_group_id, group_nm, group_desc, ctrl_key_accessor, display_order);
            DCCSqlDataReader reader = ObjDBManager.ExecuteReader("QryPackageMenuGroups", prms);

            return reader;
        }



        private List<SqlParameter> QryUserRoleGrantedActions_Params()
        {
            List<SqlParameter> p = new List<SqlParameter>();
            return p;
        }

        public DataSet QryUserRoleGrantedActions()
        {
            List<SqlParameter> prms = QryUserRoleGrantedActions_Params();
            DataSet dset = esp("QryUserRoleGrantedActions", prms);
            return dset;
        }

        public string QryUserRoleGrantedActionsAsTask()
        {
            List<SqlParameter> prms = QryUserRoleGrantedActions_Params();
            return gps("QryUserRoleGrantedActions", prms);
        }

        public DCCSqlDataReader QryUserRoleGrantedActionsAsReader()
        {
            List<SqlParameter> prms = QryUserRoleGrantedActions_Params();
            DCCSqlDataReader reader = ObjDBManager.ExecuteReader("QryUserRoleGrantedActions", prms);
            return reader;
        }



        private List<SqlParameter> QryUserRolePrivilege_Params()
        {
            List<SqlParameter> p = new List<SqlParameter>();
            return p;
        }

        public DataSet QryUserRolePrivilege()
        {
            List<SqlParameter> prms = QryUserRolePrivilege_Params();
            DataSet dset = esp("QryUserRolePrivilege", prms);
            return dset;
        }

        public string QryUserRolePrivilegeAsTask()
        {
            List<SqlParameter> prms = QryUserRolePrivilege_Params();
            return gps("QryUserRolePrivilege", prms);
        }

        public DCCSqlDataReader QryUserRolePrivilegeAsReader()
        {
            List<SqlParameter> prms = QryUserRolePrivilege_Params();
            DCCSqlDataReader reader = ObjDBManager.ExecuteReader("QryUserRolePrivilege", prms);
            return reader;
        }



        private List<SqlParameter> RaiseErrorMessage_Params(String p_message_cd,
                                                                        String p_control_nm,
                                                                        String p_arg_1,
                                                                        String p_arg_2,
                                                                        String p_arg_3)
        {
            List<SqlParameter> p = new List<SqlParameter>();
            csp("p_message_cd", p_message_cd, VARCHAR, IN, p);
            csp("p_control_nm", p_control_nm, VARCHAR, IN, p);
            csp("p_arg_1", p_arg_1, VARCHAR, IN, p);
            csp("p_arg_2", p_arg_2, VARCHAR, IN, p);
            csp("p_arg_3", p_arg_3, VARCHAR, IN, p);
            return p;
        }

        public DataSet RaiseErrorMessage(String p_message_cd,
                                                    String p_control_nm,
                                                    String p_arg_1,
                                                    String p_arg_2,
                                                    String p_arg_3)
        {
            List<SqlParameter> prms = RaiseErrorMessage_Params(p_message_cd, p_control_nm, p_arg_1, p_arg_2, p_arg_3);
            DataSet dset = esp("RaiseErrorMessage", prms);

            return dset;
        }

        public string RaiseErrorMessageAsTask(String p_message_cd,
                                                            String p_control_nm,
                                                            String p_arg_1,
                                                            String p_arg_2,
                                                            String p_arg_3)
        {
            List<SqlParameter> prms = RaiseErrorMessage_Params(p_message_cd, p_control_nm, p_arg_1, p_arg_2, p_arg_3);
            return gps("RaiseErrorMessage", prms);

        }



        private List<SqlParameter> RaiseFatalError_Params(String p_message_cd,
                                                                        String p_control_nm,
                                                                        String p_arg_1,
                                                                        String p_arg_2,
                                                                        String p_arg_3)
        {
            List<SqlParameter> p = new List<SqlParameter>();
            csp("p_message_cd", p_message_cd, VARCHAR, IN, p);
            csp("p_control_nm", p_control_nm, VARCHAR, IN, p);
            csp("p_arg_1", p_arg_1, VARCHAR, IN, p);
            csp("p_arg_2", p_arg_2, VARCHAR, IN, p);
            csp("p_arg_3", p_arg_3, VARCHAR, IN, p);
            return p;
        }

        public DataSet RaiseFatalError(String p_message_cd,
                                                    String p_control_nm,
                                                    String p_arg_1,
                                                    String p_arg_2,
                                                    String p_arg_3)
        {
            List<SqlParameter> prms = RaiseFatalError_Params(p_message_cd, p_control_nm, p_arg_1, p_arg_2, p_arg_3);
            DataSet dset = esp("RaiseFatalError", prms);

            return dset;
        }

        public string RaiseFatalErrorAsTask(String p_message_cd,
                                                        String p_control_nm,
                                                        String p_arg_1,
                                                        String p_arg_2,
                                                        String p_arg_3)
        {
            List<SqlParameter> prms = RaiseFatalError_Params(p_message_cd, p_control_nm, p_arg_1, p_arg_2, p_arg_3);
            return gps("RaiseFatalError", prms);

        }



        private List<SqlParameter> RaiseSQLError_Params(String p_type,
                                                                    String p_message_cd,
                                                                    String p_control_nm,
                                                                    String p_arg_1,
                                                                    String p_arg_2,
                                                                    String p_arg_3)
        {
            List<SqlParameter> p = new List<SqlParameter>();
            csp("p_type", p_type, VARCHAR, IN, p);
            csp("p_message_cd", p_message_cd, VARCHAR, IN, p);
            csp("p_control_nm", p_control_nm, VARCHAR, IN, p);
            csp("p_arg_1", p_arg_1, VARCHAR, IN, p);
            csp("p_arg_2", p_arg_2, VARCHAR, IN, p);
            csp("p_arg_3", p_arg_3, VARCHAR, IN, p);
            return p;
        }

        public DataSet RaiseSQLError(String p_type,
                                                String p_message_cd,
                                                String p_control_nm,
                                                String p_arg_1,
                                                String p_arg_2,
                                                String p_arg_3)
        {
            List<SqlParameter> prms = RaiseSQLError_Params(p_type, p_message_cd, p_control_nm, p_arg_1, p_arg_2, p_arg_3);
            DataSet dset = esp("RaiseSQLError", prms);

            return dset;
        }

        public string RaiseSQLErrorAsTask(String p_type,
                                                        String p_message_cd,
                                                        String p_control_nm,
                                                        String p_arg_1,
                                                        String p_arg_2,
                                                        String p_arg_3)
        {
            List<SqlParameter> prms = RaiseSQLError_Params(p_type, p_message_cd, p_control_nm, p_arg_1, p_arg_2, p_arg_3);
            return gps("RaiseSQLError", prms);

        }



        private List<SqlParameter> RaiseWarningMessage_Params(String p_message_cd,
                                                                            String p_control_nm,
                                                                            String p_arg_1,
                                                                            String p_arg_2,
                                                                            String p_arg_3)
        {
            List<SqlParameter> p = new List<SqlParameter>();
            csp("p_message_cd", p_message_cd, VARCHAR, IN, p);
            csp("p_control_nm", p_control_nm, VARCHAR, IN, p);
            csp("p_arg_1", p_arg_1, VARCHAR, IN, p);
            csp("p_arg_2", p_arg_2, VARCHAR, IN, p);
            csp("p_arg_3", p_arg_3, VARCHAR, IN, p);
            return p;
        }

        public DataSet RaiseWarningMessage(String p_message_cd,
                                                        String p_control_nm,
                                                        String p_arg_1,
                                                        String p_arg_2,
                                                        String p_arg_3)
        {
            List<SqlParameter> prms = RaiseWarningMessage_Params(p_message_cd, p_control_nm, p_arg_1, p_arg_2, p_arg_3);
            DataSet dset = esp("RaiseWarningMessage", prms);

            return dset;
        }

        public string RaiseWarningMessageAsTask(String p_message_cd,
                                                            String p_control_nm,
                                                            String p_arg_1,
                                                            String p_arg_2,
                                                            String p_arg_3)
        {
            List<SqlParameter> prms = RaiseWarningMessage_Params(p_message_cd, p_control_nm, p_arg_1, p_arg_2, p_arg_3);
            return gps("RaiseWarningMessage", prms);

        }



        private List<SqlParameter> RemovePacakgeCascade_Params(String package_id)
        {
            List<SqlParameter> p = new List<SqlParameter>();
            csp("package_id", package_id, CHAR, IN, p);
            return p;
        }

        public DataSet RemovePacakgeCascade(String package_id)
        {
            List<SqlParameter> prms = RemovePacakgeCascade_Params(package_id);
            DataSet dset = esp("RemovePacakgeCascade", prms);

            return dset;
        }

        public string RemovePacakgeCascadeAsTask(String package_id)
        {
            List<SqlParameter> prms = RemovePacakgeCascade_Params(package_id);
            return gps("RemovePacakgeCascade", prms);

        }



        private List<SqlParameter> RemovePackageCascade_Params(String package_id)
        {
            List<SqlParameter> p = new List<SqlParameter>();
            csp("package_id", package_id, CHAR, IN, p);
            return p;
        }

        public DataSet RemovePackageCascade(String package_id)
        {
            List<SqlParameter> prms = RemovePackageCascade_Params(package_id);
            DataSet dset = esp("RemovePackageCascade", prms);

            return dset;
        }

        public string RemovePackageCascadeAsTask(String package_id)
        {
            List<SqlParameter> prms = RemovePackageCascade_Params(package_id);
            return gps("RemovePackageCascade", prms);

        }



        private List<SqlParameter> RetrieveAllActiveSessions_Params(Int32? p_own_session_id)
        {
            List<SqlParameter> p = new List<SqlParameter>();
            csp("p_own_session_id", p_own_session_id, INT, IN, p);
            return p;
        }

        public DataSet RetrieveAllActiveSessions(Int32? p_own_session_id)
        {
            List<SqlParameter> prms = RetrieveAllActiveSessions_Params(p_own_session_id);
            DataSet dset = esp("RetrieveAllActiveSessions", prms);

            return dset;
        }

        public string RetrieveAllActiveSessionsAsTask(Int32? p_own_session_id)
        {
            List<SqlParameter> prms = RetrieveAllActiveSessions_Params(p_own_session_id);
            return gps("RetrieveAllActiveSessions", prms);

        }



        private List<SqlParameter> RetrieveApplicationInformation_Params(String p_package_nm,
                                                                                    Int32? p_version_no,
                                                                                    DateTime? p_version_dt,
                                                                                    String p_application_id,
                                                                                    String p_application_nm,
                                                                                    DateTime? P_implementation_dt,
                                                                                    String p_database_nm,
                                                                                    String p_server_nm,
                                                                                    String p_dsn_nm,
                                                                                    String p_error_log_level,
                                                                                    Byte? p_log_file_size_in_mb,
                                                                                    String p_report_title,
                                                                                    String p_report_footer,
                                                                                    String p_path1,
                                                                                    String p_path2,
                                                                                    String p_path3,
                                                                                    String p_argument1,
                                                                                    String p_argument2,
                                                                                    String p_argument3,
                                                                                    String p_argument4,
                                                                                    String p_argument5)
        {
            List<SqlParameter> p = new List<SqlParameter>();
            csp("p_package_nm", p_package_nm, VARCHAR, IN, p);
            csp("p_version_no", p_version_no, INT, IN, p);
            csp("p_version_dt", p_version_dt, SMALLDATETIME, IN, p);
            csp("p_application_id", p_application_id, VARCHAR, IN, p);
            csp("p_application_nm", p_application_nm, VARCHAR, IN, p);
            csp("P_implementation_dt", P_implementation_dt, SMALLDATETIME, IN, p);
            csp("p_database_nm", p_database_nm, VARCHAR, IN, p);
            csp("p_server_nm", p_server_nm, VARCHAR, IN, p);
            csp("p_dsn_nm", p_dsn_nm, VARCHAR, IN, p);
            csp("p_error_log_level", p_error_log_level, VARCHAR, IN, p);
            csp("p_log_file_size_in_mb", p_log_file_size_in_mb, TINYINT, IN, p);
            csp("p_report_title", p_report_title, VARCHAR, IN, p);
            csp("p_report_footer", p_report_footer, VARCHAR, IN, p);
            csp("p_path1", p_path1, VARCHAR, IN, p);
            csp("p_path2", p_path2, VARCHAR, IN, p);
            csp("p_path3", p_path3, VARCHAR, IN, p);
            csp("p_argument1", p_argument1, VARCHAR, IN, p);
            csp("p_argument2", p_argument2, VARCHAR, IN, p);
            csp("p_argument3", p_argument3, VARCHAR, IN, p);
            csp("p_argument4", p_argument4, VARCHAR, IN, p);
            csp("p_argument5", p_argument5, VARCHAR, IN, p);
            return p;
        }

        public DataSet RetrieveApplicationInformation(String p_package_nm,
                                                                    Int32? p_version_no,
                                                                    DateTime? p_version_dt,
                                                                    String p_application_id,
                                                                    String p_application_nm,
                                                                    DateTime? P_implementation_dt,
                                                                    String p_database_nm,
                                                                    String p_server_nm,
                                                                    String p_dsn_nm,
                                                                    String p_error_log_level,
                                                                    Byte? p_log_file_size_in_mb,
                                                                    String p_report_title,
                                                                    String p_report_footer,
                                                                    String p_path1,
                                                                    String p_path2,
                                                                    String p_path3,
                                                                    String p_argument1,
                                                                    String p_argument2,
                                                                    String p_argument3,
                                                                    String p_argument4,
                                                                    String p_argument5)
        {
            List<SqlParameter> prms = RetrieveApplicationInformation_Params(p_package_nm, p_version_no, p_version_dt, p_application_id, p_application_nm, P_implementation_dt, p_database_nm, p_server_nm, p_dsn_nm, p_error_log_level, p_log_file_size_in_mb, p_report_title, p_report_footer, p_path1, p_path2, p_path3, p_argument1, p_argument2, p_argument3, p_argument4, p_argument5);
            DataSet dset = esp("RetrieveApplicationInformation", prms);

            return dset;
        }

        public string RetrieveApplicationInformationAsTask(String p_package_nm,
                                                                        Int32? p_version_no,
                                                                        DateTime? p_version_dt,
                                                                        String p_application_id,
                                                                        String p_application_nm,
                                                                        DateTime? P_implementation_dt,
                                                                        String p_database_nm,
                                                                        String p_server_nm,
                                                                        String p_dsn_nm,
                                                                        String p_error_log_level,
                                                                        Byte? p_log_file_size_in_mb,
                                                                        String p_report_title,
                                                                        String p_report_footer,
                                                                        String p_path1,
                                                                        String p_path2,
                                                                        String p_path3,
                                                                        String p_argument1,
                                                                        String p_argument2,
                                                                        String p_argument3,
                                                                        String p_argument4,
                                                                        String p_argument5)
        {
            List<SqlParameter> prms = RetrieveApplicationInformation_Params(p_package_nm, p_version_no, p_version_dt, p_application_id, p_application_nm, P_implementation_dt, p_database_nm, p_server_nm, p_dsn_nm, p_error_log_level, p_log_file_size_in_mb, p_report_title, p_report_footer, p_path1, p_path2, p_path3, p_argument1, p_argument2, p_argument3, p_argument4, p_argument5);
            return gps("RetrieveApplicationInformation", prms);

        }



        private List<SqlParameter> RetrieveMessageLogInformation_Params(Int32? p_session_id,
                                                                                    String p_application_nm,
                                                                                    String p_user_role_nm,
                                                                                    String p_user_nm,
                                                                                    Int32? p_user_no,
                                                                                    String p_machine_nm,
                                                                                    DateTime? p_start_dtm,
                                                                                    DateTime? p_finish_dtm,
                                                                                    DateTime? p_clear_dtm,
                                                                                    String p_is_query_session)
        {
            List<SqlParameter> p = new List<SqlParameter>();
            csp("p_session_id", p_session_id, INT, IN, p);
            csp("p_application_nm", p_application_nm, VARCHAR, IN, p);
            csp("p_user_role_nm", p_user_role_nm, VARCHAR, IN, p);
            csp("p_user_nm", p_user_nm, VARCHAR, IN, p);
            csp("p_user_no", p_user_no, INT, IN, p);
            csp("p_machine_nm", p_machine_nm, VARCHAR, IN, p);
            csp("p_start_dtm", p_start_dtm, DATETIME, IN, p);
            csp("p_finish_dtm", p_finish_dtm, DATETIME, IN, p);
            csp("p_clear_dtm", p_clear_dtm, DATETIME, IN, p);
            csp("p_is_query_session", p_is_query_session, CHAR, IN, p);
            return p;
        }

        public DataSet RetrieveMessageLogInformation(Int32? p_session_id,
                                                                String p_application_nm,
                                                                String p_user_role_nm,
                                                                String p_user_nm,
                                                                Int32? p_user_no,
                                                                String p_machine_nm,
                                                                DateTime? p_start_dtm,
                                                                DateTime? p_finish_dtm,
                                                                DateTime? p_clear_dtm,
                                                                String p_is_query_session)
        {
            List<SqlParameter> prms = RetrieveMessageLogInformation_Params(p_session_id, p_application_nm, p_user_role_nm, p_user_nm, p_user_no, p_machine_nm, p_start_dtm, p_finish_dtm, p_clear_dtm, p_is_query_session);
            DataSet dset = esp("RetrieveMessageLogInformation", prms);

            return dset;
        }

        public string RetrieveMessageLogInformationAsTask(Int32? p_session_id,
                                                                        String p_application_nm,
                                                                        String p_user_role_nm,
                                                                        String p_user_nm,
                                                                        Int32? p_user_no,
                                                                        String p_machine_nm,
                                                                        DateTime? p_start_dtm,
                                                                        DateTime? p_finish_dtm,
                                                                        DateTime? p_clear_dtm,
                                                                        String p_is_query_session)
        {
            List<SqlParameter> prms = RetrieveMessageLogInformation_Params(p_session_id, p_application_nm, p_user_role_nm, p_user_nm, p_user_no, p_machine_nm, p_start_dtm, p_finish_dtm, p_clear_dtm, p_is_query_session);
            return gps("RetrieveMessageLogInformation", prms);

        }



        private List<SqlParameter> RetrievePackageApplications_Params(String p_package_nm,
                                                                                    String p_application_nm,
                                                                                    String p_database_nm)
        {
            List<SqlParameter> p = new List<SqlParameter>();
            csp("p_package_nm", p_package_nm, VARCHAR, IN, p);
            csp("p_application_nm", p_application_nm, VARCHAR, IN, p);
            csp("p_database_nm", p_database_nm, VARCHAR, IN, p);
            return p;
        }

        public DataSet RetrievePackageApplications(String p_package_nm,
                                                                String p_application_nm,
                                                                String p_database_nm)
        {
            List<SqlParameter> prms = RetrievePackageApplications_Params(p_package_nm, p_application_nm, p_database_nm);
            DataSet dset = esp("RetrievePackageApplications", prms);

            return dset;
        }

        public string RetrievePackageApplicationsAsTask(String p_package_nm,
                                                                    String p_application_nm,
                                                                    String p_database_nm)
        {
            List<SqlParameter> prms = RetrievePackageApplications_Params(p_package_nm, p_application_nm, p_database_nm);
            return gps("RetrievePackageApplications", prms);

        }



        private List<SqlParameter> RetrievePackages_Params(String p_package_id,
                                                                        String p_package_nm,
                                                                        Decimal? p_version_no,
                                                                        DateTime? p_version_dt,
                                                                        String p_server_distribution_root,
                                                                        String p_client_default_root)
        {
            List<SqlParameter> p = new List<SqlParameter>();
            csp("p_package_id", p_package_id, VARCHAR, IN, p);
            csp("p_package_nm", p_package_nm, VARCHAR, IN, p);
            csp("p_version_no", p_version_no, DECIMAL, IN, p);
            csp("p_version_dt", p_version_dt, SMALLDATETIME, IN, p);
            csp("p_server_distribution_root", p_server_distribution_root, VARCHAR, IN, p);
            csp("p_client_default_root", p_client_default_root, VARCHAR, IN, p);
            return p;
        }

        public DataSet RetrievePackages(String p_package_id,
                                                    String p_package_nm,
                                                    Decimal? p_version_no,
                                                    DateTime? p_version_dt,
                                                    String p_server_distribution_root,
                                                    String p_client_default_root)
        {
            List<SqlParameter> prms = RetrievePackages_Params(p_package_id, p_package_nm, p_version_no, p_version_dt, p_server_distribution_root, p_client_default_root);
            DataSet dset = esp("RetrievePackages", prms);

            return dset;
        }

        public string RetrievePackagesAsTask(String p_package_id,
                                                        String p_package_nm,
                                                        Decimal? p_version_no,
                                                        DateTime? p_version_dt,
                                                        String p_server_distribution_root,
                                                        String p_client_default_root)
        {
            List<SqlParameter> prms = RetrievePackages_Params(p_package_id, p_package_nm, p_version_no, p_version_dt, p_server_distribution_root, p_client_default_root);
            return gps("RetrievePackages", prms);

        }



        private List<SqlParameter> RetrieveUsers_Params(String p_user_id,
                                                                    Int32? p_user_no,
                                                                    String p_user_nm,
                                                                    DateTime? p_activation_dt,
                                                                    String p_package_nm,
                                                                    String p_application_nm,
                                                                    String p_user_role_nm,
                                                                    String p_database_nm)
        {
            List<SqlParameter> p = new List<SqlParameter>();
            csp("p_user_id", p_user_id, VARCHAR, IN, p);
            csp("p_user_no", p_user_no, INT, IN, p);
            csp("p_user_nm", p_user_nm, VARCHAR, IN, p);
            csp("p_activation_dt", p_activation_dt, SMALLDATETIME, IN, p);
            csp("p_package_nm", p_package_nm, VARCHAR, IN, p);
            csp("p_application_nm", p_application_nm, VARCHAR, IN, p);
            csp("p_user_role_nm", p_user_role_nm, VARCHAR, IN, p);
            csp("p_database_nm", p_database_nm, VARCHAR, IN, p);
            return p;
        }

        public DataSet RetrieveUsers(String p_user_id,
                                                Int32? p_user_no,
                                                String p_user_nm,
                                                DateTime? p_activation_dt,
                                                String p_package_nm,
                                                String p_application_nm,
                                                String p_user_role_nm,
                                                String p_database_nm)
        {
            List<SqlParameter> prms = RetrieveUsers_Params(p_user_id, p_user_no, p_user_nm, p_activation_dt, p_package_nm, p_application_nm, p_user_role_nm, p_database_nm);
            DataSet dset = esp("RetrieveUsers", prms);

            return dset;
        }

        public string RetrieveUsersAsTask(String p_user_id,
                                                        Int32? p_user_no,
                                                        String p_user_nm,
                                                        DateTime? p_activation_dt,
                                                        String p_package_nm,
                                                        String p_application_nm,
                                                        String p_user_role_nm,
                                                        String p_database_nm)
        {
            List<SqlParameter> prms = RetrieveUsers_Params(p_user_id, p_user_no, p_user_nm, p_activation_dt, p_package_nm, p_application_nm, p_user_role_nm, p_database_nm);
            return gps("RetrieveUsers", prms);

        }



        private List<SqlParameter> RPT_07_BoardMemberCountry_Params(Int32? session_id,
                                                                                String screen_id,
                                                                                String AllContinents,
                                                                                String AllCountries,
                                                                                String AllCountryGroups,
                                                                                String Status,
                                                                                String Allofficeholders,
                                                                                String Allofficetitles)
        {
            List<SqlParameter> p = new List<SqlParameter>();
            csp("session_id", session_id, INT, IN, p);
            csp("screen_id", screen_id, CHAR, IN, p);
            csp("AllContinents", AllContinents, CHAR, IN, p);
            csp("AllCountries", AllCountries, CHAR, IN, p);
            csp("AllCountryGroups", AllCountryGroups, CHAR, IN, p);
            csp("Status", Status, VARCHAR, IN, p);
            csp("Allofficeholders", Allofficeholders, CHAR, IN, p);
            csp("Allofficetitles", Allofficetitles, CHAR, IN, p);
            return p;
        }

        public DataSet RPT_07_BoardMemberCountry(Int32? session_id,
                                                            String screen_id,
                                                            String AllContinents,
                                                            String AllCountries,
                                                            String AllCountryGroups,
                                                            String Status,
                                                            String Allofficeholders,
                                                            String Allofficetitles)
        {
            List<SqlParameter> prms = RPT_07_BoardMemberCountry_Params(session_id, screen_id, AllContinents, AllCountries, AllCountryGroups, Status, Allofficeholders, Allofficetitles);
            DataSet dset = esp("RPT_07_BoardMemberCountry", prms);

            return dset;
        }

        public string RPT_07_BoardMemberCountryAsTask(Int32? session_id,
                                                                    String screen_id,
                                                                    String AllContinents,
                                                                    String AllCountries,
                                                                    String AllCountryGroups,
                                                                    String Status,
                                                                    String Allofficeholders,
                                                                    String Allofficetitles)
        {
            List<SqlParameter> prms = RPT_07_BoardMemberCountry_Params(session_id, screen_id, AllContinents, AllCountries, AllCountryGroups, Status, Allofficeholders, Allofficetitles);
            return gps("RPT_07_BoardMemberCountry", prms);

        }



        private List<SqlParameter> RPT_29_Secretaries_by_expiry_Params(Int32? session_id,
                                                                                    String screen_id,
                                                                                    String AllContinents,
                                                                                    String AllCountries,
                                                                                    String AllCountryGroups,
                                                                                    String Allsatsangcentres,
                                                                                    String Status)
        {
            List<SqlParameter> p = new List<SqlParameter>();
            csp("session_id", session_id, INT, IN, p);
            csp("screen_id", screen_id, CHAR, IN, p);
            csp("AllContinents", AllContinents, CHAR, IN, p);
            csp("AllCountries", AllCountries, CHAR, IN, p);
            csp("AllCountryGroups", AllCountryGroups, CHAR, IN, p);
            csp("Allsatsangcentres", Allsatsangcentres, CHAR, IN, p);
            csp("Status", Status, VARCHAR, IN, p);
            return p;
        }

        public DataSet RPT_29_Secretaries_by_expiry(Int32? session_id,
                                                                String screen_id,
                                                                String AllContinents,
                                                                String AllCountries,
                                                                String AllCountryGroups,
                                                                String Allsatsangcentres,
                                                                String Status)
        {
            List<SqlParameter> prms = RPT_29_Secretaries_by_expiry_Params(session_id, screen_id, AllContinents, AllCountries, AllCountryGroups, Allsatsangcentres, Status);
            DataSet dset = esp("RPT_29_Secretaries_by_expiry", prms);

            return dset;
        }

        public string RPT_29_Secretaries_by_expiryAsTask(Int32? session_id,
                                                                    String screen_id,
                                                                    String AllContinents,
                                                                    String AllCountries,
                                                                    String AllCountryGroups,
                                                                    String Allsatsangcentres,
                                                                    String Status)
        {
            List<SqlParameter> prms = RPT_29_Secretaries_by_expiry_Params(session_id, screen_id, AllContinents, AllCountries, AllCountryGroups, Allsatsangcentres, Status);
            return gps("RPT_29_Secretaries_by_expiry", prms);

        }



        private List<SqlParameter> RPT_30_Secretaries_approval_Params(Int32? session_id,
                                                                                    String screen_id,
                                                                                    String AllContinents,
                                                                                    String AllCountries,
                                                                                    String AllCountryGroups,
                                                                                    String Allsatsangcentres,
                                                                                    String Status)
        {
            List<SqlParameter> p = new List<SqlParameter>();
            csp("session_id", session_id, INT, IN, p);
            csp("screen_id", screen_id, CHAR, IN, p);
            csp("AllContinents", AllContinents, CHAR, IN, p);
            csp("AllCountries", AllCountries, CHAR, IN, p);
            csp("AllCountryGroups", AllCountryGroups, CHAR, IN, p);
            csp("Allsatsangcentres", Allsatsangcentres, CHAR, IN, p);
            csp("Status", Status, VARCHAR, IN, p);
            return p;
        }

        public DataSet RPT_30_Secretaries_approval(Int32? session_id,
                                                                String screen_id,
                                                                String AllContinents,
                                                                String AllCountries,
                                                                String AllCountryGroups,
                                                                String Allsatsangcentres,
                                                                String Status)
        {
            List<SqlParameter> prms = RPT_30_Secretaries_approval_Params(session_id, screen_id, AllContinents, AllCountries, AllCountryGroups, Allsatsangcentres, Status);
            DataSet dset = esp("RPT_30_Secretaries_approval", prms);

            return dset;
        }

        public string RPT_30_Secretaries_approvalAsTask(Int32? session_id,
                                                                    String screen_id,
                                                                    String AllContinents,
                                                                    String AllCountries,
                                                                    String AllCountryGroups,
                                                                    String Allsatsangcentres,
                                                                    String Status)
        {
            List<SqlParameter> prms = RPT_30_Secretaries_approval_Params(session_id, screen_id, AllContinents, AllCountries, AllCountryGroups, Allsatsangcentres, Status);
            return gps("RPT_30_Secretaries_approval", prms);

        }



        private List<SqlParameter> SetDefaultUserRole_Params(String p_user_id,
                                                                        String p_user_role_id,
                                                                        String p_application_id)
        {
            List<SqlParameter> p = new List<SqlParameter>();
            csp("p_user_id", p_user_id, VARCHAR, IN, p);
            csp("p_user_role_id", p_user_role_id, VARCHAR, IN, p);
            csp("p_application_id", p_application_id, CHAR, IN, p);
            return p;
        }

        public DataSet SetDefaultUserRole(String p_user_id,
                                                        String p_user_role_id,
                                                        String p_application_id)
        {
            List<SqlParameter> prms = SetDefaultUserRole_Params(p_user_id, p_user_role_id, p_application_id);
            DataSet dset = esp("SetDefaultUserRole", prms);

            return dset;
        }

        public string SetDefaultUserRoleAsTask(String p_user_id,
                                                            String p_user_role_id,
                                                            String p_application_id)
        {
            List<SqlParameter> prms = SetDefaultUserRole_Params(p_user_id, p_user_role_id, p_application_id);
            return gps("SetDefaultUserRole", prms);

        }



        private List<SqlParameter> SetUserPassword_Params(String p_user_id,
                                                                        String p_password)
        {
            List<SqlParameter> p = new List<SqlParameter>();
            csp("p_user_id", p_user_id, VARCHAR, IN, p);
            csp("p_password", p_password, VARCHAR, IN, p);
            return p;
        }

        public DataSet SetUserPassword(String p_user_id,
                                                    String p_password)
        {
            List<SqlParameter> prms = SetUserPassword_Params(p_user_id, p_password);
            DataSet dset = esp("SetUserPassword", prms);

            return dset;
        }

        public string SetUserPasswordAsTask(String p_user_id,
                                                        String p_password)
        {
            List<SqlParameter> prms = SetUserPassword_Params(p_user_id, p_password);
            return gps("SetUserPassword", prms);

        }



        private List<SqlParameter> StoreLastBackupPath_Params(String p_package_id,
                                                                            String p_database_nm,
                                                                            String p_backup_path)
        {
            List<SqlParameter> p = new List<SqlParameter>();
            csp("p_package_id", p_package_id, CHAR, IN, p);
            csp("p_database_nm", p_database_nm, VARCHAR, IN, p);
            csp("p_backup_path", p_backup_path, VARCHAR, IN, p);
            return p;
        }

        public DataSet StoreLastBackupPath(String p_package_id,
                                                        String p_database_nm,
                                                        String p_backup_path)
        {
            List<SqlParameter> prms = StoreLastBackupPath_Params(p_package_id, p_database_nm, p_backup_path);
            DataSet dset = esp("StoreLastBackupPath", prms);

            return dset;
        }

        public string StoreLastBackupPathAsTask(String p_package_id,
                                                            String p_database_nm,
                                                            String p_backup_path)
        {
            List<SqlParameter> prms = StoreLastBackupPath_Params(p_package_id, p_database_nm, p_backup_path);
            return gps("StoreLastBackupPath", prms);

        }



        private List<SqlParameter> UpdateApplications_Params(String p_application_id,
                                                                        String p_application_nm,
                                                                        DateTime? p_implementation_dt,
                                                                        String p_error_log_level,
                                                                        Byte? p_log_file_size_in_mb,
                                                                        String p_server_nm,
                                                                        String p_package_id,
                                                                        String p_database_nm,
                                                                        String p_backup_path,
                                                                        String p_dsn_nm,
                                                                        String p_report_title,
                                                                        String p_report_footer,
                                                                        String p_path_1,
                                                                        String p_path_2,
                                                                        String p_path_3,
                                                                        String p_argument_1,
                                                                        String p_argument_2,
                                                                        String p_argument_3,
                                                                        String p_argument_4,
                                                                        String p_argument_5)
        {
            List<SqlParameter> p = new List<SqlParameter>();
            csp("p_application_id", p_application_id, CHAR, IN, p);
            csp("p_application_nm", p_application_nm, VARCHAR, IN, p);
            csp("p_implementation_dt", p_implementation_dt, SMALLDATETIME, IN, p);
            csp("p_error_log_level", p_error_log_level, VARCHAR, IN, p);
            csp("p_log_file_size_in_mb", p_log_file_size_in_mb, TINYINT, IN, p);
            csp("p_server_nm", p_server_nm, VARCHAR, IN, p);
            csp("p_package_id", p_package_id, CHAR, IN, p);
            csp("p_database_nm", p_database_nm, VARCHAR, IN, p);
            csp("p_backup_path", p_backup_path, VARCHAR, IN, p);
            csp("p_dsn_nm", p_dsn_nm, VARCHAR, IN, p);
            csp("p_report_title", p_report_title, VARCHAR, IN, p);
            csp("p_report_footer", p_report_footer, VARCHAR, IN, p);
            csp("p_path_1", p_path_1, VARCHAR, IN, p);
            csp("p_path_2", p_path_2, VARCHAR, IN, p);
            csp("p_path_3", p_path_3, VARCHAR, IN, p);
            csp("p_argument_1", p_argument_1, VARCHAR, IN, p);
            csp("p_argument_2", p_argument_2, VARCHAR, IN, p);
            csp("p_argument_3", p_argument_3, VARCHAR, IN, p);
            csp("p_argument_4", p_argument_4, VARCHAR, IN, p);
            csp("p_argument_5", p_argument_5, VARCHAR, IN, p);
            return p;
        }

        public DataSet UpdateApplications(String p_application_id,
                                                        String p_application_nm,
                                                        DateTime? p_implementation_dt,
                                                        String p_error_log_level,
                                                        Byte? p_log_file_size_in_mb,
                                                        String p_server_nm,
                                                        String p_package_id,
                                                        String p_database_nm,
                                                        String p_backup_path,
                                                        String p_dsn_nm,
                                                        String p_report_title,
                                                        String p_report_footer,
                                                        String p_path_1,
                                                        String p_path_2,
                                                        String p_path_3,
                                                        String p_argument_1,
                                                        String p_argument_2,
                                                        String p_argument_3,
                                                        String p_argument_4,
                                                        String p_argument_5)
        {
            List<SqlParameter> prms = UpdateApplications_Params(p_application_id, p_application_nm, p_implementation_dt, p_error_log_level, p_log_file_size_in_mb, p_server_nm, p_package_id, p_database_nm, p_backup_path, p_dsn_nm, p_report_title, p_report_footer, p_path_1, p_path_2, p_path_3, p_argument_1, p_argument_2, p_argument_3, p_argument_4, p_argument_5);
            DataSet dset = esp("UpdateApplications", prms);

            return dset;
        }

        public string UpdateApplicationsAsTask(String p_application_id,
                                                            String p_application_nm,
                                                            DateTime? p_implementation_dt,
                                                            String p_error_log_level,
                                                            Byte? p_log_file_size_in_mb,
                                                            String p_server_nm,
                                                            String p_package_id,
                                                            String p_database_nm,
                                                            String p_backup_path,
                                                            String p_dsn_nm,
                                                            String p_report_title,
                                                            String p_report_footer,
                                                            String p_path_1,
                                                            String p_path_2,
                                                            String p_path_3,
                                                            String p_argument_1,
                                                            String p_argument_2,
                                                            String p_argument_3,
                                                            String p_argument_4,
                                                            String p_argument_5)
        {
            List<SqlParameter> prms = UpdateApplications_Params(p_application_id, p_application_nm, p_implementation_dt, p_error_log_level, p_log_file_size_in_mb, p_server_nm, p_package_id, p_database_nm, p_backup_path, p_dsn_nm, p_report_title, p_report_footer, p_path_1, p_path_2, p_path_3, p_argument_1, p_argument_2, p_argument_3, p_argument_4, p_argument_5);
            return gps("UpdateApplications", prms);

        }



        private List<SqlParameter> UpdateAuditInformation_Params(String p_application_id,
                                                                            String p_screen_id,
                                                                            String p_insert_logged,
                                                                            String p_update_logged,
                                                                            String p_delete_logged,
                                                                            String p_action_logged,
                                                                            String p_print_logged,
                                                                            String p_update_changes_logged,
                                                                            String p_delete_changes_logged)
        {
            List<SqlParameter> p = new List<SqlParameter>();
            csp("p_application_id", p_application_id, CHAR, IN, p);
            csp("p_screen_id", p_screen_id, CHAR, IN, p);
            csp("p_insert_logged", p_insert_logged, CHAR, IN, p);
            csp("p_update_logged", p_update_logged, CHAR, IN, p);
            csp("p_delete_logged", p_delete_logged, CHAR, IN, p);
            csp("p_action_logged", p_action_logged, CHAR, IN, p);
            csp("p_print_logged", p_print_logged, CHAR, IN, p);
            csp("p_update_changes_logged", p_update_changes_logged, CHAR, IN, p);
            csp("p_delete_changes_logged", p_delete_changes_logged, CHAR, IN, p);
            return p;
        }

        public DataSet UpdateAuditInformation(String p_application_id,
                                                            String p_screen_id,
                                                            String p_insert_logged,
                                                            String p_update_logged,
                                                            String p_delete_logged,
                                                            String p_action_logged,
                                                            String p_print_logged,
                                                            String p_update_changes_logged,
                                                            String p_delete_changes_logged)
        {
            List<SqlParameter> prms = UpdateAuditInformation_Params(p_application_id, p_screen_id, p_insert_logged, p_update_logged, p_delete_logged, p_action_logged, p_print_logged, p_update_changes_logged, p_delete_changes_logged);
            DataSet dset = esp("UpdateAuditInformation", prms);

            return dset;
        }

        public string UpdateAuditInformationAsTask(String p_application_id,
                                                                String p_screen_id,
                                                                String p_insert_logged,
                                                                String p_update_logged,
                                                                String p_delete_logged,
                                                                String p_action_logged,
                                                                String p_print_logged,
                                                                String p_update_changes_logged,
                                                                String p_delete_changes_logged)
        {
            List<SqlParameter> prms = UpdateAuditInformation_Params(p_application_id, p_screen_id, p_insert_logged, p_update_logged, p_delete_logged, p_action_logged, p_print_logged, p_update_changes_logged, p_delete_changes_logged);
            return gps("UpdateAuditInformation", prms);

        }



        private List<SqlParameter> UpdateUserLockStatus_Params(String p_user_id,
                                                                            String p_lock)
        {
            List<SqlParameter> p = new List<SqlParameter>();
            csp("p_user_id", p_user_id, VARCHAR, IN, p);
            csp("p_lock", p_lock, CHAR, IN, p);
            return p;
        }

        public DataSet UpdateUserLockStatus(String p_user_id,
                                                        String p_lock)
        {
            List<SqlParameter> prms = UpdateUserLockStatus_Params(p_user_id, p_lock);
            DataSet dset = esp("UpdateUserLockStatus", prms);

            return dset;
        }

        public string UpdateUserLockStatusAsTask(String p_user_id,
                                                            String p_lock)
        {
            List<SqlParameter> prms = UpdateUserLockStatus_Params(p_user_id, p_lock);
            return gps("UpdateUserLockStatus", prms);

        }



        private List<SqlParameter> UpdLogInformation_Params(String p_application_id,
                                                                        String p_screen_id,
                                                                        String p_is_insert_logged,
                                                                        String p_is_update_logged,
                                                                        String p_is_delete_logged,
                                                                        String p_is_action_logged,
                                                                        String p_is_print_logged,
                                                                        String p_is_update_changes_logged,
                                                                        String p_is_delete_changes_logged)
        {
            List<SqlParameter> p = new List<SqlParameter>();
            csp("p_application_id", p_application_id, CHAR, IN, p);
            csp("p_screen_id", p_screen_id, CHAR, IN, p);
            csp("p_is_insert_logged", p_is_insert_logged, CHAR, IN, p);
            csp("p_is_update_logged", p_is_update_logged, CHAR, IN, p);
            csp("p_is_delete_logged", p_is_delete_logged, CHAR, IN, p);
            csp("p_is_action_logged", p_is_action_logged, CHAR, IN, p);
            csp("p_is_print_logged", p_is_print_logged, CHAR, IN, p);
            csp("p_is_update_changes_logged", p_is_update_changes_logged, CHAR, IN, p);
            csp("p_is_delete_changes_logged", p_is_delete_changes_logged, CHAR, IN, p);
            return p;
        }

        public DataSet UpdLogInformation(String p_application_id,
                                                    String p_screen_id,
                                                    String p_is_insert_logged,
                                                    String p_is_update_logged,
                                                    String p_is_delete_logged,
                                                    String p_is_action_logged,
                                                    String p_is_print_logged,
                                                    String p_is_update_changes_logged,
                                                    String p_is_delete_changes_logged)
        {
            List<SqlParameter> prms = UpdLogInformation_Params(p_application_id, p_screen_id, p_is_insert_logged, p_is_update_logged, p_is_delete_logged, p_is_action_logged, p_is_print_logged, p_is_update_changes_logged, p_is_delete_changes_logged);
            DataSet dset = esp("UpdLogInformation", prms);

            return dset;
        }

        public string UpdLogInformationAsTask(String p_application_id,
                                                            String p_screen_id,
                                                            String p_is_insert_logged,
                                                            String p_is_update_logged,
                                                            String p_is_delete_logged,
                                                            String p_is_action_logged,
                                                            String p_is_print_logged,
                                                            String p_is_update_changes_logged,
                                                            String p_is_delete_changes_logged)
        {
            List<SqlParameter> prms = UpdLogInformation_Params(p_application_id, p_screen_id, p_is_insert_logged, p_is_update_logged, p_is_delete_logged, p_is_action_logged, p_is_print_logged, p_is_update_changes_logged, p_is_delete_changes_logged);
            return gps("UpdLogInformation", prms);

        }



        private List<SqlParameter> UpdPackageExecutable_Params(String p_package_id,
                                                                            String p_user_role_id,
                                                                            String p_user_role_nm,
                                                                            String p_executable_file_nm)
        {
            List<SqlParameter> p = new List<SqlParameter>();
            csp("p_package_id", p_package_id, CHAR, IN, p);
            csp("p_user_role_id", p_user_role_id, VARCHAR, IN, p);
            csp("p_user_role_nm", p_user_role_nm, VARCHAR, IN, p);
            csp("p_executable_file_nm", p_executable_file_nm, VARCHAR, IN, p);
            return p;
        }

        public DataSet UpdPackageExecutable(String p_package_id,
                                                        String p_user_role_id,
                                                        String p_user_role_nm,
                                                        String p_executable_file_nm)
        {
            List<SqlParameter> prms = UpdPackageExecutable_Params(p_package_id, p_user_role_id, p_user_role_nm, p_executable_file_nm);
            DataSet dset = esp("UpdPackageExecutable", prms);

            return dset;
        }

        public string UpdPackageExecutableAsTask(String p_package_id,
                                                            String p_user_role_id,
                                                            String p_user_role_nm,
                                                            String p_executable_file_nm)
        {
            List<SqlParameter> prms = UpdPackageExecutable_Params(p_package_id, p_user_role_id, p_user_role_nm, p_executable_file_nm);
            return gps("UpdPackageExecutable", prms);

        }



        private List<SqlParameter> UpdPackageRootPaths_Params(String p_package_id,
                                                                            String p_server_distribution_root,
                                                                            String p_client_default_root)
        {
            List<SqlParameter> p = new List<SqlParameter>();
            csp("p_package_id", p_package_id, CHAR, IN, p);
            csp("p_server_distribution_root", p_server_distribution_root, VARCHAR, IN, p);
            csp("p_client_default_root", p_client_default_root, VARCHAR, IN, p);
            return p;
        }

        public DataSet UpdPackageRootPaths(String p_package_id,
                                                        String p_server_distribution_root,
                                                        String p_client_default_root)
        {
            List<SqlParameter> prms = UpdPackageRootPaths_Params(p_package_id, p_server_distribution_root, p_client_default_root);
            DataSet dset = esp("UpdPackageRootPaths", prms);

            return dset;
        }

        public string UpdPackageRootPathsAsTask(String p_package_id,
                                                            String p_server_distribution_root,
                                                            String p_client_default_root)
        {
            List<SqlParameter> prms = UpdPackageRootPaths_Params(p_package_id, p_server_distribution_root, p_client_default_root);
            return gps("UpdPackageRootPaths", prms);

        }



        private List<SqlParameter> UpdUserHeaderInfo_Params(Int32? p_user_no,
                                                                        String p_user_id,
                                                                        String p_user_nm,
                                                                        String p_application_id,
                                                                        String p_user_role_id)
        {
            List<SqlParameter> p = new List<SqlParameter>();
            csp("p_user_no", p_user_no, INT, IN, p);
            csp("p_user_id", p_user_id, VARCHAR, IN, p);
            csp("p_user_nm", p_user_nm, VARCHAR, IN, p);
            csp("p_application_id", p_application_id, CHAR, IN, p);
            csp("p_user_role_id", p_user_role_id, VARCHAR, IN, p);
            return p;
        }

        public DataSet UpdUserHeaderInfo(Int32? p_user_no,
                                                    String p_user_id,
                                                    String p_user_nm,
                                                    String p_application_id,
                                                    String p_user_role_id)
        {
            List<SqlParameter> prms = UpdUserHeaderInfo_Params(p_user_no, p_user_id, p_user_nm, p_application_id, p_user_role_id);
            DataSet dset = esp("UpdUserHeaderInfo", prms);

            return dset;
        }

        public string UpdUserHeaderInfoAsTask(Int32? p_user_no,
                                                            String p_user_id,
                                                            String p_user_nm,
                                                            String p_application_id,
                                                            String p_user_role_id)
        {
            List<SqlParameter> prms = UpdUserHeaderInfo_Params(p_user_no, p_user_id, p_user_nm, p_application_id, p_user_role_id);
            return gps("UpdUserHeaderInfo", prms);

        }



        private List<SqlParameter> UpdUserRolePrivilege_Params(String package_id,
                                                                            String user_role_id,
                                                                            String screen_id,
                                                                            String is_select_granted,
                                                                            String is_insert_granted,
                                                                            String is_update_granted,
                                                                            String is_delete_granted,
                                                                            String is_print_granted)
        {
            List<SqlParameter> p = new List<SqlParameter>();
            csp("package_id", package_id, CHAR, IN, p);
            csp("user_role_id", user_role_id, VARCHAR, IN, p);
            csp("screen_id", screen_id, CHAR, IN, p);
            csp("is_select_granted", is_select_granted, CHAR, IN, p);
            csp("is_insert_granted", is_insert_granted, CHAR, IN, p);
            csp("is_update_granted", is_update_granted, CHAR, IN, p);
            csp("is_delete_granted", is_delete_granted, CHAR, IN, p);
            csp("is_print_granted", is_print_granted, CHAR, IN, p);
            return p;
        }

        public DataSet UpdUserRolePrivilege(String package_id,
                                                        String user_role_id,
                                                        String screen_id,
                                                        String is_select_granted,
                                                        String is_insert_granted,
                                                        String is_update_granted,
                                                        String is_delete_granted,
                                                        String is_print_granted)
        {
            List<SqlParameter> prms = UpdUserRolePrivilege_Params(package_id, user_role_id, screen_id, is_select_granted, is_insert_granted, is_update_granted, is_delete_granted, is_print_granted);
            DataSet dset = esp("UpdUserRolePrivilege", prms);

            return dset;
        }

        public string UpdUserRolePrivilegeAsTask(String package_id,
                                                            String user_role_id,
                                                            String screen_id,
                                                            String is_select_granted,
                                                            String is_insert_granted,
                                                            String is_update_granted,
                                                            String is_delete_granted,
                                                            String is_print_granted)
        {
            List<SqlParameter> prms = UpdUserRolePrivilege_Params(package_id, user_role_id, screen_id, is_select_granted, is_insert_granted, is_update_granted, is_delete_granted, is_print_granted);
            return gps("UpdUserRolePrivilege", prms);

        }





        private List<SqlParameter> ValidateSession_Params(Int32? p_user_no,
                                                                        String p_application_id,
                                                                        Int32? p_session_id,
                                                                        ref String p_is_query_session)
        {
            List<SqlParameter> p = new List<SqlParameter>();
            csp("p_user_no", p_user_no, INT, IN, p);
            csp("p_application_id", p_application_id, CHAR, IN, p);
            csp("p_session_id", p_session_id, INT, IN, p);
            csp("p_is_query_session", p_is_query_session, CHAR, OUT, p);
            return p;
        }

        public DataSet ValidateSession(Int32? p_user_no,
                                                    String p_application_id,
                                                    Int32? p_session_id,
                                                    ref String p_is_query_session)
        {
            List<SqlParameter> prms = ValidateSession_Params(p_user_no, p_application_id, p_session_id, ref p_is_query_session);
            DataSet dset = esp("ValidateSession", prms);
            p_is_query_session = (System.String)prms.FirstOrDefault(p => p.ParameterName == "p_is_query_session").Value;

            return dset;
        }

        public string ValidateSessionAsTask(Int32? p_user_no,
                                                        String p_application_id,
                                                        Int32? p_session_id,
                                                        ref String p_is_query_session)
        {
            List<SqlParameter> prms = ValidateSession_Params(p_user_no, p_application_id, p_session_id, ref p_is_query_session);
            return gps("ValidateSession", prms);

        }
    }


    public class V_application_user_rolesSQLSelectQuery : SQLSelectQuery
    {
        public Cndn package_id = new Cndn("package_id", typeof(String));
        public Cndn package_nm = new Cndn("package_nm", typeof(String));
        public Cndn version_no = new Cndn("version_no", typeof(Decimal));
        public Cndn version_dt = new Cndn("version_dt", typeof(DateTime));
        public Cndn server_distribution_root = new Cndn("server_distribution_root", typeof(String));
        public Cndn client_default_root = new Cndn("client_default_root", typeof(String));
        public Cndn server_nm = new Cndn("server_nm", typeof(String));
        public Cndn database_nm = new Cndn("database_nm", typeof(String));
        public Cndn dsn_nm = new Cndn("dsn_nm", typeof(String));
        public Cndn backup_path = new Cndn("backup_path", typeof(String));
        public Cndn application_id = new Cndn("application_id", typeof(String));
        public Cndn application_nm = new Cndn("application_nm", typeof(String));
        public Cndn implementation_dt = new Cndn("implementation_dt", typeof(DateTime));
        public Cndn error_log_level = new Cndn("error_log_level", typeof(String));
        public Cndn log_file_size_in_mb = new Cndn("log_file_size_in_mb", typeof(Byte));
        public Cndn report_title = new Cndn("report_title", typeof(String));
        public Cndn report_footer = new Cndn("report_footer", typeof(String));
        public Cndn path_1 = new Cndn("path_1", typeof(String));
        public Cndn path_2 = new Cndn("path_2", typeof(String));
        public Cndn path_3 = new Cndn("path_3", typeof(String));
        public Cndn argument_1 = new Cndn("argument_1", typeof(String));
        public Cndn argument_2 = new Cndn("argument_2", typeof(String));
        public Cndn argument_3 = new Cndn("argument_3", typeof(String));
        public Cndn argument_4 = new Cndn("argument_4", typeof(String));
        public Cndn argument_5 = new Cndn("argument_5", typeof(String));
        public Cndn user_role_id = new Cndn("user_role_id", typeof(String));
        public Cndn user_role_nm = new Cndn("user_role_nm", typeof(String));
        public Cndn executable_file_nm = new Cndn("executable_file_nm", typeof(String));
        public V_application_user_rolesSQLSelectQuery()
        {
            SqlObjectName = "V_application_user_roles";
            SQLObjectType = SQLObjectTypes.View;

            lst.Add(package_id);
            lst.Add(package_nm);
            lst.Add(version_no);
            lst.Add(version_dt);
            lst.Add(server_distribution_root);
            lst.Add(client_default_root);
            lst.Add(server_nm);
            lst.Add(database_nm);
            lst.Add(dsn_nm);
            lst.Add(backup_path);
            lst.Add(application_id);
            lst.Add(application_nm);
            lst.Add(implementation_dt);
            lst.Add(error_log_level);
            lst.Add(log_file_size_in_mb);
            lst.Add(report_title);
            lst.Add(report_footer);
            lst.Add(path_1);
            lst.Add(path_2);
            lst.Add(path_3);
            lst.Add(argument_1);
            lst.Add(argument_2);
            lst.Add(argument_3);
            lst.Add(argument_4);
            lst.Add(argument_5);
            lst.Add(user_role_id);
            lst.Add(user_role_nm);
            lst.Add(executable_file_nm);
        }
    }
}
